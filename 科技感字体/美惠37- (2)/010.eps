%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: plata_13_grey.eps
%%Creator: Adobe Illustrator(R) 19.1
%%For: user
%%CreationDate: 5/9/2016
%%BoundingBox: 0 0 1201 1200
%%HiResBoundingBox: 0 0 1200.0020 1200
%%CropBox: 0 0 1200.0020 1200
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 19.1.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 19.1.0 x29 R agm 4.7731 ct 5.3840%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=100 RasterRes=1 GradRes=1 Text=1 Stroke=0 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c067 79.157747, 2015/03/30-23:40:42        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
            xmlns:photoshop="http://ns.adobe.com/photoshop/1.0/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">abstract vector background with high tech circuit board Vector Illustration</rdf:li>
            </rdf:Alt>
         </dc:title>
         <dc:creator>
            <rdf:Seq>
               <rdf:li>Iryna</rdf:li>
            </rdf:Seq>
         </dc:creator>
         <dc:description>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">abstract vector background with high tech circuit board Vector Illustration</rdf:li>
            </rdf:Alt>
         </dc:description>
         <dc:subject>
            <rdf:Bag>
               <rdf:li>circuit</rdf:li>
               <rdf:li>vector</rdf:li>
               <rdf:li>backgrounds</rdf:li>
               <rdf:li>tech</rdf:li>
               <rdf:li>processor</rdf:li>
               <rdf:li>abstract</rdf:li>
               <rdf:li>abstraction</rdf:li>
               <rdf:li>chip</rdf:li>
               <rdf:li>card</rdf:li>
               <rdf:li>design</rdf:li>
               <rdf:li>electrical equipment</rdf:li>
               <rdf:li>integrated</rdf:li>
               <rdf:li>technical</rdf:li>
               <rdf:li>computer part</rdf:li>
               <rdf:li>hardware</rdf:li>
               <rdf:li>engineering</rdf:li>
               <rdf:li>line</rdf:li>
               <rdf:li>cyberspace</rdf:li>
               <rdf:li>computer equipment</rdf:li>
               <rdf:li>graphic</rdf:li>
               <rdf:li>electronics industry</rdf:li>
               <rdf:li>digital</rdf:li>
               <rdf:li>technology</rdf:li>
               <rdf:li>computer</rdf:li>
               <rdf:li>circuit board</rdf:li>
               <rdf:li>illustration</rdf:li>
               <rdf:li>creativity</rdf:li>
               <rdf:li>connection</rdf:li>
               <rdf:li>computing</rdf:li>
               <rdf:li>backdrop</rdf:li>
               <rdf:li>science</rdf:li>
               <rdf:li>cover</rdf:li>
               <rdf:li>internal</rdf:li>
               <rdf:li>connect</rdf:li>
               <rdf:li>art</rdf:li>
               <rdf:li>industry</rdf:li>
               <rdf:li>conceptual</rdf:li>
               <rdf:li>construction</rdf:li>
               <rdf:li>textured</rdf:li>
               <rdf:li>computer chip</rdf:li>
               <rdf:li>mother board</rdf:li>
               <rdf:li>motherboard</rdf:li>
               <rdf:li>black</rdf:li>
               <rdf:li>blue</rdf:li>
            </rdf:Bag>
         </dc:subject>
         <xmp:MetadataDate>2016-05-09T17:17:30+03:00</xmp:MetadataDate>
         <xmp:ModifyDate>2016-05-09T17:17:30+03:00</xmp:ModifyDate>
         <xmp:CreateDate>2016-05-09T17:17:30+03:00</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CC 2015 (Windows)</xmp:CreatorTool>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEBLAEsAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABABLAAAAAEA&#xA;AQEsAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A8qYq7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;WSaZ+Xfm/U7VLqzsVaGRQ6epcW8LlGrxb05ZEcBqVUkbjpmVj0WWYsD7R+t1Oo7c0uGRjOW47oyP&#xA;2gEbde5F/wDKpvPv/Vvj/wCkuz/6rZZ/J2bu+2P62n/RJov55/0k/wDiXf8AKpvPv/Vvj/6S7P8A&#xA;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&#xA;FXYq7FX/2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:InstanceID>xmp.iid:c5906996-fca0-4c4d-b925-a80ebffcb0d8</xmpMM:InstanceID>
         <xmpMM:DocumentID>xmp.did:c5906996-fca0-4c4d-b925-a80ebffcb0d8</xmpMM:DocumentID>
         <xmpMM:OriginalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</xmpMM:OriginalDocumentID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:0a318b0e-ed02-4df7-84ce-3129f6d01295</stRef:instanceID>
            <stRef:documentID>xmp.did:8D6F8BA0EBBDE511B2BBC0EB12123494</stRef:documentID>
            <stRef:originalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F07763D45588E411BF89F345A28D8C9F</stEvt:instanceID>
                  <stEvt:when>2014-12-20T17:10:37+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:29845C695A88E411BF89F345A28D8C9F</stEvt:instanceID>
                  <stEvt:when>2014-12-20T17:19:01+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:2E845C695A88E411BF89F345A28D8C9F</stEvt:instanceID>
                  <stEvt:when>2014-12-20T17:33:07+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:4365C60ACE89E4119A65C8F5B8A1FEA0</stEvt:instanceID>
                  <stEvt:when>2014-12-22T13:34:24+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:0B5A99264D6BE51194FFADFDE0B012D7</stEvt:instanceID>
                  <stEvt:when>2015-10-05T13:38+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:8D6F8BA0EBBDE511B2BBC0EB12123494</stEvt:instanceID>
                  <stEvt:when>2016-01-18T16:01:53+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:18BA851AF2BDE5119314DC75DE111CE2</stEvt:instanceID>
                  <stEvt:when>2016-01-18T16:45:22+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Bridge CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/metadata</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:5C653C0AF8BDE5119314DC75DE111CE2</stEvt:instanceID>
                  <stEvt:when>2016-01-18T17:27:52+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Bridge CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/metadata</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:c5906996-fca0-4c4d-b925-a80ebffcb0d8</stEvt:instanceID>
                  <stEvt:when>2016-05-09T17:17:30+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2015 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Print</illustrator:StartupProfile>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>1200.000000</stDim:w>
            <stDim:h>1200.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 10.01</pdf:Producer>
         <photoshop:Headline>abstract vector background with high tech circuit board</photoshop:Headline>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -1200 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 1200 li
1200 1200 li
1200 0 li
cp
clp
1200 1200 mo
0 1200 li
0 0 li
1200 0 li
1200 1200 li
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
0 0 0 rgb
f
160.882 204.087 mo
159.531 205.439 157.343 205.439 155.994 204.087 cv
154.642 202.737 154.642 200.55 155.994 199.198 cv
157.343 197.848 159.531 197.848 160.882 199.198 cv
162.237 200.55 162.237 202.737 160.882 204.087 cv
cp
320.637 151.761 mo
301.62 132.31 li
255.214 132.31 li
188.652 200.169 li
165.687 200.169 li
164.689 198.912 162.789 197.714 161.456 197.054 cv
158.107 195.4 154.532 194.414 151.886 197.054 cv
149.248 199.698 149.248 203.981 151.888 206.621 cv
154.532 209.264 158.298 208.622 161.456 206.621 cv
162.788 205.776 164.404 204.725 165.408 203.627 cv
190.104 203.627 li
256.665 135.767 li
300.165 135.767 li
319.182 155.215 li
335.154 155.215 li
357.339 134.039 li
607.609 134.039 li
633.977 108.105 li
698.949 108.105 li
698.949 104.647 li
632.56 104.647 li
606.195 130.581 li
355.954 130.581 li
333.77 151.761 li
320.637 151.761 li
cp
0 .862745 1 rgb
f
162.465 111.794 mo
161.116 113.146 158.926 113.146 157.576 111.794 cv
156.226 110.444 156.226 108.257 157.576 106.906 cv
158.926 105.556 161.116 105.556 162.465 106.906 cv
163.816 108.257 163.816 110.444 162.465 111.794 cv
cp
449.425 65.707 mo
450.776 64.3555 452.963 64.3555 454.314 65.707 cv
455.662 67.0576 455.662 69.2451 454.314 70.5957 cv
452.963 71.9473 450.776 71.9473 449.425 70.5957 cv
448.07 69.2451 448.07 67.0576 449.425 65.707 cv
cp
197.438 111.275 mo
239.147 69.8535 li
444.81 69.8535 li
445.845 71.0264 447.599 72.1221 448.85 72.7402 cv
452.2 74.3975 455.776 75.3809 458.42 72.7402 cv
461.061 70.0977 461.057 65.8154 458.416 63.1738 cv
455.776 60.5332 452.008 61.1738 448.85 63.1738 cv
447.427 64.0781 445.678 65.2158 444.701 66.3975 cv
237.722 66.3975 li
196.013 107.818 li
167.22 107.818 li
166.212 106.582 164.35 105.412 163.036 104.762 cv
159.689 103.108 156.113 102.122 153.471 104.762 cv
150.827 107.406 150.827 111.687 153.471 114.329 cv
156.113 116.97 159.879 116.331 163.036 114.329 cv
164.398 113.468 166.05 112.389 167.047 111.265 cv
167.047 111.275 li
197.438 111.275 li
cp
f
456.292 103.06 mo
456.692 101.193 458.529 100.002 460.397 100.4 cv
462.263 100.795 463.455 102.632 463.057 104.499 cv
462.661 106.368 460.824 107.56 458.957 107.164 cv
457.089 106.765 455.898 104.927 456.292 103.06 cv
cp
130.322 141.095 mo
128.971 142.444 126.781 142.444 125.431 141.095 cv
124.082 139.743 124.082 137.556 125.431 136.204 cv
126.781 134.853 128.971 134.855 130.322 136.204 cv
131.674 137.556 131.674 139.743 130.322 141.095 cv
cp
367.749 87.1064 mo
248.748 87.1064 li
199.188 136.054 li
134.003 136.054 li
133.022 135.237 131.821 134.52 130.894 134.062 cv
127.544 132.403 123.968 131.419 121.326 134.062 cv
118.683 136.702 118.687 140.984 121.329 143.627 cv
123.968 146.269 127.737 145.627 130.894 143.627 cv
132.677 142.498 134.963 140.998 135.613 139.511 cv
200.605 139.511 li
250.165 90.5645 li
366.294 90.5645 li
389.634 114.443 li
451.65 114.443 li
456.056 109.45 li
457.285 109.61 458.669 109.61 459.86 109.598 cv
463.589 109.558 467.102 108.044 467.882 104.389 cv
468.659 100.736 466.325 97.1436 462.67 96.3643 cv
459.018 95.5869 456.557 98.3623 454.648 101.575 cv
453.656 103.243 452.371 106.189 452.921 107.776 cv
450.09 110.985 li
391.089 110.985 li
367.749 87.1064 li
cp
f
128.34 172.255 mo
126.431 172.255 124.881 170.71 124.881 168.798 cv
124.881 166.889 126.431 165.34 128.34 165.34 cv
130.248 165.34 131.798 166.889 131.798 168.798 cv
131.798 170.71 130.248 172.255 128.34 172.255 cv
cp
474.277 106.71 mo
474.675 104.844 476.512 103.651 478.379 104.05 cv
480.248 104.444 481.439 106.281 481.041 108.147 cv
480.646 110.015 478.809 111.21 476.941 110.812 cv
475.075 110.414 473.878 108.577 474.277 106.71 cv
cp
206.954 151.04 mo
246.429 111.275 li
323.423 111.275 li
334.947 121.647 li
466.353 121.647 li
473.849 113.077 li
475.121 113.264 476.589 113.262 477.84 113.247 cv
481.575 113.206 485.086 111.694 485.866 108.039 cv
486.643 104.389 484.309 100.794 480.656 100.015 cv
477.001 99.2373 474.538 102.01 472.632 105.224 cv
471.675 106.832 470.435 109.637 470.843 111.26 cv
464.782 118.191 li
336.276 118.191 li
324.75 107.818 li
244.993 107.818 li
205.515 147.581 li
146.45 147.581 li
131.424 162.605 li
129.996 162.651 128.363 163.037 127.229 163.42 cv
123.688 164.618 120.463 166.449 120.463 170.185 cv
120.463 173.92 123.492 176.951 127.229 176.951 cv
130.964 176.951 133.176 173.829 133.995 170.185 cv
134.415 168.31 134.906 165.928 134.544 164.375 cv
147.881 151.04 li
206.954 151.04 li
cp
f
157.617 171.382 mo
155.714 171.23 154.294 169.568 154.443 167.664 cv
154.591 165.76 156.255 164.337 158.157 164.485 cv
160.061 164.635 161.483 166.3 161.335 168.204 cv
161.185 170.106 159.521 171.531 157.617 171.382 cv
cp
495.03 112.548 mo
495.425 110.679 497.263 109.489 499.133 109.886 cv
501.001 110.283 502.189 112.121 501.794 113.987 cv
501.396 115.855 499.559 117.045 497.691 116.65 cv
495.824 116.253 494.632 114.415 495.03 112.548 cv
cp
208.385 159.21 mo
250.176 117.326 li
319.638 117.326 li
330.882 128.281 li
485.548 127.121 li
494.498 118.895 li
495.794 119.098 497.308 119.1 498.593 119.085 cv
502.328 119.044 505.839 117.531 506.616 113.877 cv
507.395 110.224 505.063 106.629 501.406 105.853 cv
497.756 105.076 495.29 107.849 493.383 111.064 cv
492.466 112.608 491.285 115.26 491.554 116.905 cv
484.192 123.67 li
332.277 124.814 li
321.042 113.868 li
248.74 113.868 li
206.967 155.737 li
172.878 155.355 li
161.713 161.848 li
161.81 162.014 li
160.312 161.879 158.458 162.168 157.201 162.485 cv
153.579 163.403 150.22 164.977 149.928 168.701 cv
149.635 172.427 152.417 175.681 156.141 175.974 cv
159.869 176.265 162.314 173.329 163.415 169.757 cv
163.953 168.016 164.591 165.822 164.454 164.255 cv
173.794 158.824 li
208.385 159.21 li
cp
f
129.27 114.669 mo
127.359 114.636 125.839 113.06 125.873 111.15 cv
125.908 109.243 127.48 107.723 129.391 107.753 cv
131.299 107.789 132.822 109.362 132.788 111.272 cv
132.754 113.181 131.177 114.702 129.27 114.669 cv
cp
468.374 73.3828 mo
468.773 71.5137 470.61 70.3232 472.478 70.7197 cv
474.345 71.1162 475.537 72.9531 475.138 74.8203 cv
474.744 76.6895 472.906 77.8799 471.039 77.4824 cv
469.171 77.0859 467.98 75.251 468.374 73.3828 cv
cp
134.727 110.194 mo
133.589 106.636 131.816 103.379 128.081 103.314 cv
124.344 103.247 121.263 106.223 121.198 109.958 cv
121.133 113.693 124.214 115.958 127.844 116.839 cv
129.484 117.239 131.503 117.691 133.031 117.575 cv
141.489 127.122 li
193.413 127.122 li
245.279 74.9678 li
440.429 74.9678 li
450.225 83.4688 li
464.41 83.4688 li
468.111 79.7686 li
469.345 79.9316 470.742 79.9326 471.941 79.9199 cv
475.675 79.877 479.184 78.3643 479.963 74.71 cv
480.74 71.0557 478.408 67.4648 474.754 66.6855 cv
471.1 65.9082 468.638 68.6816 466.731 71.8945 cv
465.756 73.5352 464.496 76.4102 464.974 78.0146 cv
462.979 80.0107 li
451.513 80.0107 li
441.719 71.5098 li
243.841 71.5098 li
191.974 123.665 li
143.044 123.665 li
135.449 115.087 li
135.57 113.53 135.15 111.524 134.727 110.194 cv
cp
f
98.5825 139.401 mo
100.493 139.437 102.013 141.011 101.979 142.919 cv
101.946 144.829 100.373 146.352 98.4624 146.316 cv
96.5532 146.283 95.0327 144.706 95.0659 142.798 cv
95.0972 140.89 96.6733 139.368 98.5825 139.401 cv
cp
337.76 102.168 mo
339.112 100.818 341.298 100.818 342.65 102.168 cv
344 103.519 344 105.708 342.65 107.056 cv
341.298 108.408 339.112 108.408 337.76 107.056 cv
336.409 105.708 336.409 103.519 337.76 102.168 cv
cp
97.0347 148.487 mo
99.0952 148.986 101.767 149.586 103.287 149.01 cv
111.619 156.804 li
132.839 156.804 li
145.804 145.276 li
202.619 145.276 li
242.672 106.089 li
332.96 106.089 li
333.958 107.346 335.855 108.543 337.19 109.201 cv
340.536 110.856 344.112 111.844 346.755 109.201 cv
349.396 106.558 349.396 102.276 346.755 99.6348 cv
344.112 96.9912 340.347 97.6348 337.19 99.6348 cv
335.853 100.48 334.237 101.533 333.234 102.632 cv
241.261 102.632 li
201.206 141.818 li
144.493 141.818 li
131.526 153.348 li
112.982 153.348 li
104.652 145.549 li
104.564 144.252 104.24 142.85 103.919 141.844 cv
102.783 138.283 101.01 135.025 97.272 134.96 cv
93.5376 134.895 90.4575 137.872 90.3882 141.606 cv
90.3267 145.34 93.4067 147.605 97.0347 148.487 cv
cp
f
621.705 177.23 mo
623.055 175.879 625.242 175.879 626.594 177.23 cv
627.945 178.581 627.945 180.769 626.594 182.118 cv
625.242 183.47 623.055 183.47 621.705 182.118 cv
620.353 180.769 620.353 178.581 621.705 177.23 cv
cp
482.864 182.079 mo
481.513 183.431 479.326 183.431 477.974 182.079 cv
476.623 180.728 476.623 178.54 477.974 177.189 cv
479.326 175.839 481.513 175.839 482.864 177.189 cv
484.215 178.54 484.215 180.728 482.864 182.079 cv
cp
483.434 174.658 mo
480.278 172.656 476.512 172.017 473.869 174.658 cv
471.228 177.298 471.228 181.581 473.869 184.224 cv
476.512 186.862 480.088 185.879 483.434 184.224 cv
484.755 183.572 486.629 182.394 487.634 181.15 cv
616.902 181.15 li
617.9 182.406 619.799 183.603 621.133 184.264 cv
624.478 185.918 628.057 186.903 630.699 184.264 cv
633.34 181.621 633.34 177.339 630.699 174.699 cv
628.057 172.054 624.291 172.694 621.133 174.699 cv
619.799 175.543 618.184 176.594 617.182 177.693 cv
487.422 177.693 li
486.423 176.579 484.786 175.514 483.434 174.658 cv
cp
f
306.043 155.862 mo
307.394 154.515 309.582 154.515 310.933 155.862 cv
312.283 157.214 312.283 159.406 310.933 160.753 cv
309.582 162.103 307.394 162.103 306.043 160.753 cv
304.693 159.406 304.693 157.214 306.043 155.862 cv
cp
311.503 162.898 mo
312.572 162.371 314.001 161.499 315.04 160.528 cv
338.783 160.528 li
359.53 139.511 li
611.816 139.511 li
635.303 115.039 li
698.949 115.039 li
698.949 111.581 li
633.828 111.581 li
610.342 136.054 li
358.085 136.054 li
337.337 157.072 li
316.024 157.072 li
315.191 155.711 313.138 154.366 311.503 153.331 cv
308.346 151.331 304.581 150.691 301.937 153.331 cv
299.296 155.974 299.296 160.255 301.937 162.898 cv
304.581 165.54 308.156 164.554 311.503 162.898 cv
cp
f
302.706 198.121 mo
301.356 199.473 299.167 199.473 297.818 198.121 cv
296.47 196.77 296.47 194.581 297.818 193.23 cv
299.167 191.879 301.356 191.879 302.706 193.23 cv
304.062 194.581 304.062 196.77 302.706 198.121 cv
cp
307.511 197.151 mo
315.73 197.151 li
315.73 193.694 li
307.234 193.694 li
306.232 192.595 304.615 191.543 303.281 190.698 cv
300.124 188.698 296.356 188.056 293.715 190.698 cv
291.074 193.34 291.07 197.622 293.711 200.265 cv
296.356 202.908 299.931 201.92 303.281 200.265 cv
304.613 199.605 306.513 198.408 307.511 197.151 cv
cp
f
255.081 265.267 mo
253.727 266.61 251.54 266.606 250.193 265.249 cv
248.847 263.896 248.855 261.704 250.209 260.36 cv
251.563 259.015 253.751 259.021 255.099 260.374 cv
256.447 261.73 256.439 263.921 255.081 265.267 cv
cp
255.679 257.845 mo
252.525 255.833 248.763 255.181 246.113 257.815 cv
243.462 260.444 243.445 264.731 246.08 267.38 cv
248.717 270.031 252.292 269.056 255.649 267.411 cv
256.743 266.875 258.218 265.978 259.268 264.981 cv
267.255 264.981 li
267.255 261.524 li
260.144 261.524 li
259.287 260.185 257.279 258.864 255.679 257.845 cv
cp
f
184.353 259.118 mo
185.707 257.772 187.896 257.782 189.243 259.136 cv
190.59 260.489 190.582 262.677 189.225 264.024 cv
187.871 265.368 185.684 265.364 184.336 264.01 cv
182.994 262.653 182.999 260.466 184.353 259.118 cv
cp
315.312 253.63 mo
316.595 252.216 318.779 252.102 320.194 253.386 cv
321.613 254.665 321.724 256.852 320.441 258.269 cv
319.161 259.683 316.977 259.794 315.558 258.514 cv
314.14 257.233 314.029 255.046 315.312 253.63 cv
cp
189.794 266.169 mo
190.479 265.833 191.316 265.355 192.103 264.8 cv
192.738 265.535 193.665 266.01 194.709 266.01 cv
215.169 266.01 li
216.149 266.01 217.083 265.595 217.74 264.866 cv
232.557 248.431 li
274.572 248.431 li
285.527 258.989 li
286.158 259.602 286.999 259.947 287.88 259.958 cv
309.922 260.247 li
309.94 260.247 309.954 260.247 309.97 260.247 cv
310.867 260.247 311.679 259.897 312.294 259.333 cv
313.193 259.974 314.216 260.565 315.116 261.073 cv
318.372 262.911 322.164 263.36 324.669 260.591 cv
327.174 257.818 326.962 253.54 324.19 251.035 cv
321.414 248.532 317.895 249.697 314.633 251.519 cv
313.708 252.035 312.507 252.839 311.556 253.731 cv
311.091 253.49 310.574 253.338 310.013 253.331 cv
289.338 253.061 li
278.367 242.485 li
277.722 241.862 276.861 241.515 275.967 241.515 cv
231.016 241.515 li
230.038 241.515 229.105 241.931 228.449 242.657 cv
213.632 259.095 li
194.709 259.095 li
194.279 259.095 193.873 259.183 193.492 259.326 cv
192.488 258.328 191.039 257.379 189.823 256.603 cv
186.669 254.595 182.908 253.94 180.257 256.573 cv
177.606 259.206 177.589 263.487 180.222 266.139 cv
182.861 268.79 186.437 267.815 189.794 266.169 cv
cp
f
272.42 191.379 mo
273.704 189.964 275.888 189.853 277.307 191.132 cv
278.722 192.414 278.833 194.599 277.553 196.017 cv
276.274 197.433 274.089 197.543 272.67 196.264 cv
271.25 194.983 271.141 192.795 272.42 191.379 cv
cp
272.226 198.823 mo
275.484 200.662 279.276 201.11 281.778 198.339 cv
284.283 195.569 284.071 191.29 281.298 188.785 cv
278.527 186.283 275.004 187.444 271.742 189.269 cv
270.652 189.875 269.185 190.885 268.189 191.964 cv
259.201 192.246 li
259.309 195.701 li
267.609 195.443 li
268.556 196.713 270.597 197.905 272.226 198.823 cv
cp
f
274.92 290.719 mo
276.811 290.985 278.127 292.731 277.861 294.623 cv
277.597 296.514 275.847 297.831 273.957 297.565 cv
272.066 297.3 270.752 295.552 271.017 293.661 cv
271.28 291.769 273.029 290.452 274.92 290.719 cv
cp
268.647 294.731 mo
268.954 298.454 270.706 301.847 274.403 302.369 cv
278.105 302.888 281.525 300.315 282.048 296.612 cv
282.565 292.911 279.626 290.649 276.288 288.973 cv
274.605 288.124 271.697 287.082 270.115 287.62 cv
237.787 287.62 li
237.787 291.079 li
268.525 291.079 li
268.466 292.277 268.554 293.592 268.647 294.731 cv
cp
f
123.263 232.128 mo
124.007 230.368 126.036 229.545 127.794 230.29 cv
129.554 231.035 130.374 233.062 129.63 234.823 cv
128.887 236.583 126.857 237.406 125.099 236.66 cv
123.34 235.914 122.519 233.885 123.263 232.128 cv
cp
471.401 318.921 mo
473.257 318.473 475.121 319.62 475.57 321.473 cv
476.016 323.329 474.874 325.198 473.017 325.644 cv
471.161 326.091 469.293 324.95 468.848 323.091 cv
468.402 321.237 469.542 319.369 471.401 318.921 cv
cp
123.329 237.993 mo
124.246 238.811 125.646 239.845 126.974 240.438 cv
131.611 246.981 li
200.689 316.356 li
201.193 316.865 li
239.751 317.01 li
256.247 335.452 li
464.626 335.452 li
469.898 329.377 li
469.83 329.316 li
471.369 329.138 473.316 328.223 474.878 327.454 cv
478.234 325.806 480.748 322.927 479.872 319.294 cv
479.642 318.34 479.216 317.485 478.654 316.756 cv
478.673 316.67 478.703 316.59 478.715 316.503 cv
480.227 306.13 li
480.5 304.237 479.194 302.481 477.303 302.208 cv
475.404 301.933 473.659 303.24 473.382 305.13 cv
472.054 314.235 li
471.941 314.257 471.828 314.273 471.714 314.3 cv
468.081 315.177 467.054 318.741 466.719 322.462 cv
466.595 323.84 466.614 325.881 467.062 327.373 cv
463.049 331.995 li
257.792 331.995 li
241.301 313.556 li
202.635 313.411 li
134.35 244.864 li
130.654 239.649 li
131.453 238.311 131.878 236.144 132.195 234.401 cv
132.86 230.72 132.042 226.991 128.601 225.537 cv
125.161 224.079 121.192 225.685 119.732 229.127 cv
118.281 232.569 120.535 235.514 123.329 237.993 cv
cp
f
96.1069 168.241 mo
98.0181 168.261 99.5474 169.824 99.5288 171.735 cv
99.5112 173.645 97.9487 175.177 96.0386 175.158 cv
94.1284 175.136 92.5972 173.574 92.6196 171.665 cv
92.6362 169.757 94.1997 168.22 96.1069 168.241 cv
cp
326.29 135.312 mo
328.198 135.364 329.703 136.952 329.653 138.862 cv
329.597 140.77 328.011 142.275 326.104 142.224 cv
324.192 142.173 322.687 140.581 322.741 138.675 cv
322.792 136.767 324.382 135.261 326.29 135.312 cv
cp
94.9106 177.064 mo
95.8345 177.389 97.0972 177.719 98.3091 177.864 cv
98.4888 178.523 98.8608 179.135 99.4233 179.605 cv
109.508 188.025 li
110.13 188.54 110.915 188.827 111.725 188.827 cv
175.692 188.827 li
176.58 188.827 177.431 188.487 178.073 187.877 cv
198.971 168.039 li
211.998 168.039 li
212.906 168.039 213.779 167.683 214.426 167.044 cv
253.181 128.852 li
311.193 128.852 li
317.686 134.951 li
318.361 135.585 319.228 135.889 320.091 135.879 cv
320.15 137.219 320.466 138.688 320.79 139.735 cv
321.888 143.304 323.632 146.577 327.371 146.681 cv
331.105 146.781 334.212 143.835 334.316 140.102 cv
334.414 136.364 331.358 134.072 327.735 133.156 cv
326.423 132.824 324.864 132.456 323.505 132.372 cv
323.49 131.469 323.128 130.575 322.419 129.91 cv
314.931 122.872 li
314.29 122.271 313.441 121.937 312.563 121.937 cv
251.762 121.937 li
250.854 121.937 249.983 122.294 249.335 122.931 cv
210.58 161.122 li
197.593 161.122 li
196.706 161.122 195.854 161.464 195.212 162.074 cv
174.314 181.912 li
112.978 181.912 li
103.857 174.295 li
103.391 173.908 102.852 173.679 102.296 173.572 cv
102.178 172.493 101.951 171.361 101.739 170.371 cv
100.956 166.71 98.7817 163.574 95.0435 163.539 cv
91.3091 163.503 88.2505 166.497 88.2085 170.235 cv
88.1782 173.97 91.3833 175.833 94.9106 177.064 cv
cp
f
126.842 292.274 mo
128.027 290.774 130.199 290.521 131.698 291.706 cv
133.201 292.889 133.454 295.065 132.267 296.565 cv
131.081 298.057 128.909 298.315 127.411 297.13 cv
125.914 295.944 125.656 293.771 126.842 292.274 cv
cp
346.243 361.098 mo
347.526 359.683 349.71 359.573 351.128 360.853 cv
352.543 362.132 352.655 364.319 351.374 365.735 cv
350.096 367.153 347.911 367.261 346.493 365.981 cv
345.071 364.702 344.963 362.513 346.243 361.098 cv
cp
133.086 298.624 mo
134.237 297.879 135.81 296.623 136.711 295.36 cv
157.411 295.36 li
189.523 327.798 li
232.258 327.798 li
249.115 346.69 li
306.134 346.69 li
321.694 365.274 li
341.523 365.274 li
342.505 366.502 344.468 367.648 346.047 368.54 cv
349.304 370.378 353.097 370.829 355.6 368.057 cv
358.106 365.286 357.893 361.01 355.119 358.502 cv
352.347 355.999 348.826 357.165 345.564 358.987 cv
344.429 359.621 342.88 360.686 341.886 361.819 cv
323.309 361.819 li
307.749 343.231 li
250.665 343.231 li
233.808 324.339 li
190.965 324.339 li
158.852 291.903 li
136.536 291.903 li
135.437 290.819 133.524 289.869 131.974 289.124 cv
128.601 287.503 124.79 287.304 122.472 290.235 cv
120.156 293.165 120.649 297.418 123.58 299.737 cv
126.513 302.052 129.95 300.657 133.086 298.624 cv
cp
f
96.7622 201.839 mo
98.2544 200.65 100.425 200.894 101.619 202.386 cv
102.813 203.879 102.568 206.058 101.072 207.246 cv
99.5796 208.435 97.4028 208.191 96.2163 206.698 cv
95.0229 205.206 95.2661 203.028 96.7622 201.839 cv
cp
101.402 209.439 mo
102.792 208.937 104.794 207.971 105.931 206.844 cv
131.176 206.844 li
140.538 216.246 li
140.538 245.406 li
204.583 309.069 li
205.089 309.573 li
241.373 309.573 li
256.715 325.511 li
338.297 325.511 li
342.252 321.921 li
339.924 319.36 li
336.96 322.054 li
258.189 322.054 li
242.844 306.115 li
206.515 306.115 li
143.996 243.969 li
143.996 214.816 li
132.612 203.386 li
106.087 203.386 li
105.217 202.17 103.713 200.931 102.472 199.933 cv
99.5542 197.59 95.8872 196.533 92.9673 198.864 cv
90.0454 201.194 89.563 205.447 91.8931 208.371 cv
94.2261 211.287 97.8882 210.71 101.402 209.439 cv
cp
f
323.176 223.108 mo
321.279 222.89 319.92 221.175 320.137 219.278 cv
320.356 217.382 322.073 216.02 323.969 216.239 cv
325.867 216.458 327.225 218.173 327.009 220.069 cv
326.789 221.97 325.074 223.329 323.176 223.108 cv
cp
329.349 218.947 mo
328.954 215.228 327.115 211.878 323.403 211.451 cv
319.691 211.025 316.335 213.683 315.906 217.392 cv
315.481 221.106 318.475 223.294 321.853 224.89 cv
322.564 225.227 323.492 225.593 324.445 225.864 cv
324.575 226.566 324.912 227.235 325.472 227.761 cv
334.982 236.66 li
335.646 237.285 336.494 237.594 337.342 237.594 cv
338.263 237.594 339.185 237.227 339.868 236.499 cv
341.171 235.103 341.099 232.915 339.705 231.612 cv
330.197 222.71 li
330.001 222.527 329.787 222.379 329.565 222.25 cv
329.565 221.148 329.456 219.974 329.349 218.947 cv
cp
f
294.335 280.369 mo
292.986 281.719 290.797 281.719 289.446 280.369 cv
288.095 279.019 288.095 276.829 289.446 275.478 cv
290.797 274.128 292.986 274.128 294.335 275.478 cv
295.687 276.829 295.687 279.019 294.335 280.369 cv
cp
294.907 272.948 mo
291.749 270.944 287.984 270.304 285.34 272.948 cv
282.701 275.587 282.701 279.869 285.34 282.514 cv
287.984 285.152 291.56 284.168 294.907 282.514 cv
295.978 281.981 297.417 281.103 298.458 280.128 cv
306.799 280.128 li
306.799 276.671 li
299.418 276.671 li
298.58 275.315 296.535 273.976 294.907 272.948 cv
cp
f
124.872 441.299 mo
126.781 441.299 128.329 442.845 128.329 444.755 cv
128.329 446.666 126.781 448.214 124.872 448.214 cv
122.962 448.214 121.415 446.666 121.415 444.755 cv
121.415 442.845 122.962 441.299 124.872 441.299 cv
cp
126.257 452.633 mo
129.995 452.633 133.023 449.603 133.023 445.869 cv
133.023 442.13 129.905 439.921 126.257 439.103 cv
123.833 438.557 120.55 437.878 119.326 439.103 cv
118.099 440.325 118.82 443.878 119.496 445.869 cv
120.691 449.406 122.523 452.633 126.257 452.633 cv
cp
f
99.6187 115.003 mo
97.7075 114.969 96.188 113.392 96.2222 111.485 cv
96.2554 109.576 97.8286 108.054 99.7407 108.087 cv
101.648 108.122 103.171 109.694 103.135 111.605 cv
103.103 113.515 101.527 115.037 99.6187 115.003 cv
cp
486.669 80.1895 mo
487.065 78.3203 488.902 77.1289 490.774 77.5273 cv
492.637 77.9238 493.829 79.7617 493.429 81.6289 cv
493.035 83.4971 491.198 84.6885 489.331 84.2891 cv
487.462 83.8936 486.272 82.0566 486.669 80.1895 cv
cp
105.076 110.526 mo
103.94 106.969 102.165 103.712 98.4292 103.644 cv
94.6929 103.581 91.6118 106.556 91.5474 110.293 cv
91.4819 114.026 94.562 116.29 98.1929 117.17 cv
99.5894 117.511 101.265 117.89 102.677 117.927 cv
111.872 127.122 li
132.618 127.122 li
138.669 133.173 li
196.86 133.173 li
249.303 81.3066 li
436.662 81.3066 li
446.888 90.5645 li
482.176 90.5645 li
485.904 86.4907 li
487.249 86.7344 488.867 86.7412 490.232 86.7266 cv
493.966 86.6846 497.479 85.1719 498.255 81.5166 cv
499.032 77.8643 496.702 74.2705 493.045 73.4941 cv
489.391 72.7148 486.929 75.4893 485.021 78.7021 cv
484.138 80.1895 483.024 82.6934 483.179 84.3457 cv
480.653 87.1055 li
448.223 87.1055 li
437.995 77.8496 li
247.883 77.8496 li
195.439 129.715 li
140.1 129.715 li
134.049 123.665 li
113.303 123.665 li
105.714 116.074 li
106.053 114.471 105.562 112.05 105.076 110.526 cv
cp
f
437.08 97.333 mo
437.08 95.4229 438.626 93.877 440.537 93.877 cv
442.445 93.877 443.995 95.4229 443.995 97.333 cv
443.995 99.2432 442.445 100.79 440.537 100.79 cv
438.626 100.79 437.08 99.2432 437.08 97.333 cv
cp
447.054 97.8887 mo
447.054 93.6846 443.65 90.2813 439.45 90.2813 cv
435.249 90.2813 431.846 93.6846 431.846 97.8887 cv
431.846 102.085 435.249 105.489 439.45 105.489 cv
443.65 105.489 447.054 102.085 447.054 97.8887 cv
cp
f
503.175 500.715 mo
501.329 501.203 499.437 500.098 498.955 498.249 cv
498.468 496.403 499.573 494.513 501.419 494.027 cv
503.266 493.542 505.158 494.648 505.643 496.494 cv
506.126 498.344 505.022 500.232 503.175 500.715 cv
cp
501.179 490.928 mo
497.114 491.995 494.687 496.152 495.753 500.211 cv
496.82 504.274 500.973 506.703 505.039 505.638 cv
509.098 504.572 511.529 500.416 510.462 496.352 cv
509.394 492.291 505.239 489.862 501.179 490.928 cv
cp
f
473.088 500.715 mo
471.242 501.203 469.35 500.098 468.869 498.249 cv
468.381 496.403 469.486 494.513 471.332 494.027 cv
473.179 493.542 475.071 494.648 475.557 496.494 cv
476.04 498.344 474.935 500.232 473.088 500.715 cv
cp
471.093 490.928 mo
467.027 491.995 464.6 496.152 465.666 500.211 cv
466.734 504.274 470.887 506.703 474.952 505.638 cv
479.01 504.572 481.443 500.416 480.374 496.352 cv
479.308 492.291 475.152 489.862 471.093 490.928 cv
cp
f
446.233 500.291 mo
444.386 500.777 442.495 499.671 442.009 497.824 cv
441.526 495.978 442.63 494.086 444.477 493.603 cv
446.325 493.116 448.215 494.223 448.699 496.07 cv
449.186 497.917 448.081 499.807 446.233 500.291 cv
cp
444.234 490.503 mo
440.173 491.57 437.745 495.727 438.808 499.787 cv
439.875 503.85 444.032 506.278 448.098 505.211 cv
452.157 504.146 454.587 499.99 453.521 495.925 cv
452.454 491.865 448.296 489.436 444.234 490.503 cv
cp
f
399.54 500.228 mo
398.605 498.561 399.197 496.454 400.862 495.521 cv
402.525 494.583 404.635 495.174 405.568 496.841 cv
406.503 498.505 405.914 500.615 404.248 501.549 cv
402.583 502.482 400.476 501.891 399.54 500.228 cv
cp
405.263 504.486 mo
408.927 502.428 410.228 497.794 408.17 494.135 cv
406.115 490.473 401.482 489.171 397.815 491.228 cv
394.158 493.282 392.854 497.919 394.912 501.582 cv
396.967 505.241 401.604 506.541 405.263 504.486 cv
cp
f
646.275 153.227 mo
646.275 151.314 647.822 149.765 649.734 149.765 cv
651.643 149.765 653.191 151.314 653.191 153.227 cv
653.191 155.135 651.643 156.683 649.734 156.683 cv
647.822 156.683 646.275 155.135 646.275 153.227 cv
cp
656.25 153.776 mo
656.25 149.576 652.848 146.17 648.648 146.17 cv
644.447 146.17 641.043 149.576 641.043 153.776 cv
641.043 157.977 644.447 161.379 648.648 161.379 cv
652.848 161.379 656.25 157.977 656.25 153.776 cv
cp
f
506.414 320.091 mo
506.414 321.999 504.867 323.548 502.956 323.548 cv
501.044 323.548 499.498 321.999 499.498 320.091 cv
499.498 318.181 501.044 316.63 502.956 316.63 cv
504.867 316.63 506.414 318.181 506.414 320.091 cv
cp
494.266 320.641 mo
494.266 324.841 497.671 328.248 501.868 328.248 cv
506.069 328.248 509.473 324.841 509.473 320.641 cv
509.473 316.44 506.069 313.036 501.868 313.036 cv
497.671 313.036 494.266 316.44 494.266 320.641 cv
cp
f
559.644 338.891 mo
559.644 340.802 558.098 342.348 556.185 342.348 cv
554.275 342.348 552.727 340.802 552.727 338.891 cv
552.727 336.981 554.275 335.431 556.185 335.431 cv
558.098 335.431 559.644 336.981 559.644 338.891 cv
cp
547.498 339.444 mo
547.498 343.641 550.901 347.048 555.099 347.048 cv
559.299 347.048 562.703 343.641 562.703 339.444 cv
562.703 335.244 559.299 331.837 555.099 331.837 cv
550.901 331.837 547.498 335.244 547.498 339.444 cv
cp
f
441.978 360.835 mo
441.978 358.923 443.526 357.377 445.437 357.377 cv
447.348 357.377 448.895 358.923 448.895 360.835 cv
448.895 362.744 447.348 364.294 445.437 364.294 cv
443.526 364.294 441.978 362.744 441.978 360.835 cv
cp
451.954 361.388 mo
451.954 357.184 448.55 353.781 444.349 353.781 cv
440.152 353.781 436.748 357.184 436.748 361.388 cv
436.748 365.585 440.152 368.99 444.349 368.99 cv
448.55 368.99 451.954 365.585 451.954 361.388 cv
cp
f
202.06 508.01 mo
200.65 509.299 198.464 509.2 197.174 507.791 cv
195.884 506.383 195.983 504.195 197.394 502.906 cv
198.803 501.616 200.991 501.715 202.28 503.124 cv
203.57 504.535 203.468 506.725 202.06 508.01 cv
cp
195.736 500.274 mo
192.636 503.108 192.419 507.917 195.253 511.02 cv
198.086 514.116 202.897 514.333 205.998 511.498 cv
209.097 508.666 209.313 503.854 206.481 500.758 cv
203.644 497.657 198.835 497.441 195.736 500.274 cv
cp
f
238.982 507.583 mo
237.571 508.873 235.385 508.774 234.096 507.365 cv
232.804 505.957 232.903 503.77 234.315 502.479 cv
235.722 501.191 237.912 501.291 239.201 502.699 cv
240.491 504.108 240.388 506.296 238.982 507.583 cv
cp
232.657 499.85 mo
229.557 502.683 229.342 507.491 232.174 510.594 cv
235.007 513.693 239.819 513.907 242.919 511.074 cv
246.019 508.241 246.234 503.432 243.402 500.332 cv
240.565 497.232 235.756 497.016 232.657 499.85 cv
cp
f
176.821 454.046 mo
178.457 453.065 180.581 453.594 181.565 455.232 cv
182.546 456.869 182.017 458.991 180.375 459.974 cv
178.739 460.958 176.614 460.427 175.631 458.791 cv
174.648 457.149 175.182 455.027 176.821 454.046 cv
cp
171.045 460.273 mo
173.206 463.874 177.873 465.044 181.476 462.885 cv
185.079 460.724 186.247 456.056 184.086 452.45 cv
181.929 448.851 177.258 447.681 173.653 449.841 cv
173.374 450.008 173.117 450.194 172.869 450.389 cv
163.449 442.829 li
161.96 441.635 159.781 441.869 158.589 443.361 cv
157.394 444.851 157.629 447.027 159.119 448.22 cv
168.627 455.851 li
169.035 456.178 169.494 456.385 169.968 456.502 cv
169.991 457.79 170.335 459.089 171.045 460.273 cv
cp
f
464.025 395.841 mo
465.936 395.841 467.483 397.389 467.483 399.302 cv
467.483 401.21 465.936 402.761 464.025 402.761 cv
462.115 402.761 460.568 401.21 460.568 399.302 cv
460.568 397.389 462.115 395.841 464.025 395.841 cv
cp
98.2925 299.369 mo
96.3823 299.36 94.8413 297.807 94.8491 295.898 cv
94.8569 293.99 96.4097 292.448 98.3188 292.454 cv
100.228 292.464 101.767 294.014 101.761 295.927 cv
101.755 297.837 100.202 299.378 98.2925 299.369 cv
cp
462.938 407.457 mo
467.138 407.457 470.543 404.054 470.543 399.853 cv
470.543 395.652 467.138 392.249 462.938 392.249 cv
460.027 392.249 457.499 393.888 456.222 396.294 cv
427.378 367.665 li
419.75 367.665 li
403.694 372.263 li
396.736 374.353 li
309.47 374.353 li
288.292 349.399 li
248.892 349.399 li
232.037 331.995 li
188.347 331.995 li
163.279 307.731 li
111.912 307.731 li
104.595 299.677 li
104.724 298.16 104.322 296.168 103.964 294.546 cv
103.158 290.896 100.962 287.771 97.2271 287.757 cv
93.4897 287.744 90.4487 290.757 90.4331 294.494 cv
90.4233 298.231 93.6382 300.075 97.1743 301.285 cv
98.5151 301.748 100.56 302.217 102.132 302.106 cv
110.382 311.186 li
161.881 311.186 li
186.95 335.452 li
230.571 335.452 li
247.427 352.856 li
286.691 352.856 li
307.871 377.809 li
396.988 377.809 li
419.996 371.123 li
425.953 371.123 li
455.361 400.307 li
455.597 404.296 458.894 407.457 462.938 407.457 cv
cp
f
435.656 400.991 mo
433.79 401.416 431.938 400.248 431.513 398.385 cv
431.092 396.524 432.261 394.671 434.122 394.248 cv
435.985 393.825 437.835 394.991 438.261 396.853 cv
438.683 398.719 437.515 400.57 435.656 400.991 cv
cp
433.984 391.141 mo
429.887 392.073 427.321 396.146 428.249 400.241 cv
429.181 404.337 433.253 406.902 437.353 405.973 cv
441.445 405.043 444.012 400.966 443.083 396.874 cv
442.152 392.777 438.079 390.212 433.984 391.141 cv
cp
f
552.536 428.101 mo
550.628 428.101 549.078 426.552 549.078 424.641 cv
549.078 422.733 550.628 421.183 552.536 421.183 cv
554.448 421.183 555.993 422.733 555.993 424.641 cv
555.993 426.552 554.448 428.101 552.536 428.101 cv
cp
559.057 425.198 mo
559.057 420.994 555.65 417.589 551.453 417.589 cv
547.251 417.589 543.848 420.994 543.848 425.198 cv
543.848 429.396 547.251 432.799 551.453 432.799 cv
555.65 432.799 559.057 429.396 559.057 425.198 cv
cp
f
668.975 149.765 mo
670.883 149.765 672.432 151.314 672.432 153.227 cv
672.432 155.135 670.883 156.683 668.975 156.683 cv
667.064 156.683 665.518 155.135 665.518 153.227 cv
665.518 151.314 667.064 149.765 668.975 149.765 cv
cp
667.887 161.379 mo
672.088 161.379 675.492 157.977 675.492 153.776 cv
675.492 149.576 672.088 146.17 667.887 146.17 cv
663.691 146.17 660.283 149.576 660.283 153.776 cv
660.283 157.977 663.691 161.379 667.887 161.379 cv
cp
f
456.668 163.599 mo
458.424 162.848 460.456 163.662 461.208 165.419 cv
461.958 167.173 461.144 169.204 459.388 169.956 cv
457.633 170.708 455.601 169.892 454.851 168.139 cv
454.098 166.379 454.912 164.349 456.668 163.599 cv
cp
460.241 174.702 mo
464.099 173.052 465.893 168.583 464.239 164.72 cv
462.587 160.859 458.121 159.066 454.256 160.72 cv
450.394 162.372 448.604 166.839 450.256 170.704 cv
451.906 174.564 456.377 176.356 460.241 174.702 cv
cp
f
306.863 313.061 mo
305.107 313.815 303.079 312.998 302.325 311.244 cv
301.576 309.485 302.39 307.452 304.145 306.702 cv
305.901 305.952 307.933 306.764 308.683 308.523 cv
309.433 310.277 308.619 312.309 306.863 313.061 cv
cp
301.735 303.825 mo
297.873 305.478 296.079 309.944 297.733 313.807 cv
299.384 317.669 303.852 319.46 307.714 317.807 cv
311.578 316.156 313.367 311.686 311.715 307.825 cv
310.064 303.962 305.594 302.171 301.735 303.825 cv
cp
f
348.456 389.043 mo
347.705 387.285 348.519 385.252 350.275 384.503 cv
352.031 383.752 354.063 384.565 354.816 386.323 cv
355.566 388.075 354.752 390.108 352.997 390.86 cv
351.241 391.612 349.206 390.796 348.456 389.043 cv
cp
357.845 385.624 mo
356.193 381.763 351.726 379.973 347.863 381.624 cv
344 383.277 342.21 387.744 343.862 391.606 cv
345.513 395.469 349.985 397.26 353.847 395.606 cv
354.617 395.277 355.298 394.833 355.892 394.307 cv
365.29 394.307 li
366.246 394.307 367.019 393.532 367.019 392.577 cv
367.019 391.624 366.246 390.848 365.29 390.848 cv
358.121 390.848 li
358.632 389.19 358.583 387.347 357.845 385.624 cv
cp
f
222.081 194.41 mo
223.438 195.755 223.453 197.941 222.112 199.3 cv
220.771 200.658 218.58 200.67 217.219 199.329 cv
215.865 197.985 215.851 195.8 217.195 194.441 cv
218.536 193.079 220.724 193.068 222.081 194.41 cv
cp
246.717 160.528 mo
264.269 160.528 li
276.372 173.371 li
334.947 173.371 li
362.98 145.319 li
613.685 145.319 li
637.457 120.819 li
698.949 120.819 li
698.949 117.362 li
635.994 117.362 li
612.223 141.862 li
361.55 141.862 li
333.515 169.912 li
277.864 169.912 li
265.762 157.072 li
245.279 157.072 li
217.758 184.761 li
217.758 189.796 li
216.618 190.795 215.524 192.491 214.655 193.885 cv
212.674 197.054 212.057 200.823 214.713 203.447 cv
217.371 206.073 221.656 206.052 224.279 203.394 cv
226.904 200.731 225.898 197.165 224.222 193.826 cv
223.579 192.543 222.431 190.735 221.217 189.72 cv
221.217 186.185 li
246.717 160.528 li
cp
f
158.039 233.675 mo
156.134 233.787 154.498 232.333 154.383 230.429 cv
154.271 228.523 155.725 226.886 157.629 226.773 cv
159.535 226.658 161.172 228.114 161.287 230.019 cv
161.399 231.925 159.946 233.562 158.039 233.675 cv
cp
225.941 217.89 mo
235.192 209.112 li
235.192 186.246 li
243.635 178.679 li
336.308 178.679 li
365.125 150.894 li
617.158 150.894 li
639.49 127.122 li
698.949 127.122 li
698.949 123.665 li
637.992 123.665 li
615.664 147.437 li
363.73 147.437 li
334.914 175.22 li
242.311 175.22 li
231.735 184.699 li
231.735 207.627 li
224.563 214.431 li
170.942 214.431 li
161.535 223.837 li
159.933 223.748 157.785 224.362 156.405 224.923 cv
152.944 226.323 149.835 228.345 150.053 232.073 cv
150.275 235.806 153.478 238.65 157.205 238.425 cv
160.937 238.204 162.958 234.962 163.559 231.275 cv
163.814 229.711 164.099 227.802 163.94 226.32 cv
172.373 217.89 li
225.941 217.89 li
cp
f
258.211 306.856 mo
256.304 306.847 254.761 305.294 254.771 303.386 cv
254.779 301.476 256.331 299.933 258.238 299.944 cv
260.15 299.95 261.689 301.503 261.682 303.415 cv
261.676 305.325 260.123 306.866 258.211 306.856 cv
cp
363.562 276.115 mo
363.562 175.98 li
380.755 156.964 li
580.444 156.964 li
586.276 160.856 li
588.198 157.981 li
581.492 153.507 li
379.219 153.507 li
360.105 174.65 li
360.105 274.635 li
339.82 293.958 li
296.663 293.958 li
281.103 311.307 li
268.285 311.307 li
264.638 306.761 li
264.546 306.835 li
264.595 305.369 264.214 303.536 263.884 302.035 cv
263.079 298.382 260.883 295.26 257.149 295.245 cv
253.411 295.231 250.372 298.245 250.355 301.983 cv
250.343 305.716 253.559 307.559 257.094 308.773 cv
258.55 309.273 260.841 309.793 262.449 309.556 cv
266.626 314.764 li
282.646 314.764 li
298.206 297.418 li
341.205 297.418 li
363.562 276.115 li
cp
f
420.403 176.882 mo
419.051 175.531 419.051 173.344 420.403 171.993 cv
421.751 170.642 423.941 170.642 425.292 171.993 cv
426.641 173.344 426.641 175.531 425.292 176.882 cv
423.941 178.233 421.751 178.233 420.403 176.882 cv
cp
698.949 175.964 mo
676.92 175.964 li
675.91 175.964 674.947 176.406 674.291 177.177 cv
661.672 191.965 li
448.992 191.965 li
431.71 174.605 li
431.41 174.303 431.063 174.079 430.697 173.912 cv
430.277 172.314 427.781 170.675 425.862 169.46 cv
422.706 167.458 418.941 166.819 416.295 169.46 cv
413.655 172.102 413.655 176.385 416.295 179.026 cv
418.941 181.668 422.515 180.683 425.862 179.026 cv
426 178.958 426.147 178.882 426.296 178.802 cv
426.44 179.043 426.604 179.276 426.811 179.483 cv
445.106 197.862 li
445.754 198.514 446.635 198.882 447.557 198.882 cv
663.266 198.882 li
664.277 198.882 665.24 198.437 665.896 197.668 cv
678.518 182.878 li
698.949 182.878 li
700.861 182.878 702.408 181.331 702.408 179.42 cv
702.408 177.511 700.861 175.964 698.949 175.964 cv
cp
f
425.292 197.235 mo
423.941 198.587 421.751 198.587 420.403 197.235 cv
419.051 195.886 419.051 193.698 420.403 192.348 cv
421.751 190.997 423.941 190.997 425.292 192.348 cv
426.641 193.698 426.641 195.886 425.292 197.235 cv
cp
702.408 191.378 mo
702.408 189.473 700.861 187.92 698.949 187.92 cv
683.404 187.92 li
682.498 187.92 681.627 188.276 680.982 188.914 cv
666 203.627 li
445.315 203.627 li
433.131 192.194 li
431.927 191.064 430.12 190.968 428.808 191.87 cv
427.898 191.12 426.809 190.415 425.862 189.816 cv
422.706 187.814 418.941 187.175 416.295 189.816 cv
415.839 190.273 415.468 190.778 415.169 191.316 cv
403.758 181.156 li
401.458 183.739 li
414.344 195.21 li
414.482 196.73 415.13 198.215 416.295 199.379 cv
418.941 202.023 422.515 201.037 425.862 199.379 cv
426.72 198.956 427.814 198.31 428.75 197.566 cv
441.585 209.605 li
442.226 210.206 443.07 210.543 443.948 210.543 cv
667.412 210.543 li
668.32 210.543 669.188 210.187 669.836 209.552 cv
684.818 194.837 li
698.949 194.837 li
700.861 194.837 702.408 193.29 702.408 191.378 cv
cp
f
424.427 218.866 mo
423.077 220.215 420.888 220.215 419.538 218.866 cv
418.187 217.517 418.187 215.327 419.538 213.978 cv
420.888 212.628 423.077 212.628 424.427 213.978 cv
425.778 215.327 425.778 217.517 424.427 218.866 cv
cp
695.506 207.948 mo
688.156 207.948 li
687.15 207.948 686.197 208.386 685.541 209.148 cv
676.887 219.185 li
443.853 219.185 li
442.489 216.673 li
442.006 215.776 441.147 215.14 440.152 214.935 cv
430.603 212.962 li
429.638 212.762 428.693 212.985 427.945 213.498 cv
427.035 212.747 425.946 212.043 424.998 211.444 cv
422.357 209.77 419.296 209.057 416.818 210.408 cv
405.058 208.403 li
404.477 211.814 li
414.056 213.447 li
412.932 215.937 413.386 218.964 415.432 221.011 cv
418.076 223.651 421.652 222.668 424.998 221.011 cv
425.866 220.583 426.972 219.927 427.915 219.174 cv
428.29 219.438 428.722 219.633 429.202 219.731 cv
437.177 221.382 li
438.754 224.293 li
439.359 225.406 440.527 226.102 441.793 226.102 cv
678.473 226.102 li
679.48 226.102 680.435 225.664 681.09 224.901 cv
689.746 214.864 li
695.506 214.864 li
697.416 214.864 698.963 213.316 698.963 211.406 cv
698.963 209.496 697.416 207.948 695.506 207.948 cv
cp
f
434.598 236.833 mo
433.248 238.183 431.059 238.183 429.708 236.833 cv
428.358 235.483 428.358 233.294 429.708 231.943 cv
431.059 230.594 433.248 230.594 434.598 231.943 cv
435.948 233.294 435.948 235.483 434.598 236.833 cv
cp
695.506 230.677 mo
439.45 230.677 li
438.819 230.677 438.236 230.858 437.726 231.155 cv
436.904 230.52 435.984 229.927 435.168 229.41 cv
432.011 227.412 428.246 226.769 425.602 229.41 cv
422.961 232.052 422.961 236.337 425.602 238.977 cv
428.246 241.618 431.822 240.635 435.168 238.977 cv
435.998 238.568 437.044 237.951 437.958 237.243 cv
438.412 237.46 438.914 237.594 439.45 237.594 cv
695.506 237.594 li
697.416 237.594 698.963 236.045 698.963 234.136 cv
698.963 232.228 697.416 230.677 695.506 230.677 cv
cp
f
425.292 253.443 mo
423.941 254.793 421.751 254.793 420.403 253.443 cv
419.051 252.091 419.051 249.903 420.403 248.554 cv
421.751 247.202 423.941 247.202 425.292 248.554 cv
426.641 249.903 426.641 252.091 425.292 253.443 cv
cp
700.404 247.286 mo
432.997 247.286 li
431.664 247.286 430.517 248.052 429.941 249.16 cv
428.953 248.008 427.255 246.901 425.862 246.019 cv
423.448 244.487 420.679 243.76 418.327 244.681 cv
412.862 240.364 li
389.495 240.364 li
389.495 243.822 li
411.66 243.822 li
415.56 246.901 li
413.691 249.543 413.931 253.219 416.295 255.587 cv
418.941 258.227 422.515 257.241 425.862 255.587 cv
427.176 254.936 429.04 253.765 430.049 252.528 cv
430.656 253.527 431.746 254.202 432.997 254.202 cv
700.404 254.202 li
702.313 254.202 703.861 252.653 703.861 250.743 cv
703.861 248.835 702.313 247.286 700.404 247.286 cv
cp
f
437.015 269.918 mo
435.114 270.079 433.439 268.668 433.277 266.766 cv
433.115 264.862 434.527 263.19 436.432 263.028 cv
438.336 262.864 440.007 264.276 440.169 266.181 cv
440.329 268.083 438.92 269.757 437.015 269.918 cv
cp
703.861 261.31 mo
703.861 259.401 702.313 257.853 700.404 257.853 cv
442.908 257.853 li
441.515 257.853 440.32 258.683 439.773 259.872 cv
438.273 259.912 436.394 260.475 434.864 260.958 cv
431.665 261.965 428.998 264.057 428.706 267.161 cv
405.922 267.161 li
405.922 270.62 li
429.333 270.62 li
429.333 270.601 li
430.51 273.073 433.119 274.684 436.005 274.44 cv
439.731 274.123 441.283 270.753 442.174 267.124 cv
442.341 266.449 442.497 265.603 442.585 264.735 cv
442.693 264.744 442.796 264.767 442.908 264.767 cv
700.404 264.767 li
702.313 264.767 703.861 263.223 703.861 261.31 cv
cp
f
424.944 290.433 mo
423.593 291.782 421.405 291.782 420.054 290.433 cv
418.703 289.083 418.703 286.894 420.054 285.543 cv
421.405 284.194 423.593 284.194 424.944 285.543 cv
426.294 286.894 426.294 289.083 424.944 290.433 cv
cp
698.949 268.891 mo
460.399 268.891 li
459.451 268.891 458.541 269.282 457.887 269.97 cv
444.187 284.452 li
430.765 284.452 li
429.956 284.452 429.22 284.74 428.631 285.207 cv
427.687 284.402 426.522 283.648 425.515 283.011 cv
422.357 281.011 418.592 280.369 415.948 283.011 cv
413.307 285.653 413.307 289.934 415.948 292.577 cv
418.592 295.219 422.168 294.231 425.515 292.577 cv
426.438 292.119 427.632 291.406 428.613 290.594 cv
429.205 291.069 429.947 291.365 430.765 291.365 cv
445.677 291.365 li
446.628 291.365 447.537 290.973 448.189 290.285 cv
461.888 275.806 li
698.949 275.806 li
700.861 275.806 702.408 274.257 702.408 272.348 cv
702.408 270.44 700.861 268.891 698.949 268.891 cv
cp
f
422.255 312.491 mo
420.354 312.653 418.679 311.241 418.518 309.341 cv
418.456 308.624 418.619 307.94 418.947 307.358 cv
419.176 307.358 li
419.176 307.027 li
419.746 306.241 420.628 305.691 421.67 305.603 cv
422.546 305.527 423.365 305.796 424.019 306.281 cv
424.095 306.342 424.168 306.404 424.248 306.458 cv
424.892 307.027 425.33 307.829 425.409 308.753 cv
425.569 310.657 424.16 312.329 422.255 312.491 cv
cp
702.408 280.128 mo
702.408 278.219 700.861 276.671 698.949 276.671 cv
467.585 276.671 li
466.599 276.671 465.66 277.094 465.001 277.829 cv
450.623 293.958 li
432.997 293.958 li
432.138 293.958 431.316 294.277 430.677 294.856 cv
423.849 301.031 li
423.318 301.51 422.971 302.119 422.812 302.765 cv
421.884 302.981 420.942 303.269 420.105 303.532 cv
419.76 303.64 419.423 303.765 419.093 303.899 cv
405.922 303.899 li
405.922 307.358 li
414.715 307.358 li
414.126 308.36 413.824 309.521 413.936 310.844 cv
414.252 314.565 417.525 317.327 421.247 317.011 cv
424.97 316.694 426.524 313.327 427.415 309.698 cv
427.627 308.838 427.824 307.702 427.88 306.59 cv
428.093 306.469 428.3 306.329 428.49 306.157 cv
434.331 300.874 li
452.173 300.874 li
453.16 300.874 454.098 300.454 454.757 299.716 cv
469.135 283.587 li
698.949 283.587 li
700.861 283.587 702.408 282.04 702.408 280.128 cv
cp
f
443.307 311.296 mo
445.163 310.851 447.029 311.991 447.476 313.848 cv
447.921 315.704 446.781 317.569 444.923 318.019 cv
443.067 318.469 441.199 317.325 440.753 315.466 cv
440.307 313.608 441.449 311.741 443.307 311.296 cv
cp
440.547 325.511 mo
442.396 321.581 li
443.808 321.263 445.441 320.49 446.784 319.827 cv
450.14 318.179 452.653 315.3 451.779 311.669 cv
450.904 308.036 447.253 305.802 443.62 306.673 cv
439.987 307.552 438.96 311.115 438.626 314.835 cv
438.485 316.398 438.523 318.82 439.169 320.319 cv
438.352 322.054 li
357.667 322.054 li
354.107 319.278 li
351.98 322.003 li
356.477 325.511 li
440.547 325.511 li
cp
f
146.549 369.694 mo
147.299 371.448 146.485 373.481 144.729 374.233 cv
142.974 374.983 140.944 374.168 140.192 372.415 cv
139.441 370.657 140.255 368.627 142.01 367.873 cv
143.308 367.319 144.753 367.623 145.724 368.527 cv
145.724 368.589 li
145.794 368.589 li
146.105 368.896 146.367 369.264 146.549 369.694 cv
cp
538.736 374.353 mo
503.297 411.52 li
264.017 410.662 li
219.498 365.132 li
145.866 365.132 li
143.961 364.223 141.693 364.099 139.599 364.995 cv
135.736 366.648 133.945 371.116 135.597 374.978 cv
137.248 378.839 141.718 380.63 145.581 378.978 cv
149.443 377.327 151.234 372.858 149.581 368.995 cv
149.521 368.856 149.449 368.723 149.382 368.589 cv
218.042 368.589 li
262.558 414.112 li
504.773 414.983 li
540.214 377.809 li
606.609 377.809 li
699.174 471.653 li
701.635 469.224 li
608.055 374.353 li
538.736 374.353 li
cp
f
275.771 505.917 mo
277.159 507.227 277.229 509.41 275.923 510.804 cv
274.62 512.197 272.431 512.266 271.043 510.965 cv
269.649 509.657 269.575 507.47 270.881 506.075 cv
272.188 504.679 274.373 504.611 275.771 505.917 cv
cp
540.16 505.841 mo
523.325 489.977 li
521.602 482.402 li
494.983 455.763 li
377.059 455.763 li
360.634 473.94 li
304.925 473.94 li
297.362 481.542 li
279.431 481.542 li
271.499 490.204 li
271.499 501.264 li
270.321 502.266 269.207 504.098 268.331 505.583 cv
266.431 508.807 265.915 512.591 268.638 515.146 cv
271.367 517.7 275.646 517.565 278.203 514.84 cv
280.754 512.112 279.658 508.568 277.894 505.278 cv
277.249 504.072 276.134 502.4 274.956 501.396 cv
274.956 491.549 li
280.954 484.999 li
298.801 484.999 li
306.364 477.396 li
362.17 477.396 li
378.594 459.22 li
493.551 459.22 li
518.451 484.14 li
520.187 491.774 li
538.79 509.299 li
568.971 509.299 li
579.479 520.745 li
582.025 518.41 li
570.49 505.841 li
540.16 505.841 li
cp
f
369.941 502.994 mo
368.043 503.215 366.331 501.854 366.111 499.961 cv
365.888 498.061 367.246 496.345 369.147 496.127 cv
371.044 495.903 372.757 497.263 372.979 499.162 cv
373.196 501.059 371.837 502.773 369.941 502.994 cv
cp
537.986 512.664 mo
517 493.44 li
517 486.804 li
492.21 462.237 li
403.481 462.237 li
372.392 492.87 li
370.894 492.956 369.033 493.574 367.516 494.103 cv
363.985 495.337 361.144 497.891 361.577 501.603 cv
362.006 505.311 365.362 507.975 369.072 507.544 cv
372.784 507.112 374.233 503.697 375.016 500.044 cv
375.319 498.63 375.558 496.477 375.234 494.924 cv
404.9 465.695 li
490.79 465.695 li
513.542 488.248 li
513.542 494.962 li
536.642 516.12 li
566.046 516.12 li
571.392 520.87 li
573.687 518.285 li
567.36 512.664 li
537.986 512.664 li
cp
f
343.228 430.366 mo
341.472 431.119 339.443 430.3 338.689 428.549 cv
337.939 426.791 338.753 424.758 340.509 424.008 cv
342.265 423.258 344.298 424.073 345.046 425.828 cv
345.796 427.583 344.983 429.615 343.228 430.366 cv
cp
568.429 423.523 mo
559.97 411.091 li
514.082 411.091 li
508.717 416.921 li
349.763 416.921 li
345.662 422.052 li
343.558 420.469 340.692 420.02 338.097 421.13 cv
334.235 422.781 332.442 427.252 334.097 431.111 cv
335.749 434.974 340.215 436.763 344.079 435.112 cv
347.94 433.462 349.731 428.99 348.08 425.13 cv
348.029 425.01 347.966 424.898 347.91 424.781 cv
351.426 420.38 li
510.231 420.38 li
515.598 414.549 li
558.141 414.549 li
564.973 424.591 li
564.973 485.39 li
599.175 520.778 li
601.66 518.374 li
568.429 483.991 li
568.429 423.523 li
cp
f
300.857 238.017 mo
301.075 239.911 299.719 241.628 297.821 241.852 cv
295.926 242.072 294.211 240.712 293.989 238.814 cv
293.915 238.187 294.027 237.585 294.261 237.045 cv
294.453 236.923 294.633 236.781 294.802 236.616 cv
295.134 236.293 295.385 235.918 295.56 235.516 cv
295.989 235.239 296.478 235.044 297.02 234.981 cv
298.917 234.764 300.634 236.121 300.857 238.017 cv
cp
191.813 233.84 mo
190.457 235.185 188.271 235.179 186.923 233.823 cv
185.58 232.47 185.585 230.281 186.94 228.935 cv
188.294 227.589 190.483 227.598 191.83 228.951 cv
192.295 229.419 192.587 229.989 192.73 230.587 cv
192.718 230.708 192.694 230.823 192.694 230.947 cv
192.694 231.228 192.736 231.497 192.8 231.758 cv
192.717 232.519 192.399 233.26 191.813 233.84 cv
cp
196.152 227.489 mo
195.583 227.489 195.054 227.64 194.581 227.885 cv
193.865 227.355 193.099 226.858 192.411 226.419 cv
189.256 224.41 185.495 223.757 182.844 226.389 cv
180.193 229.023 180.176 233.304 182.81 235.954 cv
185.448 238.605 189.024 237.629 192.38 235.985 cv
193.212 235.577 194.267 234.96 195.187 234.25 cv
195.496 234.34 195.814 234.403 196.152 234.403 cv
252.052 234.403 li
252.438 234.403 252.823 234.339 253.188 234.214 cv
269.081 228.694 li
282.284 228.694 li
289.913 236.544 li
290.234 236.874 290.605 237.121 291.001 237.294 cv
291.253 238.364 291.625 239.477 291.965 240.448 cv
293.205 243.977 295.761 246.815 299.467 246.382 cv
303.179 245.951 305.84 242.594 305.405 238.882 cv
304.97 235.17 301.557 233.727 297.902 232.944 cv
297.216 232.798 296.357 232.668 295.478 232.61 cv
295.322 232.294 295.13 231.991 294.873 231.727 cv
286.228 222.827 li
285.577 222.158 284.683 221.778 283.746 221.778 cv
268.501 221.778 li
268.113 221.778 267.731 221.844 267.367 221.97 cv
251.468 227.489 li
196.152 227.489 li
cp
f
154.265 321.087 mo
155.617 319.737 157.807 319.733 159.156 321.085 cv
160.507 322.433 160.507 324.624 159.16 325.973 cv
157.809 327.325 155.62 327.325 154.268 325.978 cv
153.771 325.481 153.46 324.873 153.328 324.233 cv
153.376 323.856 153.359 323.486 153.29 323.131 cv
153.376 322.385 153.692 321.66 154.265 321.087 cv
cp
149.367 327.198 mo
149.549 327.226 149.732 327.24 149.912 327.24 cv
150.416 327.24 150.898 327.119 151.337 326.915 cv
152.109 327.494 152.947 328.035 153.697 328.51 cv
156.857 330.51 160.623 331.148 163.262 328.507 cv
165.904 325.865 165.904 321.581 163.259 318.94 cv
160.614 316.3 157.042 317.286 153.694 318.944 cv
152.921 319.324 151.96 319.887 151.093 320.536 cv
150.887 320.461 150.672 320.402 150.448 320.366 cv
140.509 318.794 li
138.624 318.506 136.854 319.785 136.553 321.673 cv
136.256 323.557 137.542 325.329 139.429 325.627 cv
149.367 327.198 li
cp
f
292.249 499.979 mo
290.84 501.271 288.653 501.174 287.364 499.763 cv
286.077 498.353 286.174 496.166 287.586 494.878 cv
288.994 493.59 291.182 493.686 292.468 495.095 cv
293.759 496.508 293.657 498.695 292.249 499.979 cv
cp
309.97 493.777 mo
298.081 493.777 li
297.882 493.777 297.692 493.803 297.503 493.836 cv
297.261 493.449 296.988 493.076 296.669 492.728 cv
293.836 489.63 289.028 489.414 285.928 492.248 cv
282.825 495.082 282.613 499.891 285.446 502.991 cv
288.278 506.09 293.086 506.307 296.189 503.47 cv
297.06 502.675 297.694 501.719 298.105 500.693 cv
309.97 500.693 li
311.877 500.693 313.427 499.145 313.427 497.236 cv
313.427 495.325 311.877 493.777 309.97 493.777 cv
cp
f
337.517 486.219 mo
338.159 484.421 340.138 483.486 341.929 484.127 cv
343.731 484.766 344.673 486.744 344.027 488.544 cv
343.39 490.345 341.411 491.281 339.61 490.641 cv
337.815 489.994 336.875 488.021 337.517 486.219 cv
cp
346.432 493.361 mo
346.263 492.961 346.021 492.616 345.737 492.32 cv
346.173 491.006 346.393 489.357 346.563 487.978 cv
347.019 484.265 345.983 480.587 342.463 479.332 cv
338.946 478.078 335.076 479.912 333.82 483.429 cv
332.567 486.947 334.989 489.76 337.918 492.074 cv
338.486 492.523 339.228 493.039 340.019 493.494 cv
339.716 494.293 339.704 495.204 340.063 496.057 cv
343.089 503.204 li
343.65 504.524 344.929 505.315 346.277 505.315 cv
346.726 505.315 347.181 505.227 347.62 505.041 cv
349.379 504.296 350.204 502.27 349.456 500.51 cv
346.432 493.361 li
cp
f
493.227 470.987 mo
487.783 466.633 li
425.254 466.633 li
415.212 477.63 li
415.212 505.023 li
399.953 520.075 li
402.38 522.539 li
418.669 506.469 li
418.669 478.973 li
426.781 470.089 li
486.572 470.089 li
489.769 472.648 li
489.769 508.212 li
500.562 520.708 li
503.179 518.447 li
493.227 506.928 li
493.227 470.987 li
cp
f
486.312 476.591 mo
481.287 472.681 li
427.797 472.681 li
421.333 480.487 li
421.333 508.061 li
411.174 518.362 li
413.635 520.792 li
424.792 509.482 li
424.792 481.733 li
429.424 476.14 li
480.102 476.14 li
482.854 478.282 li
482.854 511.616 li
493.047 522.487 li
495.57 520.124 li
486.312 510.249 li
486.312 476.591 li
cp
f
461.243 485.469 mo
455.802 478.733 li
433.824 478.733 li
427.314 486.994 li
427.314 509.809 li
419.146 518.386 li
421.652 520.771 li
430.771 511.193 li
430.771 488.193 li
435.503 482.191 li
454.153 482.191 li
457.785 486.691 li
457.785 505.624 li
475.615 522.559 li
477.995 520.054 li
461.243 504.141 li
461.243 485.469 li
cp
f
608.703 162.39 mo
610.055 161.039 612.244 161.039 613.594 162.39 cv
614.941 163.739 614.941 165.929 613.594 167.278 cv
612.244 168.629 610.055 168.629 608.703 167.278 cv
607.35 165.929 607.35 163.739 608.703 162.39 cv
cp
600.417 161.122 mo
600.417 168.039 li
605.815 168.039 li
606.603 168.599 607.443 169.083 608.131 169.423 cv
611.48 171.079 615.055 172.064 617.699 169.423 cv
620.34 166.781 620.336 162.497 617.695 159.856 cv
615.055 157.215 611.287 157.855 608.131 159.856 cv
607.467 160.277 606.732 160.75 606.037 161.254 cv
606.037 161.122 li
600.417 161.122 li
cp
f
524.101 353.665 mo
524.101 351.753 525.647 350.204 527.558 350.204 cv
529.468 350.204 531.016 351.753 531.016 353.665 cv
531.016 355.573 529.468 357.12 527.558 357.12 cv
525.647 357.12 524.101 355.573 524.101 353.665 cv
cp
706.547 429.646 mo
632.926 355.304 li
631.301 353.665 629.092 352.741 626.783 352.741 cv
537.313 352.741 li
536.15 352.741 535.042 352.973 534.029 353.39 cv
533.619 349.577 530.392 346.608 526.471 346.608 cv
522.273 346.608 518.871 350.013 518.871 354.216 cv
518.871 358.415 522.273 361.819 526.471 361.819 cv
527.238 361.819 527.977 361.702 528.675 361.49 cv
528.732 366.215 532.574 370.031 537.313 370.031 cv
623.18 370.031 li
694.262 441.807 li
695.953 443.52 698.178 444.373 700.404 444.373 cv
702.603 444.373 704.801 443.537 706.488 441.869 cv
709.881 438.51 709.906 433.037 706.547 429.646 cv
cp
f
526.859 314.11 mo
524.52 314.11 522.619 312.212 522.619 309.87 cv
522.619 307.527 524.52 305.628 526.859 305.628 cv
529.204 305.628 531.101 307.527 531.101 309.87 cv
531.101 312.212 529.204 314.11 526.859 314.11 cv
cp
637.156 300.934 mo
525.211 300.934 li
520.436 300.934 516.566 304.806 516.566 309.577 cv
516.566 314.351 520.436 318.223 525.211 318.223 cv
633.488 318.223 li
694.185 381.077 li
695.885 382.833 698.143 383.716 700.404 383.716 cv
702.566 383.716 704.73 382.91 706.41 381.29 cv
709.842 377.973 709.938 372.502 706.621 369.069 cv
643.377 303.573 li
641.746 301.888 639.504 300.934 637.156 300.934 cv
cp
f
555.099 395.194 mo
552.758 395.194 550.858 393.294 550.858 390.952 cv
550.858 388.608 552.758 386.712 555.099 386.712 cv
557.442 386.712 559.339 388.608 559.339 390.952 cv
559.339 393.294 557.442 395.194 555.099 395.194 cv
cp
594.927 479.837 mo
594.927 402.015 li
594.927 399.885 594.14 397.829 592.719 396.248 cv
582.652 385.01 li
581.011 383.179 578.671 382.132 576.213 382.132 cv
553.181 382.132 li
548.407 382.132 544.537 386.002 544.537 390.777 cv
544.537 395.55 548.407 399.421 553.181 399.421 cv
572.353 399.421 li
577.638 405.32 li
577.638 483.271 li
577.638 485.478 578.483 487.602 579.995 489.204 cv
618.336 529.832 li
620.037 531.635 622.33 532.544 624.625 532.544 cv
626.752 532.544 628.887 531.763 630.555 530.187 cv
634.029 526.91 634.184 521.441 630.91 517.966 cv
594.927 479.837 li
cp
f
123.692 433.566 mo
123.692 438.819 119.436 443.075 114.183 443.075 cv
108.929 443.075 104.674 438.819 104.674 433.566 cv
104.674 428.315 108.929 424.057 114.183 424.057 cv
119.436 424.057 123.692 428.315 123.692 433.566 cv
1 1 1 rgb
f
601.721 163.34 mo
601.721 168.624 597.439 172.908 592.155 172.908 cv
586.873 172.908 582.587 168.624 582.587 163.34 cv
582.587 158.058 586.873 153.776 592.155 153.776 cv
597.439 153.776 601.721 158.058 601.721 163.34 cv
cp
f
404.768 177.372 mo
404.768 182.656 400.487 186.941 395.202 186.941 cv
389.92 186.941 385.635 182.656 385.635 177.372 cv
385.635 172.09 389.92 167.808 395.202 167.808 cv
400.487 167.808 404.768 172.09 404.768 177.372 cv
cp
f
332.287 195.425 mo
332.287 200.704 328.001 204.989 322.72 204.989 cv
317.436 204.989 313.155 200.704 313.155 195.425 cv
313.155 190.14 317.436 185.856 322.72 185.856 cv
328.001 185.856 332.287 190.14 332.287 195.425 cv
cp
f
273.443 159.419 mo
273.443 164.702 269.159 168.985 263.877 168.985 cv
258.594 168.985 254.312 164.702 254.312 159.419 cv
254.312 154.136 258.594 149.853 263.877 149.853 cv
269.159 149.853 273.443 154.136 273.443 159.419 cv
cp
f
196.152 174.183 mo
196.152 179.469 191.87 183.752 186.586 183.752 cv
181.304 183.752 177.019 179.469 177.019 174.183 cv
177.019 168.903 181.304 164.618 186.586 164.618 cv
191.87 164.618 196.152 168.903 196.152 174.183 cv
cp
f
261.126 193.685 mo
261.126 198.969 256.844 203.252 251.56 203.252 cv
246.28 203.252 241.994 198.969 241.994 193.685 cv
241.994 188.403 246.28 184.118 251.56 184.118 cv
256.844 184.118 261.126 188.403 261.126 193.685 cv
cp
f
352.813 236.26 mo
352.813 241.543 348.532 245.826 343.248 245.826 cv
337.966 245.826 333.681 241.543 333.681 236.26 cv
333.681 230.977 337.966 226.691 343.248 226.691 cv
348.532 226.691 352.813 230.977 352.813 236.26 cv
cp
f
485.613 300.523 mo
485.613 305.806 481.331 310.091 476.047 310.091 cv
470.765 310.091 466.48 305.806 466.48 300.523 cv
466.48 295.24 470.765 290.958 476.047 290.958 cv
481.331 290.958 485.613 295.24 485.613 300.523 cv
cp
f
390.417 242.094 mo
390.417 247.377 386.135 251.66 380.849 251.66 cv
375.569 251.66 371.284 247.377 371.284 242.094 cv
371.284 236.81 375.569 232.526 380.849 232.526 cv
386.135 232.526 390.417 236.81 390.417 242.094 cv
cp
f
405.922 211.406 mo
405.922 216.689 401.638 220.973 396.357 220.973 cv
391.071 220.973 386.79 216.689 386.79 211.406 cv
386.79 206.124 391.071 201.839 396.357 201.839 cv
401.638 201.839 405.922 206.124 405.922 211.406 cv
cp
f
408.626 272.348 mo
408.626 277.632 404.345 281.915 399.061 281.915 cv
393.78 281.915 389.495 277.632 389.495 272.348 cv
389.495 267.065 393.78 262.782 399.061 262.782 cv
404.345 262.782 408.626 267.065 408.626 272.348 cv
cp
f
408.626 306.241 mo
408.626 311.524 404.345 315.807 399.061 315.807 cv
393.78 315.807 389.495 311.524 389.495 306.241 cv
389.495 300.958 393.78 296.677 399.061 296.677 cv
404.345 296.677 408.626 300.958 408.626 306.241 cv
cp
f
355.839 315.807 mo
355.839 321.091 351.558 325.374 346.274 325.374 cv
340.992 325.374 336.706 321.091 336.706 315.807 cv
336.706 310.524 340.992 306.241 346.274 306.241 cv
351.558 306.241 355.839 310.524 355.839 315.807 cv
cp
f
329.103 357.069 mo
329.103 362.347 324.818 366.635 319.536 366.635 cv
314.251 366.635 309.97 362.347 309.97 357.069 cv
309.97 351.782 314.251 347.502 319.536 347.502 cv
324.818 347.502 329.103 351.782 329.103 357.069 cv
cp
f
420.675 370.027 mo
420.675 375.309 416.388 379.594 411.11 379.594 cv
405.825 379.594 401.543 375.309 401.543 370.027 cv
401.543 364.745 405.825 360.46 411.11 360.46 cv
416.388 360.46 420.675 364.745 420.675 370.027 cv
cp
f
383.07 393.657 mo
383.07 398.94 378.787 403.223 373.502 403.223 cv
368.222 403.223 363.937 398.94 363.937 393.657 cv
363.937 388.374 368.222 384.091 373.502 384.091 cv
378.787 384.091 383.07 388.374 383.07 393.657 cv
cp
f
270.131 366.635 mo
270.131 371.915 265.85 376.2 260.566 376.2 cv
255.285 376.2 250.998 371.915 250.998 366.635 cv
250.998 361.348 255.285 357.069 260.566 357.069 cv
265.85 357.069 270.131 361.348 270.131 366.635 cv
cp
f
237.787 403.253 mo
237.787 408.537 233.504 412.82 228.219 412.82 cv
222.94 412.82 218.654 408.537 218.654 403.253 cv
218.654 397.97 222.94 393.686 228.219 393.686 cv
233.504 393.686 237.787 397.97 237.787 403.253 cv
cp
f
185.17 366.635 mo
185.17 371.915 180.888 376.2 175.605 376.2 cv
170.324 376.2 166.039 371.915 166.039 366.635 cv
166.039 361.348 170.324 357.069 175.605 357.069 cv
180.888 357.069 185.17 361.348 185.17 366.635 cv
cp
f
142.588 325.374 mo
142.588 330.657 138.304 334.94 133.023 334.94 cv
127.741 334.94 123.457 330.657 123.457 325.374 cv
123.457 320.094 127.741 315.807 133.023 315.807 cv
138.304 315.807 142.588 320.094 142.588 325.374 cv
cp
f
166.666 439.148 mo
166.666 444.815 162.186 449.406 156.662 449.406 cv
151.134 449.406 146.656 444.815 146.656 439.148 cv
146.656 433.482 151.134 428.888 156.662 428.888 cv
162.186 428.888 166.666 433.482 166.666 439.148 cv
cp
f
326.81 499.263 mo
326.81 504.929 322.329 509.521 316.804 509.521 cv
311.276 509.521 306.799 504.929 306.799 499.263 cv
306.799 493.598 311.276 489.003 316.804 489.003 cv
322.329 489.003 326.81 493.598 326.81 499.263 cv
cp
f
356.279 510.479 mo
356.279 516.146 351.801 520.74 346.274 520.74 cv
340.749 520.74 336.267 516.146 336.267 510.479 cv
336.267 504.815 340.749 500.22 346.274 500.22 cv
351.801 500.22 356.279 504.815 356.279 510.479 cv
cp
f
393.075 483.271 mo
393.075 488.936 388.597 493.531 383.07 493.531 cv
377.544 493.531 373.065 488.936 373.065 483.271 cv
373.065 477.604 377.544 473.011 383.07 473.011 cv
388.597 473.011 393.075 477.604 393.075 483.271 cv
cp
f
323.855 278.399 mo
323.855 283.683 319.574 287.966 314.29 287.966 cv
309.007 287.966 304.722 283.683 304.722 278.399 cv
304.722 273.116 309.007 268.833 314.29 268.833 cv
319.574 268.833 323.855 273.116 323.855 278.399 cv
cp
f
267.018 226.691 mo
267.018 231.974 262.737 236.26 257.453 236.26 cv
252.171 236.26 247.886 231.974 247.886 226.691 cv
247.886 221.41 252.171 217.127 257.453 217.127 cv
262.737 217.127 267.018 221.41 267.018 226.691 cv
cp
f
227.686 257.122 mo
227.686 262.407 223.405 266.69 218.121 266.69 cv
212.839 266.69 208.553 262.407 208.553 257.122 cv
208.553 251.844 212.839 247.558 218.121 247.558 cv
223.405 247.558 227.686 251.844 227.686 257.122 cv
cp
f
239.515 289.351 mo
239.515 294.63 235.234 298.915 229.949 298.915 cv
224.667 298.915 220.382 294.63 220.382 289.351 cv
220.382 284.065 224.667 279.785 229.949 279.785 cv
235.234 279.785 239.515 284.065 239.515 289.351 cv
cp
f
281.065 262.552 mo
281.065 267.833 276.784 272.119 271.499 272.119 cv
266.218 272.119 261.933 267.833 261.933 262.552 cv
261.933 257.269 266.218 252.987 271.499 252.987 cv
276.784 252.987 281.065 257.269 281.065 262.552 cv
cp
f
659.641 768.197 mo
658.291 769.549 656.102 769.547 654.75 768.197 cv
653.396 766.848 653.396 764.658 654.75 763.307 cv
656.102 761.958 658.291 761.958 659.641 763.307 cv
660.99 764.658 660.99 766.848 659.641 768.197 cv
cp
105.448 480.891 mo
103.538 480.869 102.007 479.309 102.027 477.398 cv
102.043 475.49 103.608 473.955 105.516 473.975 cv
107.426 473.996 108.956 475.557 108.938 477.469 cv
108.918 479.379 107.358 480.91 105.448 480.891 cv
cp
654.178 760.773 mo
652.799 761.646 651.121 762.741 650.127 763.881 cv
644.34 763.881 li
632.67 753.236 li
489.486 753.236 li
472.486 771.24 li
416.162 771.24 li
410.114 775.934 li
360.858 775.732 li
325.554 739.992 li
325.554 723.951 li
316.705 716.081 li
281.458 716.081 li
274.795 721.6 li
218.426 721.6 li
119.512 623.594 li
119.512 593.619 li
132.678 580.949 li
132.678 538.951 li
111.381 517.273 li
111.381 482.601 li
112.175 481.165 111.616 478.289 111.148 476.103 cv
110.364 472.447 108.19 469.309 104.452 469.271 cv
100.717 469.236 97.6577 472.228 97.6177 475.969 cv
97.5845 479.701 100.792 481.566 104.319 482.799 cv
105.295 483.142 106.651 483.497 107.924 483.625 cv
107.924 518.688 li
129.221 540.365 li
129.221 579.477 li
116.054 592.148 li
116.054 625.037 li
216.499 724.559 li
217.006 725.059 li
276.04 725.059 li
282.704 719.539 li
315.391 719.539 li
322.096 725.504 li
322.096 741.412 li
359.406 779.185 li
411.292 779.396 li
417.346 774.699 li
473.974 774.699 li
490.977 756.693 li
631.328 756.693 li
643 767.338 li
650.031 767.338 li
651.051 768.555 652.883 769.701 654.178 770.342 cv
657.527 771.997 661.103 772.982 663.746 770.342 cv
666.387 767.697 666.387 763.417 663.742 760.773 cv
661.103 758.133 657.332 758.773 654.178 760.773 cv
cp
0 .862745 1 rgb
f
397.911 761.213 mo
396.631 762.631 394.446 762.738 393.028 761.456 cv
391.61 760.18 391.499 757.992 392.782 756.576 cv
394.065 755.16 396.249 755.049 397.664 756.328 cv
399.082 757.609 399.194 759.797 397.911 761.213 cv
cp
152.722 619.137 mo
151.35 617.815 151.311 615.622 152.637 614.249 cv
153.963 612.872 156.153 612.836 157.528 614.164 cv
158.901 615.49 158.938 617.68 157.612 619.053 cv
156.284 620.428 154.096 620.463 152.722 619.137 cv
cp
392.102 754.465 mo
390.966 755.099 389.417 756.165 388.421 757.297 cv
381.499 757.297 li
328.458 702.242 li
274.573 701.795 li
269.239 708.717 li
222.123 708.717 li
156.557 640.881 li
156.557 624.005 li
157.86 623.028 159.101 620.992 159.766 619.588 cv
161.364 616.208 162.286 612.617 159.596 610.021 cv
156.911 607.428 152.627 607.502 150.03 610.19 cv
147.438 612.877 148.146 616.633 150.2 619.756 cv
151.025 621.01 152.041 622.514 153.1 623.505 cv
153.1 642.277 li
220.657 712.176 li
270.941 712.176 li
276.264 705.268 li
326.976 705.685 li
380.031 760.754 li
388.059 760.754 li
389.04 761.981 391.004 763.128 392.586 764.018 cv
395.839 765.856 399.632 766.307 402.139 763.535 cv
404.643 760.764 404.43 756.486 401.659 753.981 cv
398.882 751.477 395.364 752.643 392.102 754.465 cv
cp
f
184.873 641.637 mo
186.782 641.643 188.323 643.195 188.315 645.107 cv
188.31 647.018 186.755 648.559 184.846 648.551 cv
182.938 648.541 181.395 646.988 181.404 645.08 cv
181.411 643.172 182.963 641.627 184.873 641.637 cv
cp
176.987 643.676 mo
176.977 647.41 180.194 649.256 183.728 650.465 cv
184.841 650.848 186.438 651.234 187.85 651.296 cv
188.126 651.973 188.607 652.571 189.286 652.971 cv
198.029 658.104 li
198.579 658.428 199.182 658.58 199.776 658.58 cv
200.963 658.58 202.118 657.969 202.761 656.872 cv
203.729 655.227 203.177 653.107 201.53 652.141 cv
192.786 647.008 li
192.239 646.684 191.64 646.545 191.049 646.542 cv
190.916 645.585 190.71 644.602 190.518 643.731 cv
189.711 640.076 187.517 636.951 183.782 636.94 cv
180.044 636.926 177.004 639.938 176.987 643.676 cv
cp
f
95.5356 558.35 mo
93.6274 558.338 92.0845 556.787 92.0933 554.879 cv
92.1001 552.969 93.6528 551.424 95.563 551.434 cv
97.4731 551.441 99.0122 552.994 99.0063 554.906 cv
99.0005 556.816 97.4458 558.357 95.5356 558.35 cv
cp
659.021 782.924 mo
660.303 781.508 662.482 781.391 663.904 782.672 cv
665.324 783.947 665.438 786.133 664.162 787.551 cv
662.883 788.971 660.697 789.086 659.279 787.807 cv
657.857 786.531 657.742 784.346 659.021 782.924 cv
cp
101.207 553.527 mo
100.401 549.875 98.2065 546.749 94.4712 546.738 cv
90.7339 546.723 87.6938 549.736 87.6763 553.473 cv
87.6665 557.208 90.8833 559.053 94.4175 560.264 cv
95.6313 560.682 97.4263 561.112 98.9214 561.109 cv
110.311 572.104 li
110.311 627.856 li
213.807 730.859 li
214.311 731.361 li
278.969 731.361 li
285.073 726.004 li
311.172 726.004 li
316.91 730.081 li
316.91 744.824 li
356.374 784.785 li
413.032 785.67 li
419.096 780.76 li
475.866 780.76 li
491.857 763.273 li
628.732 763.273 li
653.828 786.325 li
654.441 787.842 656.922 789.289 658.836 790.367 cv
662.098 792.199 665.891 792.643 668.393 789.867 cv
670.891 787.092 670.67 782.813 667.893 780.315 cv
665.113 777.816 661.596 778.984 658.336 780.815 cv
657.428 781.323 656.252 782.113 655.31 782.99 cv
630.08 759.816 li
490.333 759.816 li
474.343 777.303 li
417.87 777.303 li
411.83 782.195 li
357.84 781.352 li
320.368 743.406 li
320.368 728.297 li
312.278 722.545 li
283.77 722.545 li
277.665 727.904 li
215.739 727.904 li
113.769 626.417 li
113.769 570.635 li
101.793 559.075 li
102.051 557.525 101.598 555.299 101.207 553.527 cv
cp
f
648.912 750.581 mo
647.633 752.002 645.447 752.115 644.029 750.838 cv
642.607 749.56 642.494 747.372 643.771 745.955 cv
645.053 744.537 647.234 744.417 648.656 745.699 cv
650.074 746.977 650.189 749.162 648.912 750.581 cv
cp
154.006 581.451 mo
155.913 581.424 157.481 582.953 157.506 584.863 cv
157.534 586.773 156.004 588.342 154.092 588.365 cv
152.186 588.391 150.618 586.863 150.591 584.953 cv
150.567 583.045 152.094 581.477 154.006 581.451 cv
cp
652.643 743.342 mo
649.863 740.844 646.346 742.016 643.088 743.846 cv
641.93 744.493 640.34 745.596 639.352 746.756 cv
484.286 747.188 li
468.298 764.426 li
413.756 764.426 li
407.131 769.076 li
363.876 769.076 li
332.469 737.537 li
332.469 720.451 li
319.26 709.581 li
281.192 709.581 li
274.275 714.856 li
220.581 714.856 li
138.887 633.229 li
138.887 601.833 li
150.129 591.122 li
151.719 591.263 153.85 590.759 155.231 590.273 cv
158.756 589.027 161.957 587.152 161.907 583.417 cv
161.858 579.682 158.79 576.693 155.053 576.742 cv
151.317 576.791 149.15 579.94 148.377 583.596 cv
148.047 585.166 147.672 587.091 147.778 588.586 cv
135.43 600.356 li
135.43 634.66 li
219.148 718.315 li
275.443 718.315 li
282.36 713.039 li
318.021 713.039 li
329.012 722.083 li
329.012 738.967 li
362.441 772.535 li
408.223 772.535 li
414.847 767.885 li
469.807 767.885 li
485.799 750.639 li
639.119 750.214 li
640.121 751.411 642.039 752.525 643.588 753.396 cv
646.85 755.231 650.641 755.676 653.144 752.896 cv
655.643 750.119 655.418 745.846 652.643 743.342 cv
cp
f
127.65 599.799 mo
127.65 594.549 131.909 590.291 137.159 590.291 cv
142.413 590.291 146.667 594.549 146.667 599.799 cv
146.667 605.051 142.413 609.307 137.159 609.307 cv
131.909 609.307 127.65 605.051 127.65 599.799 cv
1 1 1 rgb
f
357.971 724.652 mo
357.971 729.935 353.689 734.219 348.404 734.219 cv
343.124 734.219 338.838 729.935 338.838 724.652 cv
338.838 719.369 343.124 715.086 348.404 715.086 cv
353.689 715.086 357.971 719.369 357.971 724.652 cv
cp
f
217.717 653.178 mo
217.717 658.458 213.434 662.742 208.15 662.742 cv
202.868 662.742 198.584 658.458 198.584 653.178 cv
198.584 647.893 202.868 643.611 208.15 643.611 cv
213.434 643.611 217.717 647.893 217.717 653.178 cv
cp
f
133.643 531.879 mo
133.643 537.135 129.385 541.387 124.134 541.387 cv
118.88 541.387 114.625 537.135 114.625 531.879 cv
114.625 526.629 118.88 522.371 124.134 522.371 cv
129.385 522.371 133.643 526.629 133.643 531.879 cv
f
123.054 571.363 mo
123.054 576.617 118.798 580.872 113.545 580.872 cv
108.295 580.872 104.037 576.617 104.037 571.363 cv
104.037 566.111 108.295 561.856 113.545 561.856 cv
118.798 561.856 123.054 566.111 123.054 571.363 cv
f
1102.01 939.515 mo
1100.65 940.852 1098.46 940.831 1097.13 939.467 cv
1095.79 938.104 1095.81 935.912 1097.17 934.577 cv
1098.54 933.241 1100.73 933.265 1102.06 934.629 cv
1103.4 935.989 1103.38 938.182 1102.01 939.515 cv
cp
1106.78 935.544 mo
1105.77 934.313 1103.95 933.146 1102.66 932.491 cv
1099.33 930.8 1095.76 929.776 1093.09 932.391 cv
1090.42 935.004 1090.38 939.288 1092.99 941.956 cv
1095.61 944.624 1099.38 944.023 1102.56 942.058 cv
1103.94 941.2 1105.63 940.126 1106.63 939.001 cv
1116.2 939.001 li
1124.13 930.063 li
1121.54 927.771 li
1114.65 935.544 li
1106.78 935.544 li
cp
0 .862745 1 rgb
f
964.182 693.407 mo
964.182 691.496 965.728 689.95 967.639 689.95 cv
969.551 689.95 971.096 691.496 971.096 693.407 cv
971.096 695.317 969.551 696.866 967.639 696.866 cv
965.728 696.866 964.182 695.317 964.182 693.407 cv
cp
1088.05 925.89 mo
1099.86 914.073 li
1099.86 814.385 li
1071.34 785.858 li
1071.34 738.336 li
1040.38 706.039 li
981.852 706.039 li
973.84 697.015 li
973.893 695.481 973.447 693.571 973.016 692.297 cv
971.818 688.757 969.988 685.53 966.254 685.53 cv
962.516 685.53 959.488 688.559 959.488 692.297 cv
959.488 696.031 962.607 698.243 966.254 699.06 cv
967.949 699.442 970.053 699.874 971.592 699.69 cv
980.299 709.496 li
1038.9 709.496 li
1067.88 739.726 li
1067.88 787.289 li
1096.41 815.815 li
1096.41 912.644 li
1084.59 924.458 li
1084.59 944.091 li
1091.99 950.817 li
1122.83 950.817 li
1122.83 947.358 li
1093.33 947.358 li
1088.05 942.56 li
1088.05 925.89 li
cp
f
1001.7 725.065 mo
1000.34 726.399 998.15 726.378 996.813 725.014 cv
995.477 723.649 995.5 721.463 996.865 720.125 cv
998.228 718.787 1000.42 718.812 1001.76 720.174 cv
1003.09 721.54 1003.07 723.727 1001.7 725.065 cv
cp
1080.85 923.86 mo
1093.23 911.182 li
1093.23 817.241 li
1065.29 790.731 li
1065.29 743.788 li
1042.66 721.165 li
1006.79 721.165 li
1006.79 721.54 li
1005.91 720.151 1003.79 718.771 1002.35 718.037 cv
999.018 716.346 995.453 715.323 992.781 717.938 cv
990.113 720.551 990.066 724.835 992.682 727.507 cv
995.295 730.173 999.072 729.569 1002.25 727.604 cv
1003.88 726.594 1005.93 725.282 1006.79 723.938 cv
1006.79 724.622 li
1041.23 724.622 li
1061.83 745.22 li
1061.83 792.216 li
1089.78 818.727 li
1089.78 909.773 li
1077.39 922.453 li
1077.39 947.787 li
1087.04 957.445 li
1122.83 957.445 li
1122.83 953.987 li
1088.48 953.987 li
1080.85 946.356 li
1080.85 923.86 li
cp
f
1001.7 756.184 mo
1000.34 757.519 998.15 757.498 996.813 756.134 cv
995.477 754.769 995.5 752.581 996.865 751.244 cv
998.228 749.907 1000.42 749.931 1001.76 751.294 cv
1003.09 752.657 1003.07 754.847 1001.7 756.184 cv
cp
1075.66 920.714 mo
1088.05 908.611 li
1087.76 819.274 li
1019.03 751.711 li
1006.79 751.711 li
1006.79 752.661 li
1005.91 751.271 1003.79 749.892 1002.35 749.157 cv
999.018 747.466 995.453 746.442 992.781 749.058 cv
990.113 751.67 990.066 755.954 992.682 758.625 cv
995.295 761.293 999.072 760.688 1002.25 758.724 cv
1003.88 757.713 1005.93 756.401 1006.79 755.06 cv
1006.79 755.168 li
1017.61 755.168 li
1084.31 820.729 li
1084.59 907.159 li
1072.2 919.258 li
1072.2 949.78 li
1085 963.21 li
1122.83 963.21 li
1122.83 959.752 li
1086.48 959.752 li
1075.66 948.396 li
1075.66 920.714 li
cp
f
1029.87 787.697 mo
1028.51 789.035 1026.32 789.011 1024.98 787.648 cv
1023.64 786.287 1023.67 784.095 1025.03 782.762 cv
1026.4 781.424 1028.59 781.445 1029.92 782.81 cv
1031.26 784.172 1031.24 786.365 1029.87 787.697 cv
cp
1069.32 915.53 mo
1080.85 904.293 li
1080.85 822.881 li
1040.64 783.116 li
1034.07 783.116 li
1033.03 782.12 1031.59 781.218 1030.52 780.672 cv
1027.18 778.981 1023.62 777.959 1020.95 780.572 cv
1018.28 783.188 1018.23 787.472 1020.85 790.14 cv
1023.46 792.808 1027.24 792.206 1030.42 790.237 cv
1032.05 789.227 1034.1 787.915 1034.96 786.573 cv
1039.22 786.573 li
1077.39 824.322 li
1077.39 902.835 li
1065.86 914.072 li
1065.86 953.808 li
1080.39 969.261 li
1122.83 969.261 li
1122.83 965.802 li
1081.88 965.802 li
1069.32 952.438 li
1069.32 915.53 li
cp
f
1031.6 846.156 mo
1030.24 847.493 1028.05 847.473 1026.71 846.108 cv
1025.37 844.745 1025.4 842.553 1026.76 841.219 cv
1028.13 839.882 1030.31 839.904 1031.65 841.269 cv
1032.99 842.631 1032.96 844.822 1031.6 846.156 cv
cp
1063.84 914.073 mo
1075.95 901.966 li
1075.65 867.676 li
1049.69 842.188 li
1036.47 842.188 li
1036.47 842.325 li
1035.49 841.044 1033.58 839.81 1032.25 839.132 cv
1028.91 837.44 1025.35 836.417 1022.68 839.031 cv
1020.01 841.644 1019.96 845.93 1022.58 848.597 cv
1025.2 851.265 1028.97 850.663 1032.15 848.698 cv
1033.65 847.764 1035.52 846.572 1036.47 845.339 cv
1036.47 845.646 li
1048.28 845.646 li
1072.21 869.138 li
1072.48 900.548 li
1060.39 912.644 li
1060.39 956.423 li
1078.68 975.021 li
1122.83 975.021 li
1122.83 971.563 li
1080.13 971.563 li
1063.84 955.008 li
1063.84 914.073 li
cp
f
1045.55 928.115 mo
1044.2 926.764 1044.2 924.576 1045.55 923.226 cv
1046.9 921.875 1049.09 921.875 1050.44 923.226 cv
1051.79 924.576 1051.79 926.764 1050.44 928.115 cv
1049.09 929.466 1046.9 929.466 1045.55 928.115 cv
cp
1050.71 931.64 mo
1051.48 930.688 1052.14 929.565 1052.58 928.685 cv
1054.24 925.339 1055.22 921.763 1052.58 919.12 cv
1049.94 916.479 1045.66 916.479 1043.01 919.12 cv
1040.37 921.763 1041.01 925.528 1043.01 928.685 cv
1044.18 930.521 1045.73 932.89 1047.26 933.46 cv
1047.26 952.667 li
1075.21 981.65 li
1122.83 981.65 li
1122.83 978.191 li
1076.68 978.191 li
1050.71 951.273 li
1050.71 931.64 li
cp
f
1041.8 893.892 mo
1041.83 891.981 1043.41 890.461 1045.32 890.495 cv
1047.23 890.528 1048.75 892.102 1048.71 894.014 cv
1048.68 895.922 1047.11 897.444 1045.2 897.407 cv
1043.29 897.376 1041.77 895.801 1041.8 893.892 cv
cp
1038.2 905.065 mo
1042.47 900.083 li
1043.79 900.008 1045.24 899.679 1046.28 899.349 cv
1049.83 898.215 1053.09 896.438 1053.15 892.703 cv
1053.22 888.966 1050.25 885.886 1046.51 885.819 cv
1042.78 885.758 1040.51 888.833 1039.63 892.468 cv
1039.13 894.519 1038.53 897.181 1039.1 898.702 cv
1034.74 903.786 li
1034.74 950.968 li
1072.94 988.278 li
1122.83 988.278 li
1122.83 984.82 li
1074.35 984.82 li
1038.2 949.514 li
1038.2 905.065 li
cp
f
995.055 789.631 mo
993.707 788.279 993.707 786.091 995.055 784.739 cv
996.406 783.391 998.596 783.391 999.945 784.739 cv
1001.3 786.091 1001.3 788.279 999.945 789.631 cv
998.596 790.979 996.406 790.979 995.055 789.631 cv
cp
1061.95 1008.73 mo
1031.57 979.191 li
1031.57 869.715 li
998.539 836.289 li
998.539 794.739 li
999.949 793.882 1001.35 791.688 1002.09 790.203 cv
1003.75 786.854 1004.73 783.278 1002.09 780.636 cv
999.447 777.993 995.166 777.993 992.523 780.636 cv
989.881 783.278 990.521 787.047 992.523 790.203 cv
993.344 791.497 994.357 793.058 995.422 794.066 cv
995.08 794.066 li
995.08 837.711 li
1028.12 871.137 li
1028.12 980.653 li
1060.55 1012.19 li
1080.37 1012.19 li
1093.09 999.516 li
1122.83 999.516 li
1122.83 996.059 li
1091.66 996.059 li
1078.94 1008.73 li
1061.95 1008.73 li
cp
f
874.961 725.382 mo
873.051 725.382 871.502 723.834 871.502 721.924 cv
871.502 720.014 873.051 718.467 874.961 718.467 cv
876.869 718.467 878.418 720.014 878.418 721.924 cv
878.418 723.834 876.869 725.382 874.961 725.382 cv
cp
1026.1 873.747 mo
986.334 833.692 li
986.334 719.454 li
973.23 706.036 li
888.441 706.036 li
879.803 715.931 li
878.225 715.407 875.504 715.985 873.848 716.547 cv
870.309 717.745 867.084 719.573 867.084 723.31 cv
867.084 727.047 870.113 730.073 873.848 730.073 cv
877.586 730.073 879.795 726.956 880.615 723.31 cv
880.877 722.137 881.17 720.763 881.264 719.517 cv
890.016 709.494 li
971.775 709.494 li
982.877 720.862 li
982.877 835.116 li
1022.64 875.171 li
1022.64 984.379 li
1062.84 1024.87 li
1122.83 1024.87 li
1122.83 1021.41 li
1064.28 1021.41 li
1026.1 982.952 li
1026.1 873.747 li
cp
f
879.291 778.146 mo
881.158 778.545 882.35 780.38 881.951 782.25 cv
881.555 784.115 879.719 785.308 877.852 784.909 cv
875.98 784.513 874.791 782.676 875.188 780.81 cv
875.586 778.943 877.424 777.75 879.291 778.146 cv
cp
1018.89 875.463 mo
979.129 836.276 li
979.129 725.662 li
966.906 712.809 li
903.037 712.809 li
877.578 737.59 li
867.816 737.59 li
857.822 746.618 li
857.822 758.226 li
870.551 770.067 li
873.555 775.675 li
872.752 777.071 872.728 779.672 872.754 781.71 cv
872.795 785.446 874.307 788.954 877.961 789.734 cv
881.613 790.511 885.207 788.179 885.986 784.524 cv
886.764 780.871 883.986 778.409 880.777 776.502 cv
879.801 775.921 878.383 775.243 877.055 774.882 cv
873.328 767.927 li
861.279 756.72 li
861.279 748.153 li
869.146 741.048 li
878.982 741.048 li
904.441 716.268 li
965.422 716.268 li
975.672 727.044 li
975.672 837.725 li
1015.44 876.91 li
1015.44 987.271 li
1059.11 1030.34 li
1122.83 1030.34 li
1122.83 1026.89 li
1060.53 1026.89 li
1018.89 985.826 li
1018.89 875.463 li
cp
f
874.961 755.348 mo
873.051 755.348 871.502 753.8 871.502 751.891 cv
871.502 749.981 873.051 748.434 874.961 748.434 cv
876.869 748.434 878.418 749.981 878.418 751.891 cv
878.418 753.8 876.869 755.348 874.961 755.348 cv
cp
1014.57 966.803 mo
988.928 941.733 li
988.928 853.581 li
974.232 838.599 li
974.232 743.779 li
954.482 724.335 li
901.199 724.335 li
879.455 745.798 li
877.848 745.454 875.387 745.991 873.848 746.515 cv
870.309 747.71 867.084 749.542 867.084 753.276 cv
867.084 757.014 870.113 760.042 873.848 760.042 cv
877.586 760.042 879.795 756.924 880.615 753.276 cv
880.924 751.898 881.264 750.251 881.287 748.852 cv
902.617 727.792 li
953.064 727.792 li
970.773 745.229 li
970.773 840.011 li
985.469 854.993 li
985.469 943.188 li
1011.11 968.258 li
1011.11 990.429 li
1056.5 1036.11 li
1122.83 1036.11 li
1122.83 1032.65 li
1057.94 1032.65 li
1014.57 989.004 li
1014.57 966.803 li
cp
f
841.896 755.664 mo
841.896 753.755 843.443 752.206 845.355 752.206 cv
847.266 752.206 848.813 753.755 848.813 755.664 cv
848.813 757.576 847.266 759.122 845.355 759.122 cv
843.443 759.122 841.896 757.576 841.896 755.664 cv
cp
1005.64 971.104 mo
981.435 948.342 li
981.435 858.214 li
967.318 843.229 li
967.318 750.139 li
948.449 730.964 li
904.678 730.964 li
887.5 747.218 li
887.5 788.707 li
878.748 796.946 li
865.768 796.946 li
861.279 792.224 li
861.279 768.266 li
851.553 758.864 li
851.525 757.409 851.127 755.718 850.73 754.554 cv
849.535 751.015 847.705 747.788 843.967 747.788 cv
840.232 747.788 837.203 750.816 837.203 754.554 cv
837.203 758.288 840.322 760.499 843.967 761.319 cv
845.814 761.733 848.156 762.222 849.711 761.892 cv
857.822 769.731 li
857.822 793.604 li
864.283 800.405 li
880.117 800.405 li
890.957 790.2 li
890.957 748.706 li
906.055 734.421 li
947 734.421 li
963.859 751.554 li
963.859 844.599 li
977.978 859.585 li
977.978 949.837 li
1002.18 972.601 li
1002.18 992.438 li
1053.32 1044.75 li
1122.83 1044.75 li
1122.83 1041.3 li
1054.78 1041.3 li
1005.64 991.03 li
1005.64 971.104 li
cp
f
991.461 1003.63 mo
990.098 1004.97 987.908 1004.94 986.572 1003.58 cv
985.234 1002.21 985.258 1000.03 986.623 998.688 cv
987.986 997.356 990.176 997.374 991.512 998.739 cv
992.85 1000.1 992.826 1002.29 991.461 1003.63 cv
cp
996.336 999.803 mo
995.363 998.519 993.447 997.282 992.107 996.602 cv
988.773 994.913 985.209 993.886 982.539 996.504 cv
979.871 999.116 979.826 1003.4 982.439 1006.07 cv
985.055 1008.74 988.83 1008.13 992.008 1006.17 cv
993.332 1005.35 994.934 1004.33 995.951 1003.26 cv
997.426 1003.26 li
1048.26 1054.55 li
1122.83 1054.55 li
1122.83 1051.09 li
1049.7 1051.09 li
998.867 999.803 li
996.336 999.803 li
cp
f
907.574 753.925 mo
905.664 753.925 904.115 752.379 904.115 750.468 cv
904.115 748.556 905.664 747.01 907.574 747.01 cv
909.484 747.01 911.031 748.556 911.031 750.468 cv
911.031 752.379 909.484 753.925 907.574 753.925 cv
cp
1000.6 1011.9 mo
983.473 1011.9 li
976.861 1006.74 li
976.861 875.598 li
962.418 856.869 li
962.418 756.142 li
944.943 739.896 li
916.463 739.896 li
912.002 744.356 li
910.393 744.044 907.977 744.578 906.463 745.092 cv
902.924 746.287 899.697 748.118 899.697 751.856 cv
899.697 755.591 902.727 758.618 906.463 758.618 cv
910.199 758.618 912.41 755.5 913.228 751.856 cv
913.545 750.448 913.894 748.76 913.902 747.345 cv
917.894 743.352 li
943.586 743.352 li
958.961 757.649 li
958.961 858.049 li
973.404 876.776 li
973.404 1008.42 li
982.279 1015.36 li
999.156 1015.36 li
1062.33 1078.82 li
1062.84 1079.33 li
1099.44 1079.33 li
1114.42 1094.31 li
1122.83 1094.31 li
1122.83 1090.86 li
1115.85 1090.86 li
1100.87 1075.87 li
1064.28 1075.87 li
1001.1 1012.41 li
1000.6 1011.9 li
cp
f
933.467 756.435 mo
933.467 754.523 935.014 752.977 936.924 752.977 cv
938.836 752.977 940.383 754.523 940.383 756.435 cv
940.383 758.345 938.836 759.892 936.924 759.892 cv
935.014 759.892 933.467 758.345 933.467 756.435 cv
cp
1060.54 1081.63 mo
997.533 1017.66 li
978.859 1017.66 li
970.775 1011.35 li
970.775 889.907 li
947.144 864.769 li
947.144 828.036 li
951.18 822.273 li
951.18 768.316 li
943.125 759.687 li
943.107 758.221 942.701 756.501 942.301 755.321 cv
941.105 751.782 939.273 748.556 935.539 748.556 cv
931.801 748.556 928.773 751.585 928.773 755.321 cv
928.773 759.058 931.893 761.269 935.539 762.087 cv
937.35 762.493 939.637 762.974 941.191 762.683 cv
947.723 769.681 li
947.723 821.182 li
943.688 826.945 li
943.688 866.14 li
967.318 891.278 li
967.318 1013.04 li
977.672 1021.12 li
996.086 1021.12 li
1059.1 1085.09 li
1096.26 1085.09 li
1112.1 1101.23 li
1122.83 1101.23 li
1122.83 1097.77 li
1113.56 1097.77 li
1097.71 1081.63 li
1060.54 1081.63 li
cp
f
984.807 984.588 mo
984.807 982.675 986.352 981.13 988.264 981.13 cv
990.174 981.13 991.721 982.675 991.721 984.588 cv
991.721 986.499 990.174 988.045 988.264 988.045 cv
986.352 988.045 984.807 986.499 984.807 984.588 cv
cp
993.639 983.477 mo
992.443 979.938 990.613 976.709 986.877 976.709 cv
983.141 976.709 980.111 979.738 980.111 983.477 cv
980.111 987.211 983.23 989.423 986.877 990.24 cv
988.672 990.643 990.938 991.116 992.49 990.841 cv
1050.45 1049.36 li
1122.83 1049.36 li
1122.83 1045.91 li
1051.89 1045.91 li
994.467 987.923 li
994.463 986.44 994.047 984.677 993.639 983.477 cv
cp
f
1063.8 994.265 mo
1062.43 995.602 1060.24 995.579 1058.91 994.215 cv
1057.57 992.851 1057.59 990.662 1058.96 989.326 cv
1060.32 987.987 1062.51 988.011 1063.85 989.375 cv
1065.19 990.739 1065.16 992.928 1063.8 994.265 cv
cp
1064.44 987.238 mo
1061.11 985.547 1057.54 984.523 1054.88 987.137 cv
1052.21 989.75 1052.16 994.035 1054.78 996.706 cv
1057.39 999.373 1061.16 998.769 1064.34 996.805 cv
1065.84 995.874 1067.69 994.692 1068.65 993.465 cv
1122.83 993.465 li
1122.83 990.007 li
1068.31 990.007 li
1067.28 988.884 1065.63 987.841 1064.44 987.238 cv
cp
f
1102.06 1007.82 mo
1103.4 1009.18 1103.38 1011.37 1102.01 1012.71 cv
1100.65 1014.04 1098.46 1014.02 1097.13 1012.65 cv
1095.79 1011.29 1095.81 1009.1 1097.17 1007.76 cv
1098.54 1006.43 1100.73 1006.45 1102.06 1007.82 cv
cp
1092.99 1015.15 mo
1095.61 1017.81 1099.38 1017.21 1102.56 1015.24 cv
1103.94 1014.39 1105.63 1013.32 1106.63 1012.19 cv
1122.83 1012.19 li
1122.83 1008.73 li
1106.78 1008.73 li
1105.78 1007.5 1103.95 1006.33 1102.66 1005.68 cv
1099.33 1003.99 1095.76 1002.96 1093.09 1005.58 cv
1090.42 1008.19 1090.38 1012.48 1092.99 1015.15 cv
cp
f
1006.39 921.352 mo
1007.77 922.679 1007.8 924.866 1006.48 926.241 cv
1005.15 927.615 1002.96 927.653 1001.59 926.326 cv
1000.21 924.999 1000.18 922.81 1001.5 921.435 cv
1002.83 920.065 1005.02 920.024 1006.39 921.352 cv
cp
999.35 920.902 mo
997.752 924.278 996.83 927.872 999.518 930.469 cv
1002.21 933.063 1006.49 932.988 1009.08 930.303 cv
1011.68 927.615 1010.97 923.856 1008.92 920.736 cv
1007.87 919.142 1006.51 917.142 1005.15 916.312 cv
1005.15 908.317 li
1001.69 908.317 li
1001.69 917.248 li
1001.73 917.248 li
1000.75 918.312 999.871 919.8 999.35 920.902 cv
cp
f
1005.35 941.38 mo
1007.26 941.38 1008.81 942.925 1008.81 944.837 cv
1008.81 946.744 1007.26 948.294 1005.35 948.294 cv
1003.44 948.294 1001.89 946.744 1001.89 944.837 cv
1001.89 942.925 1003.44 941.38 1005.35 941.38 cv
cp
1004.8 951.354 mo
1009 951.354 1012.4 947.95 1012.4 943.75 cv
1012.4 939.553 1009 936.146 1004.8 936.146 cv
1000.6 936.146 997.195 939.553 997.195 943.75 cv
997.195 947.95 1000.6 951.354 1004.8 951.354 cv
cp
f
1113.56 1067.56 mo
1113.56 1069.46 1112.01 1071.01 1110.1 1071.01 cv
1108.19 1071.01 1106.64 1069.46 1106.64 1067.56 cv
1106.64 1065.65 1108.19 1064.1 1110.1 1064.1 cv
1112.01 1064.1 1113.56 1065.65 1113.56 1067.56 cv
cp
1101.95 1066.47 mo
1101.95 1070.67 1105.35 1074.07 1109.55 1074.07 cv
1113.75 1074.07 1117.15 1070.67 1117.15 1066.47 cv
1117.15 1062.27 1113.75 1058.87 1109.55 1058.87 cv
1105.35 1058.87 1101.95 1062.27 1101.95 1066.47 cv
cp
f
1075.63 1067.56 mo
1075.63 1069.46 1074.09 1071.01 1072.18 1071.01 cv
1070.27 1071.01 1068.72 1069.46 1068.72 1067.56 cv
1068.72 1065.65 1070.27 1064.1 1072.18 1064.1 cv
1074.09 1064.1 1075.63 1065.65 1075.63 1067.56 cv
cp
1064.02 1066.47 mo
1064.02 1070.67 1067.43 1074.07 1071.63 1074.07 cv
1075.82 1074.07 1079.23 1070.67 1079.23 1066.47 cv
1079.23 1062.27 1075.82 1058.87 1071.63 1058.87 cv
1067.43 1058.87 1064.02 1062.27 1064.02 1066.47 cv
cp
f
1114 918.245 mo
1114 920.155 1112.37 921.703 1110.36 921.703 cv
1108.35 921.703 1106.71 920.155 1106.71 918.245 cv
1106.71 916.337 1108.35 914.788 1110.36 914.788 cv
1112.37 914.788 1114 916.337 1114 918.245 cv
cp
1109.19 912.87 mo
1105.46 914.065 1102.06 915.898 1102.06 919.633 cv
1102.06 923.366 1105.25 926.396 1109.19 926.396 cv
1113.13 926.396 1115.46 923.279 1116.32 919.633 cv
1116.71 917.972 1117.16 915.917 1116.99 914.388 cv
1124.1 906.758 li
1121.57 904.4 li
1114.44 912.057 li
1112.78 911.937 1110.61 912.412 1109.19 912.87 cv
cp
f
1013.5 901.212 mo
1013.5 906.467 1009.24 910.722 1003.99 910.722 cv
998.738 910.722 994.482 906.467 994.482 901.212 cv
994.482 895.962 998.738 891.705 1003.99 891.705 cv
1009.24 891.705 1013.5 895.962 1013.5 901.212 cv
1 1 1 rgb
f
965.123 874.962 mo
959.871 874.962 955.613 870.708 955.613 865.454 cv
955.613 860.203 959.871 855.944 965.123 855.944 cv
970.377 855.944 974.631 860.203 974.631 865.454 cv
974.631 870.708 970.377 874.962 965.123 874.962 cv
f
943.664 850.938 mo
938.41 850.938 934.156 846.679 934.156 841.429 cv
934.156 836.174 938.41 831.92 943.664 831.92 cv
948.914 831.92 953.172 836.174 953.172 841.429 cv
953.172 846.679 948.914 850.938 943.664 850.938 cv
f
917.019 812.22 mo
911.768 812.22 907.512 807.962 907.512 802.711 cv
907.512 797.457 911.768 793.202 917.019 793.202 cv
922.273 793.202 926.529 797.457 926.529 802.711 cv
926.529 807.962 922.273 812.22 917.019 812.22 cv
f
1128.87 911.832 mo
1123.59 911.832 1119.3 907.547 1119.3 902.266 cv
1119.3 896.982 1123.59 892.7 1128.87 892.7 cv
1134.15 892.7 1138.44 896.982 1138.44 902.266 cv
1138.44 907.547 1134.15 911.832 1128.87 911.832 cv
cp
f
403.987 854.966 mo
405.325 856.33 405.303 858.519 403.939 859.856 cv
402.576 861.192 400.384 861.168 399.049 859.807 cv
397.713 858.441 397.737 856.252 399.101 854.915 cv
400.461 853.578 402.654 853.602 403.987 854.966 cv
cp
400.016 850.202 mo
398.786 851.207 397.618 853.031 396.963 854.32 cv
395.272 857.654 394.249 861.219 396.863 863.887 cv
399.476 866.558 403.76 866.602 406.428 863.988 cv
409.096 861.371 408.495 857.598 406.53 854.42 cv
405.672 853.037 404.598 851.354 403.473 850.348 cv
403.473 840.78 li
394.536 832.856 li
392.243 835.441 li
400.016 842.333 li
400.016 850.202 li
cp
0 .862745 1 rgb
f
157.879 992.799 mo
155.968 992.799 154.422 991.251 154.422 989.342 cv
154.422 987.43 155.968 985.884 157.879 985.884 cv
159.79 985.884 161.338 987.43 161.338 989.342 cv
161.338 991.251 159.79 992.799 157.879 992.799 cv
cp
390.362 868.932 mo
378.545 857.117 li
278.857 857.117 li
250.331 885.643 li
202.808 885.643 li
170.511 916.602 li
170.511 975.129 li
161.487 983.141 li
159.954 983.088 158.044 983.531 156.769 983.964 cv
153.229 985.162 150.002 986.99 150.002 990.727 cv
150.002 994.464 153.031 997.492 156.769 997.492 cv
160.503 997.492 162.715 994.373 163.533 990.727 cv
163.915 989.031 164.346 986.928 164.162 985.389 cv
173.968 976.682 li
173.968 918.078 li
204.198 889.102 li
251.761 889.102 li
280.288 860.574 li
377.116 860.574 li
388.93 872.389 li
408.563 872.389 li
415.29 864.99 li
415.29 834.148 li
411.831 834.148 li
411.831 863.652 li
407.033 868.932 li
390.362 868.932 li
cp
f
189.538 955.277 mo
190.872 956.642 190.85 958.83 189.486 960.167 cv
188.122 961.504 185.935 961.481 184.597 960.115 cv
183.259 958.752 183.284 956.563 184.646 955.225 cv
186.012 953.89 188.2 953.913 189.538 955.277 cv
cp
388.332 876.134 mo
375.654 863.745 li
281.713 863.745 li
255.203 891.694 li
208.26 891.694 li
185.637 914.318 li
185.637 950.19 li
186.012 950.19 li
184.623 951.07 183.243 953.185 182.509 954.633 cv
180.818 957.963 179.795 961.527 182.41 964.199 cv
185.023 966.867 189.307 966.913 191.979 964.298 cv
194.645 961.685 194.041 957.908 192.077 954.731 cv
191.066 953.099 189.754 951.049 188.411 950.19 cv
189.094 950.19 li
189.094 915.75 li
209.692 895.152 li
256.688 895.152 li
283.199 867.203 li
374.245 867.203 li
386.925 879.592 li
412.259 879.592 li
421.917 869.935 li
421.917 834.148 li
418.46 834.148 li
418.46 868.503 li
410.829 876.134 li
388.332 876.134 li
cp
f
220.656 955.277 mo
221.992 956.642 221.97 958.83 220.606 960.167 cv
219.242 961.504 217.053 961.481 215.716 960.115 cv
214.379 958.752 214.403 956.563 215.766 955.225 cv
217.129 953.89 219.319 953.913 220.656 955.277 cv
cp
385.186 881.32 mo
373.083 868.928 li
283.747 869.222 li
216.183 937.955 li
216.183 950.19 li
217.133 950.19 li
215.744 951.07 214.364 953.185 213.629 954.633 cv
211.938 957.963 210.915 961.527 213.53 964.199 cv
216.142 966.867 220.426 966.913 223.097 964.298 cv
225.765 961.685 225.161 957.908 223.196 954.731 cv
222.185 953.099 220.873 951.049 219.532 950.19 cv
219.64 950.19 li
219.64 939.37 li
285.202 872.672 li
371.631 872.393 li
383.73 884.778 li
414.252 884.778 li
427.682 871.977 li
427.682 834.148 li
424.224 834.148 li
424.224 870.495 li
412.868 881.32 li
385.186 881.32 li
cp
f
252.169 927.109 mo
253.507 928.473 253.483 930.662 252.12 931.998 cv
250.759 933.336 248.567 933.312 247.234 931.947 cv
245.896 930.584 245.917 928.394 247.282 927.059 cv
248.644 925.721 250.837 925.744 252.169 927.109 cv
cp
380.002 887.658 mo
368.765 876.134 li
287.353 876.134 li
247.588 916.34 li
247.588 922.913 li
246.592 923.947 245.69 925.391 245.144 926.465 cv
243.454 929.797 242.431 933.36 245.044 936.03 cv
247.66 938.699 251.944 938.745 254.612 936.131 cv
257.28 933.515 256.678 929.74 254.709 926.563 cv
253.7 924.931 252.387 922.879 251.045 922.021 cv
251.045 917.762 li
288.794 879.592 li
367.307 879.592 li
378.544 891.117 li
418.28 891.117 li
433.733 876.594 li
433.733 834.148 li
430.274 834.148 li
430.274 875.098 li
416.91 887.658 li
380.002 887.658 li
cp
f
310.628 925.38 mo
311.965 926.744 311.945 928.932 310.581 930.269 cv
309.217 931.606 307.025 931.583 305.691 930.219 cv
304.354 928.854 304.376 926.665 305.742 925.329 cv
307.103 923.992 309.294 924.016 310.628 925.38 cv
cp
378.545 893.136 mo
366.438 881.027 li
332.148 881.328 li
306.661 907.291 li
306.661 920.51 li
306.797 920.51 li
305.516 921.485 304.283 923.396 303.604 924.734 cv
301.913 928.068 300.889 931.632 303.503 934.301 cv
306.116 936.971 310.402 937.016 313.069 934.402 cv
315.737 931.785 315.135 928.012 313.17 924.833 cv
312.236 923.327 311.044 921.463 309.811 920.51 cv
310.118 920.51 li
310.118 908.705 li
333.61 884.771 li
365.02 884.498 li
377.116 896.594 li
420.895 896.594 li
439.494 878.301 li
439.494 834.148 li
436.035 834.148 li
436.035 876.852 li
419.48 893.136 li
378.545 893.136 li
cp
f
392.587 911.434 mo
391.236 912.785 389.048 912.785 387.698 911.434 cv
386.347 910.083 386.347 907.896 387.698 906.545 cv
389.048 905.193 391.236 905.193 392.587 906.545 cv
393.938 907.896 393.938 910.083 392.587 911.434 cv
cp
396.112 906.268 mo
395.161 905.504 394.038 904.835 393.158 904.4 cv
389.811 902.744 386.235 901.76 383.592 904.4 cv
380.951 907.043 380.951 911.324 383.592 913.967 cv
386.235 916.607 390 915.966 393.158 913.967 cv
394.994 912.805 397.362 911.254 397.932 909.725 cv
417.139 909.725 li
446.123 881.767 li
446.123 834.148 li
442.664 834.148 li
442.664 880.298 li
415.746 906.268 li
396.112 906.268 li
cp
f
358.364 915.183 mo
356.454 915.146 354.933 913.572 354.967 911.664 cv
355 909.754 356.575 908.232 358.486 908.268 cv
360.394 908.301 361.917 909.874 361.879 911.785 cv
361.848 913.693 360.273 915.215 358.364 915.183 cv
cp
369.538 918.78 mo
364.555 914.51 li
364.48 913.185 364.151 911.738 363.821 910.705 cv
362.687 907.148 360.911 903.891 357.175 903.824 cv
353.438 903.76 350.358 906.734 350.292 910.471 cv
350.23 914.205 353.305 916.469 356.94 917.351 cv
358.991 917.85 361.653 918.446 363.174 917.878 cv
368.258 922.238 li
415.44 922.238 li
452.75 884.043 li
452.75 834.148 li
449.292 834.148 li
449.292 882.635 li
413.986 918.78 li
369.538 918.78 li
cp
f
254.103 961.925 mo
252.751 963.273 250.563 963.273 249.211 961.925 cv
247.863 960.574 247.863 958.385 249.211 957.035 cv
250.563 955.684 252.751 955.684 254.103 957.035 cv
255.452 958.385 255.452 960.574 254.103 961.925 cv
cp
473.206 895.027 mo
443.664 925.406 li
334.187 925.406 li
300.761 958.441 li
259.211 958.441 li
258.354 957.03 256.161 955.626 254.675 954.891 cv
251.326 953.234 247.75 952.248 245.108 954.891 cv
242.465 957.533 242.465 961.815 245.108 964.457 cv
247.75 967.1 251.519 966.458 254.675 964.457 cv
255.969 963.637 257.53 962.622 258.539 961.559 cv
258.539 961.899 li
302.183 961.899 li
335.609 928.865 li
445.125 928.865 li
476.664 896.432 li
476.664 876.613 li
463.988 863.894 li
463.988 834.148 li
460.531 834.148 li
460.531 865.324 li
473.206 878.041 li
473.206 895.027 li
cp
f
189.854 1082.02 mo
189.854 1083.93 188.306 1085.48 186.396 1085.48 cv
184.486 1085.48 182.939 1083.93 182.939 1082.02 cv
182.939 1080.11 184.486 1078.56 186.396 1078.56 cv
188.306 1078.56 189.854 1080.11 189.854 1082.02 cv
cp
338.219 930.883 mo
298.165 970.646 li
183.926 970.646 li
170.508 983.75 li
170.508 1068.54 li
180.403 1077.18 li
179.879 1078.76 180.457 1081.48 181.019 1083.13 cv
182.217 1086.67 184.045 1089.9 187.783 1089.9 cv
191.519 1089.9 194.545 1086.87 194.545 1083.13 cv
194.545 1079.39 191.428 1077.19 187.783 1076.37 cv
186.609 1076.1 185.235 1075.81 183.989 1075.72 cv
173.966 1066.96 li
173.966 985.205 li
185.334 974.104 li
299.588 974.104 li
339.643 934.34 li
448.851 934.34 li
489.343 894.143 li
489.343 834.148 li
485.886 834.148 li
485.886 892.703 li
447.424 930.883 li
338.219 930.883 li
cp
f
242.619 1077.69 mo
243.017 1075.82 244.852 1074.63 246.722 1075.03 cv
248.587 1075.43 249.78 1077.26 249.381 1079.13 cv
248.985 1081 247.148 1082.19 245.282 1081.79 cv
243.415 1081.39 242.222 1079.56 242.619 1077.69 cv
cp
339.935 938.087 mo
300.749 977.851 li
190.134 977.851 li
177.281 990.074 li
177.281 1053.94 li
202.062 1079.4 li
202.062 1089.16 li
211.09 1099.16 li
222.698 1099.16 li
234.54 1086.43 li
240.147 1083.42 li
241.543 1084.23 244.144 1084.25 246.182 1084.23 cv
249.918 1084.19 253.426 1082.67 254.206 1079.02 cv
254.983 1075.37 252.651 1071.77 248.997 1070.99 cv
245.343 1070.22 242.881 1072.99 240.974 1076.2 cv
240.393 1077.18 239.715 1078.6 239.354 1079.93 cv
232.399 1083.65 li
221.192 1095.7 li
212.625 1095.7 li
205.52 1087.83 li
205.52 1078 li
180.74 1052.54 li
180.74 991.559 li
191.516 981.309 li
302.197 981.309 li
341.382 941.545 li
451.744 941.545 li
494.817 897.867 li
494.817 834.148 li
491.36 834.148 li
491.36 896.449 li
450.298 938.087 li
339.935 938.087 li
cp
f
219.82 1082.02 mo
219.82 1083.93 218.272 1085.48 216.363 1085.48 cv
214.454 1085.48 212.906 1083.93 212.906 1082.02 cv
212.906 1080.11 214.454 1078.56 216.363 1078.56 cv
218.272 1078.56 219.82 1080.11 219.82 1082.02 cv
cp
431.275 942.408 mo
406.206 968.053 li
318.053 968.053 li
303.071 982.748 li
208.251 982.748 li
188.807 1002.5 li
188.807 1055.78 li
210.27 1077.52 li
209.926 1079.13 210.463 1081.59 210.987 1083.13 cv
212.182 1086.67 214.014 1089.9 217.748 1089.9 cv
221.486 1089.9 224.514 1086.87 224.514 1083.13 cv
224.514 1079.39 221.396 1077.19 217.748 1076.37 cv
216.37 1076.06 214.723 1075.72 213.325 1075.69 cv
192.264 1054.36 li
192.264 1003.92 li
209.701 986.207 li
304.483 986.207 li
319.465 971.511 li
407.661 971.511 li
432.73 945.867 li
454.901 945.867 li
500.581 900.482 li
500.581 834.148 li
497.123 834.148 li
497.123 899.043 li
453.476 942.408 li
431.275 942.408 li
cp
f
220.136 1115.08 mo
218.227 1115.08 216.678 1113.54 216.678 1111.63 cv
216.678 1109.71 218.227 1108.17 220.136 1108.17 cv
222.048 1108.17 223.594 1109.71 223.594 1111.63 cv
223.594 1113.54 222.048 1115.08 220.136 1115.08 cv
cp
435.577 951.34 mo
412.814 975.545 li
322.686 975.545 li
307.701 989.662 li
214.611 989.662 li
195.436 1008.53 li
195.436 1052.3 li
211.69 1069.48 li
253.179 1069.48 li
261.418 1078.23 li
261.418 1091.21 li
256.696 1095.7 li
232.738 1095.7 li
223.336 1105.43 li
221.881 1105.46 220.19 1105.85 219.026 1106.25 cv
215.487 1107.45 212.26 1109.28 212.26 1113.01 cv
212.26 1116.75 215.289 1119.78 219.026 1119.78 cv
222.76 1119.78 224.971 1116.66 225.791 1113.01 cv
226.206 1111.17 226.694 1108.82 226.364 1107.27 cv
234.204 1099.16 li
258.077 1099.16 li
264.877 1092.7 li
264.877 1076.86 li
254.672 1066.02 li
213.178 1066.02 li
198.893 1050.93 li
198.893 1009.98 li
216.026 993.12 li
309.071 993.12 li
324.057 979.002 li
414.309 979.002 li
437.073 954.798 li
456.91 954.798 li
509.226 903.658 li
509.226 834.148 li
505.768 834.148 li
505.768 902.203 li
455.502 951.34 li
435.577 951.34 li
cp
f
468.1 965.519 mo
469.438 966.883 469.415 969.071 468.05 970.408 cv
466.686 971.745 464.498 971.722 463.161 970.357 cv
461.828 968.994 461.846 966.805 463.211 965.469 cv
464.576 964.131 466.763 964.154 468.1 965.519 cv
cp
464.275 960.644 mo
462.991 961.617 461.754 963.531 461.074 964.873 cv
459.385 968.207 458.358 971.771 460.976 974.44 cv
463.588 977.109 467.872 977.154 470.541 974.541 cv
473.21 971.926 472.605 968.149 470.639 964.972 cv
469.821 963.648 468.803 962.046 467.732 961.029 cv
467.732 959.555 li
519.022 908.719 li
519.022 834.148 li
515.564 834.148 li
515.564 907.277 li
464.275 958.112 li
464.275 960.644 li
cp
f
218.397 1049.41 mo
218.397 1051.32 216.851 1052.86 214.94 1052.86 cv
213.028 1052.86 211.482 1051.32 211.482 1049.41 cv
211.482 1047.5 213.028 1045.95 214.94 1045.95 cv
216.851 1045.95 218.397 1047.5 218.397 1049.41 cv
cp
476.376 956.385 mo
476.376 973.508 li
471.21 980.118 li
340.07 980.118 li
321.341 994.563 li
220.614 994.563 li
204.368 1012.04 li
204.368 1040.52 li
208.829 1044.98 li
208.516 1046.59 209.05 1049 209.564 1050.52 cv
210.759 1054.06 212.59 1057.28 216.329 1057.28 cv
220.063 1057.28 223.09 1054.25 223.09 1050.52 cv
223.09 1046.78 219.972 1044.57 216.329 1043.75 cv
214.92 1043.44 213.232 1043.09 211.817 1043.08 cv
207.825 1039.08 li
207.825 1013.39 li
222.122 998.019 li
322.521 998.019 li
341.249 983.576 li
472.895 983.576 li
479.834 974.699 li
479.834 957.824 li
543.293 894.648 li
543.803 894.143 li
543.803 857.545 li
558.786 842.56 li
558.786 834.148 li
555.329 834.148 li
555.329 841.129 li
540.345 856.113 li
540.345 892.703 li
476.887 955.879 li
476.376 956.385 li
cp
f
220.907 1023.51 mo
218.995 1023.51 217.449 1021.97 217.449 1020.06 cv
217.449 1018.14 218.995 1016.6 220.907 1016.6 cv
222.817 1016.6 224.364 1018.14 224.364 1020.06 cv
224.364 1021.97 222.817 1023.51 220.907 1023.51 cv
cp
546.106 896.435 mo
482.137 959.447 li
482.137 978.121 li
475.823 986.205 li
354.379 986.205 li
329.241 1009.84 li
292.508 1009.84 li
286.745 1005.8 li
232.789 1005.8 li
224.159 1013.86 li
222.693 1013.87 220.973 1014.28 219.793 1014.68 cv
216.254 1015.88 213.028 1017.71 213.028 1021.44 cv
213.028 1025.18 216.057 1028.21 219.793 1028.21 cv
223.53 1028.21 225.742 1025.09 226.559 1021.44 cv
226.965 1019.63 227.446 1017.34 227.155 1015.79 cv
234.153 1009.26 li
285.654 1009.26 li
291.417 1013.29 li
330.612 1013.29 li
355.75 989.662 li
477.507 989.662 li
485.594 979.309 li
485.594 960.894 li
549.564 897.883 li
549.564 860.723 li
565.702 844.876 li
565.702 834.148 li
562.243 834.148 li
562.243 843.424 li
546.106 859.273 li
546.106 896.435 li
cp
f
632.478 1009.27 mo
632.879 1007.4 634.715 1006.21 636.582 1006.61 cv
638.449 1007 639.641 1008.84 639.242 1010.71 cv
638.848 1012.57 637.01 1013.77 635.143 1013.37 cv
633.275 1012.97 632.082 1011.13 632.478 1009.27 cv
cp
620.822 1027.47 mo
632.369 1015.67 li
633.565 1015.81 634.894 1015.82 636.045 1015.8 cv
639.779 1015.76 643.287 1014.25 644.068 1010.6 cv
644.844 1006.94 642.512 1003.35 638.857 1002.57 cv
635.203 1001.79 632.742 1004.57 630.834 1007.78 cv
629.832 1009.47 628.529 1012.46 629.129 1014.03 cv
618.35 1025.05 li
620.822 1027.47 li
cp
f
512.204 947.486 mo
510.292 947.486 508.746 945.941 508.746 944.029 cv
508.746 942.12 510.292 940.572 512.204 940.572 cv
514.112 940.572 515.662 942.12 515.662 944.029 cv
515.662 945.941 514.112 947.486 512.204 947.486 cv
cp
514.297 937.915 mo
513.146 938.06 511.967 938.356 511.088 938.654 cv
507.551 939.85 504.326 941.68 504.326 945.418 cv
504.326 949.152 507.355 952.181 511.088 952.181 cv
514.828 952.181 517.04 949.063 517.856 945.418 cv
518.352 943.207 518.943 940.298 518.12 938.873 cv
518.518 938.441 li
574.345 882.322 li
574.345 878.092 li
582.51 870.656 li
660.941 870.373 li
679.381 888.813 li
766.396 888.813 li
791.67 863.273 li
789.211 860.841 li
764.953 885.356 li
680.814 885.356 li
662.369 866.91 li
581.165 867.205 li
570.887 876.563 li
570.887 880.896 li
516.023 936.047 li
514.297 937.915 li
cp
f
274.224 1020.79 mo
274.258 1018.89 275.831 1017.37 277.742 1017.4 cv
279.65 1017.43 281.172 1019.01 281.139 1020.92 cv
281.105 1022.83 279.532 1024.35 277.622 1024.31 cv
275.713 1024.28 274.194 1022.71 274.224 1020.79 cv
cp
768.685 891.242 mo
678.184 891.242 li
658.584 872.96 li
595.801 873.258 li
559.941 910.006 li
559.941 931.606 li
535.594 955.949 li
496.121 955.949 li
488.192 963.878 li
488.192 981.18 li
477.916 992.543 li
358.972 992.256 li
324.39 1026.26 li
286.643 1026.26 li
283.804 1024.7 li
283.915 1023.14 283.498 1021.16 283.078 1019.84 cv
281.943 1016.28 280.17 1013.02 276.432 1012.96 cv
272.698 1012.89 269.614 1015.87 269.55 1019.6 cv
269.486 1023.34 272.566 1025.6 276.195 1026.49 cv
277.784 1026.87 279.731 1027.31 281.241 1027.23 cv
285.754 1029.72 li
325.806 1029.72 li
360.384 995.717 li
479.451 996.004 li
491.651 982.514 li
491.651 965.31 li
497.552 959.406 li
537.026 959.406 li
563.398 933.039 li
563.398 911.414 li
597.266 876.709 li
657.23 876.425 li
676.82 894.699 li
770.158 894.699 li
791.689 872.269 li
789.195 869.875 li
768.685 891.242 li
cp
f
249.435 1027.72 mo
247.526 1027.69 246.006 1026.11 246.04 1024.21 cv
246.072 1022.3 247.648 1020.78 249.556 1020.81 cv
251.468 1020.84 252.988 1022.42 252.954 1024.33 cv
252.919 1026.24 251.346 1027.75 249.435 1027.72 cv
cp
770.438 897.642 mo
673.871 897.642 li
655.426 880.17 li
599.846 880.17 li
565.126 915.188 li
565.126 935.926 li
537.907 962.865 li
501.693 962.865 li
494.243 968.961 li
494.243 985.177 li
481.679 998.598 li
362.146 998.598 li
321.224 1038.36 li
275.24 1038.65 li
269.472 1039.67 li
255.989 1026.74 li
255.628 1027.11 li
255.559 1025.77 255.227 1024.3 254.892 1023.25 cv
253.757 1019.69 251.985 1016.43 248.247 1016.37 cv
244.511 1016.3 241.43 1019.28 241.366 1023.01 cv
241.301 1026.75 244.381 1029.01 248.01 1029.89 cv
250.251 1030.44 253.213 1031.09 254.627 1030.22 cv
268.355 1043.39 li
275.413 1042.11 li
322.634 1041.81 li
363.551 1002.05 li
483.178 1002.05 li
497.701 986.543 li
497.701 970.601 li
502.927 966.322 li
539.33 966.322 li
568.584 937.367 li
568.584 916.611 li
601.287 883.627 li
654.049 883.627 li
672.492 901.1 li
771.863 901.1 li
793.115 880.018 li
790.682 877.563 li
770.438 897.642 li
cp
f
508.263 997.773 mo
506.355 997.773 504.806 996.225 504.806 994.315 cv
504.806 992.404 506.355 990.857 508.263 990.857 cv
510.173 990.857 511.72 992.404 511.72 994.315 cv
511.72 996.225 510.173 997.773 508.263 997.773 cv
cp
778.174 909.559 mo
667.578 909.273 li
650.291 891.242 li
605.621 891.242 li
576.652 919.785 li
576.652 942.852 li
545.67 974.393 li
527.301 974.393 li
511.776 988.106 li
510.26 988.074 508.401 988.516 507.152 988.938 cv
503.613 990.135 500.389 991.965 500.389 995.701 cv
500.389 999.438 503.417 1002.47 507.152 1002.47 cv
510.889 1002.47 513.102 999.347 513.919 995.701 cv
514.306 993.975 514.748 991.824 514.539 990.28 cv
528.609 977.851 li
547.123 977.851 li
580.109 944.266 li
580.109 921.232 li
607.037 894.699 li
648.816 894.699 li
666.1 912.727 li
779.689 913.019 li
793.17 898.328 li
790.623 895.989 li
778.174 909.559 li
cp
f
393.293 1017.37 mo
391.385 1017.37 389.836 1015.82 389.836 1013.91 cv
389.836 1012 391.385 1010.45 393.293 1010.45 cv
395.205 1010.45 396.75 1012 396.75 1013.91 cv
396.75 1015.82 395.205 1017.37 393.293 1017.37 cv
cp
515.868 1007.82 mo
519.022 1003.48 li
519.022 994.746 li
531.218 983.576 li
549.417 983.576 li
587.313 945.424 li
587.313 924.15 li
611.365 900.237 li
645.918 900.237 li
663.783 919.356 li
781.963 919.356 li
793.135 907.883 li
790.656 905.471 li
780.504 915.898 li
665.287 915.898 li
647.42 896.779 li
609.94 896.779 li
583.854 922.713 li
583.854 944 li
547.98 980.118 li
529.875 980.118 li
515.564 993.225 li
515.564 1002.36 li
514.108 1004.36 li
399.468 1004.36 li
396.824 1007.7 li
395.304 1007.67 393.436 1008.11 392.181 1008.53 cv
388.643 1009.73 385.418 1011.56 385.418 1015.29 cv
385.418 1019.03 388.448 1022.06 392.181 1022.06 cv
395.919 1022.06 398.131 1018.94 398.949 1015.29 cv
399.34 1013.55 399.792 1011.36 399.561 1009.81 cv
401.141 1007.82 li
515.868 1007.82 li
cp
f
284.567 1092.86 mo
282.659 1092.86 281.109 1091.31 281.109 1089.4 cv
281.109 1087.49 282.659 1085.94 284.567 1085.94 cv
285.383 1085.94 286.124 1086.24 286.713 1086.71 cv
287.273 1087.27 li
287.737 1087.86 288.024 1088.59 288.024 1089.4 cv
288.024 1091.31 286.478 1092.86 284.567 1092.86 cv
cp
286.672 1083.28 mo
285.518 1083.43 284.335 1083.72 283.455 1084.02 cv
279.917 1085.22 276.692 1087.05 276.692 1090.79 cv
276.692 1094.52 279.72 1097.55 283.455 1097.55 cv
287.193 1097.55 289.402 1094.43 290.223 1090.79 cv
290.71 1088.62 291.293 1085.77 290.538 1084.32 cv
348.288 1026.83 li
399.835 1026.83 li
413.09 1014.44 li
518.008 1014.44 li
525.072 1007.38 li
525.072 999.6 li
534.433 990.24 li
552.011 990.24 li
592.786 949.173 li
592.786 927.268 li
613.103 906.676 li
642.799 906.676 li
661.816 925.16 li
784.852 925.16 li
793.143 916.519 li
790.646 914.125 li
783.377 921.703 li
663.221 921.703 li
644.203 903.219 li
611.658 903.219 li
589.329 925.85 li
589.329 947.747 li
550.573 986.781 li
533 986.781 li
521.615 998.168 li
521.615 1005.95 li
516.577 1010.99 li
411.726 1010.99 li
398.469 1023.38 li
346.86 1023.38 li
286.672 1083.28 li
cp
f
313.775 1083.78 mo
311.864 1083.78 310.318 1082.23 310.318 1080.32 cv
310.318 1078.41 311.864 1076.87 313.775 1076.87 cv
315.686 1076.87 317.233 1078.41 317.233 1080.32 cv
317.233 1082.23 315.686 1083.78 313.775 1083.78 cv
cp
785.092 928 mo
658.881 928 li
639.291 909.559 li
615.98 909.559 li
595.092 930.749 li
595.092 951.091 li
554.601 992.545 li
544.232 992.545 li
519.45 1017.76 li
412.885 1017.76 li
400.208 1029.43 li
360.978 1029.43 li
316.249 1074.16 li
314.983 1074.28 313.637 1074.62 312.664 1074.95 cv
309.124 1076.14 305.897 1077.97 305.897 1081.71 cv
305.897 1085.45 308.925 1088.47 312.664 1088.47 cv
316.399 1088.47 318.611 1085.36 319.427 1081.71 cv
319.894 1079.64 320.446 1076.96 319.842 1075.46 cv
362.41 1032.89 li
401.559 1032.89 li
414.235 1021.22 li
520.899 1021.22 li
545.68 996.002 li
556.057 996.002 li
598.549 952.498 li
598.549 932.167 li
617.426 913.016 li
637.918 913.016 li
657.51 931.458 li
786.602 931.458 li
794.605 922.838 li
792.072 920.484 li
785.092 928 li
cp
f
419.612 1032.51 mo
417.7 1032.51 416.153 1030.97 416.153 1029.05 cv
416.153 1027.15 417.7 1025.6 419.612 1025.6 cv
421.523 1025.6 423.069 1027.15 423.069 1029.05 cv
423.069 1030.97 421.523 1032.51 419.612 1032.51 cv
cp
532.995 1022.8 mo
422.781 1022.8 li
422.781 1022.86 li
421.332 1022.89 419.657 1023.29 418.5 1023.68 cv
414.961 1024.88 411.734 1026.71 411.734 1030.44 cv
411.734 1034.18 414.765 1037.21 418.5 1037.21 cv
422.235 1037.21 424.447 1034.09 425.264 1030.44 cv
425.557 1029.14 425.879 1027.6 425.934 1026.26 cv
534.44 1026.26 li
622.902 936.644 li
790.441 936.644 li
790.441 933.188 li
621.457 933.188 li
532.995 1022.8 li
cp
f
440.262 1039.7 mo
438.352 1039.7 436.805 1038.15 436.805 1036.24 cv
436.805 1034.33 438.352 1032.78 440.262 1032.78 cv
442.174 1032.78 443.721 1034.33 443.721 1036.24 cv
443.721 1038.15 442.174 1039.7 440.262 1039.7 cv
cp
793.336 940.451 mo
624.055 940.451 li
536.457 1027.99 li
447.273 1027.99 li
444.471 1030.09 li
442.868 1029.86 440.6 1030.37 439.153 1030.86 cv
435.613 1032.06 432.385 1033.89 432.385 1037.62 cv
432.385 1041.36 435.415 1044.39 439.153 1044.39 cv
442.887 1044.39 445.098 1041.27 445.915 1037.62 cv
446.252 1036.12 446.642 1034.29 446.596 1032.82 cv
448.424 1031.45 li
537.89 1031.45 li
625.486 943.91 li
793.336 943.91 li
793.336 940.451 li
cp
f
456.167 1046.88 mo
454.256 1046.88 452.71 1045.33 452.71 1043.42 cv
452.71 1041.51 454.256 1039.96 456.167 1039.96 cv
458.079 1039.96 459.624 1041.51 459.624 1043.42 cv
459.624 1045.33 458.079 1046.88 456.167 1046.88 cv
cp
541.065 1038.65 mo
629.238 949.898 li
791.896 949.898 li
791.896 946.44 li
627.799 946.44 li
539.625 1035.19 li
462.941 1035.19 li
459.469 1037.22 li
457.994 1037.23 456.248 1037.64 455.056 1038.04 cv
451.515 1039.24 448.289 1041.07 448.289 1044.8 cv
448.289 1048.54 451.319 1051.57 455.056 1051.57 cv
458.791 1051.57 461.002 1048.45 461.82 1044.8 cv
462.2 1043.11 462.629 1041.02 462.45 1039.48 cv
463.877 1038.65 li
541.065 1038.65 li
cp
f
475.475 1051.69 mo
473.568 1051.69 472.017 1050.14 472.017 1048.23 cv
472.017 1046.32 473.568 1044.77 475.475 1044.77 cv
477.387 1044.77 478.934 1046.32 478.934 1048.23 cv
478.934 1050.14 477.387 1051.69 475.475 1051.69 cv
cp
793.336 952.492 mo
628.953 952.492 li
541.932 1039.8 li
484.301 1039.8 li
479.915 1042.12 li
478.303 1041.81 475.882 1042.34 474.365 1042.86 cv
470.827 1044.05 467.6 1045.88 467.6 1049.62 cv
467.6 1053.36 470.629 1056.38 474.365 1056.38 cv
478.103 1056.38 480.311 1053.27 481.131 1049.62 cv
481.453 1048.19 481.811 1046.46 481.807 1045.03 cv
485.159 1043.26 li
543.368 1043.26 li
630.389 955.949 li
793.336 955.949 li
793.336 952.492 li
cp
f
492.417 1057.92 mo
490.504 1057.92 488.957 1056.38 488.957 1054.46 cv
488.957 1052.55 490.504 1051.01 492.417 1051.01 cv
494.328 1051.01 495.874 1052.55 495.874 1054.46 cv
495.874 1056.38 494.328 1057.92 492.417 1057.92 cv
cp
791.896 958.441 mo
632.129 958.441 li
543.377 1046.43 li
500.676 1046.43 li
497.266 1048.48 li
495.69 1047.95 492.963 1048.53 491.305 1049.09 cv
487.767 1050.29 484.539 1052.12 484.539 1055.85 cv
484.539 1059.59 487.567 1062.62 491.305 1062.62 cv
495.04 1062.62 497.252 1059.5 498.07 1055.85 cv
498.366 1054.54 498.691 1052.98 498.741 1051.62 cv
501.634 1049.89 li
544.803 1049.89 li
633.553 961.899 li
791.896 961.899 li
791.896 958.441 li
cp
f
513.162 1064.61 mo
511.251 1064.61 509.705 1063.06 509.705 1061.15 cv
509.705 1059.24 511.251 1057.69 513.162 1057.69 cv
515.074 1057.69 516.622 1059.24 516.622 1061.15 cv
516.622 1063.06 515.074 1064.61 513.162 1064.61 cv
cp
520.73 1053.06 mo
518.04 1055.17 li
516.469 1054.62 513.719 1055.21 512.052 1055.77 cv
508.513 1056.97 505.285 1058.8 505.285 1062.54 cv
505.285 1066.27 508.314 1069.3 512.052 1069.3 cv
515.787 1069.3 517.998 1066.18 518.815 1062.54 cv
519.102 1061.26 519.418 1059.76 519.483 1058.43 cv
521.925 1056.51 li
549.125 1056.51 li
637.299 969.206 li
791.896 969.206 li
791.896 965.748 li
635.875 965.748 li
547.704 1053.06 li
520.73 1053.06 li
cp
f
393.293 1083.78 mo
391.385 1083.78 389.836 1082.23 389.836 1080.32 cv
389.836 1078.41 391.385 1076.87 393.293 1076.87 cv
395.205 1076.87 396.75 1078.41 396.75 1080.32 cv
396.75 1082.23 395.205 1083.78 393.293 1083.78 cv
cp
395.651 1074.17 mo
394.42 1074.3 393.126 1074.63 392.181 1074.95 cv
388.643 1076.14 385.418 1077.97 385.418 1081.71 cv
385.418 1085.45 388.448 1088.47 392.181 1088.47 cv
395.919 1088.47 398.131 1085.36 398.949 1081.71 cv
399.37 1079.83 399.861 1077.45 399.499 1075.9 cv
401.074 1074.96 li
519.751 1074.96 li
531.853 1062.57 li
552.58 1062.57 li
641.617 974.967 li
791.896 974.967 li
791.896 971.51 li
640.201 971.51 li
551.165 1059.11 li
530.397 1059.11 li
518.295 1071.5 li
400.114 1071.5 li
395.651 1074.17 li
cp
f
134.895 1088.96 mo
132.983 1088.93 131.463 1087.35 131.498 1085.44 cv
131.53 1083.54 133.106 1082.01 135.014 1082.05 cv
136.924 1082.08 138.446 1083.65 138.41 1085.56 cv
138.377 1087.47 136.802 1088.99 134.895 1088.96 cv
cp
141.101 1089.06 mo
141.145 1087.56 140.745 1085.72 140.352 1084.49 cv
139.213 1080.93 137.441 1077.67 133.706 1077.61 cv
129.968 1077.54 126.889 1080.52 126.825 1084.25 cv
126.757 1087.99 129.836 1090.25 133.467 1091.13 cv
135.222 1091.56 137.419 1092.05 138.972 1091.84 cv
146.001 1099.16 li
194.969 1099.16 li
201.486 1106.18 li
201.486 1124.25 li
209.862 1130.28 li
221.782 1130.28 li
234.462 1117.89 li
386.887 1117.89 li
424.922 1081.01 li
522.665 1081.01 li
534.766 1067.75 li
555.895 1067.75 li
645.076 979.58 li
791.896 979.58 li
791.896 976.122 li
643.656 976.122 li
554.473 1064.29 li
533.24 1064.29 li
521.138 1077.55 li
423.522 1077.55 li
385.486 1114.43 li
233.053 1114.43 li
220.374 1126.82 li
210.976 1126.82 li
204.945 1122.48 li
204.945 1104.82 li
196.476 1095.7 li
147.473 1095.7 li
141.101 1089.06 li
cp
f
743.67 996.25 mo
742.318 997.601 740.131 997.601 738.781 996.25 cv
737.43 994.9 737.43 992.711 738.781 991.361 cv
740.131 990.012 742.318 990.012 743.67 991.361 cv
745.021 992.711 745.021 994.9 743.67 996.25 cv
cp
738.207 988.828 mo
736.682 989.796 734.783 991.035 733.861 992.305 cv
724.715 992.546 li
724.805 996.002 li
734.387 995.75 li
735.438 996.83 737.041 997.818 738.207 998.394 cv
741.557 1000.05 745.133 1001.04 747.775 998.394 cv
750.416 995.754 750.416 991.471 747.775 988.828 cv
745.133 986.188 741.363 986.829 738.207 988.828 cv
cp
f
643.957 841.451 mo
645.307 840.104 647.494 840.104 648.846 841.451 cv
650.197 842.803 650.197 844.99 648.846 846.341 cv
647.494 847.692 645.307 847.692 643.957 846.341 cv
642.605 844.99 642.605 842.803 643.957 841.451 cv
cp
649.416 848.875 mo
650.75 848.029 652.367 846.977 653.369 845.879 cv
674.48 845.879 li
684.791 835.357 li
682.318 832.94 li
673.029 842.422 li
653.646 842.422 li
652.648 841.165 650.75 839.968 649.416 839.308 cv
646.066 837.653 642.494 836.668 639.85 839.308 cv
637.205 841.951 637.209 846.234 639.85 848.875 cv
642.494 851.516 646.26 850.875 649.416 848.875 cv
cp
f
449.06 972.174 mo
447.147 972.174 445.602 970.628 445.602 968.717 cv
445.602 966.806 447.147 965.259 449.06 965.259 cv
450.971 965.259 452.517 966.806 452.517 968.717 cv
452.517 970.628 450.971 972.174 449.06 972.174 cv
cp
447.949 963.341 mo
444.41 964.536 441.181 966.367 441.181 970.104 cv
441.181 973.84 444.21 976.868 447.949 976.868 cv
451.683 976.868 453.895 973.75 454.712 970.104 cv
455.115 968.308 455.588 966.043 455.313 964.49 cv
513.834 906.533 li
513.834 834.148 li
510.377 834.148 li
510.377 905.093 li
452.395 962.514 li
450.913 962.517 449.149 962.934 447.949 963.341 cv
cp
f
458.737 893.184 mo
460.075 894.547 460.051 896.737 458.687 898.072 cv
457.323 899.41 455.134 899.387 453.798 898.021 cv
452.46 896.658 452.483 894.468 453.847 893.132 cv
455.211 891.795 457.4 891.818 458.737 893.184 cv
cp
451.71 892.539 mo
450.019 895.871 448.996 899.435 451.609 902.104 cv
454.222 904.775 458.507 904.82 461.178 902.205 cv
463.845 899.592 463.242 895.815 461.277 892.637 cv
460.346 891.139 459.165 889.286 457.937 888.327 cv
457.937 834.148 li
454.479 834.148 li
454.479 888.668 li
453.356 889.705 452.313 891.349 451.71 892.539 cv
cp
f
472.289 854.915 mo
473.653 853.578 475.838 853.602 477.177 854.966 cv
478.513 856.33 478.491 858.519 477.126 859.856 cv
475.762 861.192 473.574 861.168 472.237 859.807 cv
470.904 858.441 470.924 856.252 472.289 854.915 cv
cp
479.619 863.988 mo
482.286 861.371 481.681 857.598 479.716 854.42 cv
478.861 853.037 477.788 851.354 476.664 850.348 cv
476.664 834.148 li
473.206 834.148 li
473.206 850.199 li
471.974 851.204 470.804 853.03 470.15 854.32 cv
468.462 857.654 467.435 861.219 470.052 863.887 cv
472.665 866.558 476.948 866.602 479.619 863.988 cv
cp
f
704.822 854.915 mo
706.185 853.578 708.373 853.602 709.711 854.966 cv
711.049 856.33 711.023 858.519 709.66 859.856 cv
708.295 861.192 706.107 861.168 704.769 859.807 cv
703.438 858.441 703.457 856.252 704.822 854.915 cv
cp
712.152 863.988 mo
714.818 861.371 714.215 857.598 712.25 854.42 cv
711.394 853.037 710.32 851.354 709.197 850.348 cv
709.197 834.148 li
705.74 834.148 li
705.74 850.199 li
704.508 851.205 703.338 853.03 702.684 854.32 cv
700.996 857.654 699.969 861.219 702.586 863.887 cv
705.199 866.558 709.48 866.602 712.152 863.988 cv
cp
f
735.654 854.607 mo
737.019 853.271 739.205 853.294 740.543 854.658 cv
741.879 856.023 741.857 858.212 740.492 859.547 cv
739.129 860.885 736.939 860.861 735.603 859.497 cv
734.266 858.133 734.291 855.943 735.654 854.607 cv
cp
742.984 863.682 mo
745.652 861.065 745.049 857.29 743.082 854.113 cv
742.225 852.731 741.152 851.049 740.029 850.043 cv
740.029 834.148 li
736.572 834.148 li
736.572 849.893 li
735.34 850.898 734.17 852.724 733.516 854.014 cv
731.824 857.347 730.801 860.91 733.416 863.58 cv
736.027 866.25 740.314 866.295 742.984 863.682 cv
cp
f
720.957 870.617 mo
722.322 869.283 724.512 869.307 725.848 870.671 cv
727.185 872.035 727.162 874.223 725.799 875.56 cv
724.434 876.896 722.244 876.873 720.908 875.51 cv
719.57 874.144 719.594 871.956 720.957 870.617 cv
cp
728.289 879.691 mo
730.957 877.076 730.352 873.301 728.387 870.123 cv
727.529 868.74 726.459 867.06 725.336 866.055 cv
725.336 834.148 li
721.877 834.148 li
721.877 865.902 li
720.644 866.906 719.475 868.734 718.82 870.025 cv
717.129 873.356 716.105 876.921 718.719 879.592 cv
721.332 882.261 725.617 882.307 728.289 879.691 cv
cp
f
750.063 870.617 mo
751.424 869.283 753.615 869.307 754.949 870.671 cv
756.285 872.035 756.266 874.223 754.902 875.56 cv
753.537 876.896 751.346 876.873 750.012 875.51 cv
748.674 874.144 748.699 871.956 750.063 870.617 cv
cp
757.391 879.691 mo
760.057 877.076 759.457 873.301 757.49 870.123 cv
756.633 868.74 755.56 867.06 754.438 866.055 cv
754.438 834.148 li
750.98 834.148 li
750.98 865.902 li
749.75 866.906 748.578 868.734 747.926 870.025 cv
746.232 873.356 745.209 876.921 747.824 879.592 cv
750.438 882.261 754.723 882.307 757.391 879.691 cv
cp
f
509.034 970.229 mo
510.944 970.229 512.491 971.776 512.491 973.688 cv
512.491 975.597 510.944 977.146 509.034 977.146 cv
507.122 977.146 505.576 975.597 505.576 973.688 cv
505.576 971.776 507.122 970.229 509.034 970.229 cv
cp
507.922 981.839 mo
511.657 981.839 513.869 978.719 514.686 975.073 cv
514.975 973.788 515.293 972.267 515.354 970.934 cv
542.773 970.934 li
574.345 940.445 li
574.345 917.768 li
603.879 888.236 li
651.998 888.236 li
671.023 907.254 li
776.504 907.254 li
791.699 891.152 li
789.184 888.778 li
775.014 903.797 li
672.455 903.797 li
653.432 884.778 li
602.445 884.778 li
570.887 916.336 li
570.887 938.979 li
541.375 967.476 li
512.106 967.476 li
512.106 967.492 li
510.68 967.541 509.053 967.927 507.922 968.31 cv
504.383 969.506 501.156 971.337 501.156 975.073 cv
501.156 978.81 504.184 981.839 507.922 981.839 cv
cp
f
385.825 950.588 mo
387.151 949.213 389.338 949.176 390.713 950.503 cv
392.087 951.828 392.125 954.016 390.798 955.393 cv
389.471 956.768 387.283 956.804 385.908 955.477 cv
384.538 954.149 384.497 951.961 385.825 950.588 cv
cp
385.374 957.631 mo
388.75 959.229 392.344 960.15 394.941 957.463 cv
397.535 954.775 397.46 950.492 394.775 947.896 cv
392.087 945.301 388.329 946.01 385.208 948.065 cv
383.614 949.112 381.614 950.472 380.784 951.83 cv
372.79 951.83 li
372.79 955.287 li
381.72 955.287 li
381.72 955.251 li
382.784 956.232 384.272 957.108 385.374 957.631 cv
cp
f
432.78 1094.57 mo
432.78 1092.66 434.331 1091.12 436.239 1091.12 cv
438.149 1091.12 439.696 1092.66 439.696 1094.57 cv
439.696 1096.48 438.149 1098.03 436.239 1098.03 cv
434.331 1098.03 432.78 1096.48 432.78 1094.57 cv
cp
442.759 1095.13 mo
442.759 1090.92 439.354 1087.52 435.154 1087.52 cv
430.953 1087.52 427.55 1090.92 427.55 1095.13 cv
427.55 1099.32 430.953 1102.73 435.154 1102.73 cv
439.354 1102.73 442.759 1099.32 442.759 1095.13 cv
cp
f
776.869 1027.48 mo
778.781 1027.48 780.326 1029.03 780.326 1030.94 cv
780.326 1032.84 778.781 1034.39 776.869 1034.39 cv
774.959 1034.39 773.412 1032.84 773.412 1030.94 cv
773.412 1029.03 774.959 1027.48 776.869 1027.48 cv
cp
775.787 1039.09 mo
779.984 1039.09 783.387 1035.69 783.387 1031.49 cv
783.387 1027.29 779.984 1023.88 775.787 1023.88 cv
771.586 1023.88 768.182 1027.29 768.182 1031.49 cv
768.182 1035.69 771.586 1039.09 775.787 1039.09 cv
cp
f
775.879 1057.14 mo
777.793 1057.14 779.338 1058.69 779.338 1060.6 cv
779.338 1062.51 777.793 1064.05 775.879 1064.05 cv
773.969 1064.05 772.424 1062.51 772.424 1060.6 cv
772.424 1058.69 773.969 1057.14 775.879 1057.14 cv
cp
774.793 1068.75 mo
778.994 1068.75 782.396 1065.35 782.396 1061.15 cv
782.396 1056.95 778.994 1053.54 774.793 1053.54 cv
770.598 1053.54 767.191 1056.95 767.191 1061.15 cv
767.191 1065.35 770.598 1068.75 774.793 1068.75 cv
cp
f
776.967 1094.02 mo
775.057 1094.02 773.51 1092.47 773.51 1090.56 cv
773.51 1088.65 775.057 1087.1 776.967 1087.1 cv
778.875 1087.1 780.424 1088.65 780.424 1090.56 cv
780.424 1092.47 778.875 1094.02 776.967 1094.02 cv
cp
775.879 1083.51 mo
771.68 1083.51 768.275 1086.92 768.275 1091.12 cv
768.275 1095.32 771.68 1098.72 775.879 1098.72 cv
780.082 1098.72 783.484 1095.32 783.484 1091.12 cv
783.484 1086.92 780.082 1083.51 775.879 1083.51 cv
cp
f
405.852 951.631 mo
405.852 949.721 407.397 948.173 409.309 948.173 cv
411.216 948.173 412.766 949.721 412.766 951.631 cv
412.766 953.54 411.216 955.088 409.309 955.088 cv
407.397 955.088 405.852 953.54 405.852 951.631 cv
cp
415.826 952.183 mo
415.826 947.981 412.422 944.576 408.222 944.576 cv
404.025 944.576 400.618 947.981 400.618 952.183 cv
400.618 956.382 404.025 959.785 408.222 959.785 cv
412.422 959.785 415.826 956.382 415.826 952.183 cv
cp
f
532.028 843.42 mo
533.936 843.42 535.486 844.969 535.486 846.88 cv
535.486 848.788 533.936 850.338 532.028 850.338 cv
530.118 850.338 528.571 848.788 528.571 846.88 cv
528.571 844.969 530.118 843.42 532.028 843.42 cv
cp
530.941 855.035 mo
535.141 855.035 538.545 851.631 538.545 847.432 cv
538.545 843.231 535.141 839.826 530.941 839.826 cv
526.741 839.826 523.337 843.231 523.337 847.432 cv
523.337 851.631 526.741 855.035 530.941 855.035 cv
cp
f
532.028 881.345 mo
533.936 881.345 535.486 882.894 535.486 884.804 cv
535.486 886.713 533.936 888.262 532.028 888.262 cv
530.118 888.262 528.571 886.713 528.571 884.804 cv
528.571 882.894 530.118 881.345 532.028 881.345 cv
cp
530.941 892.961 mo
535.141 892.961 538.545 889.555 538.545 885.356 cv
538.545 881.155 535.141 877.75 530.941 877.75 cv
526.741 877.75 523.337 881.155 523.337 885.356 cv
523.337 889.555 526.741 892.961 530.941 892.961 cv
cp
f
544.313 926.69 mo
544.313 924.779 545.86 923.229 547.771 923.229 cv
549.682 923.229 551.228 924.779 551.228 926.69 cv
551.228 928.598 549.682 930.146 547.771 930.146 cv
545.86 930.146 544.313 928.598 544.313 926.69 cv
cp
554.288 927.24 mo
554.288 923.038 550.883 919.635 546.683 919.635 cv
542.485 919.635 539.08 923.038 539.08 927.24 cv
539.08 931.44 542.485 934.844 546.683 934.844 cv
550.883 934.844 554.288 931.44 554.288 927.24 cv
cp
f
630.467 923.601 mo
630.467 921.691 632.016 920.143 633.924 920.143 cv
635.836 920.143 637.381 921.691 637.381 923.601 cv
637.381 925.51 635.836 927.059 633.924 927.059 cv
632.016 927.059 630.467 925.51 630.467 923.601 cv
cp
640.445 924.152 mo
640.445 919.951 637.041 916.547 632.84 916.547 cv
628.639 916.547 625.234 919.951 625.234 924.152 cv
625.234 928.352 628.639 931.755 632.84 931.755 cv
637.041 931.755 640.445 928.352 640.445 924.152 cv
cp
f
677.129 1001.68 mo
675.217 1001.68 673.67 1000.13 673.67 998.221 cv
673.67 996.312 675.217 994.762 677.129 994.762 cv
679.039 994.762 680.588 996.312 680.588 998.221 cv
680.588 1000.13 679.039 1001.68 677.129 1001.68 cv
cp
676.045 991.166 mo
671.844 991.166 668.439 994.572 668.439 998.773 cv
668.439 1002.97 671.844 1006.38 676.045 1006.38 cv
680.242 1006.38 683.646 1002.97 683.646 998.773 cv
683.646 994.572 680.242 991.166 676.045 991.166 cv
cp
f
567.503 1073.56 mo
567.503 1071.65 569.05 1070.1 570.961 1070.1 cv
572.87 1070.1 574.419 1071.65 574.419 1073.56 cv
574.419 1075.47 572.87 1077.02 570.961 1077.02 cv
569.05 1077.02 567.503 1075.47 567.503 1073.56 cv
cp
577.479 1074.11 mo
577.479 1069.91 574.076 1066.51 569.875 1066.51 cv
565.674 1066.51 562.27 1069.91 562.27 1074.11 cv
562.27 1078.31 565.674 1081.72 569.875 1081.72 cv
574.076 1081.72 577.479 1078.31 577.479 1074.11 cv
cp
f
589.26 1073.56 mo
589.26 1071.65 590.807 1070.1 592.717 1070.1 cv
594.629 1070.1 596.176 1071.65 596.176 1073.56 cv
596.176 1075.47 594.629 1077.02 592.717 1077.02 cv
590.807 1077.02 589.26 1075.47 589.26 1073.56 cv
cp
599.236 1074.11 mo
599.236 1069.91 595.831 1066.51 591.629 1066.51 cv
587.433 1066.51 584.031 1069.91 584.031 1074.11 cv
584.031 1078.31 587.433 1081.72 591.629 1081.72 cv
595.831 1081.72 599.236 1078.31 599.236 1074.11 cv
cp
f
382.717 842.977 mo
384.627 842.977 386.175 844.609 386.175 846.62 cv
386.175 848.633 384.627 850.265 382.717 850.265 cv
380.809 850.265 379.26 848.633 379.26 846.62 cv
379.26 844.609 380.809 842.977 382.717 842.977 cv
cp
377.342 847.793 mo
378.537 851.521 380.371 854.922 384.105 854.922 cv
387.838 854.922 390.869 851.729 390.869 847.793 cv
390.869 843.854 387.751 841.523 384.105 840.662 cv
382.444 840.269 380.389 839.824 378.86 839.989 cv
371.23 832.883 li
368.873 835.412 li
376.529 842.544 li
376.409 844.201 376.884 846.374 377.342 847.793 cv
cp
f
688.154 1095.37 mo
686.603 1095.37 685.344 1094.11 685.344 1092.56 cv
685.344 1091.01 686.603 1089.75 688.154 1089.75 cv
689.707 1089.75 690.965 1091.01 690.965 1092.56 cv
690.965 1094.11 689.707 1095.37 688.154 1095.37 cv
cp
790.441 1002.51 mo
771.369 1002.51 li
683.281 1090.08 li
681.252 1092.1 681.24 1095.38 683.262 1097.41 cv
684.275 1098.43 685.607 1098.94 686.939 1098.94 cv
688.262 1098.94 689.586 1098.44 690.596 1097.43 cv
775.648 1012.88 li
790.441 1012.88 li
793.307 1012.88 795.629 1010.56 795.629 1007.7 cv
795.629 1004.83 793.307 1002.51 790.441 1002.51 cv
cp
f
521.252 1094.51 mo
521.252 1096.96 519.27 1098.94 516.823 1098.94 cv
514.378 1098.94 512.393 1096.96 512.393 1094.51 cv
512.393 1092.07 514.378 1090.08 516.823 1090.08 cv
519.27 1090.08 521.252 1092.07 521.252 1094.51 cv
cp
616.76 1069.22 mo
619.203 1069.22 621.19 1071.2 621.19 1073.65 cv
621.19 1076.1 619.203 1078.08 616.76 1078.08 cv
614.313 1078.08 612.33 1076.1 612.33 1073.65 cv
612.33 1071.2 614.313 1069.22 616.76 1069.22 cv
cp
507.206 1094.4 mo
507.206 1099.18 511.076 1103.05 515.85 1103.05 cv
604.42 1103.05 li
606.666 1103.05 608.824 1102.17 610.44 1100.61 cv
622.719 1088.71 li
624.398 1087.08 625.348 1084.84 625.348 1082.51 cv
625.348 1072.76 li
625.348 1067.99 621.477 1064.11 616.703 1064.11 cv
611.928 1064.11 608.057 1067.99 608.057 1072.76 cv
608.057 1078.84 li
600.92 1085.76 li
515.85 1085.76 li
511.076 1085.76 507.206 1089.63 507.206 1094.4 cv
cp
f
365.684 943.481 mo
370.939 943.481 375.194 947.736 375.194 952.99 cv
375.194 958.242 370.939 962.498 365.684 962.498 cv
360.434 962.498 356.177 958.242 356.177 952.99 cv
356.177 947.736 360.434 943.481 365.684 943.481 cv
1 1 1 rgb
f
339.434 991.857 mo
339.434 997.108 335.18 1001.37 329.926 1001.37 cv
324.675 1001.37 320.417 997.108 320.417 991.857 cv
320.417 986.604 324.675 982.349 329.926 982.349 cv
335.18 982.349 339.434 986.604 339.434 991.857 cv
f
315.41 1013.32 mo
315.41 1018.57 311.151 1022.82 305.901 1022.82 cv
300.646 1022.82 296.392 1018.57 296.392 1013.32 cv
296.392 1008.07 300.646 1003.81 305.901 1003.81 cv
311.151 1003.81 315.41 1008.07 315.41 1013.32 cv
f
276.692 1039.96 mo
276.692 1045.21 272.434 1049.47 267.183 1049.47 cv
261.929 1049.47 257.674 1045.21 257.674 1039.96 cv
257.674 1034.71 261.929 1030.45 267.183 1030.45 cv
272.434 1030.45 276.692 1034.71 276.692 1039.96 cv
f
584.145 867.203 mo
584.145 872.454 579.886 876.711 574.636 876.711 cv
569.382 876.711 565.126 872.454 565.126 867.203 cv
565.126 861.949 569.382 857.694 574.636 857.694 cv
579.886 857.694 584.145 861.949 584.145 867.203 cv
f
120.949 1069.3 mo
120.949 1074.55 116.693 1078.81 111.44 1078.81 cv
106.188 1078.81 101.931 1074.55 101.931 1069.3 cv
101.931 1064.05 106.188 1059.79 111.44 1059.79 cv
116.693 1059.79 120.949 1064.05 120.949 1069.3 cv
f
625.627 1031.49 mo
625.627 1036.74 621.373 1040.99 616.117 1040.99 cv
610.867 1040.99 606.609 1036.74 606.609 1031.49 cv
606.609 1026.23 610.867 1021.98 616.117 1021.98 cv
621.373 1021.98 625.627 1026.23 625.627 1031.49 cv
f
725.455 994.13 mo
725.455 999.383 721.201 1003.64 715.947 1003.64 cv
710.697 1003.64 706.438 999.383 706.438 994.13 cv
706.438 988.877 710.697 984.621 715.947 984.621 cv
721.201 984.621 725.455 988.877 725.455 994.13 cv
f
376.304 828.111 mo
376.304 833.394 372.019 837.676 366.738 837.676 cv
361.455 837.676 357.172 833.394 357.172 828.111 cv
357.172 822.828 361.455 818.545 366.738 818.545 cv
372.019 818.545 376.304 822.828 376.304 828.111 cv
cp
f
591.832 828.111 mo
591.832 833.394 587.548 837.676 582.267 837.676 cv
576.983 837.676 572.701 833.394 572.701 828.111 cv
572.701 822.828 576.983 818.545 582.267 818.545 cv
587.548 818.545 591.832 822.828 591.832 828.111 cv
cp
f
595.018 697.945 mo
593.151 697.549 591.958 695.711 592.359 693.844 cv
592.752 691.977 594.588 690.785 596.456 691.182 cv
598.323 691.58 599.517 693.416 599.12 695.283 cv
598.721 697.15 596.885 698.342 595.018 697.945 cv
cp
851.533 510.264 mo
850.185 508.914 850.185 506.725 851.533 505.373 cv
852.885 504.023 855.076 504.023 856.424 505.373 cv
857.773 506.725 857.773 508.914 856.424 510.264 cv
855.076 511.615 852.885 511.615 851.533 510.264 cv
cp
770.887 718.832 mo
801.283 688.06 li
801.283 600.74 li
855.455 544.551 li
855.455 515.066 li
856.713 514.068 857.908 512.17 858.566 510.836 cv
860.225 507.488 861.211 503.912 858.566 501.268 cv
855.924 498.629 851.643 498.629 849.002 501.272 cv
846.359 503.912 847 507.68 849.002 510.836 cv
849.846 512.17 850.898 513.787 851.998 514.791 cv
851.998 543.156 li
797.826 599.346 li
797.826 686.643 li
769.439 715.375 li
668.32 715.375 li
659.682 706.371 li
608.084 706.086 li
601.221 699.227 li
601.57 697.799 601.572 695.924 601.555 694.381 cv
601.514 690.644 600.002 687.137 596.346 686.357 cv
592.694 685.58 589.102 687.912 588.323 691.568 cv
587.546 695.221 590.317 697.684 593.532 699.592 cv
594.839 700.367 596.939 701.328 598.551 701.447 cv
606.643 709.535 li
658.201 709.822 li
666.846 718.832 li
770.887 718.832 li
cp
0 .862745 1 rgb
f
836.559 126.497 mo
837.91 127.846 837.908 130.036 836.559 131.387 cv
835.209 132.741 833.021 132.741 831.668 131.387 cv
830.32 130.036 830.32 127.846 831.668 126.497 cv
833.021 125.147 835.209 125.147 836.559 126.497 cv
cp
549.252 680.69 mo
549.231 682.6 547.671 684.129 545.76 684.109 cv
543.852 684.094 542.317 682.529 542.337 680.621 cv
542.359 678.711 543.918 677.18 545.831 677.199 cv
547.742 677.219 549.272 678.779 549.252 680.69 cv
cp
829.135 131.96 mo
830.008 133.338 831.103 135.016 832.242 136.01 cv
832.242 141.797 li
821.598 153.467 li
821.598 296.651 li
839.602 313.651 li
839.602 369.975 li
844.297 376.023 li
844.094 425.279 li
808.355 460.582 li
792.313 460.582 li
784.443 469.432 li
784.443 504.678 li
789.961 511.342 li
789.961 567.711 li
691.955 666.625 li
661.98 666.625 li
649.31 653.459 li
607.313 653.459 li
585.635 674.756 li
550.963 674.756 li
549.527 673.961 546.652 674.519 544.465 674.988 cv
540.809 675.773 537.671 677.947 537.633 681.685 cv
537.598 685.42 540.59 688.479 544.331 688.519 cv
548.063 688.553 549.929 685.344 551.161 681.818 cv
551.504 680.842 551.859 679.486 551.988 678.213 cv
587.049 678.213 li
608.727 656.916 li
647.838 656.916 li
660.51 670.082 li
693.398 670.082 li
792.922 569.637 li
793.422 569.131 li
793.422 510.096 li
787.9 503.434 li
787.9 470.746 li
793.867 464.04 li
809.773 464.04 li
847.547 426.731 li
847.758 374.844 li
843.06 368.79 li
843.06 312.163 li
825.055 295.16 li
825.055 154.809 li
835.701 143.137 li
835.701 136.106 li
836.918 135.086 838.063 133.254 838.705 131.96 cv
840.359 128.61 841.344 125.034 838.705 122.391 cv
836.059 119.751 831.779 119.751 829.135 122.395 cv
826.494 125.034 827.135 128.805 829.135 131.96 cv
cp
f
626.713 690.602 mo
626.701 692.51 625.15 694.053 623.242 694.043 cv
621.33 694.037 619.785 692.484 619.797 690.574 cv
619.803 688.664 621.355 687.125 623.268 687.131 cv
625.18 687.137 626.719 688.691 626.713 690.602 cv
cp
851.285 127.116 mo
849.869 125.835 849.752 123.655 851.033 122.233 cv
852.309 120.813 854.494 120.7 855.912 121.975 cv
857.334 123.254 857.447 125.44 856.168 126.858 cv
854.893 128.28 852.709 128.395 851.285 127.116 cv
cp
621.889 684.93 mo
618.238 685.736 615.113 687.93 615.1 691.666 cv
615.084 695.402 618.098 698.443 621.834 698.461 cv
625.57 698.471 627.414 695.254 628.625 691.719 cv
629.043 690.506 629.475 688.711 629.471 687.215 cv
640.465 675.826 li
696.217 675.826 li
799.221 572.33 li
799.723 571.826 li
799.723 507.168 li
794.367 501.063 li
794.367 474.964 li
798.443 469.227 li
813.185 469.227 li
853.146 429.763 li
854.031 373.104 li
849.121 367.04 li
849.121 310.272 li
831.635 294.28 li
831.635 157.405 li
854.688 132.309 li
856.205 131.696 857.65 129.215 858.73 127.301 cv
860.56 124.04 861.004 120.247 858.23 117.745 cv
855.455 115.247 851.174 115.467 848.676 118.245 cv
846.178 121.024 847.346 124.541 849.176 127.801 cv
849.685 128.71 850.475 129.885 851.352 130.827 cv
828.178 156.057 li
828.178 295.803 li
845.664 311.793 li
845.664 368.267 li
850.557 374.307 li
849.713 428.296 li
811.768 465.769 li
796.658 465.769 li
790.906 473.859 li
790.906 502.367 li
796.266 508.471 li
796.266 570.396 li
694.779 672.367 li
638.996 672.367 li
627.438 684.344 li
625.887 684.086 623.66 684.539 621.889 684.93 cv
cp
f
818.943 137.225 mo
820.363 138.504 820.477 140.69 819.201 142.108 cv
817.922 143.53 815.734 143.643 814.316 142.366 cv
812.898 141.085 812.779 138.903 814.06 137.481 cv
815.338 136.063 817.523 135.948 818.943 137.225 cv
cp
649.813 632.131 mo
649.785 630.225 651.314 628.656 653.225 628.631 cv
655.135 628.604 656.705 630.133 656.727 632.045 cv
656.752 633.951 655.225 635.519 653.314 635.545 cv
651.406 635.57 649.838 634.043 649.813 632.131 cv
cp
811.705 133.495 mo
809.205 136.274 810.377 139.792 812.209 143.049 cv
812.855 144.208 813.959 145.797 815.117 146.786 cv
815.549 301.851 li
832.787 317.838 li
832.787 372.38 li
837.438 379.005 li
837.438 422.26 li
805.898 453.668 li
788.813 453.668 li
777.943 466.876 li
777.943 504.945 li
783.217 511.861 li
783.217 565.557 li
701.59 647.25 li
670.195 647.25 li
659.484 636.008 li
659.625 634.418 659.121 632.287 658.635 630.906 cv
657.389 627.381 655.514 624.18 651.779 624.229 cv
648.043 624.279 645.055 627.348 645.105 631.084 cv
645.152 634.82 648.301 636.986 651.959 637.76 cv
653.529 638.09 655.453 638.465 656.947 638.359 cv
668.717 650.707 li
703.021 650.707 li
786.676 566.988 li
786.676 510.693 li
781.4 503.777 li
781.4 468.116 li
790.445 457.125 li
807.33 457.125 li
840.896 423.696 li
840.896 377.914 li
836.246 371.29 li
836.246 316.33 li
819 300.337 li
818.576 147.018 li
819.773 146.016 820.887 144.098 821.758 142.549 cv
823.592 139.288 824.037 135.497 821.258 132.993 cv
818.48 130.495 814.209 130.719 811.705 133.495 cv
cp
f
831.059 541.08 mo
831.059 539.172 832.605 537.623 834.516 537.623 cv
836.426 537.623 837.975 539.172 837.975 541.08 cv
837.975 542.99 836.426 544.537 834.516 544.537 cv
832.605 544.537 831.059 542.99 831.059 541.08 cv
cp
842.393 539.695 mo
842.393 535.957 839.363 532.93 835.629 532.93 cv
831.891 532.93 829.682 536.047 828.863 539.695 cv
828.318 542.119 827.639 545.402 828.863 546.627 cv
830.086 547.854 833.639 547.133 835.629 546.457 cv
839.168 545.262 842.393 543.43 842.393 539.695 cv
cp
f
843.807 489.131 mo
842.826 487.494 843.355 485.371 844.992 484.387 cv
846.629 483.406 848.752 483.935 849.734 485.577 cv
850.719 487.213 850.188 489.338 848.551 490.32 cv
846.91 491.305 844.787 490.77 843.807 489.131 cv
cp
850.033 494.906 mo
853.635 492.746 854.805 488.08 852.646 484.476 cv
850.484 480.874 845.816 479.706 842.211 481.866 cv
838.613 484.023 837.441 488.693 839.602 492.299 cv
839.769 492.578 839.955 492.836 840.15 493.084 cv
832.59 502.504 li
831.396 503.992 831.629 506.172 833.121 507.363 cv
834.613 508.559 836.787 508.322 837.98 506.834 cv
845.613 497.324 li
845.939 496.918 846.146 496.459 846.262 495.984 cv
847.551 495.961 848.85 495.617 850.033 494.906 cv
cp
f
776.605 671.531 mo
777.973 672.865 778.004 675.053 776.68 676.422 cv
775.352 677.791 773.158 677.828 771.787 676.498 cv
770.418 675.168 770.383 672.979 771.713 671.609 cv
773.043 670.238 775.234 670.205 776.605 671.531 cv
cp
866.584 124.987 mo
865.168 123.707 865.049 121.526 866.33 120.106 cv
867.605 118.686 869.793 118.573 871.211 119.85 cv
872.629 121.127 872.744 123.313 871.467 124.731 cv
870.188 126.153 868.004 126.268 866.584 124.987 cv
cp
859.846 433.645 mo
860.5 370.952 li
855.709 364.894 li
855.709 306.818 li
839.705 292.121 li
839.705 160.471 li
869.893 130.211 li
871.443 129.667 872.928 127.127 874.025 125.174 cv
875.859 121.913 876.303 118.12 873.525 115.618 cv
870.75 113.118 866.473 113.34 863.973 116.118 cv
861.473 118.895 862.646 122.415 864.473 125.672 cv
864.971 126.559 865.734 127.7 866.588 128.629 cv
836.246 159.042 li
836.246 293.641 li
852.252 308.336 li
852.252 366.095 li
857.029 372.137 li
856.404 432.194 li
815.266 473.117 li
802.088 473.117 li
798.691 478.212 li
798.691 499.971 li
803.443 505.047 li
803.443 574.473 li
784.43 593.701 li
784.43 642.494 li
772.756 654.482 li
772.756 666.674 li
771.459 667.654 770.223 669.674 769.559 671.07 cv
767.955 674.445 767.027 678.035 769.709 680.637 cv
772.391 683.238 776.674 683.17 779.275 680.488 cv
781.873 677.805 781.174 674.047 779.125 670.924 cv
778.299 669.66 777.277 668.143 776.215 667.15 cv
776.215 655.887 li
787.885 643.9 li
787.885 595.123 li
806.902 575.894 li
806.902 503.68 li
802.148 498.603 li
802.148 479.259 li
803.938 476.574 li
816.691 476.574 li
859.846 433.645 li
cp
f
1071.96 144.559 mo
1071.96 146.469 1073.51 148.016 1075.42 148.016 cv
1077.33 148.016 1078.88 146.469 1078.88 144.559 cv
1078.88 142.646 1077.33 141.099 1075.42 141.099 cv
1073.51 141.099 1071.96 142.646 1071.96 144.559 cv
cp
f
1059.04 182.245 mo
1059.04 184.152 1060.59 185.703 1062.5 185.703 cv
1064.41 185.703 1065.96 184.152 1065.96 182.245 cv
1065.96 180.333 1064.41 178.786 1062.5 178.786 cv
1060.59 178.786 1059.04 180.333 1059.04 182.245 cv
cp
f
881.465 73.5762 mo
881.469 73.5762 881.471 73.5752 881.475 73.5752 cv
882.691 73.5752 883.853 73.8125 884.924 74.2305 cv
884.902 68.4434 li
881.445 68.4434 li
881.465 73.5762 li
cp
f
961.758 145.517 mo
961.758 147.428 960.213 148.975 958.301 148.975 cv
956.391 148.975 954.844 147.428 954.844 145.517 cv
954.844 143.608 956.391 142.059 958.301 142.059 cv
960.213 142.059 961.758 143.608 961.758 145.517 cv
cp
890.394 86.3506 mo
890.834 86.833 li
895.166 86.833 li
950.318 141.697 li
952.185 143.423 li
952.33 144.574 952.627 145.753 952.926 146.632 cv
954.121 150.169 955.951 153.395 959.689 153.395 cv
963.424 153.395 966.451 150.365 966.451 146.632 cv
966.451 142.893 963.334 140.681 959.689 139.864 cv
957.478 139.368 954.568 138.777 953.144 139.601 cv
952.713 139.202 li
896.594 83.375 li
892.363 83.375 li
890.877 81.7422 li
890.938 82.1816 890.982 82.627 890.982 83.084 cv
890.982 84.2344 890.768 85.3301 890.394 86.3506 cv
cp
f
1038.59 380.099 mo
1038.55 382.007 1036.98 383.526 1035.07 383.496 cv
1033.16 383.462 1031.64 381.89 1031.67 379.978 cv
1031.71 378.07 1033.28 376.548 1035.19 376.581 cv
1037.1 376.615 1038.62 378.189 1038.59 380.099 cv
cp
924.277 97.7793 mo
945.877 97.7793 li
970.219 122.126 li
970.219 161.6 li
978.148 169.528 li
995.451 169.528 li
1006.81 179.804 li
1006.53 298.748 li
1040.53 333.33 li
1040.53 371.077 li
1038.97 373.916 li
1037.42 373.806 1035.43 374.223 1034.11 374.643 cv
1030.55 375.777 1027.29 377.55 1027.23 381.288 cv
1027.16 385.022 1030.14 388.106 1033.88 388.17 cv
1037.61 388.234 1039.88 385.154 1040.76 381.525 cv
1041.14 379.936 1041.58 377.989 1041.5 376.479 cv
1043.99 371.966 li
1043.99 331.914 li
1009.99 297.336 li
1010.28 178.27 li
996.785 166.069 li
979.58 166.069 li
973.678 160.168 li
973.678 120.694 li
947.31 94.3223 li
925.685 94.3223 li
899.166 68.4434 li
894.215 68.4434 li
924.277 97.7793 li
cp
f
929.459 92.5938 mo
950.197 92.5938 li
977.137 119.813 li
977.137 156.027 li
983.232 163.477 li
999.447 163.477 li
1012.87 176.041 li
1012.87 295.574 li
1052.63 336.496 li
1052.91 381.131 li
1053.34 381.07 1053.78 381.028 1054.23 381.028 cv
1054.97 381.028 1055.68 381.121 1056.37 381.279 cv
1056.08 335.086 li
1016.33 294.169 li
1016.33 174.542 li
1000.81 160.02 li
984.871 160.02 li
980.594 154.793 li
980.594 118.391 li
951.637 89.1357 li
930.883 89.1357 li
910.012 68.4434 li
905.102 68.4434 li
929.459 92.5938 li
cp
f
1041.99 408.285 mo
1041.96 410.194 1040.38 411.714 1038.48 411.681 cv
1036.57 411.648 1035.05 410.072 1035.08 408.164 cv
1035.11 406.252 1036.69 404.732 1038.6 404.767 cv
1040.51 404.801 1042.03 406.374 1041.99 408.285 cv
cp
1046.48 396.031 mo
1041.01 401.731 li
1041.38 402.092 li
1040.04 402.161 1038.57 402.493 1037.52 402.828 cv
1033.96 403.963 1030.7 405.735 1030.64 409.474 cv
1030.57 413.209 1033.55 416.29 1037.28 416.354 cv
1041.02 416.419 1043.28 413.339 1044.16 409.71 cv
1044.71 407.469 1045.36 404.507 1044.49 403.093 cv
1048.95 398.445 li
1047.98 397.799 1047.15 396.978 1046.48 396.031 cv
cp
f
1012.04 149.457 mo
1012.04 151.365 1010.5 152.914 1008.59 152.914 cv
1006.68 152.914 1005.13 151.365 1005.13 149.457 cv
1005.13 147.547 1006.68 146 1008.59 146 cv
1010.5 146 1012.04 147.547 1012.04 149.457 cv
cp
934.057 81.0684 mo
957.121 81.0684 li
988.662 112.05 li
988.662 130.419 li
1002.38 145.944 li
1002.35 147.46 1002.79 149.319 1003.21 150.568 cv
1004.41 154.107 1006.24 157.331 1009.97 157.331 cv
1013.71 157.331 1016.74 154.303 1016.74 150.568 cv
1016.74 146.831 1013.62 144.618 1009.97 143.801 cv
1008.25 143.414 1006.09 142.972 1004.55 143.182 cv
992.121 129.111 li
992.121 110.598 li
958.537 77.6113 li
935.504 77.6113 li
926.469 68.4434 li
921.617 68.4434 li
934.057 81.0684 li
cp
f
1031.64 264.427 mo
1031.64 266.335 1030.09 267.884 1028.18 267.884 cv
1026.27 267.884 1024.72 266.335 1024.72 264.427 cv
1024.72 262.516 1026.27 260.97 1028.18 260.97 cv
1030.09 260.97 1031.64 262.516 1031.64 264.427 cv
cp
936.984 73.8662 mo
958.271 73.8662 li
994.389 109.74 li
994.389 127.846 li
1007.5 142.156 li
1016.63 142.156 li
1018.63 143.612 li
1018.63 258.252 li
1021.97 260.897 li
1021.94 262.416 1022.38 264.284 1022.8 265.539 cv
1024 269.077 1025.83 272.302 1029.57 272.302 cv
1033.3 272.302 1036.33 269.272 1036.33 265.539 cv
1036.33 261.801 1033.21 259.589 1029.57 258.772 cv
1027.82 258.38 1025.63 257.928 1024.08 258.159 cv
1022.09 256.579 li
1022.09 141.852 li
1017.75 138.698 li
1009.02 138.698 li
997.848 126.502 li
997.848 108.303 li
959.695 70.4072 li
938.422 70.4072 li
936.469 68.4434 li
931.592 68.4434 li
936.984 73.8662 li
cp
f
1107.13 373.153 mo
1107.13 375.061 1105.58 376.611 1103.67 376.611 cv
1101.76 376.611 1100.21 375.061 1100.21 373.153 cv
1100.21 372.337 1100.51 371.597 1100.98 371.007 cv
1101.54 370.447 li
1102.13 369.983 1102.86 369.696 1103.67 369.696 cv
1105.58 369.696 1107.13 371.242 1107.13 373.153 cv
cp
1001.05 107.147 mo
1001.05 124.72 li
1012.44 136.105 li
1020.22 136.105 li
1025.26 141.144 li
1025.26 245.994 li
1037.65 259.251 li
1037.65 310.86 li
1097.55 371.048 li
1097.7 372.202 1098 373.386 1098.29 374.266 cv
1099.49 377.804 1101.32 381.028 1105.06 381.028 cv
1108.79 381.028 1111.82 378 1111.82 374.266 cv
1111.82 370.527 1108.7 368.318 1105.06 367.497 cv
1102.89 367.011 1100.04 366.427 1098.59 367.183 cv
1041.1 309.433 li
1041.1 257.886 li
1028.71 244.63 li
1028.71 139.712 li
1021.65 132.648 li
1013.87 132.648 li
1004.51 123.287 li
1004.51 105.709 li
966.977 68.4434 li
962.07 68.4434 li
1001.05 107.147 li
cp
f
1098.05 343.945 mo
1098.05 345.856 1096.51 347.402 1094.59 347.402 cv
1092.68 347.402 1091.14 345.856 1091.14 343.945 cv
1091.14 342.034 1092.68 340.487 1094.59 340.487 cv
1096.51 340.487 1098.05 342.034 1098.05 343.945 cv
cp
1006.82 103.119 mo
1006.82 113.488 li
1032.03 138.27 li
1032.03 244.835 li
1043.7 257.512 li
1043.7 296.742 li
1088.43 341.472 li
1088.55 342.737 1088.89 344.083 1089.22 345.057 cv
1090.41 348.596 1092.24 351.823 1095.98 351.823 cv
1099.72 351.823 1102.75 348.795 1102.75 345.057 cv
1102.75 341.321 1099.63 339.109 1095.98 338.293 cv
1093.92 337.826 1091.23 337.274 1089.73 337.878 cv
1047.16 295.31 li
1047.16 256.161 li
1035.49 243.485 li
1035.49 136.821 li
1010.27 112.04 li
1010.27 101.663 li
976.262 68.4434 li
971.314 68.4434 li
1006.82 103.119 li
cp
f
1046.78 238.108 mo
1046.78 240.02 1045.24 241.567 1043.33 241.567 cv
1041.42 241.567 1039.87 240.02 1039.87 238.108 cv
1039.87 236.197 1041.42 234.651 1043.33 234.651 cv
1045.24 234.651 1046.78 236.197 1046.78 238.108 cv
cp
1037.07 124.726 mo
1037.07 234.939 li
1037.13 234.939 li
1037.16 236.388 1037.56 238.064 1037.95 239.22 cv
1039.15 242.759 1040.98 245.986 1044.71 245.986 cv
1048.45 245.986 1051.48 242.955 1051.48 239.22 cv
1051.48 235.485 1048.36 233.273 1044.71 232.456 cv
1043.41 232.163 1041.87 231.841 1040.53 231.786 cv
1040.53 123.28 li
984.978 68.4434 li
980.057 68.4434 li
1037.07 124.726 li
cp
f
1053.97 217.458 mo
1053.97 219.368 1052.42 220.915 1050.51 220.915 cv
1048.6 220.915 1047.05 219.368 1047.05 217.458 cv
1047.05 215.546 1048.6 213.999 1050.51 213.999 cv
1052.42 213.999 1053.97 215.546 1053.97 217.458 cv
cp
1042.26 121.263 mo
1042.26 210.447 li
1044.36 213.249 li
1044.13 214.852 1044.64 217.12 1045.13 218.567 cv
1046.33 222.107 1048.16 225.335 1051.89 225.335 cv
1055.63 225.335 1058.66 222.306 1058.66 218.567 cv
1058.66 214.833 1055.54 212.622 1051.89 211.805 cv
1050.39 211.468 1048.56 211.078 1047.09 211.124 cv
1045.72 209.296 li
1045.72 119.83 li
994.365 68.4434 li
989.475 68.4434 li
1042.26 121.263 li
cp
f
1061.15 201.553 mo
1061.15 203.464 1059.6 205.011 1057.69 205.011 cv
1055.78 205.011 1054.23 203.464 1054.23 201.553 cv
1054.23 199.642 1055.78 198.096 1057.69 198.096 cv
1059.6 198.096 1061.15 199.642 1061.15 201.553 cv
cp
1049.46 118.095 mo
1049.46 194.779 li
1051.49 198.251 li
1051.5 199.727 1051.91 201.473 1052.31 202.664 cv
1053.51 206.205 1055.34 209.432 1059.07 209.432 cv
1062.81 209.432 1065.84 206.401 1065.84 202.664 cv
1065.84 198.929 1062.72 196.718 1059.07 195.9 cv
1057.38 195.52 1055.29 195.091 1053.75 195.27 cv
1052.92 193.843 li
1052.92 116.655 li
1004.39 68.4434 li
999.484 68.4434 li
1049.46 118.095 li
cp
f
1054.07 115.788 mo
1054.07 173.419 li
1056.39 177.806 li
1056.08 179.417 1056.61 181.838 1057.13 183.355 cv
1058.32 186.894 1060.15 190.12 1063.89 190.12 cv
1067.63 190.12 1070.66 187.091 1070.66 183.355 cv
1070.66 179.617 1067.54 177.409 1063.89 176.589 cv
1062.46 176.268 1060.73 175.909 1059.3 175.913 cv
1057.53 172.561 li
1057.53 114.353 li
1011.47 68.4434 li
1006.57 68.4434 li
1054.07 115.788 li
cp
f
1072.19 165.303 mo
1072.19 167.216 1070.65 168.763 1068.74 168.763 cv
1066.82 168.763 1065.28 167.216 1065.28 165.303 cv
1065.28 163.393 1066.82 161.846 1068.74 161.846 cv
1070.65 161.846 1072.19 163.393 1072.19 165.303 cv
cp
1060.7 114.343 mo
1060.7 157.044 li
1062.75 160.454 li
1062.22 162.03 1062.8 164.757 1063.36 166.415 cv
1064.56 169.953 1066.39 173.182 1070.12 173.182 cv
1073.86 173.182 1076.89 170.153 1076.89 166.415 cv
1076.89 162.681 1073.77 160.468 1070.12 159.65 cv
1068.81 159.355 1067.25 159.029 1065.89 158.98 cv
1064.16 156.086 li
1064.16 112.917 li
1020.07 68.4434 li
1015.2 68.4434 li
1060.7 114.343 li
cp
f
1067.33 110.017 mo
1067.33 136.99 li
1069.44 139.68 li
1068.89 141.251 1069.48 144.001 1070.04 145.668 cv
1071.24 149.207 1073.07 152.436 1076.81 152.436 cv
1080.54 152.436 1083.57 149.406 1083.57 145.668 cv
1083.57 141.934 1080.45 139.722 1076.81 138.905 cv
1075.53 138.618 1074.03 138.302 1072.7 138.237 cv
1070.79 135.795 li
1070.79 108.596 li
1031.03 68.4434 li
1026.16 68.4434 li
1067.33 110.017 li
cp
f
1098.05 264.427 mo
1098.05 266.335 1096.51 267.884 1094.59 267.884 cv
1092.68 267.884 1091.14 266.335 1091.14 264.427 cv
1091.14 262.516 1092.68 260.97 1094.59 260.97 cv
1096.51 260.97 1098.05 262.516 1098.05 264.427 cv
cp
1073.38 106.556 mo
1073.38 127.323 li
1085.77 139.425 li
1085.77 257.606 li
1088.45 262.069 li
1088.57 263.3 1088.9 264.594 1089.22 265.539 cv
1090.41 269.077 1092.24 272.302 1095.98 272.302 cv
1099.72 272.302 1102.75 269.272 1102.75 265.539 cv
1102.75 261.801 1099.63 259.589 1095.98 258.772 cv
1094.11 258.351 1091.72 257.859 1090.17 258.222 cv
1089.23 256.647 li
1089.23 137.969 li
1076.84 125.867 li
1076.84 105.141 li
1040.73 68.4434 li
1035.88 68.4434 li
1073.38 106.556 li
cp
f
991.416 148.686 mo
991.416 150.599 989.867 152.145 987.959 152.145 cv
986.047 152.145 984.5 150.599 984.5 148.686 cv
984.5 146.776 986.047 145.23 987.959 145.23 cv
989.867 145.23 991.416 146.776 991.416 148.686 cv
cp
930.607 86.833 mo
953.25 86.833 li
981.746 116.345 li
981.746 145.614 li
981.762 145.614 li
981.813 147.04 982.197 148.667 982.58 149.798 cv
983.777 153.337 985.607 156.564 989.344 156.564 cv
993.08 156.564 996.109 153.536 996.109 149.798 cv
996.109 146.064 992.99 143.852 989.344 143.034 cv
988.059 142.745 986.537 142.427 985.205 142.366 cv
985.205 114.947 li
954.717 83.375 li
932.037 83.375 li
917.107 68.4434 li
912.217 68.4434 li
930.607 86.833 li
cp
f
1015.64 327.794 mo
1015.64 322.54 1011.38 318.286 1006.13 318.286 cv
1000.88 318.286 996.619 322.54 996.619 327.794 cv
996.619 333.045 1000.88 337.304 1006.13 337.304 cv
1011.38 337.304 1015.64 333.045 1015.64 327.794 cv
cp
1 1 1 rgb
f
1037.09 351.819 mo
1037.09 346.569 1032.84 342.31 1027.59 342.31 cv
1022.34 342.31 1018.08 346.569 1018.08 351.819 cv
1018.08 357.074 1022.34 361.328 1027.59 361.328 cv
1032.84 361.328 1037.09 357.074 1037.09 351.819 cv
cp
f
1052.91 381.131 mo
1052.92 382.48 li
1053.94 388.248 li
1046.48 396.031 li
1047.15 396.978 1047.98 397.799 1048.95 398.445 cv
1057.66 389.365 li
1056.38 382.308 li
1056.37 381.279 li
1055.68 381.121 1054.97 381.028 1054.23 381.028 cv
1053.78 381.028 1053.34 381.07 1052.91 381.131 cv
cp
0 .862745 1 rgb
f
881.465 73.5762 mo
881.477 76.5547 li
890.394 86.3506 li
890.768 85.3301 890.982 84.2344 890.982 83.084 cv
890.982 82.627 890.938 82.1816 890.877 81.7422 cv
884.928 75.21 li
884.924 74.2305 li
883.853 73.8125 882.691 73.5752 881.475 73.5752 cv
881.471 73.5752 881.469 73.5762 881.465 73.5762 cv
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 19.1.0
%%For: (user) ()
%%Title: (plata_13_grey.eps)
%%CreationDate: 5/9/2016 5:17 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6kuM"[dOtIrIb3k3OCp6ims+nL,9^T-K>E(tB.ThfaCql6WcJ,!fD``&OaGFTg2rZc&uF.AXb/u$7:p)S)>h7&I'_G'<#b#r
%k$P/,/[M/jR[0ZIkS`bps7bHfbN_C?\Z1XTeMKYI'q45j4_Ss3gWaccl"i7nc$!_WZh^ZOaR#5<l'G<1@o03`s30P>V=Gr*a_fc[
%`G-tQ2V[n&2reF+#+?ppq-Ac%d/`s2iU4g2SNqrr[nBAfZ$G2Y(]!-V=<@INnG+1dYBIME;Rb@rHsK.hgpSFp*sSj1r'5n:Ap!n,
%!r\K8"D=Q;XXeI)i`>\aG;4^nQ83e=5W[]DTo!mjT;MT8s3eRd&H6T:a8_'e%KD-sNJs:1A=ibu!p224JYQd-Rsm7p#CU7e5SeU,
%fYO>UhPujP!?[[rk@A4+jSqmP,A^%d^^X#_aBGrGc-Wc1TCI:fCDlb_f?``ZC)ijen4,A2F#EPE-rkl-3mM!BHW^5**EtoTlA(!u
%/SMn7<4fMY%`<ZSMqqtkW)<G:J7>Y!Vjfr9s/T<CQ.kCeQ\_qMles6m1L;o]RpLN@oIBq#l"ZBp<mWg@^?;>q(q*r&Wa$GqCY89G
%B4`.$^k#o$Qi934S<8k4NJg(V6o_]71YO3cghU!;X,U,sVeu$R8($RZG-qsHWG?$,q%"",ob.;fL]=8Q9=T2X5pKXKDObP2-4!r$
%mN,j&X[Zm.=iW7=nBX4ZH@p*$Xa.'uNW6i0d1F!W_M&"<Djo1Lg;(N(qS+u[Rs2/Fld:bHg<Er>]5cF"fDdG`.a?Eb6d'3L)>SD0
%ZbZSLs8Qo7g0,KFT.Uo8nTY%bDDhD!C<]dg?tks>`;Nl=;/0b=LM4Jol6#XkM9q-87)P\p+k;s%[]Q4Xj\`P4_"cM<8Gn]aWqY#M
%fqt6:am>StTRY<"bhY$Em8B>^"okaUHHa0nm;28nE6XK8DQb!!(AH_"TPfOe;OL:]>-$%8k_dojF?L/XmHSDcQ0hNi6c_!`eF*=h
%CgUX[Q(Si_m50G:?3]6V`Sds-qVM^o?g:sZ4:)pk:39,!c^4c!'`q#aib"$jm(?V=>u]"8I(S"@a;d(,[:o1E^IL(+J)d0J1F3sq
%T\\79#X6/4WWn(h'"=)h;`n:6CXc&Mj"/FfDTl.X9"4?u-?3ml_`pd^o/kLO<5a%VX+&d(<BKkeoH[t>DGITE$P%Z/\j7gKH!'4J
%NS:0,T;$a3i#D(3DkDaZh=85K]AmX[:AqD$WjfipV;ZSWqm1$iG[om?=7$4^"`Msr:j4^N(St0JgDmXaN/+c98BN9UkfV%Mq5S6$
%j5KkO`9"R,R[uosB3+8(+*MkbO?UU4(TM&F2l65O0gDdO(B1>c)YE%sm35t6RmYtMR2Y5AmF#C3njTreBa5)b@:YsGPI-9t`.,A5
%J2[A9TKQE$4?92\)s@/or[?<CWm+mP1hi3>dK3@jC8M`"?R\hH2)u@m/I`>BK()\]U=r=#1)E7Lr1]Y^S$:kIctTfVQ8"B?j*&Go
%SP>dl#kkZt'UH;sP?b54;**+FUK=Rn^^?'ee#dlKG[e/64saFA;%CV7L%H:q)q!T-iK.3e*fnHXW=p!#_9X02Sq^S^[%A%QNTOZY
%8da0p"?YBKY)kKlZENqsO>Fmde`bQXb2(JfWK9_1SeOr0?K9FJ#G#0QNI2!NVIVSdX]`DVc/Ug5E&<Sh,h@AAc;3LtTVIQ8ZIoT;
%<KZ9;ihk1!A_"e#2lof@U",qM3GeECjktj&*7A5Z$DE=6(Uh.@CmCj,0#)*8XEfe4^lq*(Q<B]HE`7P+gm"9dAEKcEFII7$glsm9
%QUor7]kLM/\&Xk/@A;(b\`pH^;I%8Q/N:0#k-j(#QCHWLs);1[`OH*&>WO.-h4CrjP<G6>R@1>CaO808Ig!0sMc-DIk<*i$$5b]$
%ra,+MXVu8Y>:B])<&o^mPp)6*4t4->CV?boeI66<01roQVcmirYJtIkp#ZtL<_4O<.MELtBlHV<2H2$%2l+&,;pW.GB4md.Hd-Dp
%iOchE\BX(dY<cee2IDjoPPf]G[GB7YB7ACZp]aa1M(*[Q$<11p\Q:;h\,L,")aP\XeI?_j(kV#BgMAc/h9q;PMn;Xi^D(rSSR22p
%<"9D]V0!F)f6klms!ook.!rY.8Et]?d&2kmY1T2/K',h>VaB!5TeYZCMA7?V)ZNQ``kNn(A*c.TNUBP&=2a[u>K3A"%6I1#Qq=.;
%eqF6EkieE1a?XLV1)H(:i^YqcE_IDW8>/"MROJ^KNM]hR^J&^t0.2"l;i'V[X75Jn6(`$7Y&Zr'iF#@iLJkb<]r21l1i_09P)M>]
%,Z??2Iq--=6GB?Mf.NEua8]oGVbOVV`7$du3?>^tq`MYhcD7n4rhA5ooD#GgQtQ6mD9fHmZgTqJPu9C!N\at5-i%#$c(pPNr\9Hl
%2Ohrp^)[@V:(`N!m<MBO2T<l&G,\C,V)dM=iM6sm;FR:n>@qO)Y#M_A3;b-NfsKc0GOpmQVJeBIXUEW=9VF^FTc#Uu@oL^nD?KM,
%9i&!j'pgrPqB&j`[icbNe[r)#^YUF!?F+^f-h'agG?s\Uc@W``&*$Scf!O=W/WIb0J)*>;YPV6Dm`sVRrmN^TbKL6`'ZeLUi0j*:
%"U?KN*h*tB7O+iP"uWQYT-ah!e7DORQ:hf$\N,,V>pb9_<I&%F%\EB:_M"O-UgXVZT-n\1<1hVRA2QHs-3Z02,&I\;:9.DF#P].\
%DQ,LW,,\bAiDP==B>W)R57*SmqGZk[F$.>;B,ZI\CcKs(C?g(L$D6&=n@/c=)#RZ%:-MX#*Kuk.rg)h#VYt\6H/(KFofc85#A3/M
%Va0CQVl-&]9[c#^:UHt?5cRQH5Z:pe"A7)&D]"&1\.,g;'U#k=,:KBZcR*_?N:0cD^as@a.ARm,7LC=jQ-6jen!_UOhf0q\:C=4I
%^ue)nbUSl-50'#pYGg^(PkM/Bm%e,U3):ir<P(hr@])JfP,8ML[$h[IV:qQ<?R\epM;'Vi;p&]d3Q2od=h@g4,EoXj`$d0jV;=mU
%V`,u>=d0iTH7I4Pr4?!K$OX5BGk4UnWA)]A[j_t:%5P9L^6iQ-9Tsra'kL,:?(ZU':g(gpQ\ps'#iNqgU6KRp/kR$mAju@9F&>Ds
%b<-U&It_5:dpPXc;,T-&l-Df/(!9>J2W^[/6"X/nbrceRb&!V'#q38=(F@UkRX-$!RrVBS+>YN1DUrl+;Ote6hi?H[Mc.8`\L;0R
%R?_"VG=H:Y0rHAK=l+[E9_'`I]6IY^%'TIub[,:Hff=lG\r'(^i)\A]b\`sd\0fGA"?[+A[M`dA7e95:'/*I2lTW%1_^[H`^311(
%k03X)MCk4e[5hT`o<k"ECKkY-bgj,UV60t]e2^U"F1$KU=.:^U[n9emF1"#0qaY_8A45Wl!qGYlgQE7TnDAt2B.<m@^IC/s7dg0m
%V:^Cq24@mI5+8aaN1D/D:QRb2Q,Ar%4"5%5+7j3?rT[`UD80-JFY\M,O4-SAm@`=KZ=_%V'lU'0.`#8qEV5)GqpN&Z6)e'Z<L=rW
%G#G8u@j\NhPbunr=dnmEc&:#oMphMEXDUm4)EeN^o;XV\3LYo@AnW(<VZ1BKqS+oaS,WFFqB>HWSqTk`!kCnAQYBBXDV$iGrWe2G
%AFae?I;""?P5*M"o1r'?T9)M3:QN%[r=eL]2eLe>F1GFl2*5?[me*aB;u\..Rj962%'c9n/s*qGFEpjn:%C!bBOY^h$67LLoudYJ
%ob:0QbH(.!_a0o4*3P1dp#0:Qcmig4],1.5Rmr"RTQEl0nkZr8]U;Ta.2hrNMD*fn+ZYI3L`;rQbTm;8?i&%-^[q6hFN/eX:j?s5
%BR([!S]?5X,Q9e).*4UN4-0Eej1g"egqrh>CQF8O)qnIf9l_<HSPf^>Pl",91#I9#G96@hZ0Y.-3NHe*]hYfbClg>bUnP&e*Y[!2
%dU&H]P_I!O>#,L+?U:gFr,Xu8[HdQVQPuri;-#LWG(Ue^VDY/Wjh:@*.HP9iXhX[ro=eq*[-Dtp,,(5>UUc.2o$GTDA/"$cWEB&Q
%9f@3Zc.uoO2d*'fcTg8JX_ooAkh",76-r^Y/MU?Pfi:1RY5M47eq3<n4/f5<gSMoTEUC=:C_A%<;Kt!M)Z;1_^F@QR@Q_M#JQ(gj
%eU"EGeJAqspikA2_JYf/PoUGud$c;MRo0eb@n3M:1J.:d)Y:TVPXus2DuJ31D'tUtBXl7(/jY@V&?b^2?ErHAP>g#711P6TpF$c)
%cJ:u(6R05K'7Ka4D+o*?GaUX"k)Pe=j(7Y'R6+a;NgKdBUk5()*&#GB_u?"5j(4*"d(/2u-B=G7kt/?3cY$u48;G?4RV<;\/M/f!
%H_/[Ba@)X^*%&dqB"Q\`RK<N=?>Lep%b"a#,#,n4H*N5+JVeMRMbU"nYa^++p_uHZ0d0i9]3hRE)8hmNa!kWCdk2X'Q'g^NE@r72
%??9oI"_;q11,H4U?@h?a<FEDS\^%6/c)WKlMG4%)Fc$Y^8sSP2o8hDV[TE8RW_UfGj\Lk.0_<WD;g^"!P2]-2gh9T]Pm3#Ej?Ods
%Infh5R!S2N4?Mj3?/10X:eAclBC4"50ol9%)rNq@h:lWP9\[\EerOCg/[S_pTrmPPKCKYE7UAke>c0q5NT)c\]h,]?'M/.)Xea+4
%;sbodN0sm<M]c:l>1@M#MUXl7O"i;rI*;F)cJ4I86T335q_>`fi5\B@_q^;-[?g6^h>+T'A+%C)[Zd-V1$3qD)=_57F"F\9.9-T*
%D7@j:g8/i!<.!)qVFessIUi*s)L`kYQ2fu_T#kMXAlI3_3A#B*@QXA<$QA+`G/-B?8`A66*d4U?nl>[u5%>MuNiKKd0<4nQ:C=Wh
%AYU0WqB"J(5>kpTCcnsQQ,8_B1M*0,+EQ;jrk-TS.RK\NTqO:_IU6Z#"D76d6beV%gr;BBo@c<.$gYpck"2BTT=(0]1h)?39b*@$
%+/eB^e(@aHe;D<8EI-E9Cs_Wkr#GC`VnF"j`S#>?cE!S50u,13HnCVO0I*aSRm$>24%`F*o*7(DmZe!1Bi"HNDH!iB.V.\`?4!OI
%<.kln7HEO03Xl$2cVetW=uL0T">-\!?1B`8MGK@\1io75>d)nK[55;Rk-j(+Dp@(+Rp0rTCMqi8TXcp=\*!ZKem&Qis0c-Q[kKs=
%bGH\i0K80lc^[XJCiaZ8DU-MO\[a^Z2s:1fk1kiC$OjUg85-WeBAY&"/ep-_PA])J]&RD/Eo&FF&aQp^T"Ah]/P':`bR61"rlIUO
%#P9hC)7Z*<.l"5g3NjqfK68IeLtqB+?@Pb%N6+&SCS]%n-eDEqCSgU`>"1d%<iK?kr`W%Xg?j!3e^A]A<P(iM?-4hDcceOEM9i8.
%UETt^-?%;6o5=P?Kl<jFadMk>bdE'0EjZAnHJH/=]^=:"02I"NEjOHWms1h9&dE\VMVqB^Ja0IE8u:\B[@S(5IpSps]O+U04(#OY
%2^XY+lnBmd;Ikr4HL8%:3CnL5rQXL0m!j^YlHdo(N*K!TU"rr@n9.]oisBJmYE\J67,*QT!&Fd?.K-k^n"gAk74fm@%l<GVeE$F2
%l;OD!3l4Y'0];Nj>R3-:*@1i$;k$F"J&;epDZ/+#2M+p)gi/T/<p7E>hEYEgmP7l2k,R6%:pmp_8!SR*T&m=6e[\R7)bSL_-i2R6
%EiAcL9IiQ@c@pc&&sR;[FlkH$md0pKO!]Q'^V$Qp8b+R^BN!oV#)>#orc3T,5(s_qGu^=t*;&JZLTBtrqJ`YcLI8%Hm9\:p<2KP+
%8j]D!kYAm7]PU6][;'p#<5$^51Dc'Mb`o#232XN#g4a#T_(lgeF5co/1:O,e5c,>GF4iPMZ>gXCaRbH%:92h7H[*TtSB#PR`Cs1J
%/ZdoP]=oaY0/1RAh!A#d\s;0!)dBsfL39pB02,=ud;UPW1s?(5f/&llhl+:6aEVOscSW*]CcDe]C[-W)$gQQY-DP:0\HG.[ftHgV
%9fJQO?/!\C/b/B.?c5\0%aBB\N0P)<q:$5&=Lel@14Gj^Bd2d-rK#gQ:@e,)E05u]QWs3Vd+\uI88b)M:-D68-ijQpF=XBmcZTr;
%c-Bqd8PN"P3Sg+QViq@Ni\f\rh4g<=W,EWmrbrX[Mq.M(r?'L3_VNXSRa[f6n"c(;iS/!uhktT]p9gJG2_"G=jb&t3,I`NNZ>N.T
%gibH"0dj;!PF6msR9>!5aWYK[TT6fb]@?&7V>6:k'[lo]F+)j=Tu#6*4`7-Ac@d5jLGW..HLCVHFZQ&`QE/Qu(=%D%YO`IOhihOF
%RoXLGO!$U,D<oot<hg:U%#JCN5UUK=NI;_!9@U$kGWn*j2NkiQli5hKpbtutgTU;6^O,le(0XP;dQ@soq0&r_OkD<D9'8K%Ze)A,
%)TVfDO^C%?[9E6.jI^15e83^-d!pE(M\/0<=j1F,Jd@54jno>4Y#lc"\8$_US3!Gbr;SU5s"EoW^OQ3rr0D,B%oEqO6hg+nU\SPT
%s+O+Vn<rL66u;6@Oj4mi'>Cf.eU"837#eRt*rZhM3T5H08q7o.J$QNM3L6#*59//%aXYM<T&Fti_f[QS2<YS,F:I!E+,4Yp56#%q
%Ica!-_h=FV++E0UYNW/3"T+Ck-aT<<r)Lp>r^B$mi/5n*'j;_mM1^bNo^$(?&u^iJZi*cRk]R%oDZ>s+nMH5lCcRr=Kj)'"3C(p"
%Hqgrs;AVM=ciBVSRiTPVH,/FW^TjL25Q'jIp<03hDrI(!9<"Q4:<Pd2SnaZ0oRH\7Rd.Y[O0O[`\f#5Kd$jjQ@<bGAaaZj<`,,4h
%_dE)cAdq-+In:tD!53+O[HKr`goHXX;CH[%6QVa[#m$]"r3K1p&g/?98,RbBoV0?fr;'b0o/Fp7Q'ci9Eikf"i+1eTUN>urWSL\r
%X!:GNr%Q^aN`OWns6%UEeS2FBmuNH(oVAq&V2%A2%IZlGm7K9DSdK!Ic,P"9OkS?Sji_%JD'rX]f_"VXMZ8,MY1:H3S>874.\'23
%DFU)DSbV1$S11Q=Oe+.tm;rn"n1=;ph.D'Bf\^TndFCtu=rq3&0q.a!qS0O!LZ9&Prn$JH?!"RXp?*.:pC)$3:9@^64`"BH4?3[>
%[He;bh-j(c]3`koD*1R'1S&dp^SV,]TTmt`@k:f_^-'UIM8)29*U&JO/_tW,Gnl/h&PiFJR4%fBo/b)jRpFGoG(R'g?FtMIhT*cs
%)=B==C'=,uE@^Y4R&<<4+Rq?)l_k'E;M>gd^L8krJ%_4r($-`57<==:rLtND$\A_!nU4kc9s$%WXm;Cr)ae@=YEdci29pQFo,tBs
%D"UsTI1G+.;[^XE[&R9Zb#4mQZdt.LOt0QdFY3o-V-5ah!2^D^\5fP.#4H3&ea1;ck-d(V?FQ=_.!<*e]DCu(E*Pj_glP4;e#\hG
%6&$(@2ZHcmgTV)>g'9i@C3NICV040&<SfM9[I9(mq6E9jEO49AS@>!8<[HJrR9$:%Znn7f]iU,5<b&js-=+R[>GX5!cdP/0$8qj-
%0L4+)$WIQTgG\H"Z-Y;oaC$+EoXl24oK.5?DUeFcMb*3Gm[0R`[116"ZdecFe2cmMUVu-X[t@H&rZfK("b1YN>Ers4FBYeH]>')<
%hC.A:dP5ls#+ZWme'0.#3mj50\p&eP77;ZR[$cPs#d'FQjh;4O]l&`V-#FI4[R\SCo%)ORO"Y7mdo,QUB_?,2X83l&c48WT[7tae
%3i,'@,R$rO)NoJ)@XpR6Yq*>=EH4TO;I6Ob/&>4j@R."8#.9eo/o<TX'=>4V*WC>k#`RL*1s;^6NhNY!ZGdDp^siI&#huKl'F4WG
%<rsCQG(Mr1>0(8t-`^gBQ2*%RgVmL$(=L2!TT(P#?Uq=%-Z^'N9<$=@AnZcoB1,*=d?+,lXkF%9SSl&b)5M-*-#*q3^l&\;T2sPN
%B[?\a?4c9Z!MA9GWuHtJCYCOpoJKC6DfQ/$-J=YKW%Zt',.nOQ.j)?LaZcir(,l0ug+>\r`Z\Ng<EmBEi8aTjpr,71HIue;V%f-[
%ar)q*`-EZ.3F=7Cp0*6bZa8q(f2;Kakq\@/n]_]j'90FN6rZH(U,[SN8FJUU@(VOW*X).NUU&LM7AIiG+jl7oW7m1NXOO!"Cfc52
%M!L=Ontt+-s#m1T*BLEpiiCgfs&A(F8NG@8`[@1R2Y`qE[YZ!OkM;e/mF;jimH\4'X#2XX[`>W(`5R=ea,S7#7`@\U8T-`N-HKdt
%Oj-06faP:E;g7Kqb+%#7lmTSgY+8sKBHq?kaa:Q3q8#/?f62*%$4M``Xo6-VC^aL.gDLn#R]Xtl)NWaEE>04!ng$,-T)<8nAja+(
%b0BaTr"s6CU)s`rQr\'5g[.b_jLg-ESK;V$\ZE57kt!GI[,Y(6eS7J71=Qja%gbqL%2`QHn?=A'"S_(Zo5qTaf$#C-f'qp`TL)rM
%]>SBJOq-$(K7l5PGcs/cdqZ?u!fQMK?:O<Slb%\74bZ)I4?La[3WZK,<\G)]."(OL?=H]c$KRK>l_X;dB;g5cb/C7M"n`&3%>d/*
%$C+AqQEA51]Sd@>NZK"]<P*p`G"p^lV,"$iXc\&IXif9n,rcOH*-J'Z<a2uDmNAKkRPtqL^7@,NSd%&HqQN(TchcKu/c.XsUT&fJ
%<U4`1ZSg0L_Nn@'b/pK"\(OBT<#a;tSQNl($^UMb6q0"&QaMu:rKSh=8],:M6#>cB(h$>7&`hmL?/98nhT9/"ogjPeE.dP4W.:AB
%`B&`X=+X3?]J7Rk*Q^*5Pr%^Z0tCleXBHPj.YJ7TKM@G;meu<'N,l%kXiE?F<DCW\"s&%,Sr2k'5gr8f+rOCp]WQ7dP&7Y.Uo9RT
%D8_PgcUco"1u&$OctN`SZ/.CUC)ii?4F93pW^^DN=P']l`fDjLdDe*B@go6*EiW7?FUb[?7cd,&>$@dmh.eNBTruCu%]i]GV:Z:.
%n2^\S<X!;`?d"\]XFipDCC-At$1gnsN,.,[`HSB=p^1RAqau];r#Ro?!&(oQ`fFn7DDte[g-F8iP'Ssf>s"1Y2g/Le.S`Y()^l^u
%;)>q/2i6.r`^s$k6Cg]L,Xq$D,q0`[=#0%^SMe"38o5"2P=D\J=gN*"lU/9ZmkhV>k,?bo&A#,nB&nMd8H4@cH@;8PE*e."j8)f\
%@nDaKN1hCO,gk'X1KmMnGbk\^d<prmFtQBt`<=f[(0UlIpdZ70^A*XVN]5>/*Q@pUC1[9j2mEa?TNQVDZa[,OH9TjNMM=_c-JV^u
%kUg[#hQ\e08`3l=/"CXVIQR@_QH`J+3f_*03nGB:\#ArIq*P?INmU,5MXI:%(u4JZf-jur/CI(7)`kkXM4qAS7O*f(>gmMjrD9XE
%[A\e'fu%Xg3&o0!2TbTpAA0T7*q/KG=j6eP>\0h`8Ztd%J"m]MC'9Hqg:30cGU2fTQKu;g<P[U[c0e#2nF`:B\ZgM1TMKl9m+C4(
%?i;LRm0E$b+?'2c7%?M)7PEJl$FIN@WDQNTL;@Yki%8B@*OlJtD<]$eO.fm+U6#'P;G8t'.G[[[%t;=KfIAb5)#U%J3lca<'>'-2
%$i+Q$VoTlrDJslF+XeRZ!5D^`pE"ci>!IK4BW^o8q3CbpD^E0GISmj^4`B,$<P5ZNn7].3b'*27mp9llpJs60]m-u$4^[%@nn<6B
%h(-+V/S!CZTNfu1:$WLB'[E&Qq\s>.ZB$rqQWp#?c>2GH9s_+5F/L%eHI^94^O3Z"Z#0`#S(4F_b(X[*dJ;-o4-bj`Tj&p/=EQjA
%kSAVpc!-f@Q?2`]:+*N!fY(C5k1o8;$eG::r/]R,A"'96VS,#23SJo55BG_srVRsc[$c>lorQ8YX'[g:08j0r<]f"2;ITAeYIO(r
%E^nOIIMKVim.C]u?]X#jD56f5odkU?h7R\kl$YYarF)D$n,1sCJ,\Y6#,4P12SYf4CXQQ#IhoICgNW3=hN.QE_j,QX=i?(nV+9#0
%58KR->@m^!_WHPpZF6?O?p7i<^KLQM['BGj?#_[a4b!,(e\-mKEk-:K^T'q2B0-nb[B;YA\aA\\n#OuWY:BA%KBJ:rg.Pe!\XgWn
%5CpW0`nII$PGW?NhLFA&29M!F92Bc`T"+GH:TLYqUiU/1g?!1"l#KdbL+F-IFl(Tm\W6gdf[MCOe]fHf3b3[5l,(S`OKZ4lFi!%s
%c@_,$mIbhH>Kaa?7k05[cd'4:mUl(Fde`j`k>gR7hH(cm=lTOVoZVT.&'+7o3Hj7;YZ9$?Q]'.H,1-(L*DQQ[Dn#53[/R:SBB`>6
%dl@-])iqj1BH$:1m^C+7=F+"Q=+@=oDnVJ1S',$nAMiGBYtYr16!J[/Chq]P4?n=q#!.4E^/k("jr9q)Zsjql05lWp:ojMpBF/&+
%-0P_4&'uf1(hV[I(J]4e$UNsdja;)tP]K?K+%q<o-a/#;PtI,*kFL(GDuKV>+5Z,Q2Y6g"Zbu(SNLsQZcY8i\p$q662Y<23q6Y:=
%0>5\9+*)_I_N3`@c0>i&akBnr_0L%lm'0<4q!>WY*`STuK\k\6qWlqncK!Nq_IDW7lqY(BEWn]0h,a7:de!40T7YKIa")#.*Hgi5
%Na?jT_oN:'DIP!1_t_Tm'+T.U2e[+C05@pZ<?@YLhq+J:[,RD]PNcKRqg,M42"Gm:.Gsd4%A$Z$jsCTt4:EC*k80[1mh;osDUkeY
%(V,`23n)@M;JYZHET-8,2Q*Z!I52T,Ip88)o^@Ub47Im^_Sasak(Rkq\[Af./]RETpY]PFREa\k"baHQ\#]LiOLr!3H%*$KES&A%
%%W^tbj*:&5p0ZD-pC2TG`R`3&WB]ZMr6+$k-;B[cg8un<Z[([LniIpH8$/,I-JH0.kap2`fePDEKsa!952H1sidPaH=Kk"-9@$pl
%a.&h@28ZDA<no1WDVeOLHdB>PX1s%sbd/(VHuD0ns6*MKq-)g,1O!s2iBE7kH79c*[C+e;@h^#f\=[gIB,?W-gXh4+B5-NqZ-L>*
%fqXlDXg`R!/91"SLR0/SV\rfj4Yhp7k>+<mhg[;L=r55iG7ViercSfn#=kD%hN-C53chc4/mt-X61^AMT"eND<K$/roS!FKs)db?
%Ph[%;/IC"1CT"kJKr7.rA'$Or.gUHpl^lQ,K>XAehY3kSmEQU>n+&V'YP2e(F,/X[D5ptAh"Qg$Q^_,mo)1`AK:RdCrDW/1GM#!_
%ia95NGT&m5)t!4]6TMI57=F`HrV>;^_f]=QmV/l9T/X./$hZ+J:F33XegicVlda%R55k05)8Soa8XOsuk8p!;fsIQ$^0WeV%"%uH
%^D?crl(knG1WVg:>,t3]Sfc<d575h,2/]C-U'78kEZgsN?5OY,Z2CQ@X34+$/P"BFeaY&p#bFL>jWUn1`VcFFe7adW:P8(f]+ciC
%E7US&[6$4:@.X2>UAM"ZhE&&jpRM6S3LAMqSq#_R7_"THD\JT_>PdU3RrFU1\Ti0M:&epe52VhN`kY0adhm:8K_n22<UE"8$b*-S
%8#0Gg:E^W'+&"i1Lo[aOF"E9&r"T^@IdR"[BS4Xn$M(]]2EosM8`CK6bOBuN%m8+8r=X3t1Vt/(@#`/NpQZ%1J[O4LGgcj/VbV!D
%BT2rP,]9Y*r:sLQX;F`FrU<MK9mgLM7k<>L+f.>=`i(D_DC2sR*[F=BkPCmt"q>I]h.):rGQ!.:Q_:_Lo]&\e+3unG,@]_D;$b@B
%nX[\dMp>Z((S_+$"P6.NqK9Zq\YJo&)o[e,_%G?$B1>dJppgT#ch!^epYCn2`B0-e&8PHg]'=tf^rh)RB*stEa7nG]DcXWDCi#@i
%Im+S"QI%AQmf(c!:/Vm23bEF<eloi-_b2SOY:MjRST'(*nOkG*qWos(hT#F_$i]9Wn)..'p$87G,YIlr+Eu0\ltm_kCS*r(X_lS\
%rb7\NZrhaOeP=[s^)*8k^HT3?pmDQ@pT:Rgo$NZ6ZYZ]g9M7NuH<pjuDnV*0/lnWOp&'&QP]lc>gIkXm8^2kR<uA`%Xk5`L[;BT-
%%i0:lBg135pl`P3TKnVlDh%V%N0b6E$S,'RV=B_cEXC:4Leq0'S/Bh*(@nrXfRiX.g%J']%dtHD.^eNYX#t1-nQ*Urh)`H+mHr9[
%HMOE,3q#2*)&?$>D`9jEcG+es[EGSUp?IA"NnCA-WP[0bb^#a2D#\HIn]nu?^uhU@a>I;8mqY!T\\33jM<sJq$B<%U\]X&r/Ucb@
%O/%'k,%#E:5I52le&:Cbn5=nP_McSB!St)klYq?<l*'4:Mq6]_hd9QnhXll@F+k(0r^\c5(V.H;`Y*DYs/D=qT'mO9n*]tnS3;0<
%d!f8(A"3Y@VosFV(LQU3dY^gq65''^-%rV_!r:$q,r/Hnc`H?)XMSlMQG58JhMH`<BO4oFe8#t_l;aH&mGs2k>@4\`-uSS0f>mWC
%>E'],Vt%R+HU;)_pRcj,h"&akr7h10I:MeWrJauqn)K&UgGaoV@?QC1*<._C2E)^mmUbj/?e]:+CG._q6$m#)n9PSgrc_.4dmTF'
%gh=/MhH?nka3T$c2=:4nG8Pk"g6o^dSJZaXQ%,42H?i4lIb2-ZG7L7[jnuO</("ktf$A.i-e@#&nj`NEX-^fGMoum@Y%'5;Q7ECW
%<sQ_(al8j!i+d/2T71Ql*5>d*\9bE%==%\Fs'TkCnEM/ua30abX7kTBMUI7Dk0DO6Bc>gg^<tA7A&HDOA<FqsRrLC?N;]!m?fT's
%E/htCCn>KE4&q'l%kF8DWS%'X3A=tNDa7de[s(B1LY(2.?YmHZEKaDY]CQ53@.E9+2u!0D?BMRAqYEp_:oX?8+UKdV-$0'r<nMeF
%:P@1ho?O\D3"3a[G5Tir%DG%8e5j9<J!.!H%s/`^YedmV9d=_nH09V33r/L-1G/Y)cGn3.[tRA+>t!144P74EJ2Y=&L($-#3dpRu
%g990`s8L4h^(TBdk>7i,j5&9p^H@j[m^fqDCjk&"4X#er%D:k?EN?aJIE>V"r``ica.DK"C4>d2`qo:N%h%.blK>hYr^/U<p@8--
%mbhcXLjSaO`E,!JWE7eF"\&X=djKk:cT@2]JK/VBimm@MUR(?h4hQ8H4Lt4UA)WBT/78#:0,IqH/2"0L'6=1T0?tYE&nUi^f?We+
%?At9%,-cI@fii^gS0d8;cDu)Ns0hIsI^^7j]gKhfI`L^@'O_^<mA'#?hf"SDB\T.dXK+'"Oir40h&g9BX49^YG=gCjc4p^/?ToNb
%>[KR>M5FGQgALm1\lS8A]5Pi-HNR!nJo?R6luuZ^F1t]2>&Jf;M+u]Mma*S8I8TGsIY;l/,%`W!9D:Im>BVYf]m9$nGd7'VoDS7]
%!`?4`p79O*;ZAkPPMZ)&:`Iq]>*a@,(mTV2IPTn&Z?/rN43l=7c^3sOg5[1(aQan_h7HTF48dsjXPUX/'7F)3\]1uCjsWRUZN9I\
%29RS$p[!a.gKWK[]s3lA-.R%D[e5?6p57`0LYg+_?Rp%%BE%WQ>G$N8_gsE4J$^:<OY6.jA$1*^pDBCN:GS%J`W,iK0;"R'HojVD
%c^m2[-n=a?F'D-pf0<Yknt^6u[K@[)>XPXfjh9Ycmd#.<F6!2Vjo)+RG0YSXR2as-p\;eKqkNOVEP9^n/;O#k]t55aa2.S+f4pq^
%.s&Wc>K5Z44tiY,rJS%mMZ23lb5.%MDLLc;qr/p_c-K1$+/@:?M/.!Oi8T5Z2"K\c`r!*;?=ND:cDt7pHVdku=FKf$1828-Iu^&2
%`Q"b^h*h#2B?iaj,$u^CfQRIZC/6I6Dr8J"%]n`O]\Mff?@M3^$Ho?dXnB[1&)ImeIf,V;mle"4M<=22&ndQ'=FjZ)(Pq<Y%nMI;
%H;Z^aC6LfZS^eBTEP(i8qhk]u40LTspV(bXB?bUC"Pro"8'_t`*;WLe4F:tcf-n"ETJ<rqhhp]!]`6q\<AX!bMo(Bb%g(0@Hq-<.
%jnGB.dC<u2L$d#;%+$Zc(*<n"qDT6(]qs@NN5A!Fj+TqJDQb(EZLm-HDGSTJA;rgggfT'W\sL'oTlrhR<LtHo;X5l`Eh9tN[W;)a
%laL7>qM8jq'ef5ad5W$nV!]"B)I$db5uXst(J!iDURZ\@>GQ?8\=[R!c5*RML3EU)GL[N<Uf;'kX1M"Oak!5BG>_`"53c3^F4CGM
%r:X<\Y4GL8V]!g=Di(j8CKon]D7d%BZLp"i]\J17k6NrYppa2]n7/D;/3SFSkuD2F8.9pkfA)A_Ch]huW.W0EqmZm^ENm#p[bd$`
%:&6>_?S6*h>-7IG^s5_P>!eIGDOkP.O-9@Q)Ua`iEj\eqR)V8lHaMQoF/N5EhYUF^'r];^[-Tu%_p^a'.c5B_P,35t?/4u\?4L]m
%5@5JuYW9C?<e'n+XSX)7X<NYN$?h8UDe8a[1!MS5`nKt6db^`Fg;@hZf<ot69D@uLI@@a7*Ao]K'?u!=Z!Jq5-5H0hd13@oJ@Nce
%2rAHIhc[`G4mRLd@n$dU$*9^N]NtF@$g,]tlFk_jV<`l<MC5eZ%P^YT[c)Zpho^3t3aDm:=,IBh<o.c[n*6IO@.ds!YWc/_:AsNl
%S^gBqd*Km$5O7[t][PGW6:*C'rUdPjP*EbZ[W^40g4P?oq7,o>d3FN'1ZcEqnPf/m8Js`D(,sNqfFN=!Q18DOY[u$?!@qTFB^"(k
%-"VK`GIY:OB64'^d5MN`kZ56<pE\q(AFDibF9[P[jAR;E>F1V4oD[RtpR_80oB#,RkK7(t@!=Q\hjWF0Y@"KjNT/69h4UY\9+SKi
%f"SjCNRWBgU`%??bJa$;?'6$gCZQ%@p2M0I/q)C9/:P*5Gl>c1lG&[(NT.*L'#=JopZSF)JD9M]hWE;(\aA0X?g`?A3mW7=hBFc?
%n^$3@Z)ia:i`-S[$JCX&BcUc+lp"a$]&DKtE&%KsjQi[i=D=p*<H$^n[M!pT="BR,dAg&i]UuC0kXR9iI/;3_Zg$U^s.;,noBind
%r;O*JJIIQ/CcngVQB*R\N9#P*>e3d-jQt"20qJ<UKj<[1]G'hG^*16/Fd@oA]T'XFhihCDX[da5nH#o)\%VQ<7;9fQUNc-']RBe@
%`fD-,^4+l#k/:#E5:2fKdQ0C*rCng$8EKfm5?^9$4K^jsY:kBQS^2T)gDKBf("i#XNV'$IG!A)3V>>%kNg29\p0PL%h"CRiG/EHI
%e(_J[.tZ)_V;p\KR(,r#IQT#rq9A3U[gs;DM"duu*7=bto5=$g&&i@.MI3M+]XZU"CMoE.76A8r\6*kmgM`G2?lsK#^Em/n\+kcX
%qYmCpQ&jdIhE!Pr&gU<P[X=Z..Wc^n5@9bK5:$\`JZQ%t]mmn4PfHR>Dba@eT,,.A5Mf%p>;Qn\s!36^=,gY&h7VC=X;&*YS&YVG
%J7cImEj*"B3q)$Dp-1,f'3iiH6$FLo;2(!EDk.qdfeJu_S,*e_M3etNFGJ/+:HlBtfTJ/#9##jfFfY05a)\?Qr6Bc]qncD:Qf:Zs
%eX\KJ?=5bfag\\F]pAuLlA'S]KM>9B\g%fWiZ#'X3/F:./^b&7P(%jmp"n;"=\H2QZF%$OjO<L#>,JoReCc<9HV$T<He>pu^YAU4
%h`j>[,u&0%$(l\?>OL^Lgr1cChm5:NdD3rCb[(ZkHC[`\$_9gHVNaX.0,2t.;nN`V9"Vo@]ZD<0&*@-+s,Cj#g#:!b*J^IUK&'b8
%>A_oBgq\9YE=W^!5&]%f4jO%F[PNEb"$bj*dN4opWhaT;eMXn2@I*m?H*D_qH\J]g6#aPreGBqqOKpIg`c]t6@G@Q#[@SB4]!bkL
%+[>*87,K3ZabOcoRiaLl.F=!EU4sA,F?t#8.CFe%pEI\WLP?Zj7?eJRAH'4I)B$2NVo()D1-#5$mMF:Onq&Zo%Xs@n3@r[Cc+NB3
%_"?NEo]mIk=0n6-eYm8iOU3L;r5-X=6-i3S7]+n$I[L>t/SAbVBRg:1TBS6g:cZTrq3cUZ;_(GS?RQRdC:.g,ZBY@PT]S3cGe6i2
%VfM<81:*F1p:<bpDP"fTWcg/2`[0o%B<RtQgd(3]NEg@&>@Xu1__Wa-3o/iSoR/UloD7$m&052CbXWaB(H_.;Q7E5nLHY!i)AV67
%f/L)S48"arob%bS]QT-LZqC-h*;,Uo`Fc(qeRY\r[;RX7:dJU`.u\Er]?NgOI*li_K*%UQPQ8BPf6Yqq9%b*3>A83R-%-h>E5+tt
%Ghib=5(4*irOU\gpNtE]SKnFd1;BRQcDYlc1@2d4N-d%FTPZ`PdK!LdQ;Ph8CiIOl7#f/9*l&4?fAdu"p#+ko,<*iNSMAr\k]DuA
%NNORe_qliIa'uC&4hr\GRY4IX@$^,f=m0M)fr.m!Z4S8WUI87c'^UJi1nW)knj2EJrS!3;D^G,QMJ:(0e[b)\-"sFLi`n4e[:Ool
%,oq(VFb?HI?N%6.Wn,1315)b)<c9q>`2s5F3;.)7[SYLE$44haK!C:Xnnl$qc^cthf611EQ8\U7dW">R\_TA"Fa$HmJp*SG;Q/Sd
%g$fd1=%J?n7D;7*ZAd9QISX;rA4`-cZe<&dMP)dBDhrDjr-d86]qjOSa%sro#?\cbKiV/9X%':d`\O(3kA6-*;jaADCC'9=]:RM8
%Y+;tmXO@O1P\$r!GRg1V38AX8A!E^L]N!LW4Wrhc'>-h:27qNroiW3n7-p1tlXk4Xk0!?*Dd\KX#a-`TC*klT1GUpgR^8d7L.o?c
%Vjf7sH]aF)5!.P;>\<KqQ&u6'#%,e!2PLg$CEo]OI#DXq1G'.,TbfiDqcDce1!FY!b<EN6&.nj,qAJ,Y1AoOmN",!rl+d49JQldZ
%`QV)0[t47#</L!dgBH:HBmi=M"]+N=R_OdGQXQR8pbWM2KBU4F=@B;,IdQ>G?f\c>(Q?5jc;M3aNoooqNdN-d-degk?W"/9J,S9b
%*\Y0[2&EK#hf*u[?f]28Q8HK[$d*dUiEE\dk)a:j=iYV=Pc\S(7lRXP;q&(5mQ1P/NNB,,?Si)VI+HXrWun?g?IlB(5I5rAl&Op_
%e?Q??k7.Qq/H/o%I4spPUr2DVO``et'DZOseP/)78'bAIX[&=l\sY<r[CrZE3S`63R_DQ,D(BD^lV[kkkU7u+(;bVl1C!\ZIb(`.
%*mr:p^1UtcOJ/(FhpX1-Q[U0@PBH(R12f./ThuW[WXP2&pmqd'Tl(]n@a0=L)*+,'cFU/GPL'eARcsi`AR33j(>&b1?!.N*9kKU#
%qQt$+:_AYqT8%NFqJ#h@361"F2gKn.TXpcG4^&^D.h9f^)+lLE:N$5J]33VTq,jc#B)4Q]NojpoD$Xn)DUB^4eSlWf0;(:"b;ZSY
%d^`Sb5`'T!8$`GnZu'oh->(.Ydref]SL'pb!2VP\]-;j_)+hhg.l?#bh'&fm$r_=To8&@j3*Mr7<qGBs/CULYJZZ.MZO]H>n4bjh
%=-82H@=J`G%bYsK9G0aO[<sXT(PJ]=n@3Br$&I*;>`_ppPSb+:\Z[ZKP[QUZEfpPR>fnb7A`46iKMO:W^f2'_K<AjD-1IcK-;A+"
%MB+qITo(I>ULdS2:Y54>TM5g%BuaLBWu4=[QK;^qTBKh)26o9GKk5PZ?5&-1BoE,d+`r+#_R8SOe+qJ;T`_^eDS("u4lWOY>qsM&
%r?j\T-.<hB7a)C5N<-JGFjXB+s.pgn#(i4Fh'M-,_JjbR(>C[*%$mQ#\A:!'2iCb+lpqCb#)J.SXlappLq&l]*oZVe5tAN+,S^UE
%#WA1)7,hd4@DkDb5MsRt`&L'XFN1n)#toBHL7o&B*?*eMjeI`BH_`NLF-sU,*MfYjf.lN!18b72+\j<DjXVZNXFg]\USQ':d7GI'
%13E2qQE(sW?&<G-a-FVGRKKRM5XZpVk_ZH'/]jXfkH<2P\jJ$#0Z$.=QT5>&9N1CaEO)dcKRbB71cB2i"rj5g)Q7!j;1hXL@])'+
%[1p;8`&]hgrt8.)n]iQ2:2g;nGe[g?f?b\PFEDZPL_eDE[b8*W7XW7`Oq@IW\"[btZlFk^fF!pQ'<=no+CRh)7brl:D;TNS4!91)
%jmaq6ZLIu?8@6TO8"rqFJmMp](_SH0&3m`&i"MEo/=&35ohAkH\,jO1AFFYE50GmW,[DLJY-r,XM8&9!%0JOef1?da/2NIiOX)Vs
%k)3)DU1GE7V<#1UKZKRif?GS,&qco9-i4Mkd<52IPJj,-.Dtq@@"K`m)USe0%*sWZ@5/Fk4`smh#_>ZJ&?2<Odh1+35fcF>Zj*3l
%k.(C%aTcfsPEZH-)*IR7XpK[A7FK_KlY"R>=eU:5C'+&a8DZBKb=,;`F:UF::,ds;.FD-C9uJi1=U3bH\n_^@1Q-?@O+rpkXDD%6
%<Ucg3$l5D)6U,'$/kZm!r/TLMX%d]32**@J>`2Vj8OVkVWob`J6N)TgOBf'T/i.i"d3T\r#\<<Le73lR2Ul3-Bn?llfT@H+,6gX>
%<1!q32'3@b"VSSa57#6-YX1nG)r1p(TYtq8b8$rX7159rE>ZY3"DPn$'$,gG@4>_"6Ok'h2Pbp,.PVXbCSWjB84daZYKXbk02uLH
%'A<NA@_1Z_&-eFe/;n\<Y-3J+L$U%8@60]'%)XIO6$'/ip1m$g"#HF#+/rD?A!kJR8>"o7l?),=`G4VTBUL%T$qlFAe(#GK<CBcC
%gDRRKS=`g3:#Utu03f>NAFlCU.S)USnFZp+kTV;f0VTZ<d$^W,ZZ!186%hOe64YN$0<IOilg[,p6.!QGQ0QP'$cU+^7-"EO,fj!`
%,OS4VJeSQS2t8.]Z)#`W&h@Ar=C/Z$A66?rNm"dGc&i![.iCfX=:Yndn9Kk4(n+/7<*c/WYH*<)I8e572ON5I;iaUI#Y>'$rPJbL
%^a:cM62=?.Ld$Y.*"ho:S&lf#P<b(K8*mI`j+LAsf3RM]U/gdA`q$>FP!-7(85eb?<,P5.eCTC*L>_YkLsmWfg:b]9Ce&GP=A2?/
%V^niO`#+jF4!_bsGY!X0_M4_\3<06?Z'\l9H=TqCc!pC="M,j+/704H7TPj.:pPufh?nk?O[n1k]]KVHDGF@qp!o:3UcU)2iMjF9
%:ai9.B1(oa3XIMUP<kcbZHX%uMYki<>Ge"M&sd1HZIZo,"Y]DQkQV\P&=_grZl2Zf_(U5!0r+u8HL%Spf/2L%QE*Q,7B0dpdrRg[
%TiC\UQr$/5R\m2;p'44t+O>r=g8<iE&kErc9pj<S;pX(F$.)8U,(:2%\ra(sg&8La5oR)u)t!\?,%'L:^l2*e*^gVsm=$HOTtrYt
%1p"nqh=,,`eh$p1@F?+=)R4@bGe,rZ2T,"f_Bt##JIZ$F3%/nD#7NS;=HkgJ!qaeU6p!cZ()oI=,sdCh0cH/k(@?^\q:jcbX<FAj
%9[S&dgdga*=<FUZJP`$^"6B?,T9I`mn9D1f:GRW00e@`1-54i)HimJ9f+<W;8urjWfLaE<c,>%b)0lUR.Pm3QiNi1]pK_F77Bhl2
%/5V3OQUYW,#AsnhJ`Y>N`!ClB$8mA@?OK"Pi(+X@&01tab[=h,J.UJCjj*)"_5aQRgS([kJ13Uk1*BPeQf2/;;?f;;D;9,*h,@%\
%7Ec0Fc]STN0S:N:Q0o&IP,hA;b-5_UjHgNPQOjKAUc+Q7Ms2epcp>3MO@jhQ:^:;S2j5);NfPP\bSl'IfoUf#-QALNE4s!E&tm1U
%0iT_X*\9ch#hP2DRp()bqP9Ps9G+AC$2*R9#scN:>u?XH)$<\kEc9<PI,88L`$T>Zf1.cS=YcXhn+jUei\"&/(eDXUX+iZ0+T;@=
%ThN_[6P.0P.7^g"9T24XPE8N*d576e!!LgaQQemIm,!H6cQj&VkK#FL7/O<IA\fn87)]!;4Z,b";MUK:Je06O7Du.5-ua-Dg7c3T
%Oi<jl#)45)7n=rL2ec>\SuY09jh@s0*+]O?0^5QVW57c-0P>q"Y]udK/()#ff-F.6d4N/pTNC^P)^1W%&p:$Q)n9i<YCSDbJfSD2
%M<9qRJmUJiT>)sa-h(N<(j2SZb#\+ofU/fobZ#DIQ@auq$2duUQ0AE/7rEm<TmSag8IMf"*DnUsPQq"ifZ*N96K+98?++Xdg=^eX
%[EuHNr/^fBE;VJ0P^B)Q<c!=VD+4&^_3<4f3\*BH>hPPrIM>H,"m!9f-%q[/L6h.]?NSD[P94&"]c=[1S_4brmOh16A]U$Tkf@3i
%6CHXl[]c_nmhpj/5%A$GoG:k*Y]1Rbd6DIZCMc-XY%<cQF+JYp'/Hk%.F\MNh?&eGj*Ga,6EQE0-I4&G%-,rM_B]])f_IGh8dF>@
%i/pjVh9t!RU`4?*d3uZ+E4$)=J=7HcctuXi0a4PH\m.PGJhB\(EI;3UN`^L:=g?CQ$#8)sY(IJS3P#i^,Ht1\S>aKUfqUu^O9luH
%c=!AUM/<gR0K#=?\qY.WEb;c?=U_Se;'0Hc-_u:RRCP5&IN:EtOh@P9FA-(D5S;NZ]sCY$<=dRL,aRB1*71=+!KiPGUjZd3^gH*+
%aoorh-5ZQAfaoGTR#?s>G*FN06nlJXSfAahCL,^4G,44]Ue-Cb6b-Ms&a\H5`,q91DsG3G^fO4Q;Q9^IbL"-oZ@\DKIK]iINp@!S
%q6hYVooRa\?lYP$(emGjFIV#N5'U,Lm6&irEY\5h=p367@JV/eD=Q!:MON0\,MmStHRK'!(Lc3($Y7p8Q\VXs3*Vr&W*p:eFj\co
%bC^@6O1;&\Q6_Pp&.Zg7CXWq>7tJHRqg_'V3`b>TLO^J$JNdoqHeE+_9\j-bS2cS1+9it";Ki,geKk7F@dVD4=a8<tJG'9C\L27u
%5a2r1b(dopVKb7oqQOk2>Y0$p#bKW7Z&7Vr3"$p+LTYN.;NQ#FY'=;`>LHGZ++JN;3OO'>lqgo\.V4:e8h:T:ZV;D;+RGfA'0!=@
%9d%YrZ#\Fj2T9uRCX[nOW4AT0aCYs0&njT+p_'L/@2/8-_$n8A9`RaYWd.]G3_FWo;b_At,h03?.U[kh#`F;gNpn$]_l=TBQHCdJ
%;],j[%UZYbJkJJ'7sl(66Moq#PD6/Z%Ijq_3npS%Tj_1B^'8h)+LuHV=L7V<q1B5O(o3j`Jl]6H'*141:("b]&=j>h)LI2eR=*'k
%GcZfjL5-'%=f[)km*a*;F3TBR,m\KA9+I3-b[kuW>QhLF_QY==oFsGEN*iMmPItpiJNJZpeAWSGg7Im"#m2ql78<Rl)!(6&V(L8`
%PQ93G_?F^0`'K'!MRqmVqk;d+ZTna$P!gb@`-+iYp"0Np]g`u&1`1So!0Z9C\0;>CFGe6&@,Et[%45OXY)8R%CN^9@&M+giCQfJq
%d_@>(:"g09(N0ogI1Pic86:S'M0'RR)pSlDitsA!fFIuU#$6K''MGaRdm?j<&T24oMV+N?b`s':UJ,bS*$GWri3!JU<LW+HTn;Mj
%g(4tpNi+^?,"sqJOL/XN)pbC^@%&\^#j$1dP_)@/$.skcq`LA1-L!iBXfEQTgRk?3*(H`A?XI0>)Mk6+@@McaJk4\GpI,L3a)D6T
%P[0nN__UFP%//7mZZs%&Ni)%=m'%Y)C1lJ!Oru@RB$'nj?o&3i/7.G7JT'=qOHdPNK(@LYE%PLf/3T"+>%!Uh84b34T"uV>1h&8j
%[Rger4adm!&3T,ni(.]?5=2<nmOJ\A-=%T#Wu!^R!DCC?+sU6#WOXU;Qt"=Ca"&o.;$__+nR?[&66ii7%+IpOq-(`bkaS:/$LUuf
%keX0V'=X_CG!hUN+=="!?pY+P%Q]4;3Jo*8C5'=O*9AnahpCje9!DNiTBl";1pJZprdl9&OHucc`gSk'Z(,<c&Oma>=%+p6VC?B'
%eqlO:5mYPWI6CkuZeRF064)K/66]7=i'^q9KVdhAM)c31E$7TYb!s09Na1fa8Qb,g+C--C5`tf8).<La?>[VtE4Fp!-&d4W.:E3[
%D#Y]!JB]22XG')InB-nP5a.?>[hJrp-&rWT<+^*&I%\HJ6K2CEUaZE*fP8^YYlULNYpfA^LoP,:1/F0:T"WmrBT?K4(,Re1PlUTg
%CfeKkn5m0%Vo#29KdG^DEj79X,Q8s"$*(^32)<eh8J9FdH=I5.a)Gc?HBPr_qe;fS49oS)-MrCORpt.1;25(@=E1XMB8*G6K3c]L
%Q%OZRA=r^S20j'V9(S;2,Tc$Ns1h/lOeP4S1+0VPG>8WeF<Bor:F6*R3NTh#DO,OqBea_T:ebb/2:2`<o+770">q:@\mpmmj0Qcj
%fp0&mh#aueS6;*W\]A#"W_<!'cMO3%2OXb=K]"C^@^(iKF+ihD=E1W^N#<<V["DlC@k/P>iY05INp+i+Gp."&Yf?oM,>?c6F@TU7
%.WU+./t>'a,*-:Rk$Y</R/2uG+mhA5Hr!L&_\dM2J<4Qg]f"41<JWU=\Y4$_p/MerAAnd@>,*5n>Qo*jO>T,QeTE0CaBbQ$>[%W@
%`(FK8[,bb)*3_'`Q>i!('Wts`>M0CSR&enT4`%.M!JNRJL$QS"E(C-Xou-%rWO%N[18259=Q+RF,823$#Nf-_0.f`H,pOop$2,9o
%08ZODTP2SuI5Q\Vm(Q%8:qW#9Hq,J<k`ME/VNHY0,=jTb5$SjGNXGWGKcW9li+YG5d"Dj<Z%PH$Pi8ks68pD/jrot1o&+!HP9G?d
%%T#DmB1P?\igZAK>"N-4@@S-Y"]UOL4h0fg,No5+*GS[nRgl\VaAO/;aBk#Te-(ij"<dn">u@OoI$35ljf8o,9CPQDR\W@"esOT@
%JsV6$-W1$+SVAVJ]I$0WGhsuAAKWbXKHB5p=OG^<omjta8I/"32%[Uq*T]0?X-N`GRWt"TY2T3IXO.`B/N3tDd3W$'?Qupe"DoDa
%+DBsSP8n&AN]=sNp2jMj[gfCm7)"9Zcj5:-!7TF2?->QVL(FhW[7KRWJp\.OM8"XPBRD*QJ[^t69"^5k&?WFF,If\Ec(Z'gTPtph
%\;n-nLjn[$8gDo(d>1%.Y*jh-,[mR+P9&ni'`1'BBf%0;g:i,c/jn41ad-m/YjoW.S)f-8P,V\e.DC[4HNH'd)oA>eo0`mABJ*@'
%BVMPY>Raai:eafK)'hra(btMn8RL;:XAX4MF'gd0$pQYH6'XW\k@'HkYVTU*ZE%BQ65=)EZuFs,KEG1<\;3Ujo4F.:%4HV4FC81U
%b"NViBje6bA5TqUVEt\X@+k2d>noQIN)u*ukn6Y6,XIa#QXjGZijQs#F:fgUPsg^Y`GnuGL#sYY83kZc7c6<Wk(_YX(G(a10"dgZ
%7,<Zh?rjDfG6Esd@`+4,5hHBoF:(UcjK?'RTA]tf-/<H=ef9;nGY&<3q@U\3?P:*r"NNr[Y3JZDkb*>+q7,oO@jR<,@5tus?1F(0
%G];$]dM9[+$#^4,^d,Pq[adW<^!8Y2E$2_#6G>Tb5?>WMqQQ$C0?\ZY"Pr<t_YUYSPjXMg#fNt6*T<V&:WJcW2]'[,i#<]AeHq7m
%?cD,deJcN>kCYIR?Op7Y$CLpU,R[WWBp]8\5JpQ./O/#`O51-Inebg81<?n8m4LO#k\4_E/IOKXFUXW<r_nG*`#'FsL<YVYa8hW<
%]ptM8?!SsC"H0TuGRBYh3>-tb1?a&]R1YgH$6ON>Q;*(1*d[9__n-7Scm::O>C$_:kTG*n3sV/,I-%C!3KN![G3frU:<I!pbeX2\
%>UNV?LB<#j+Mp."07r31F[YYN$l.8WONB9nB!tJ_%$5_KYo4.Y*[B[\!bY<f9N[_&Le+s_`MsH+ppK)U6:nm=rY-P8ibn\2"1d)q
%.qSeP3M[)qkPH/=nhU!bLFocm9bE/p&`-=oU[0D-l2(c8K/cES%q=Z:JQOnl"d%ak)o=J2Ltrm?JE8Wnm/TI,#)e$b,d`IE\u$m>
%[(3&mAin@<Duq"<#@3J]&K.I`mAojTi$n^G1uO%K-(@6Ja;AsIkoo:o';#UU0:ZGubR;-$"6!nL(PI45Vtf4i,;`=smL[dSFIn(Z
%aefqiGqQ!+&-Qp&>a'/H38VT?$(d<c+R<c_6A>oib-]/>cSi_U@Ej]$9DR;0_P@1^3$8L*7CG$g4#RIUK/GmFB9;meN)1Ap\TuhG
%:LU+\\tnM.d"Y?@;B]t5L@5Q/2Ip[EE8`6RH#2`>U_sG=F/V8(0j3fTEK6_0d0),c-VI<\_oIr^JbU@0KC!=ZI^&FqG3,;<=N<-u
%ju^(L*)qc4kl<R$\-e*4/m`pUa?Xb_,`,JoKSJ8PE!Mh:EGH6-!>p__,![7tB+<3GHA2\fE*hXtLC6N6Mds2_f2Kg$n$d3YJIC<U
%>L"+p\kk(bo9ri)kP5-&nPKiOHPX/mS-V*Jkt>)9Abf.^)(1&ZE-)88Ml#qL(7J4Mkt[)lKkt'n7RS>@7#tl!jOYfiAZj`g0NQ%/
%0;EWt>+*MqjY'"sUs]Kejj6cCHSf#ip>DZ4=,R0=/=rF%@R(Y82o<BsRJc,u=etFXdNV`9^38qfc4027\(&iJ3@Idg/MTa)=Yd'T
%>Pe&'X$T4qNO0FOYmh-kj7+?!>D@53LXEq0I74TU_&BtuL+"&*C<@kg5hWlKQl"pG0ZXnB#&t(tJtObeE$5rQW"FEQE(fdT5aK7$
%Lm9q>@20>oQTYiX.rBu-0o?t#P;:E_KP4mm.,6BZ&agfY8#_/4d?=5>5%fH9T&@U](n=OlnJoMeI?gK4eQlhL`1mt^V^><_<=%E2
%,=X4AT;.g99R-O^<f&FX9B`F(eK2@+_J[2d7/VVOGn_eudl8HS^DO#=Y-&u$]X<WuTLGkW"Kj?k5_Kar^VP\(Q]tBQ+3?-$XO],Z
%>q,N1dt*<4(maQBHCda)7AcHL?5Xl&6hAe`ddWM%L(u>d)S&TecJV2OY-Lb]RqflJ-ZqaN*+JXje/[*CHkMMblo"E_=YY(fhO--n
%4>??W3/6V&1XZ[j;j]Xf4<uHZ7#I52C^Fcskc7tNr4^BPRu)Mt0gY=Bb!\TI9\K,F2E%gLH"_`2Tu.VC@n>%N%gAGG#U#E,"O.?X
%js.)N7@a___nJ!U[O$/g*%t8j?jGDEQDU`*fMnpXA$qU,rWL]kF?DM;&f*n9HH9h$*K'@h,FO`k%!W.?LCi#W0fdo]&'n#(9(J8H
%JLf[rR+?f,D#"i>:IAITH?^$0W+di/Y6#hQj^CLrT2fM7>,8t_k\SBDim8^(h>rM9&OL^<TPU0Ws,1Sfbd[\PV#FfUS?aN\MVp&0
%FrT<1Tmc@(91pgY`mVg6VRd<E9Ml#b'+Wl'_mO#%1&MUI(U8\l.\_@E%9M?oln>=DL6/dp0<h$BhHX!m)ZY[/_m3M[$/P[)\P7JH
%2J[?k2n!/ap1cXH'3>!qd0RU2I8;bWSY_]AaUX=Il>C2:\t]ZL_c/:_E#?NOeU&!'fEX]*j<iTN>9IO5l&-F84C.K3)p%a[PH+-Y
%6l38SM9Sq;?SEE)8CJ'dkdo3:!VIG[LbQPFD,=%R]*2nZ(.\TPA]pD+,:(25iV#Weo`2lt>(Zs&)/)8N1/O;`+99B)MP7W'ks;2P
%btR3Y,!,id+HjqT"e9K\qu&\>h(k+:!C$d$%<49b<-mH[`rk8Y;"pY9)!^W3T^kL>blO#8./:r8!8ag0@KqTpWFLQ?4(qRTQ%0pK
%Ur<)aOR*oV5bs6^!b*f"K/CK4O:8KO&/;cR\uDZj%'b%OfSL>,U%">Q":epeSA5Ws$jI*$+VkB)B&jiEG\%<jrlNnIG)=%oZm<Nm
%MpZ@/Q4ZD6$MTmH-e"*97$>%sC?,*unt\6>R6aCD!D'L1)<@i7H6eQW':<VijI03K(fViu>=RG1oIE[i_C8WJY$MZn8gN9EG^Le'
%]jTo?_OQLEi>b35!?8Eq&)f?U$kO0=G^1G@$RutiJGPpL3m^XlZ'Z_M_h8ZO<`!rLW@*u%cl"K*fGh.A=mnZk\1,Y'_j;L95`6Rs
%nr5ML7C@m7aGW))\WAN*^/bsDjjY)qh?Tgr7@GnqOoT>9.cUWaNF];(2298D;TV@"#KEMp0Pa6kj>%PVl[^lGJr$:SHn\XiWdCGW
%PUdnBkqnLW_Yi.fJ\Vj+.N&M6O^Tl\ieaG-/oR5tC]W%+_qZk3;qI*7&1<"5qj3:P,qT]%'5PrO<6DLOItU`c#$cZY1C.JKR4k"(
%Pl&Lj!NTIXd13T0WO&hPI9Vn_5Z6Rj%%8s=!QA,FAMnK5O_i3rJ2K-P)M,)t#RjY.P[ZF_L]*<qCLX4%+Wft3=ID.T%1LSO**ebq
%N)m%1Q6cu78QSjd&bn4*DhN\[;,0GFXq(mXjJs\'&>VWbM'8*rHh*WQZe6@0L@=Ada;&?>NG5DnEm?HEpftsp/u_fM5mRnAmg*Go
%Lc-Yu\u&rbr.:Tekn0NJ%tgA1I0c!F7(n9b!FjLO6@G9@^;ZEY.[oG:Z>*15!nEW[!Zeod#uC'%X2qa?og9iGNh_:4!iQ!9(6U"l
%OJ2"YjYruu)=Kkl7\VTnCE!m;<?R6VN)k5G&4633!CtW9\g&4mh@Oo]i<QF8>Y.S-3?=D+$.5MDa,Ar=L9<&Q>X-_o*`jd=r#K6^
%F"TEn?Q2O"QUgFJQ6<P1O9s#"J3mXHmtd#qe:;urL/Nk)r$6)Kq9ENs_&keLkBrO\@bUD0#I_4RS/;AFaJP1j;;%io,%.c]2X9BY
%M9-:H`C8^2;XF]/96<$r87e]$-:At'$!f[7cf#+-+qQSrfu),]3#tR,73+W0&qgqVUnS$5DbWf['9*)S4$($KAU2HJ*]jLEfndXU
%A?l$;.3,BGq1ZE!+;7oN&pH1,*"1'Dj:tm-&cnTRgQ'QMOF7dC0g]X.VKuD1EJb]GMShME6Q;P2KBb6`'5,E9=`8P%M!X1snS1Ts
%%%!9DeTM(1aK?FXh%Ae#R$3;>L'2SNV<F:$?rL>,>`g64Wormn03Z3M^@^NT!/?8`"d!Fj,=>^Ym$H2<)hJ:s;-pjR5)ecZU3M3Z
%C^W=--:YED$s5dE;<$Pp/#u.VMS+3XPDj9=Kis262ZP-%8@Tl?(qqC`r-1JIEFCoDW'\@hVk,]3nhc%62C1!DWjJWt8NYG4/.4]"
%J[FJ`1g:@F4ZL#FPr48`BgT1<a`I&j%_]-!"9tbF\Dj>LYX<H!MDlbU;%c`6p'SD7&;m@JKn_CTN"Tc3LaJ2K1stro,A]oY<`Aqf
%(ePit\Ip;.k2Am=T](QGAW!)g^-KRD+&\KKpB9#QZt%l:+8Z>*@gh2`ic)TiLTV+[;t3Ch:?g`\I"#^fBt5E&6WB?hHejB'>;u]%
%k:711SWIfg_)6U>;Q/WU**GOT?"Iejh("@1qD-[I5Si]?ZEb.X'354QK,@6>_=pog"9tS^SeOb9(q,'9Q@AV3*icS.'&O5[d%E0f
%E^kIKmtV)N2^#a`lsaR_b06T4;B1:PkXdYifY2-SoSFHFY`p'=#*-?_!7583;tq=@6ZH*O?9GUB@2qd?Z;=-fXZ>/cLksPLKiTLn
%@#qWY*)_>pgTaf_[QO#j7/]t\bn9OMW=fs[?Nf2I#bT?pR$mWabhS?-QiTXR+):Vo(LgS5nUSc3coKX\%gkP.(gMkM\e:c,-ENZ<
%%r*N4NNs\R.?RbKEU=B<TA\E>(gQ>,RIHDB;$&_TZ^Z@4d1!8p4stk?7hs"_*.GbVSm3qB/4i:C)nZdoncLTphrJr1[2E7mcAY87
%>BDn><ArJY_I^r=X:6)*c-9'XJaOD]Y&S\5LC5CcRBbaq7*)cV$sXsO?#shD%Km,jbmDKilH\IGPb&\K0k!]e<+Vl8r5t?9!*L^N
%-rQk4>TX[FVC$W#-$A0i`)Z5H0qCKV_WB"7iKE.N:,^67Q)idQ[8k;cf48=f]Spp9&G+oR=3+_0>k*2b[4/dmR:)i'0rp"_0,b3`
%XIDK9d;BmY6-*kN>"LI`>Y3Rg5ZC2S>belCZXPL!&nrEbQF/9I]-UkhL;*r5'FT=A7f[HP#JPr]?]nD6Mj_Hm9Idcs*`*NH$ogQ1
%MukCqTe:Cf:9T;IC>-8Y/N@e)ANM.eRq7_=Cad^?1B9GD`E*<hfJg@E==g-!8>5'Y/j_9`\"RlZ;LCpiGk4L#)JbYODtIU:(=T(]
%63*C++0g>ijnTaZ@`,i!JT#5"OWe6QOW2cT_YPpS7*FPi!u.2imX'gbCdT*4%Z<7=q]YH0(;;.kIuNT:^)Vj'4Nj6>DQuKG33M7e
%[Z[F';'e*plDAV'(es/c`/i-GKbPbR`G/89^TWEVpgJ^l-_`>]T-NhG`Okr>\5^cGV:o<_]qLN=)U2blO%Zj:V5b[R(QXG143GK^
%jS=N#6HTE.#g1I]2"eE]Bb4^#,QY;hYt`mtK,c2703XP$W!!;e=m+E<VrrUn6`1DaD#9mHm1BjK*%'qc*cahd)m',h<!i9s64U5*
%^E]p8HnOk2%Y4&j\t`RG6$!=<3tY`YJ5@>L+/ps/LX=G6LQrP"CqUntCIG1W+S3]VD_Vo%h3&#HlEQSkY;&k=P=)=N\Di&Q43m_r
%:m0K:_9+4Db*o<$_8@qMl8d-nR$Q$sFlJAM6PkD(l$1]e/'e82FFHB++GN"npJo@6R:!l$]4m,l+n6+Q>Nc+8/uTZ!&mkK6>j9%[
%`cGMq`\/]06#D]eW4LK8(adc9T7b\0"q0ST]Elp)%,4\4nnT%j;Sl5S!V5^[6.`tTC"T::3mEOHVbb*-i((d*lm,=Q_KI0.bR]UW
%!s].!+D\B/_TMCVL):P"O[p*-SDB*:QQG"H0N4.,MfWbD:/3r/0c]$bNPc0:Af/i+\!e?)>[kd)Zc\GtHdJ]kfF%j%^u1@*+sA0V
%:U=(',?36o_m-2tYJGA%=il3".u!!im*O^m$hte$q@sMEd[8*H;8IQHK%YLMb7emc%<=EIrZmNS_p[^XiNaa",RYEG<>2kuM)lVZ
%SYTcR%f;3;'kRij<NM][J4`BY\5@+]He8e+F8?D>iL$.?@tt-?i-.bq,b80)SQb(rgQ;_`.L^sPD90]4o-T<fS$&RKF/HE#h%3Od
%S4@kLU5!)aR>5;-&DhCd$\Sa#qM("VO'1G-@ni$MH&;D.@72BL_IoUbicL#9DG#<j>sa2uFB%4&9kE/`AfIm.dNfTA(m;GHk*SOd
%@G'>?UG5H/;E+YZCpt=o01s\!b3QAQ_qIF:G[9ndW>TSTaVZ`@3IK2C$DCl`fPBhDips[JN7of";,[e<TK&#215>A+)4Y*\VBjeD
%-^R-qi(6+V[DOOPK&X&&aX**d[<Q7TU;W>C/(R**.5-aHN5kG@JAu8cj_TV,lOhd0$;eXgk1>3@9_rut?'h@$.:n:m,g1G2RD*32
%^k@6TM-N:,ZOQf334%+e78T4!od)mrcV=%#>T,=rmMem[_8`9TJ>Lm.Rr'S7icrOINn0`e$Z1Q^,^<Lc[>B4Q&Ql^*dS+`l9;rc"
%-6D5BZ-6I%mi4W;qOi'GjGIc.K$6:I!7VCe/h6X:'V5ICo)NrT3-o2TAgcWg^87?$=9Z>8q'b`KeQ-q"T:0mk<[D4:LY@d:8rL"Z
%i-:Rc.$pt^,4.,i3F_\.qBDm$\glT!R`)UE:D-<W6.).uqM(imUH)dS\<(-87u!u`("#<q7`Ua&!)i"h$n$Y,Jtk^o./rMiXHOc2
%W(s>:+VZX687`4-JVRI2GbIAl4>0e_L/UAFaZ^le;GpsaElDU9/UjRTe2BI;(Y72>pCuLQPmiiu'r.(YN^/h?R;lT5rQr#c6Tq#L
%jAZi4:_&)%$\nC*6![aXLuZmK]X%4I!a\b114jQ>.h93pU.)YA+>/*$LK8*pKqNHAajE4"=-B(SJ[hbSP#i;+F]BM3*\E*lB8rV4
%o&A%@,_iNDBmtSJg8Z?cD)gh:YGlQ#\`>@W@X0OV,piA\LsN8KV)fh.]r=8i+$I*LMds9rHsJ2Fo(8O9ieK.hWZ>g[8,#l*79<J1
%\<JtYRiGG_Kd1Y`'d5s)c)%I0DEBMOfbM4k2B5rO&7T@ncfeC)"]steDFubhfqH,h0<F)Qc%nPs<#V(Go,3#@.Tb//'2WkgF1-T(
%s0*3t[oej1A4`HU-l"g@g(nTJ7;DJrU"R7PL9+6ZPr8*)o5_BA<)p3m%bO]('bHE#ZQfSl$]#t"CQo\-3W=Y9=G3YNAVp$N+`puF
%kFu\]RXuW'LAcM4no1H)#M5$q@"Bqagc<*"Z,H]_TdkdMOi&@^W9(1WJddh"V,32Sb"JF;VBH[\fXXgZQ-8sa*Ma=7+Rr.uB[8Kq
%@4`T_B<HTIe<<_^*oc;D9!l#V<tDJa%%ef,A*]F[0]B;AI"\.4\Dn5fc5,Jg3[eh0_[-sbiX09hW+i6DLq\Hq\u>t1&#r&uVk>]R
%Ao(=::*0OpTtRXIKHX>08)2s3L-V!e*,](gBLZJ`'%u?EoE(KOfrW*W>QYL[fb7j&KN6O-'VLYn/)Vk\JP(te^WU^uYp/"8Lp.#2
%VsX:'Yt=<d4G6-o"BF_4:uUA;+<F8m;(MEE3:eu.N9[F08Y.As+u&#V&P2B.U[DP)<G9/YX-DOb.D1@WY,3C7_Uq^tC@JBQW_s@3
%9>7/V\%s$#nm$WC`f"+BE:CIHEA$<e91V@&2ZO.K&>A>c0kO3MdSQ"^e^\(*/s&A2=JMBrk@J)<H<=gGF7?_RLa:RBP?D#O6YMKf
%nb@]eU]H<<0?"?/TW'mNWd8`R(`\/AIS<`n4+cBe9O%%W\/FipS`EU%7*Wdn6Qk!B^nF7cn^e2:#=MK[+EWU/(,q3'+,r13B(@F=
%Y'Rg:nrP2&is?R&h]]<59V-=jHn"c&Z%!1JR3,FY[%o%VQY7'KB8sof+YoP(6,?MHU3If[ndF:lbnkqUkJCfL%HFjOUCCZlJeCmu
%:H0Y<\8S=W(@Z-\WYb(LB5;K94jXqr]5FB]"S/I-poS?pn^KF=[2l*XfuTb;M\A>P>i?'u1L6.Z;B:t=B)'P(_^_+hG_`g_7r`CK
%NobOAM+.0d7[[<)COB,<7!7VC^u.f2XYHup;-f*T#T.=of*"7hHjt)Y0G=hi\uJ86a?ia>#K]oYe32c6Wk^$Q337No6s==M4;EOd
%3k=Z(QSN)-(q[nmE@qTubJKt6KN/RXj^S@i"9elJGq6l>5sgZ!;C.bZ:gt/DX>=Eq!@E3-]\24NHqpPiY!]^ZiY'>Aj]m="g->uQ
%o:21+OEenL0.%0Vk6^TIqMBht]g7ND`51Q2fnUFW#;XMN,jk:;LW)07AgW=dCBJY2`K3&%j!DR),S$tK_6L&&3]I/#e#4JU(kHOe
%>9LnE$`kVQK.FB4ZI4gq:mmBn'P$]!MOV1=0mTGK)*9Wano.F%cq]`/BB5cuG9;*<0d.\JGt8Z[btF-'-hQs+`$BVI66FghMTCFZ
%RqmCAoJ$F%O]'+q.DOLi>DZ<5/DZS>6j[t6'?G"!jF5aUEIrael:Bju;KW1<IcA1C@u?G'8OU;rIB\Wd5Ad.IKH8MW?8cdD:!a,p
%SciCaYh92@8US1[_e0K>15V:kL?4+p,sm82HOe1-68.DQ&eG=_l?6bB\k)rhN6;WDd82]&/7^@mlKYo4J%c)S.'aZ'GY.rKJ!S&W
%KQqAc/$.?6M%@YhL6>obeA,)V&/9:n`@2d<<b!lToa!gZ^`T&1[OHVNOk]H&YRONek,K&D#h--YMIZrtRRnDP<p[Xt)+Jc`H/NYo
%_hnQ$:mDMpK&Dn;pDn0@E'LjEZ6qG#Bm]&5DMY6ob,8BNI"i/^?h@Q+BHuN(FR5mH&+qNnT4hJLfjYr?5>dgK00Tsj[&jm:\6/^V
%)ia0"X""L+=OEM8N=@9aELJ1!M>[)[W$X[/S8P'T]FZTFLD=f;:%;p:ml=,ATU4]<)_2$N<Nb`r&THNh2^3Y'c\qp,!eh@_3F,j;
%\r'2af9alI98iL?8q-9:A28*k$!h"cZk.kFP</'C&XMTKdrH"]Nt.EqYs&Oj4DsBYW$=*Wm0M]j\.EP4l^dNX7Ht2HV0$GWcY4u>
%]2>I+"Q=lC/^I%>BQOKg^iI]6L+$5B-:`t:iLJ[Z!kM893\cqqShMH;FlHIsM:G$(,HSbu#16,+Kk'Yn&QHF\%QDo7Tt:"m*E\nf
%TlAtoC,l"+A-4OhnVU^Z83+)^+d,NI]l1C`8Bo>+A#Lt\/hn@&as*:=Qo>0<-:SB%)ocQE_[YWfMJI`(3KeBBpn06u1]b";R(3JZ
%Rn`f9"k:[OaO-F^Ubj9T5N@i=kY$e[4BrMpk#H/mJg)7e=29[O:heF$o]3Y.W%:QJ>$qV1TFhYm!oH2<e59q`P/s[QV)3qlS3d@e
%,>K:T@tfJj4":Pq&ZDd'F*$$g#g3"Fmj:Ls6F8^"5DF4'1Yp+t7`47*PIDp.2?`QWdJDjW&JFVQ6eIDS=n)5M=U1FN;Ns3CA^cb7
%dC(o3VF),L`F"7m9o1?+6m/Q@01@mu&N@We3opfJ1gCFrk=+82']OZPK>_^_E)G[X0lI?WH(tO4%26g:_[YXqU_)SonHhIUo&[I$
%5a4EbmVgjRc@k6c'<tm`Aa;A3)1d$,Q6^W#)]G`,8Rf18'Mci"A#O_@Q5InHhcrdt)hPS<[(s1[KN^4d+L7b%Lom_>3jO`=:RNdh
%'M3ImNt'&tU(g/qj)fBDfJlhKJ]^T]ASWH,La5P`SVr5\6/fIfEUni\:=?U,M;]GW#3$um%7+QF:9"Ie%26g:_[YY\VjHZ]!9A5V
%;nc'@"8R"bb!-IbT=Okl&>9jtF$i2q>XYGOeqmSPQT('PKog7?Ko#jL;F!8tP[d;!5s/W_;,.b3Yddtl;Dd#KP,%"T53KR-=$i-f
%(8]fl;2g%0]W:a/^Cq?L;qo:AJQ*"_S;KkBOW6S)oa@F(,?ok/$NL6p$aN7_fa)o(ceKB(k7AZdj/<G1.$Z'$O,ZCRGbM$o1=oQ(
%A<*Z<Pu[A`Olg/.=tK&nPo5-c17ej1Qm;=(-`%(5l:!27die0+=N(1Hb>KI1CQ-GVEPWB+N2jP3%fncn3`<L-+F/UTVAR&)Mlrpn
%W=aWa&W>7/D+6pL2\9=%e<EDHQD_R<R)Ph2L<6(?M>s3VG?L3,l&nEs#PoHU,3Xb[/\bYg;/6Q!E[2f'cONYZ6k?^ORas`BY;!;j
%gc[F!ILuFH%mI"p1-F>Tr44Lm8lqcF!;T`IA8n4g!?0*&)Z.Y2T?5pCm=J94^;bg[hOdYVL1;P7;C$%-5oq.IY1+aO[p*eX_EsK$
%<aD_UM8HVN".IRE:F*uO5,u2>lk-3:VlIu,7cJ8X<YNi'K!k]%>kY2u$\=lX((EU,%UA'l&b5&e$J4h7f8%qK_]o\MZU#7E[J3d7
%HDP`bF[A&Cb*AP(&;FjBj\90Z'Z4WSrIBhG``V9p"LV,3a=rtfXm,5A98P)^A_P+tCO38R.G<qCfp#'hl[hSBH?PGVI\f&+:D=a:
%7?\XOGbSnBR+I5dhUYK'#0]F+>sSXTfsY!?H8ac"Uq=L^_!F$M4i6j1*%rSHk]-f+JmjO$TE>MMUHsI,<Zrste%(et-!3@<[`CF:
%q1&b1TJK$R`)0ZSMRCK^g2N![[K7IT\BFcoO.%j[N?R4=5Y\`:37%g`_3mnYZ;jnHfG(e)G\icA5kf:snf+_p=$K`rPBm*0a5Zf_
%.s;l*mrZTZ.;-ZF;s=Fjf-6WL%=o]p&nDct.#*rR%e6NW,-VuIOau/;e^B(9/Ou-?qXEbbW5MGh"Tu^%$:q1oeB&-M\nPqT+YaD<
%_hdHslE$s%f+.uB$m]4S#9.!-k\<(NL=)8&Ou=J2GVK*8+>+M,He,i`r-Gg@G!tj7NIYVH#p0uTCam-?4Cf?mX&X7U&&DU&j*(mZ
%7HpDV%>=#s9Ut1@K@5-)mk,B5^5.IPYGN1ulKQ4!\+\9:%#eM?-!&4#XN0ng3X>hl6J#XgT]^,Y0ID%'qh\?n_X,]+.:2/?ohGa*
%C(4d[?GAf^$Ya`=4>q<7<;6"#i59U?I)\ii<4%'$*tmAHaPUT!f*R2u)(XWtJJdfB`Zsli)0p17M=Is0?LgJrKTql",TVJN3XRi,
%OW37IOcc5(!3t#;Ok4?I,q""5?A7r)h]iMfQ?[TUZ'?dIMRLWu*&RpKKNfSkP-U>%]g+[r_p9/A_W(],R&UT%\h$9iL\)'1(c&?k
%'Q'Tq/0;Eg#SIBmd(!CV:V7s/;]^mH`H)%S1E`KN9pC5C;[l!(H_S)jmDCWX5luslYB8?1dfrN616s-:_^l9[MRNXe<KnLa*iLfJ
%R$TAlL;XLn0;U<@T`_TE7pGOr'(``/#]`bEa?e7:Qq>F_MA'8^o18!\:)!a72rgK)'VA7@;].Yock9(5,tZKZ'E_HGm("pC;irFu
%@3B:$%B\0DN+)#s*Kd&<B;;F;]."L-/b;02?`3q/>iNpTQXS/Se2NliU;4Qh+3F%,?OcHN_GJft]!;YsZ?1BqZ!br*V(sV1U`cIp
%ko6@M8W0r$#.$E*`9?$g.2Yq`;3Z[";aI$A:[Z:?OhS>BRc;s5"(0[\7'=54;k6`Q))emgEJsg^lI"Z]c9X"#')dDbS(mH>_6'!`
%/QaE[dtp-9?5i1=N2,6J?-lNn[$fJ=%tiVsGA.QC?b=]c5;2G<`ER+BD&6$"@@/R0Un_/ndPUtH(2qVjE`(ueKAeCX%kW,jMVo^]
%;C%i6L-8!Te^j4&h;ep.j0=F`5+JKkS5>4"$-*j-idil0Q_#VJ/efpHf;aiENQ=F`PL5:Y"5*8fN(L]3MEkggN"Cg_<KWX!hLZD'
%GDP^V8n>ms8oLK^,:]e3k*RTq!jVC)BpsMeBb;[n-j8I[XKF5^.e8A6*)RRSXP=M%=nYeDAIa,O7/'YL(?j=@QO0ZnnlWl=]k;!0
%T1<`8P`'1^cD&VH++.kk-bCHq@WH.FGXOjN-Q5CF=%P$'bA<$T`)s&R_CXn"RpdMOdf(C)^rELd"1%[lfo9HJ^'<On*9<]1M*Be^
%&8b^RK):>8).)*FHZ+)BAD*1aq_>V>0-J?9*,(&Y;t'Wm'9UiPQ#5hN:b[=Zo'7hZML>#CY<cbXj>))]YaV0T;;?ndpE$87n0lSO
%n_W+uDC+daNct80i)9ZadU:GPo$ef#E&+M1q.^E'E"Hl.3KeQ*bM0D]Hb-$lc@iIXIY\Q7Hn0)%kBd`h/%CLAc$40ql!]1oYa<f\
%`870*mPqmJTL['3HX0sP"$4(_#O62t?/0K"m.[)XU1U2)k7<^If5JVKd.,rpoa:-H<\rUeqsdjAV,A!=QF$F)47\n2.M6D8gd%,=
%LFXb.X=uqP<s0m0P\m'#1Pe`HL%nC`XrNL*giu",Iok4)f!Dkt]8?V\8*H3cTgCO9956o\8MVJn,R;Q-U7UU<6,C4rG#kCXZ.t,S
%T%aZ;6lSm00eI,@b.:59SM!ZD)N>1N.qlK#kU[KN58=iW.^TKfm0\=IUf^[%5G@e\Wg[N9Y27_,AM=*Thil<t4oeOMao+L<41qti
%\U`Su])-3N`[u:iih:')!7D%+8ukogIW+V/iPEum(3QEiG>'u9o+!b7R*q*61bgQ-<TuaS@*%?sb;ujkPoPuX0ePNpqm#?7`k1Oh
%8<.K@_i2L8Y@gEPh;r`o@^JGKfmIM]P5`:VUuY]a"-TooK1MF^!kb!k]U"fEQFj;=M>-/(TaQDQ;ss!?PQJf>W_lTsR@&tYfK',i
%/oXmSTp%bjW#f5I:N^SeHnoWVUIlWe3Yt68SsQ(N&>!7Qan8Mhf:'=1[RC+tRofrGfLhm`M&eUn:c?DDY2&jsU.oSTit',SE)i=m
%#ToN4BnVTETA4[ap(b&+L=JlfNIs>VSa#j=q6Ls%Wh#RIh-[s:BM5(D+h0Y?eI<DC9)SG<0Dpn="i5c;L$m"r@E6&rr'Y&q.X!.7
%NC4K6LcB*0nRk/X9_0@QK]j[X;M`((#<P>c"#9ZTEg))G\&`k]NUhe_[b33mI&!p-LrYKYIL*R=8.nu<Wj4p5b?7fk60ior6!m+"
%+Y#QD+%!q;Pn=f8f+TSmFB/W*"FB,,6_6Xer;CYHO/X(KOYeJe';[,='OEiOI8n?5Jl':2StiAPYtV`RhHC,J)">-]M0T".$TJ^>
%.-Ju'ho[=IZ=P\2aFJg`MB*G6VL]]Jce5rU9EtW/;!U>m(0RRQ+0o0bB!YJlOM%snPFhuR?*W,o7c>^-pEG,r*oKCJZD.#Yff=l-
%$q\*rQFNWm'C[hV78r`,P#I[$n/]b/,lC-sf5P[:7"%OeK\DS(J>6_50.93tdaH;q'[BZ<?Z.@68U,U@en*?2@`0R`fSP2jU\PeV
%`MBq3oF6Mo6kq@]Oh'ES"bF6&J.P&@F<l:MndES"i_6';P+F,D(QeZL'`(0OF<IZ#1k!1b7r'Uth(tFIO$SP6SWY*G)X=<ULsq@*
%p:,u)e^c]4R%+6+iNtTB8_p3_0G8"R=U?_nNGpW\Nb!U#qSHm)gDZQDjQ$u"=I<;IP:3G0E[j<G!,eO0M22o!<Cs(d'5^WiH$gUQ
%O2D-UA7Z(6_l<tt[r59@n-_&=SSu_q[j)VIptP;:l#K\#bM9ehdI[@6GTThOSW4hKC`Aq78Ag<TZc,o']93M'mhkbtm0&*2O=M3j
%Dc<:>Le3WQ%bJ]h\d])GX9hV3KHOS#Ts^Mi5&>kGr:^?*DgCQ*gGH]E@mbO8nnT-33l5R9C[$tgc.G)lR=.FAkXdf3Wt@Z\,W$C>
%,hEM?0enki9h0*X\L;hpGHt4Y[T@cD,6HNN<Ns?/BO&`Dof=4sBd+mWP'%Bl!F36>Uicp0rMYE1cH+`Z$GHl=)djkGTECTgVBQ\A
%FjBD=;63^=W+I6V8WHm4%3^U6rCGh3ITK4D)S/*u1^un$)g'=J$_('Pfd;C<P__Z"nNl8UHik[id21bN(i/HT-lCRAndF&/?KL-`
%(#K6Q*fLtf2\#R1iMdH0_pC7A[h%:@&f#u$QLj$@`Np-KVPcNrK6.OG[mR%`]$5do@YAMhi^Y>U_e)IV#l[S]eZ=?#pc.&i"Tf`>
%P822B`-(SB<@9Op1t*UL(M4(FDP<,1[@p\FP6bUe0?Gu;)'fsI]4=j:cCe8M5T)E2O7"(ne6Q/r]MR9A27U/XU63UQ-n\!MPI9W6
%<oBE#.3"]a-7Q-+7SFdIdklBu#We^;)uJkjh"5CE[aY*MI=R[f'6;]l0-CF"l<J1(5.Js#i7lB6'l>9mTo6=e^H*..+Y4kXWF"P"
%-OU4b*9DG72U[E-oR]EgMi<VeG"TeuJY_tb2*9u_ZC0o[W1l$K;dSLO3C&]Ukd'4R@M&%,iE)\3QK=3C1:S8QIkP^``rAb44PZXQ
%K>7SU/rBpd6!Pl#_0!R'BrN'QeX_Z[<J-//_3.n6Bl"o:76du3cOb(u9o:MEFFPQe"#$092)1)e8p`*j'54$c`)HSRf/ta5o+(^:
%MD9,);VM_3_J=d071hh[[>1J1MKhM8&PuMr:*;gO_LXh,4Fq%1W[>djIWEinj7n5<i'YF%bYc-+BL!+DSWUTK7-e=JdYY[ImIRDE
%ICeVaXX]DQ>ZXBG8A6[oqG]Q,Yu='6$:s7L>C]6%0EuelO0H!m:GG9fcdtbq%?RQj9@o1S*)K$^5\`qa"1WLZFsiA^Y9df]+,/3G
%ZYr;S#*tQcnRtf`qp=%m2V>^d;IM%N=WJH5S`YJeA6gKemRA/DOVE<&S*<N=V9[l8](lMn+K@!ObU=)jbNGI###5kZXB8)kfhicT
%Q]NK#JLQd[=#(ng4,"<qIV7We*cV56N!Ns[V*,Gt.>>KDTB8ICaCZ+Q>+hIa1#/^L3uMoC8U8DVgR9`KL&;._g`FD!8E]f?`/B"0
%n=AR(qaokl=o.m_$CDhV,![&dEG5[299._tO+JN\.eS4/Ylc1m;TR/!@11$,GDC@r00NIV(t!W.jR6X5V!8N8PKEGdJ<XJ7fqjR1
%'5(XdGQI0l%?&\gUI^68,N\QdJ4$S61<6%@g#9,gTcGQ$*nJ`qcc7!4(T%!hGf"7'!DA!-[QBc[dW8QdU#=J?N,ssT"7=7haTpN3
%j;+Q`A!4V4KT8U7]Uu,W=WGD_$1g@<^((f0GeHJM0u?t?.g"Y?X][@n;*ZLn/Mlm@2D2B<G^(K*_LYH@ABI*M2H7roI=J]ImrQ3R
%6XH&<=fX?Nh(KWY#s52nTXXWD=JLnJV,!-U!mV<dP-O35l_;-T^U$3C'4<Rl-BY&?'-f6qpNW-M5Di\Tc%.bq[6reecn9k0T4>=o
%#&Q;N69C"+#oa#d#Xc*MQt_`#F:+p`NMDO;lW"YR0H"*lTZ^RXQkZR6ei41bnk48X,FkO+R"[(q]%bh7Jb7Wo@%UqC)dR(7F5cBC
%$p.Lgo3'j`jTq95Y/@Trid#gkBBJATnQ_NV?OFJe.nPtbS,ld?8?JPnhQuQ8"``3a,`9Y`Fj,YR(p4VGDA+:_UuJr8S'`8JAS#GS
%1!]36Ba#M"UU6'\3hOAO55Aq\2[I#[g2!n0:#fmOVRm#JUh37Fne69l$Zg6",q[!R+L4='-nnDbI.(0j_)e4sR3>r.c'=[U"s7k-
%nt*5(7d2dNLI&1RF<]=>eP#tNC?]Z38<8s("i$6B'B_WA)<U-C40rb;+"$@=a4^p@1`F4!gOau.!t60iK!D#W@/.(SgB,LlG/Q0W
%:_l:Vq(,[>qo]%ta[UT?UFHZ*FZuF'X5SNLL:f#)mJV8@X!#D?bJGeC7VoRu)>U2(>c;%8$0=Dk/7qg[V*bL;"s$o;!lEemUiFqp
%cAJrH/fPbO]1<ug"-_u(d"Z8q8BQFJ[A1kFNq$s+R$`]R"8AUZ6s55Lc='El1s&)R:tUis=$UJN`@MW,'n=<3R=ob3p]:2E3ILX$
%'JU[]p7:PB9TC-0:W5bK@pB=CR.aZ[BXjt%pP9_h,g-T3bCNY]1?+Ze*78+cPn$^2"?i_]@j>YY\_UctNCNdJ1+Z^%U=j.8,1oX(
%\C-Ch_kD+sangg'!EW8!.$:7:q[t6q+IJ$)jOO^`\l'qKG$\Ej4s/mtVFQ8$jHMr'`X#.>/Trt]aZ(!G<ZFSFd@16&H>-XLP!;U>
%2LJ+)WKV"Y<kmE9B>r#(43o)$81-foO_qeXTOZpI2Ar&?)-''X:$i!%<j(Cn.]X'40oq*?NUk5DPA3(,M]KJ"*__P@=:MO[LG@Vl
%(8;f^^^6e?H>?V'oCRc\L3RQslY"Zh2H@1!MJD"s(0[EJR.GK8CO3b!%_#qXZ-ZF.*o?m471Hr`pElF2Q9_2J?;R/M=PB@S@4"HN
%ZEdn?g^*><S/qLKr:^usFM%Y"$P4j1p"7WonF:0L.F\6Q"7gcN\+MDXVH@qZ$iSZO&j+K-D($meB;(9FbLN7__9`3d$uOT=kcRo!
%,;2ha2QCgei/n!rq4rV)]kK[UA[Y)gRIiKP=it6\a@Iab29@);$X1n4E'-e-5`sbI$\171B(;)^=_,j#,D"T&.3rf^9mS3Ur0hO5
%Tfko:cY)L+lXgU/brS=.`D$'+;%\S$$gs`JqGKNod0IQH-s@4X@<Yc0o*ZH.FoRnbhWC>\a&L2Uq&^t`Q>#cE-3b2,L"R=<0SI_#
%QXT1>-BK0pmhYIC-3j*;j?4MA$F>:F6qnKjNZPTh,(1`hid&'u+X;7r+,/4;Cj>,)K(n<.ab"\qcY':#0\8r-aK+m_g5jjm@$`?r
%_Gb(,>GGGpmY0AsVb&f';4J,r"@L"6U*2\u]O%Iu)/M*,kW=82\ooZ&]MZ3qE*)[1]Q3X6o4t=7'qn8k=Y[![NVkp.HM'=1jN0t[
%m6u>'?eVp$`#s=HR`MC(`;BqdU0HQiO.D`7qhA.L#PQ;)b^q[bmCWg7WEbV?e,e=U*9_9AUTHV\3NrOI_.R+ri6NQ"b3kqog!lR5
%))59idRc+uE=YLZ@k4jkM&m6Ajn-[kq+gp#')-KfbB9pEE1:5e3X17)?aml3kX0RlX2X`sHcU@48_%pl:C&/AZ<eMa@G:+PUGO'7
%+3*[!Vje#Fm$KQ;RgSPtYQ1gf`('[-Z(AVa;c%[p/8b`U5\-27cSD=Z^YDai;tf:TaG*`TDpS9VjESdu<`S!\qf.q*DJ`7[hX;Ce
%Vpm`QDq>_6IXYg[^3$-;JS@W754$_17P%EB%a2V>L`s\gA&"ZuK's_W"39eUTee%WqpT"?C%fh,m&G*JddE^@0(En:fZ7*(HEf'*
%'k=AafiK4$`(`SQf^8o!d?WnYj+bG)B(F?.)^c*d?U07/^kGW*j]Tgo1aVBC"r"N\)MCqHm+TE!fKXI/PO:KroIO^$'5\M]PqoFC
%n[&oRZI4#kKEb)"fW[>V5o:ED8?U1DJJ_VHD=*88"V,2hI7$n'N1`XHWqG0g\h=2HhA65`c[hGu'(fUKSp#n5UhXuUj*nr5`,cE0
%/^YXK]KkqK-^KqNND,ZSlGq36c!k)V'oFk6]QDdSF^8^SkWpg2Zj:c7CF2@;e.B==B^Cdj<4jNei[KlCc,_9$L2Bk4$pRI*?!3$h
%B:Yj:p.m-CVTb$df)A,4%uPBs&d/c8YLudMO[6(!'_m\4pp_(l8dH4;;&9:d9gG!.]1N/p3f_5G.+7n!J_`oiHpb1'=&(A<H*O14
%%8_i)T/H`h;aIa^CkkdA.,"okkI&N6?;a9oWbeANNF&'7]CE03%(e6((Tkou=mYS/WU45<5"epaAOKSd81+Nn+==mQQD'O[?0CT$
%Zu?MGj6bca]UiqP)6<B)/6t/7@#S"g8Hi!YE^9A3oM\`?>Z_5Gh:1OKN?UpA=\EdVcs"):p$mGM15Cq#\/3<L\lnUGIN7brVS,m"
%Sl3SIP^Y%LKm:fp7A8J$Z'uU+c2Ms^g]"_0D/@-/8($];g132k)RMgP`VGVp0I'nAg(nSDFOnt>6m*LFW_RLOJE'q_3ZADqE4_^L
%&Kj[i$l)P"")5cE]H<tIc\M\t4$^,8C$f(]g!Hbim9,r!H#).ffoXbF]sW@;4gUq3^@/`u1pYGgB=\c>=#PjZUAM*6#ZO@VSC\`N
%8R/7t2+0?JblOMjoN;ag#u<BMA8W**ef=p7S4)h=ZIBo5R6V\"S<->T$u6>,SQ1k'>InUI.j=2"%l"aO&F%`c50fXDNulr7FV2u>
%KQHQShff<_i;1DL2[5OET3h3lMhFrTM.M"MrmhdOJTWWe>,+dW9I>fM80k4Z-:#$9m231V`uRSQjsY-(go1]0.TTbAM_I(,$R2E/
%'a-ib$*Q-Z1&f(b,4MOfM+,aSJ`TDtW!I+&=XY0l#GAbb(FdI^[VQ^drj1]MfX"k$1"O9sUUY?-V?0a=R2\S%<USkf-R8jc0Ja1t
%6]]cW9i:l%\qa[TPh=Hh'R;0pJI^m:Ad!gG+Pe&P8_e!COg<h/,j2dU+i'X="%3Q^N&:!hQ-Et`:8_e/jk."de%79;#C=Tk8'h"%
%`(0]5b241$a_p.[eL7""9;*L2D3l5co2a-C/u@22UY5kI*[A"L/)i]_T950a*JF.5:s=:>`\A7D1_ZV&b+'^K6qK=GW%P.G7!;/q
%S4\Ig0V=Egp)Y1\Q91Sa$4*\UpVk?h3&!_#R!'!;HVNBEo(=YqgL*lg%;0Prn9"rnOE*R?/38INbCU:&q&\B&S/&1-B3Z$96P%1Y
%Fk4p%hor4QW"D`/PHWLR6^!G#IJ]<P[K'Lqb=rlDgTD+:W!Xt"iiXVl-B4bV+I*f4Z.(WI`>W8h3;MQu,5bB?GV%'%U:_0U:)X.t
%"B6,SNEeQ'b)0%6>kY6M[HI`*4>I("gG^?W*gu<RZsIVckXJ:;iBrMpY<6etaUih3OiO;<KX<<d2-<#,hug[%8W2hPAR(V,WSmiF
%*?OjPa(7TA]Heoqlqg/>,)k0cmq>j<?Dd/`:e&PHp<+Qh*g3/VWB+T15CC<mFH10&4OA,Kc>)^nYRr6i_\)&a3[!m=-(?.Y\r0)-
%d]e"R6&^L'2llKpp!K1LK/LD<;>a/U>&e@/*rY0E3`%=ZI#q;&@9kU-BTX_3.A5;ZL0qf4#rn<-r0J1mLt"Q4qtKf5)"n\>X?0k7
%\+.:5FpdrW)C:P?j+6EE0\r1[L;ZO0M(j6H_'0r5\>SbTAi&q?>RqWW,eN97SNV]gk%U_=5bsZjrXFR.XelB:`'jrh2fbm\5m2RQ
%pf01;AaH8LPZD3IjC3dm0j%<BhB&)1L4D*1:a*;bLsfi#B-Ht:dW\NVE!&R)YR&[m]gLZaZ`EaMP(LBm5a/H(if'_Npmi=nO4T'e
%OHI(1A$5Z+1.<Uj*[ne=[7&J^b6*VJ5_*oL(*oO]MZm:9L[?-^/.HA]R'.p*TK@E>+:_`>&+1R^bN,J7eJNQO/-2VbmKj,dd"cU_
%7^*]u<g05a:!j_"JfTc9GY:,R0*;0C0/\jZJ\3=/VptT4&Qe>NAGXOJb%NLtE-0G3,`3_3*gddrcfCdtOo?4Ne_S3.d8emD`:`d2
%0+dqD1'O)%qpb+8p'=JIENGaD.(G\DB9(&!-GAot@7U4CKK)g*TL<FqY@t6E1%0$'0`o2&EcCOt&6A_&:I!*BL+uBN2K7ZB8pNa$
%Yi'QZAYH+`(=:Y;r?p%l@9!KkL6u:^<MCoEh7G[`DJ5g2%GW;$fagP:Kb^i+TSRm=U)F7YR0?4#fhD^f%?/;u74"q+EO\kdo/5"P
%"d)t$F^S)Y-LEi.h8)LQ63?So3QJ.+0d](&$2JJE%YAmG7RDeAeEc<p@:H*"NL-]':lus$*)oDbV]pg)jH[722a,l;%H&h$\)PQd
%eZuTMTKqAWQo(_g$V[[1:$A>49i-5'FU;CV'FP@Sf(l7WKok"B+Oc8>(<nmt<$,4M(/!851+]IK(q2#+YNB)qMBe4mD1at72(]\O
%V*:,JBgheFMYL2khST=`?9JcL"R1gTDPNI%AWl*4qHmc6Y"@SZX=WTXIEe0hIQ%m:THn*qB09!!/6lU\;D2K/X1/T-?H0HDV+oKX
%-b)<N*ZlcX)406]@dD,s)5S5(R6T7kpIHAA5F?[fbn5s@FZKMpk6UX%cm6mm*6/26U/L_"6pM[CA-aGFILNOSEu7[dQH)Y.^&aB.
%/pTincqIutLdk^n*+-E=8W=);M:lmIM=Qo;`L).g[IrRbU74\"C<Hkt/3DJRES<h+11*1^.-ro:gZ\-cFO4;uQWOVmd]RNkZ+B*I
%OUZt+CWKn++0Nu.@)ks``akMH(&Xt3['05qdBZ^qOb09cG,Q?6%O!p5"=5k&4+KH'hMaJ'X[bO_%)$_Q]INNo[Et&m(QKHcUcVP6
%W/&b1h&(Z_-.&Ne&HcYq;W].9&t:WKL@o@?^+nh&n2QU\a<J_>*1%g%N9ifn'IcpVqbl5$R%st=0ksl%__e'b)[\@Rb&[kGgQ99p
%#A71JE><MH"ePs*31>Ju2M<rD`:uU&Ie".]IekFn+;X&AMF4gQ(4]%3WIoV44['@c@sXlaj^obYnC2EqmV;=uk?S5Hib0cN#!)BC
%N!q+(8_q0$TO_,O<*=UrhdgW?=Ahs&[=Fp,M>*Hh#hgapMXDJXe6.>MP94,"Tk$t"E<E"N-)Q6/Pn?oE5BVit)=\=A?PGorh2%)<
%cfNc6`dXAMc)!41E)#>[XX*Rm!=B']qGd9=5n;*,H_S$,1TMBWHj[;kg5u[hVcU6ooOQp701enX>hdfNYDc-Vkq<`QJ\`0^%re_1
%]p`2%(tqdI_'Z%a1(5-q=jBRed^*6'#il9RUPO/Pidq?qTd\>t]96]I$*I<mS$?[lik2hoY:6[tHjn0_Ul13X-cI'iEjGs)1e7n3
%9Nkb4TY+>-%?g8L-A![&#di1a0hDXI2ZjF?_'S?$aGSFfN+G68p^1%0FMVh02g3R(PP"7&idPH]008"G;<UACRuG!)OFfJqGW]mH
%;<mA8UKN>c@r..+)t`1NLc_MJaX5/oiMofR+#;oQc*$MZXTd,ui,KGk;6Z?sP.jY=!#L]I$N&mVLG1Q(XY="D9RNgqi>c4<8dG_-
%XIp\"EhUimKR,!DYS^(@IgH'37^U`$7\M)q">\<p6:LF'8+$)10]>P(O4U7XR%KM`AdXC^&fgfbq70$b((/,&/+fB`9pdCnd=+M6
%#2DI/ER9r]M^9(h$=r7&g2aNX/BR+.`U>h3&lL)F$&.kHSm9&]D=Kp5pr;mDN2*,I+@")UNF?1Z.ii%X9K*0O&=o=;A'S^36\l;d
%jb0%Haj0$<h>sW#oi2.>0gh?0m5/SL=jtT*/:U?JP5-D%r.Ig>ApCZRjOD.h;UnLl`1KU7N`/"!i"_P['J4`\*J\U2Y-tcUoH@0T
%-jP;3nUU0F@kqQE!]Z<ZX.1Z0gOajo+a:^h)5_+=Ac>(8-GjLV*@W&X&(cQ^W4,MjoH5/&F<?oekWkEJ$$HrV+pKOG,.a@C@>SMT
%$n]:H`/,[`eg"\FG_a="&mZSAG&3&LW]I10'Sdp#,p;\DV(4gT(WI-r/iEss&dDiXS[eL5,S)S3Z/dmgA#3K$VTJ4`U_'(R=4&eq
%QmU-X32eDq[*Zp/nao(Fe<iXs#BeRd]@=1(da8C@Nf[pT.Mb9Z-UoL2F)@i<o.X()r$ZNj.J#bo<THg6\f(loT-[._L6pB+Ss/r.
%'4kpbL!k&8Km1E9diA3^$@(+AFS$_5b(m\PDr'Dfi1n0i"enX@+SI#bFgSNS[H'G6/l/CY#8pjqVDl70f</NBjSUu.d83SAoZotK
%nRhM=5&-$EOW?3:fRQrPKIEaQn5).ipoH2&%&Ic&78f\R0:?rfPDqF;aXUY+&R^U_F5XB):4c%4`bJ0X>RX116h3C[7V`0&AEdKl
%l7d8i0U`f/;Y-6t+4C=ofsEgtNVDR'W@2CtW.n-a(snq*Nl)18e9Yu@6!Ri7k2L'U$eWb7T"TRoD*W3dfm&:O=pe\["nVGD=[0)g
%e1\Ap1e4>#iCR-A_[@UM@hjW9Z^E<O"kI'.F^rC`MS!PdLJMM-T%G5BA$tfCXO<n8<bN-*V+4No>#cEW?#;nDA'2Wf8"L;X,5VJ\
%@hgA%ct_C4#%BH5=q1&.F"U+4K"F\*.U_5<fNFq80%j9@"g2!U[/Kq16fqAXh%X[X+I0lDp6FqbD7h)6Q7RE?[VEWYqSUALFDQIb
%fn?n$d\@d5g7`(.9O0)o;5_uZ:nF5>EO7h"'ZJ4;Pcs6\abS@4=WYaWPF:NZ6/oSd;L!c1YhtQr?">V\6c%rUam>0BiuJ]K$_F(O
%;00&K%t^%@M'3ut>tb)HM3M(h2Dh1PEM`N%N6g^@b`g([lSQWj*O&>e_FV0Z1GX65ai8/ed3<C,BDlSH/VK*>LCcG1@&8SOb+*9H
%Bkr7Cfq*fj1qqJa`]MGW&4g@DnNgV!6J/R<0fYokA8>YKM!H%=g/-009/N2b,W1PIS#Zd6#cLdlNXI_+8m7cZVm'%h@-I3l8(BM6
%T5^LfNh>F)Q(LMNH9etrI=3)ckJi#hBV)?r3f9/cb,.3S+LA4iPcVkrBb2in;!25&[[sVeH]_rp%RLBpS5>o_?'!DaN9n,.Jlo^=
%I\pWc2q;HI)h]]%kg,]!Lt&s>(//90%d?V6gZ\`EjYT8F?@;"bgg)=h?6LFko-?uSP@V$E+&%uArUOVWKb9>5c""ACIH]`&.g8L4
%Fk**e>-ZsgMd1Y[:p\^DN3uMJG#?;n,,@uT[6Cq&FMI0I`?gsB5D3gJV%QVG'\3Dpk2s6m.\;LY\10,5=q'aiHkm"qaBlo,BdVMB
%dbc"W'2HZe,\\d1(Ve&8&sF2RBZ!KU?I[r2'(,N0`aHq)D52oL5t+In$[-Ib#&jV^AsoDgeII]o!0ospToR:5'rD2.+o`#U:oB&e
%rZ2GqLlZ\#flmjYdoYdDZjdc&W"')K[*nM?e4<V`EU,u@(^ER<@$6+52<u'SP.l(@d"._$(Z_0^dhKbDflNZ2_0[UI!R;'Ip+Mq\
%PtOV9kR)bZAH"?1Rs$Q/m_JhI&'nalU3#ga.=iKVE:mY6Mo?fg)<A0Q<fdkR<"M^sU"&D8G?!Aj!P'u9OG39nF$EBiipkB?.4'__
%Kh@Sr(2'`,J:\`;H,?5*+A6c7/QT)L\o--(%\`184Cs139'Q#n!(gB&j::"!L5RdS_Hk#]O&q^f@G$,F-B6G51EfJ11nTU(i8D@.
%'UZI>,H6utMr-8T!!JNqUk12=)8ootWsi>`e/,q\ie_:"`+0JnD(q*,2JO\*oj3t*8*1881fUlGY6T?q+;]EJTpYVAfWfae\sP6j
%M$,8A=1JP2A@(aK>_at8Q\,%Zno>mGC/ZU(74JHtf5ONLr>q/\3jNTDcr6Q1acsgV]?*:a8V\6++EQU?f"m;5`lT?'H4ls(a"Bmr
%):g1&4V9/??.$@j7I#:<HD_@7=pL#5^qC@rc*o`=N[TjKOuP.Jb9@DMEF<Q<XY2ZjbZKjP1(D*pU]GR6dnh&ZM%R+Z-4P^7]btdT
%P@YW'"I[/9cAUC]U@)jmJCdJ_qGf&>\ads%[:.Y%kKgMB<-(/)KO91Am@LDDh<*N+3_ja0Hc+(l9H?DI/lTJ+Q6\m8ljZB?(@=W]
%ATICQU&:Y,Q>$t>d7op#o7u0P[nB`>en%q#)7J'q&%9-EKu#-+\<8tG#d"@J++WKS\rZ8-(0U94:Pt2n6)sfNo?:$D.%)C5XncjX
%TeFpEr)YPGXqU*bO,n^i6&:E?Hf(=:am='r"(]B*XML^9;M`^0NKub][B!EO)l9V[S1P8J,.\KJ=QI%e3m>c@4fqiIZpjR#;b?nA
%U5D'C5*T.l2L73s*RL`[e5C`_?.'arr?8Aa!hlp@7Gk[-0K'A-@5Wu[8ZGD"_4B0/2+MSXHJ%7Va'+7NBX)M=&#8/3Tt\JIZ<jS?
%f`RU[.*fB.fKqbp]Rf:LC\Y:PEN4NnUZ\jW,N]2U"bJJ")$;J%+ARF$JVAc7%TYeMN[3"@TSN`8U>QK'7aXOoW`KlJZ<87npk#(r
%cFdmDk[7^K5"dKoE;(Np)iIgm5P2%gHm]sYA=;%m112Hn3h5E\?:HkFQ!NDRD/pUhn,\:="p[<^(<OLL$jOXS`@SSYN(i'S)X%u,
%0Y/dsI"=RaJQX+3,7P;7CoL9WIhl,+9U;Vh[Lb`6^.^:9kuk<_+YV6apPtR_$PtEO<96.V6pUp(KqlrVZOB#?[2ftk3uS>*Uh!@=
%]b1U=Kf.SVH&&o)MdH/V!uuY2l>RaQU7.=+6Fb"mol!\LJooeE`#E5bM>LGa*P!HD6SX=n'B1=6hk'3c<9JYNOOrKnMF0n)O(T'u
%>tCj#??/;;Q1t!$34a9$rKl[7."j7I='u8/]NR[ObsF*&Z:4nJ=`MQZiX%_,PG/'(hF=#Litb&kJjWo9a"t2AJJJh?_T7F3)THGk
%JFNbTN=)Scibtk<+]r.GE-VcCo]q:KJd-0D@N93<cUrI3%QtCePUr5Grt&V^P-4tm0TJ4B";@V`D,1j#6M8r-)Uc?=lo8>;&7=1O
%2=pSd:@>J.>S&\H.\&KjWraKQ1n'@#>aacJ9RtcKMDKHh5WO"9o^;-Y7ke'YGOk?LpmA@O;VO%N[.4b[`AP]@.)Qi3G<:s;-tc/O
%<6"q(K[p;iPocdPlhDVsWfgj\.SiQ\3[-V](MaA[Hks`+5VK:nquBG3giM%_s"IQ9X(b#$5LirgnGL"q;4.J#egUg)<XU"fB2IO&
%K)!$V>o`SL_+VUPRpF_Kfk^-EJ\kKNn?$nS?'-c&HO\t]=8g_=FsC%%Dlrsl]tl9QZ7VH%RC2jm(H@JUTb^R.E]ZNSjI#E=5NHs/
%3MF"E1Cb,sG)2UEV'/kEOkn&^*Q%#.fEB746>^g6l7YE#,kO5\l+OgX7*Z8Pc9`0u]O.&$HZ1UY"t.OYc6!gamBJLR^iFCW%Ml7u
%m`;))\A[@9J/*o.'9#cs,d-iK9Df^\VON_h)Ql2n8LfNLbK9lTTK,$"i(0R8.lcUn6dIm+rkjN'%<[![XhQ+YN],CTF5n*<VQDPi
%e,BBA?/8"U3c^8uU:^in+f`jqa#b<I3MMGsrZR6j)O[Y1"$5;Md9XFcght&7><dfp0n,+jXZj_`pO,EFNYj@lF.nimL"-m!V;Y*@
%0rf>dd@(M1?K<P`.7CNp[1ro54@K0#hBRt33\DrU"?>+TA4=AQ[7S3"ImPQGSpihl<b=aR,"eL7Hp(en,p,LE"X1hi6AA)MG#&h*
%YnN2$dcT&=s*1Y5W!l!?\bA))Ye+crc@t?'f&hri2+T+n';]KWZ6r<aoX\lu&=+L9<X3Qu8%Gp7]&4XG6RRW)Yj$b'3KJJ'/keKC
%Y]XRs<HF=OU!^)O%ts-"7\-%?B>^YL;&CmH%GiA%\o<%i8hM1HR:Gg=fX*O:MM!5n,Uqc8LM+RINL4T5EdiEVMT7FcC4cku_:N*V
%o=*3`73T6=BHN6aBiCc]3h[YsWi%Zi%>E&lVjUg1N&$o+qn3L0fkqsR`t)SjA4FWmDF(c+DKJlt't9\&f%rQ<rtd^bs$cq]O8j=H
%kN!\C64Ep7R\-O@Rmdta2'";_@u7IHOD7/Pc%N?$lhuTtBBBM4Q$,Fdg8Dle%7L=LY&$UJ#l^PSCqnRF4M0mfI^^9$8pbLD22;)D
%QF25;T8KQ4M>DK,KZ+:h3)Ob^<NpmKJ>X=k#o9bT#eLC+V.lU,PPrD(o`Mn7"1$NB[J1UH<<aFJNoF;+np'Vs-b8R+i6_f`m6bYH
%=:gYNRrhiFF:,d$.$nM,6X]Y$?DE1V@G@S(R$?qI4[j!0IZaRrE*\:GgP\-9IkRGM.%,hZ_c7ZhKTHmi][ri)lF\V1kh.pGmR)=Q
%,QeWI1nHES/JYVU3_FN>R_@ZT=54=<TFdFk+//IY(IYH'f-oIiMqL;P/o<o?[H:;+1l*K$Q%jN'?M*tr(PG:[p%AoWVKlnEX]7<1
%2Fp];0ISUdkPKul':VD2S8@!ugCc2l=@MuCma6SbIUGpnrZT3X..X`;>DU&e.EM\p6-!V!"]cClCZ%_:mkj+)E'C=ls6OEbQhB35
%Fhs*JJlVkQTC4j&AYrZ'g*392l3DYj]kNK\/h3<'`;3Uq=4/^9,PF_l\3P-UUEOhYO;\-?j7,`sSe`->Wi[B2#-?h@>ABp`Afd)p
%_qCq,hh`PP)%K[MO!kPSmN/<">h:nBfeMP:?*<Jr4-#quBHG0!ecFGsq<1/#1$J&R+L`'4\Gat^4XJ^Rg?g!M2QYop)f&(JU.:s`
%.)F7'I=`R^.p4?QR7t%[`D+V:Nl@s\OSN&oK>)g@>K_ie-uC4.d\k%J*">Lb4A#]=gSD#e^"/mTU>`5'l\E)\?J8U^D0s'M9NODq
%9:ie8U;j95,^@*AQs^nR]pU0q6!1"r'*[bF+s6;TfE/q<q/f<12+[W5RrLuhD#8pH4QR8S`R`@9m<;_%c*SWJh=A[l3m4EadE[Xu
%%XCO5;(Xa1g!6=:=jU+36XisG5O?e8N4lS#Z*uo^cXLQ7EPKq\X>HHcU$Qd3efeq4X+'Ai]+M*RpX]0i@1gsK)tEYCL$nQ6^Bucb
%SMXHkW&qH>+]Ja8pWb2,og9^`NB#XL4/'oNI%[-&_6N8R%X3C*H6;TuLo5o+5t?uJG]=hZlQ+rs%>uh'qi9[%#$-a\,c=+p0_iA$
%nI+C\2LrJk,9,6's4&FuoqG2p1K5ACos,aM]1Zp24Au'QN]_HqZar/C[(o?3d+$Z2=O\_-5+o29>l=I^+B>'\FOb"I[pI_%>HM,+
%*K\&0edXJ!>grT6"b\pfH"m#),PPM`oPBqt(%6#4]tn83<h7!DBX7OfQnuu"M/YY:0"DH6F!FqdK?5(7T-8S_C9FV=%@u=!TYZ72
%<bYn-j/ltgmFnZa*\I!ChA^7DOJZ`e+`c&%U)RpjjEM97-XNicb!)5Hi8i4(M!&(iLN"&45?q&a]=8=GCS,6A(G3]JrOY&Yb@.O/
%Y;Lu'k#FSEfl!,mp"!$1$tKLDmMSPNO.BsL!]?/5,`N;u3jC6RB?QBq"[08n.\:PX0LV&.*Q9%\^"6:D6V4-]iiZQl$]:E9hWk`E
%h%a0Zgs&s?]slUJ_JhZ$b\42_]WqV[@O+4!H<6=t0J6+r>@-,l%d9mn;/+&<+&_C/T;?DChYOUd@Y-tHEk<_J12AMEG:r*Y"F='c
%s)9p597(TW?_2kKp8m6MI7(U^H*A<J8u!dcQR":N.'3pV%e0O'?"S'S&DTZP$nGB47ZOHiU/B,.;48$Tj0cq;53fV+GVm['HZ-$/
%"6f4J(ToeUT'29ZMGf[iiBZ>ELA_cW+jtL<cr8*#Q41?RLbPFCR)`4^!SMgl,'X\,$T(FEGB%oI19U@(#g]X\mN8TDm,HmVCH'@D
%\P]j+E1ln.Oek!QD6V=paXed"S\lV6F!I<p!J(DPnQ^cbjS18RC>\J.c+igulS0<<g9'6Q%J/$)gM39Eg>>d$cLuYgZZF#,q+]S#
%<"m$(!preqq3==G%g&2qI(k&#`Fet+<cK)4]Bfh.*H7(fHuD)QHYdmrrRML?VKm0"XgMJ#ViZ^moNao(QNp]Oi`6Uh&=ErdYXIUd
%eE/49%\Yr8cD:*#rBpA8)7R@RgQ92D.G>_2Z_Fgeib6J)VUg4"6QAX'^\,46BjTM?C]2&q/GTug^J)HC51)t,)e:&.'g^^9l6MH^
%',g]J$[O:?>>hd(LPU'rh9dim60l3[;6)[FQ(GFBK*-faB`#INih=1=\:8`[cAR$fYFco+M5_`pXB<",M)KA1huk6!(_Nd$o-h'j
%4$b@LIfBtGq:=S/g]?)Tm0IE>Y`Wu@(P51fNqYSF7nB]=qVc>3.dk!`I`'HsoX;D<hfj05=oc1<#fkT0fQd*Z]V)/>PH+.:p^]ZF
%hT@s=4!8n=;oB3$iqaBdo3GT[,3S""I<.Il'jNuYbuhru\(@M^E`@;>\eZ2\WICH^32s`'cP%j^;\6N9f,0RZK.3&qfm23u_Uf<,
%r(`10R`0-b?i*fKYG56JDb"g*ao\!NI]Xc`NiRL*Ze[5elE-n#FbIGL`5>LGI7'.U$PEbP>8c21bZ,ebhjK:<_+J6.Fe'KMYTUi<
%l<10t%39Vu'91!T[#9QI4Yh$NCCPQH4O0ti5<E'2A\C%RH@a#qPe?31fPuP")@W8W9%igARorC'dU<@?L3W\hG'Vh,%)[,5G&\Jl
%fAbHcp"\Y7S0V7lq-Ji$Am6!T5MT!)dbYo.8'&6.f;IV7^2GF+9Yn9)SS1O8SN+`BQ%`0>L9NGbmi*i_lY"&d!-_QbnsAppN>@pO
%NmbM8pDn0pM!)fY]Cj(:AR=/=A$$P:[+.]pKTZ#p'CD<!i$&i,&UC4?_7N7m(A&=4>#MZuqB<3r1=O^cZidSB5%XXN'_/-sBLcbB
%.3'VZ>-E&ScgLY3+7;V"indn?DYUDboDd$AJ,=H)rpg"e>Y:XkQdI5_!<Lhd__57a_DSRYp4gKe8/UF`DK,G+e?1%m[7d$d_3khf
%Z3uYbOK6,7N^4(4lHR4!.p7d]A;/GTU7rK7`C:r,mVE@,MN4dTCjMp3;)&OCL4X#2.."N6P\@R[8"R9ZBJA8!%MlBd[q7*XoC)mU
%%.49+7TQgZF<luE,66FGKOCgs6ufNsA<5pdq014W&R8]9L3CN),MKjVYBNam!E3?I3@>16r:Ps5D(XkG_6qZOada<84H&hpdenY/
%Y:,Ii5kA+NN=hn84DH!'\1=k5UPN?&-'S[!2]=1(!C0h2A<oLJSj\+Ig1]`q8iEo,kSP)o?;c@Z+qrrIERt=LARe[A"Xh7ABm0]i
%FiDi5&>'k4M.@Gk@7\'5&-Z#n^9.^=PLq+cV2'jl$78bTc32$$n4KGs)`Da4c>(i83)E!KP=5W!eR3#/Yo&!':!"1'qMg&;JI&u,
%d!nL1;*fh[&QG`-MTp]qUEj8$2rhhbE'bH(N]%G&AL#s>:ot0I+`N_sJ1XY]DEUusD*>7884Vs"U=frala5\d"Q;D--g0iQK)TMn
%U_4LIGXn/GV+C;R*?rbIWUNGOH]c;[cj[$qU'M$;$/c;`QM1Hp:%G+::hj.k=P[t`Z:kZrH\9?%NoDj:&;+Ll*Np5Wr.9N]/9'Pc
%MQalPG$WE#g#+mA4'_?7QI9OgMJ\lA$aj^gI%Lg!mKd"4h$oh<$DY6s$beM'GbI%Va#ft'^QC[:)8;D>5.]SODCd&]TdE<j,f8Ge
%=J;?W2LBCd,,>GuUDUIQWYkA?BZ#Km1a5_pbeMXq9qF13VT`K-8'*1D0F\m.NoF6h@Xp>AU:BKiL&/S/3^J(G35U2@ckM/l,bH=a
%Ce^#?Fr%Q`!*#[>lIWjn6E^-%=eq"&qp8Sj7]TIeHi3`9X5lGKig$J2:Kjo%9u,8OX7_Hos2Ta3&6\&i6K'@``9[M1"1aG64IMIr
%bpW5n,!@5B,okQ[4W]9*(4,j+s+"-%hV.f'O<'9+LT+b]Wa][R3G7Fjmu3>1G97LNfdPA)/sCtl&fo#R.4uLV-JJmhkX,q>[N?])
%[%ud[+lgOkK>"fkV2p`?2tKR+dQXXbP$Eg#+t!`pM?oEKVQM_nJW_Lb(lEtgCd?WM.1AYF"U=cHP*6hJ+Qe^`DHI4#=aOPNj*oQE
%ZuN2gYi-ks+oFg<bdADSdE70*feOupq#Y%_nO&?4/m]-h?N@*:6,3SDkg=(q%WG/Z]bFG>+?^UbC-sS?qM>I;7/d=hH[W$\L+RDa
%2YareGsO,eiQ#Z^-7$:H[F^*Dm>-=2q@[XtU#;5X;?chHR"!n7.*tIM7O?_,mq<C#oC](4Ca(oT;>ces,(d(:K7L!cA?EhHO4S>:
%enil13)LJ]jSV80)1C'm/n9K0(aG79W"mR;&9X1']UQ'/SVHqiB<p$V0P<AU&;V@u9Id4-]"FQbf&F(<jUKb<1Zo_0r<IuPOBdUr
%$]_0e*T(Xc?PaW?f+e,e*(q=4!!r]KB&U:@j,?]*!krZuXc%tq)No1r+Se`t8jFB@&`N.,C8Bt:7gnoETDHEg$2,9=r*?WK7RDoP
%NnW`P*f\E(mOI4fnAXo-XngK_BdVe];XWIj(5F@ZC?dtp'RPDQAeUlj;1]>n@Qu^#NEk<%&\e6eMOI_JRd$!oZI(Ep.Z<h-nG\Qd
%CC#P)gOa'2D:.AkPg59Wat+f'HhHBMJ8`n,m/#5>>9FR2STrQ!$;%3r7H3W9jGAF1'F.X\Y2\.$]Sga*PG&[D+i-=73&N$08/^To
%&+0>"IUC"IUb\%Xd4b[;%II=7]/(Q6Hc&j!&BJ3aNDMZbEtJ#sTL4sqTFN,AmN`(!dkX<?JSV]"QX4`N&Xjn>5r=s\^jn0],r/(3
%#7$d'XsH)l'%%Ii-IGCW%M<O"UVeG"UWu5?-*8Um%2ndP3A^_ApROjRe)%_[g0K;kE^pf)T5['4iCO&ke:5>t*8C#IDR7IEnScsf
%&J?nF3K^g8?Agao?`M[nfX.m5IMo,QRKp,+:j5$\RuMbuKAQZkq?SaM;A>g.as87#=$bh=_HtHG[o)^iOqFj\D&QJhjt$LqN_^l+
%JefGMF_=ScG"5H^i6-t3TRgqgQU2/a%WFb3A;Th#k$Ok([q%%$&7ddj+,8[`E+(<jbc2mua;1r+r-^i8raD1)Eb_87LdYQ9A5tn$
%g#5^9YoJB*CbG-,Nd:tj'!+'qEX["l+V\a'-X3JU<>6/S3idRR,0^Kd$2P*UG_5I33YMX3f0O8-Z8B)0.JN-q><bh`0[PX4h^*Wa
%Flb2[<%DEpYCE,dh^=s!QohHW^mZUAGQ:mW[MT7VN"L_aIk:F;18\@3&eL4mie>>qa+c+u+=@5g),TB&'"_4LYjk&7YuRSa2c797
%C5X[Z2QhTir>8m]6NQX0CkFhb&d_GATfiB;'68?KluoTZ9?$%!2B.u`V\HdXM'-l#f2GrPN(=)Kmq\an0.9_jFJqmS7'a-$q%lqS
%7@Wf`j(3,*3DfJNPCst7IEDE&*V:OFn-oSW^rXl_pr>:ZZB\^X.@;fEkP7b_k(Y)(Qn`bDF1=N50r6dn(UReZpKf.&OX*)#R:FCc
%Km'9p@PPL/!Xe%0M_srb['BZ!TK$YC\7hOcT=cu>%"_,r_Z=Ilj-b'SBoo!T0[ZZ*iQq5U59*ssepttj7uH);PA;k/g9Y3BdblE+
%B&9;&H9o[W39hm'#9S,R_E'43$I:cb+r5+b"W%M%5Yc,KH@rD4\QHBuH)gp>b>`BWbTU_nj_N,\+Nf]`$8mCo<Qr9M:2nip<;7JV
%7S[""pugW%(\8=kHJO0q&8(ZXG\)/kmjQ%$r8&-OZ$UU#T%OPZ.s?EYi#JMTE_"i,0VVid4m=SATN;ATB;L_J\_f(h8hcIrU#en(
%03f<P.>ISGC11)5&M)(?d<N<d;FMUa%nk``2;iZ#)j3B\;G]'MZ0YA3(jW;=5j8e\+(Dar7)Ghjg")E?L(Qii_[F^uGlgs4$JQH1
%$`ciL@]8IWorS6J1%Pp'RlHV).Q#OlaG4OSif,ubD-Z[K?/r27oqIf"<=6f`3.h6p\rFJ3=1s/98-[OooUIH==$OL/bPNGKR&rVF
%7H8!^fKHG2E@)oB]_9'TcVS:-mh#s0^tB&"*(F"ll&;_1f6^*LOpup^>di*Jl6Ls`95m@cTt)'p57iZ?5cNU,-jU$X(M=58&ka81
%NfJC'ieO)0q-Af_JgN8^#jd>+F0M$H,rTO^klieYp)4Jfbb>goC3THnVfJ2<nn%_[<aEm:EAEZ:ZP4/o*+_)c0<"+:r<7[<YsW7R
%:R8)n"X.hq<l`ar,Z?D9b[HRh:oIjU`FS9#oh\WDkV<Sf.!U>\,O:6)\tcbT/Umk3+Ln9k<o`[.83Q6m6BIu6Ooc(7hdJh38_1fn
%NF\pK!B654r=rnB\!@PNF3"YF2jF\%T1VZZatO901j)Nk33#rZ$<S@T+j!EB\3[,"WsBA)T*brC=-%oCo4/F(K^4`%e-n-Ri4u/6
%,7.#<:E;I?Zjl&tJNd1$S=4%9\b>l6kS2@E3'Wc5N5Hf4/m4^!&EoW&><n/k#r,X<<J!>m#E6gM&14+ZlCqlY=Mq@I;QaUm!$t<F
%h7q<APgf,`>b-6m4^(J?6i&sg]"4R[RFFcgH*R'>`fJ=!#pu;"fKk*\(N,=<M__L[?s!J@0Q,>`nkc!*ib,ot(et>hVL=q=#S3o.
%g4AZ[8%#Rp%cZ,'N5T:"=dph-j_<9VmSLje"AWTsVUug@:q-[;&ZAk9h#>Gb!9R*qbT(o%dMZbR;%T[Lg0(bl.9YHqBCX;OOtbl?
%%oN#g8[j6C@q];#>ISLIS)T>Q4bAR_a)Dak4]*cQ0UY`f#\g@c3MHDj*\COuT/'m,9\CHAHTDCUZYLG5)/CA,9$.>q9;8I&G"*$)
%.7nl3+_I`*h>ui/_"Ls_jJaR]$:W0j^rn29MTd;U,@K4$cs!cdQQ^rMp*>tP0(*"79_LLk0cQBL\`oikd%>!jPMPaWQ%Jg7iMGV4
%$\BD;>66#C,+!+XV=H7o\`o9J?TNtTg=9a2!`rUUKSBqQ'l_'TTd3i+8nZZ&r(3GlN7*s`7G%7+eYef0c%jm<%IXg1jk[Hf@EY$1
%!]X&@6&CE,TsQB&cRGl('CIX:WR0"d!TlV!fn&)t];u+'gD.:rd"'M<[S(BI$-'Mg^NDgNn+>?$+0INginbXOFX374cn%aF\2YF.
%rpMq+Q'kKt=\:07.MUCm)0UF8cr8_[bXadDLi"`)EgCl6p=cFs-k->OFsG]'.Lu)[KCl)-]accqcg/&h[i;SEHZ-%*X[&>9DK%4'
%E9hr0;0l2jiP&R4_",)lg*.sU8\<W,B[]S`\b-'$H&\^o0C;0oX\Uaj#q^=g4%c9$0.?,[CE7`d5&^*u5MV6#`P&b3=&Hu:+Es"b
%GYho>Ykri=ES)`X>LVg)CPhV`7W8r2AC)J(-k):Th`m(="@I?P#8Gc5q`ka:QJd;K`?D+dK<]j>f:f*/!3Ce<LV"G)\G,^N'S5F>
%YlYVZbh;5.*,Xhr,.IEi$42iST>G7%H?@6@W="(+5D23F3EgTG#A!:OMLWK>lAe;%H!#&KR6^pf^XjY+!*6r/_qg8Ogj=Cu&[1^u
%s#6'6&[<A;NrD2XkQp=+Do,L9l35)\PYq1:9ssr2CFT0?ir1GGWL:4b2mS";$YUcD\.^jXJqR[;Bl`#t`%5n:=`NkW4I^![K&IE[
%&K[43Ko-]fg_U/N%WV[RpmU0/pcWW50jb.B,d#j)N(9HSiiRBE'2;MODO2/o>J.UYekA!87*CIDi_0E,o2kh.Iaa%2l3)+_77=0&
%E3rGq%Y9tUW\^e6JQ_m^iP]fl7*^>QnjLbO`/a3qo(`-R6rrntrr7KF&-)4(s7)_Rs8((Aj1kWC^\mP-rsm]=reAK;[*8O;f>%8;
%s8"DKr87P/YJ:#Hs5>&kci<\:TDusHrY'bYGJF,ar:Jn,Issk^4Tc0k2P<NNl:4rfYMHmj""4e&Fm5"CJM<H:0<BLnV^NegHgmVU
%_<0)e2XI>A7g)!22&aWs/E;YiUMq5@&038hZ?]kd<E%_iT#o$`Gkh"a+^*,_p][#q-A5hsJ,J0qk?kWP?``/Slf.8NI=ADs9oD<*
%I`n>pmkZT%"!0/r%_#%&.%:K:Y1*K!J[8Jg#oB4#S\1K(!R60QLU[6rm9*&j^Dj-Ad2S+oJ-h)lasTmR??!NN3+pHgBT0Ho,l8VL
%.caK\T4%/K4+9mP*g0I)5nteT=8@[q:cQ!EKP(n5W=men&S,J!R]kb%cM&An;[=(pdubN\FK&N9I(Yg!^%*)dl^F[s&*S/`7!jP,
%R/qkL#7[`pec`jGkV%$nOR\BDLk;QHIKNh'3?%??eZ*bD],&FdgFGCtCtBR79ubUs1fS10h;O2MN0:<);653[)K9i3U89DXaK(85
%d5)G[N7]]`%k:ZVcR>q6C\329S<it4]E`hhL%k+_*rNgj2IYpi2!68uM#-idNVXLDIFf7##,WLGUgOc'<k]^eN@C@]nO##,dV?OT
%4!8mR9a+$qR`?Q)`D'T%g[2Zan\(uTqhMd$X15Y4rp4)0A-08),/ai-F3'K:]B"XkBuIFaLu<io>9fQL#()V;/A3f\gqLS6_d_ZX
%@YU'ODjErq\O;(O=+:F&Y##3\Qpi`1#f-YR\n<a-&pNCEA!V?U`n44YHD`m.N+o-qG%*`_,:i1AoYesf!iHjajWrup_;.8Y52r%6
%$7*='bm-"dGa&t+3\+GW$1CEb+?8lKQ=ioQf9:mB5B]!83LTVo8O<b1[_Qp0r>7r):<7`S'bC/o=ibn1(>6=IU2V$!K.&h0$]J#c
%>]Z_oJaa>M7eBl?VO_N-H9J\0!mcB]-2X"t1dRf*)JMb`rW:!c34cr15Jfa.X]r0OkL\8N1R]+?51_/cFC*o`iX:T/at)fli?sY"
%!R<*67PgVR=Wd4*#N,9Lj,$a6$0"sVg^$3-ARaJOab-:^q6R&^fU>!O.t%'ECGflEO2M9-of84P3"MFu2/*8I_b'>\":]$YX2^Fm
%90Cu#=JM$G4[(fYfN^]&8b\#/c2H&?$u*nre0+E=g7=$]'mKW`)NPa,)Io$%]>cLo@`:e<r8*8:%eKs-39Hf'ImC9==j"Rc7No.;
%Wuoq3"b4m0GlD$E@!=C.JRa[+i"HasN\q/a,WsB=26+lC#s-WcdL+6EY#3_k?B7OT%OM53f-nRP?0fnC6nqYMe74>eK-KFN\jXAM
%LbQ#RM*c;mcoSjd$[/o1?C!!/Tt/Y'U<;mP>`f<Sr]Tb%e#WqCfmLYH<@rD?+O^C#nCK9NV(;HF,J[gm*tEI(rB1ap&7:`h:Dgt(
%gmsE!ZG@RQ7/)4b$YIud$Mug]iPc"pOU0Tc=_qK%#6jq.fO/-Yj'6BhCsM'PX[+Xcj.fdni51#0pfM;cp.L5qM[_KR"3iQ9YlU(V
%^F_@&aV2qc\_(;Y<B\$]S'":$rp*L8Irr4e%T)-g2;70SqnA<uM'h%;R"=ef;;Sh:R3Q?H>-)T\`ERPAi;h%B,6I#u$]@pF@W4Vj
%*TmMS3*(r=n`YR?7I%msX6:8Ca^dD6N!2K]j98Zf(8%`mR@t&]iEC4tVniNXR%+Wgme>B,\@JZ1Al:;.$IIi_@YE$k%/;C;N5is`
%0S:SHYb75d.C=i"m'a`<+RLelGk(kjS"i7`!`L3DDW+i0@!RWU\h0ZGj7"e+@h:ldbF'V0OE_dYcO7JeGf)D>=oPss'S?c[\h:+g
%lcEcRN"XMS]4_3cGBf00l<O)[$N"6/OYm<\d61\"8Xge!7krA.T1:B+!Tt6P%>[GJn5PWXUrSC-4)tnTG6q\,SOJ'3(fld!gkF9g
%r6m'na."HW/70Z<1_b*JF]N&74eaKal:th>.OUa);J[V`9]$_^e=%<Jf(P_A?F$:o[RKH82@h6-bRg&c^\/AO?@EDi5J+hP//u>o
%J`kNL,!q$5#1u]M!pm1;0`7>CEg.tT>qSRM&H!ReiF]`CJP;@IA&(X7rj8pR=5q:\[>1IeWKYZL$K&FfUr[mH*K7pfWsOtSphneT
%GXS$+8d9[;Ll^NT'p<kZ#6'>=6_c,qmJ"DV6@0q-7(1#7hf6h:FcWodipepd4r(3,?H)R?+f+Iab4F:OKJOBq>K9_Mb^[=uB9f'C
%4ppp7EQ#N-4IAfi6$-K&$WZ]K"=L%fN*W2g/MK,Qd=uZ-!dfn6):l@)<s<U"(S3jaa>ii#*.mVm9s6L#O&?t_4BDBti;Jf"-sO,7
%^BO9MPRn[Jp>WD5Cl2S*3s[Q1p1*(>=^I/EPnOGG*^4F_B7aa%GuX*URZ7sg9m>.Y78+EYbS\b$A&c"iA)&0,0%2qTDAKO<JLJts
%?Gp@c@5csSba[thQ^7[8@T7sip:htT!o3).#siZqfG/t*">o;jZGF^-O,&9MPG,oD2AWkgr(aI>EnXb8dM2h%i[,gf5)s;#PB#R@
%-CKr5S$W_ZXBNugM.QDmg`I('bf>XG^?M!*(1r$OnarsOV'oQ,9s6#"b@q6U>DtJf$gUDbTuWq\SS*Sf3;0b7-[#!a_/Z*.T@#ig
%@bXmNZ`Dn&hOfifdej=H=8e7aMEjVQ$D@\B'(bKRaL-;6-?4#gYbFgfgZ&S*X0uji/;d@=hbV;?@UZDEKY/E18%^rX6:\Vqp3R9c
%e`V24WpV+X?Slmq^XZt,D_;":=UM'ogmI%W0-U+EgCUe)Mj<>4Q:6C=kZ2&&[f.=eM*P^-mBYOTcIao+l2m!\J\)rpZEDLDHeOi\
%\#R:h(p,GBl#rs'cSirOU6X83LmQTd!DY?T*qJDmgHVo%h.`LC/l`&'MSn[`A$dElkK.d0rJ>ptF[reRR`?'oqZnI)bRTCZ<`XQd
%9B'YC:V1#-N?kJ&ZHJY&UF2!]@sNkG%*lh8QlBk(U<N:T2-Tt[/`J]g&Jfrr!q3=P!4&!h/*qoHB-qb#P2FeM=U)!HK1G'3M13ES
%MSNWO#.^<ccn[qiL!AmUE`]C^@:+Kh(s)=YYn7qnFUK;</YRjb#RQp,`.L0]T*$G0?rT(ohQdWF^s'p;H:h6NE97<=NGQ#%6n5<e
%CA?+]"/;@\@mJU)DVO&toV$DFJuiF`oF&YfZ:?pFkAnQ%]^>^>NF(q$6k(6D5MGcPmF)(_6n*mu=?K9.AsJbu;g.Gi`>aAQbfZRZ
%.Y/m%B5k5MO2FGLCNng:78HfCPhm6G-_H4:=Pk2@/oe@,18jN`b3m)4Houc*HG]?sj(bIs&@i+R..j.f5Q`O]?b/HsZd4$@-t`97
%N]p2P\"7Fjp2/a^2:.R+I#$[0DDgU"RV//Np$H6M54YrEVcOiqe[@<4/3rr0jUZ$/e11)8g\L(<G9bg)7cEA<U[okg^sc:[@8#OX
%pfh*bgKNbY8sAp7RXF/YP;^GV^"q_/Z,68^:'RP4D$Vqkk52KT$k-%dDn0;W0)K@`ZWTW^2.VE7$$B6[6Z;Ajd5;.(KZp).*OAfu
%jqF$k0'0SH:[q%/&E07XQ5+LNr^;L8BLg!!CcQnk$I(3b8&Zsi02WRB76sq],`chj4o-<)@o0dG:0geuI,`ge?3.QOH!c15,^@B\
%m<oqaNe'm(_il%HjT/q\!sLDdHud!O+hk=qI;/_#\r-eU&Vt0@R*Dn5Qe*ubd?<Cs"q5NN:%P[\/cphhX(h`;^h^3k[\s`XKqWbk
%7lq4:d#n5`N#p2%E9)<^Q=507)&g10qc^*A`kd9N8=K0B;=)&3d%a>%[\E[;7d`W`DfZLJa"+k.j('2sHA0rfrIKZ7oOU;-NH?S&
%$Z@l1,tG4ff3f[9#G)$R.lm"tK?bo9;;b,8W86u=L\PNrQdPWH@A`R#g-X)O0$pZ-MV?U1CZga20^pGGrX@hF:2)7534S0sN`/NY
%STCL')FHrD[Us9^TP8D&F<&(B??i37S$W>S(MtQl)3^WEI<QC)O0kCo[7Z.K3sn.r$gY[hTNE:4@YL[m.XY)"*.i[DFe-$3:XV_N
%W?i[uNei'j8FqG$=[1&@UfN9Y0s)W2GV%'g0?Q[ZC*sd&1sm<a;qio@(/WasgIWkgm^O>bh]jS?$"T'.],HADpo%JDQ)9MN4-5)p
%+(@WllUZhs9>MX^2qLdNMB8:R&11'Z6&"\-@\=cWCg5WD*$-WFe9ON8L60*ulr-@!;FRUa"eltb3/$X[6t7Yt\"1NQfgc8f>Wd!I
%-ld99,K7)nIGeG:A)3"4@hRnc+=HPGH)sZXN^qa/BI:N"U[S3m:P8al1U%'[2XrTF13aga?PgjL^n?f2DA^CPOBG"*pmPu>R(h)1
%o+_+bolD&M=!.8ih\qdm'OO7rm6-Qq-RU(_Z@,JcGU2mRG:$<3cuko9GXCOFCVDoe?sI%H6d$Z^Oma$^%Eg4.,E;:cC5HDn##)V2
%K80lH1,\FC-,cR62Kt+T_DS^DZc!/u4n.=VT3X^?htB<q(.=N"gVG.n!(,Ohc?;TsF<GAT&nr^+BmBq&0Qg&n5SqQc]l$n:YVBhb
%^bI;L.,7P&.i][XTcbeD+_0-[Hhme[7j_caBu-gp&dY*=&e9qS's'M5\:'n0i,Uj(Ej0SKo-ahgP0%&P@/%?S*T\2a?u@VSjF31p
%5?m;1;G^U?rA_igmfZL[`WV*V-Uu'=[DA;cUF6[W'sMF-"<WuM@"`<#?+M4\i'CBdr!@Q,5u^[P,rKU_J/0Nt'TEE+bd1;k=2(@A
%H!ebJLX8ficU:P'$BNjoZT3cB.W?b4CCa/l\k6:qX?XMMF*;o:Ki>_FHZYH>hf:).%/QSZnl>9RhN*&Em_^"Y<fn>B+E?p-D@l4B
%=MTs&OC\[2K&`[;h9UKGLZ=2R;/)'G?FmpP[oM!s^fsH]FNm/CNG]92FWd@M>A4JR-PfAJI@TN:J]gBS&4ru8Jl-\Xs$iF*CjFV\
%XiP=DadTV\r7:i;k3)e`L)(U1bT%0l*;5Z).p`DU[EVGc8;:Smh@3a<'?%.$3F`R6'<Kk1P#>Mss+8LmM9^dQ73-P5CQX7\lXP':
%'CP.gCN]l&Y0<K49Vnq65VV5NcK\4XO-lWmkWgK5Dhu_o[J]n4F-g$'aiZRsT@!,b"!(##6?*?!_-2^Yb2]n&T/?F.gtlSY+j,4K
%n4;/i">=&QjVJg^mjroV6gN@kBFY,Wee3"r?jd;#',\5gb"4mF.Kp5jfoB<aD^]0?bq?p#Yo<t,F-$Q8L?9l:>aC3CHir:.YL<PE
%fkWM\^>-C2,DC;[peMNuh8!1%c8c?3d9M&iLC*>_SnD:>L]l?boW:+ajgd_X#rYhsLH0+]h:6H=T&S[VbO1dCTD:^VE5U5!YTL(h
%JDKbmNe5cVBFkqk"sSMX@:fqsW3mZXa(<jb4b#Fl+QP"i6hXhM]?r6li`Y%NaiO;7\WdTL$EbK=Aut"KgA?NG2lr2%Xb%^;SN'(9
%aj\(flO5[QRI','8k,3?eA-6f;TS;#e@F(L;s1P#`G=_*]UeU6=WTf[Hn8uN2VJ,%Z3_rO$C.=<M@`]dl#KVIr4pB4.s6J&MlaV0
%Xf5p.m\"fWO"e*&R`%gs2Z9:p4LVtO".Bjrb5]T[B<#pg[?36I?`RI>=<@a3d6#^oVfTWaNr`_Z#U`\*L*%)u:N."Dfu'>aMKlhn
%pblYBgY_GhnVdC&WBOL3.3%&?2d:\ao,YH%*a`00-QRiV(tUr&VFlouN+8JVJYic?`rU`n[EfR%[#`73ZJeA>'d)jUaM?EcoOFQ,
%U,V<%6U6&VpG!`FNe1fXXF(7o@#=^#9=tCVC@ognXb(g1G[>#N&^OLtO*JIq88o9%fu>nK(N2"r]<g5rQ#r0/eIIZgaM@)8HnaV'
%.cD;VO2I^H)0XKWHpu#76?3^b\sX[:'WiES).?u?!<6#O3OVG*I;HAn+BVF:9U3+Qg"i]2a='Ck7!FC'"AF(G<(TrcHeX+Gi?XIX
%(:h>I#X!IHf:f,-Cq&?q_jJA<X5^:sB+K/M?91Y$TNgN#l6q#kraR"%E4j!7!6ES^Ob3rR&/Gihp=Tt[`Mb9[DNZTMc5.0o`m']%
%Qk+:+EP?$)SG@"/=m0g/kfWtl.$mC6,/iK@j"0S$fc:E%OEkfW_/p=BZ?[Id7uA7/hZ9\EZffQJn]M<U*Cj:]M3G]H`b=kI+T;ZW
%l?edobsM&SLL:K9K<J==f\r8Y@9>dH9&V`'1r]42p_+#cGh,==K7pZYRX;ttn0kM<gj,V3/!@P'-PTT(b^kpe(>J:1Nmtf\P5Dp&
%n_%U_0DgMZ\l-KsDF<T6%s1fj't9\&f&!$YZNrHR)0t,FkT$ij<#`l?oTYdg_bT`G1mf5B"!Q:CmdM'Zr1a(?Kh:9id[OMF2Mu`Z
%o9ge90.O1P@1rE1G80epCm:R!nK^2(;QA54ED=iQ&O;AG,SD:rnEV>&,_ot%8;b3;APiIbh*mDsjC'Aas3M%/c>L08KP/.!'&;uM
%+!s2TnlBk7Osb:_p-:4ENMU@$BGN=L]G;cs_jCOHGN1IP/V]3,&hH\O"H;0gfo6H1F9[7r!%N5#q>d<7k4Q"h1TW0MUn&'V?DUiN
%Kf8c'mjKSl/?&+nAUmt2!kpR=NL6fc$+p#Tb<X[Xdh=J\K+%YfVE_oC<hg_66a4,U!U7P%M*rYU8;:'hUYC^i+(,Y.*/#\B$7@Jd
%rt>/gNuie<?U(ef1<?oW;<9j0(`DR-iU]Y[3XY3?jD]#S?u=S<%H;&)Ur2MR-+J;;'mDq:?;@)O%W1BAEL$lV^3?`9ZEo/KLV"G)
%\@;22kbTsP[=O@,9t^peK:$ko7:bG+/PdWeR><6+addne%Qnl?NFjR-?Nm\]Ypc2C&'3YM7lLc**hW*R'NgKCCtUIq;9'AKEV7fI
%@P'lnLd,"'-Km^?^I4hbW.>UL#t)P$4M4Zs6KUK"S;*4l^t8P3Ce_RD%=1BZ3:<(.R(Ta"_2G8/_OD0O!!U=V%i@:Ban#FFrji1t
%dgH2TF@Au$])B@<8M4u%$1Yq;dr%k#6q1]$I3T-jP\#s^XWLm,TIU1R'mDoS8_T[_7E'_HV%$9-S?Fg6BlQgI^\,M#$7kMW[6K!@
%EVD<11^<uh`RmW,@LW\mV^Fp6.;OZg7N)[lfKhHc4TgS-/D,P//%R*A./b"#8BH07n5ZgIo\b[5FeqDKp6u\>W!uOY]I.2*B#PKK
%an4Iem+'0]jL#T>&Q%nW(l*4AHoH]#/o4XQ'hq7jFSWMg-Q;ikUBk&t`,HcJa@^T1]7mE:gbY<7fW##<fM.mfT/urVjpmTL'KM,l
%1E#T7Y!hpTYa_(*S=s&X?udMpPLqfj[q=9:A&u?5UT6:UL>RPLV_IYI@>SdA+/edE(s1O][UmW$V3OH@34UI@F$l@bc$cL;g_2V4
%JPQa48a7+tQiJAI$gL)LoV\#TkX8VPEkIT^*5Xuqa(,"&@Pi.`3J&qT*Y`ZH^sgpHN]B-J3Ai_:*7&RAXA0#FglBb[]'fl:i9gW<
%dBt0ZS,").l_<A'>FX`87NPf;%[K>IjIH["e,7Tu2'mUYGlDC-RT)&r7"6c(KkV$o5FG<h:q`k-F?dK7,elNlMk?AARmi?c6H@XN
%hjcND(HsFWA+Re+V?SrUK1M$QVZZ>^2^aG'5C+aJ,gd:&*"lo3j7<^_02EO0at)Jpe?.#jVb0hdB%,tK"hhIji!RrrQRu@AG>=q]
%Y`^$u6Qc6iBlMch$To1]>M5"(O`/=BZ7u2g[WX>OP+P[8khQjV[k(ujRh_k3)OEcINu=)/F!K@PN:t'9<*OTNk^mBVJjCi+@uEW^
%#U8uAA?Vg*U/dZi1O=7hUH'dH`R*$aY8nrLa/Y85^sndgP4N6K08%.RR?uZeCr?,P9Id0L:h*#.Tg=_&8ZMDbfmDikJR[I]@E7-3
%plR-:98eDF;O#Grg\OZ_n]<V*k)H'!E>7=r+Q8a&V=I&R'8+qYoc5ubrS`>U]b7BikCQ*WLgH26^\4lC4Dtl1!cs6(`9dA'>*Y_?
%VoA.g/D@n[S<(sgHmr)EJ/Lcm@O+/qrF\k&`OF'+aZ&ML'@Aj6>:iM_A@&mVE*:oM=<L^$Q,(VL&@Y#%f].sOH1+eQ@loVuDHWE7
%fE&+@T%L'u/o<Q,]r=4PG,nCNn0K=Ad)W<Q*u<'8_@HPkanBtsMVRaeSde&RJ\/fsj:IBsmHrrZD'PD/q,94oSOIG_p@\saMXD[4
%KAP>]PCj\FUM73uf!N/@^Yk>Z,4G0()`&M&96#N(V*6p71oh9+_t1?>Rqm9uo`2Z4.cA++,j3KO)3e',C>e%!%UWPuj2XZB=/d9f
%iCAnlYf,4/[<:/*^L(uV,\QfY:,tAtFj"rhO>.-l5!dsAPnZ?YNV*-'cF/sq3/]r9^+@'DgrM*c`BrL)l5T(N3;>=GV-!Hen^4^D
%m"^&bl2/&8M>J\cnMM@b,7aoZ,8Zp)F::8:3LrppJ\(f'RX+3Mo`3<8I`$RrT#IjpHW8rDj_&`1DpJWk;EsfjO"B/o^!E.Ck:"+(
%4ri6mAh%-i(TH%J'\l2=\s$S&[i`(fETUo=-[:U@)t(W6/9VKXZOZ.H5:_-Zph8A6p:VPsFtK=%,!RNa)rb=q0/P&pU.^9E+359F
%#M"@Cq@/q*&jQ?'-5_SZG5nQT^miX4FM?KahZOc7H2J;S(=(f/2`41_j]o@23]cL5%b[&9A_IieZ"HcsbmBY\e*l*FnAV`_E&mZk
%Bp-=l^'cqJ_+?]G]iM?f<j?BZWE@SjYD4Y#3`]64IkCFk9@SCXXm:IKs!UWj#X10m:k%;1;XN&:h';7JOc4+;2:$B!0$O&"EBG7+
%7A!!hl;s)eo=+V:i@rInD>lSSN()^*kM%$K?,J.<r,fDh(&?_[^]%d?/=6NT&O%doD)'aQe?L>j!,oG*5Q+(48Pc/)Egt=nSdP=g
%_doP7*#Nma'mN(=hP[n$Llscl`VF9c#DXUb+ifKWVF.<6nbB(%ZAO!Em2%W6r`[!o*3Mi`"3.jO2aPE^C[seX;C0'ldR-&>Il>_+
%<s9UbTLKT6PQi=30M1W?3qANI5:cWNIs/M2-Ke[e!?H+7W7Po%[T`1Od_Bfu_L5/U5/PS/'`410<&%,UKiiuY9JB<5c@8/X\Kc3,
%/ef*m=LaCNTXTULT&[Ko4VcL3ishR0"H8E$2KZ\-5eVc]\CHQ4pAU==1j1r&%4InoRIOK90X@&sPQ<E]YX&sC5P>+(m93;D"<uP3
%?#"@;SsF>4Ipf;0Y?_^W.[#R)X<3$p>j>j+g-T[q4]&?=.W%-(]sW@GmZbT>[Cd#CDaE-5OX!2.7j2l4?4/l+]P*$d[hULk)bUOc
%et1hSpktM'HB]iW,+@6;],/K-3R1R;r=f?>GqHYLL#(X8^oO31aPEGsLAuDjX&i:F;m6&4cmC4J`f85T'ZV'?c`j$<Ng*4rU&W9A
%RrTVA'H%IJd7Mh57flmi;A%$DVImOH+rYHFcgW+nk"@P+hTI/cL<!l@<Fm(O).A5iFh-oe'k'K6">s.#"iT?kK&&/DTa86B6iOh5
%>QGcsiF)e^O_'iUWmHc[B<Q#X3HrHnX[74>2q2Rkl6R.n(ERJU6<0gaMk8qMjpTKf["LkEN@%;MG(<fB1cI5]NCkri#Pp+r[kE9!
%/gX,>pahK.nq`W=G7ICh7!SF7RZS7r"JiqD,pa7m;cAJ8U\S_t8mZLWX9'2A-fHdB`piVp#'hoXPYPb:[&])mf+^>^)LNA=4_bZJ
%Ka=C-/1_[J"?[$L^K!8I9ArR#f'Nkf7Qjr"6]c`a\$eKXeU0/!`Yf*=L:GG^N1%N+@(pCZ0TG9>)0ZC[hb\^M9NI-]17SjgYmVf5
%dFcQIQ?5#r2=Dq+Q'2f!>eO3n_F,r*#&&^\$/N\?["KZ6I<-,k?"YR&Fp3n:jhkNo+WD@doA)_ao3/rn&\!,6!Q!BWbclJf`GWd;
%n\J]#$[dI$XcD=:7"b`_!r24,lPF7i7T;$0FA_SX?f$ZSMG,rTN3ZlN6(i<;C.u)mKsIIb_UDYG.pPT^LP7'4(H:"qoKp.=8eN=Y
%-T(s[\`rlpZ.n9=ge\7]%IWFn(a<$95s*)=VSRg-7@R2cTR1(k*g3>L3U$\*J#3o6i^ESgmO5N"U:a]&\8/m.7[qfY4s]P9fWf4:
%5<]SRA!):^lSYj?`R<?4`&Un)k9s;/9@Bbp9S5M?`"/6Tm"rU9"=E#3)Hd&7=OpgEcr8t1)Thl3=JmTj\ViPBj1QC;oin9[7_H/&
%dkUqIg74,u+^3N;-6709h2%Rh%nU$\_KMY]4:Ph5!;Y2&fmBY/C7@92La=9i[n9'3\)+&V\IrbVL3uLbpqelh)++ZLM$TX3-Ggu`
%i]/42YQ?Bj[;=U>TSSiSZ7&%iamokFBh2[OPXQ?gTGnX[cu`nta.Pj*akUjB7XPfj.[/Zl$"4FIJU@Jbn>?>j,!puS.,.!N#7bCd
%^Vsq&5u:6Cnl?RuED`/U+,t7(9f5XG224CgWZ`i,+q@pLg<ii$.'U'T*VeK@$]UgNe@.b2$#^a24IQ,M=C/uTL_Y9"F1tfV/6<.J
%B6^R=;(cD?.D0u;>53!O\[p'f'EgZu;9(!gHUhu^!gHUGT@!j$G6K'ph#d,=Fq!i[a$G2-'*B,ooEJf=G9_s:jHUkqT)a9'bf-7@
%[9>U4T"PVWAA&MFJqre.'-D)R_o6T+=r@JYn9dVRUN%(-;<M[7ft(rsU-35#O),fhA?t?n-skkCJJZB)ai<I)aK9/473hN>Yod&(
%.c"jd61A.&70<@.[N=UtAL!ueEaV3Z!-T?TObsp5N9J]@^8&^[KbA7HdNgg"CUf\cO,9L5L,>$:gVelum5;)jIGuWC.E=13'B1LK
%"8faOUH/^Ro:Ar5.3A(E,m4adI*DHjO];4$HfCrVO<jkISG@]<K0q_45+]HJU#S?.'=cQsTCnV5pPutR50SDQdpM:4I\6F$>7#6(
%]$QBI\6s)5<c;<lOcBlt"",olgnX?";hr#E:C@SQJsHH<`VJg^>@(.E4:ID8GH?V6^7aZ-7@[(%In%%)XP2YWc/UYm+.l$c0q6R+
%Xk%Kabm>oDN;]-gKXrE7D)UugI]P]#d>b-p8Y=3DYb=Yi_^700CXa3SPF2MR>I$t8+P.3T*0ZeO[MJ><R?PJl[`rF6,h$P8B(Let
%I[nZ3kQPfk"18`<1Rp]MXllF'*=6`=HN=LFB84G<jnXd?K9u6S$J@?A`ur;21CYVmA(!,>`Dm3mE`5V*dB[FAo#c)$J93G2//#Ic
%1N*sFNgET;BIJ6d2^RuY<LIX_AD"qaH9BKd;dmCckkL=F8484-_AHoRQ)PtqQ7DuH,-Xa[1[GNV79'nVO(Wg,k1lr56^;U`dh7RH
%*q2NDA;LaJ%LD2_gg8tCY1?Sr"jPe]JdJa9dYYX.8_Lsj_otZbiSigOMP/,?FSm><X\nJrTc(2)/B$A/q<mH,)kfgLo:Jkc0N\Ns
%J`hmQV_u%,+33.s8K#u/+&#bCpp^+*##X.dAHi5d6^7$T)9c_<O1qj'._cL<f</s(irfZ=#ru7m)3[2cd4e*hc:/r&Z,r[An"7Sm
%5pQS`NZk>k^4qN:*786gkR-C7"%"[[f8T&d4\"iL_9;>AXe4b>^8T@nJ&q0rk=/p$X`P^8Yqo>V"/enrJ%GMg6nW0C69*;="X*pb
%1iY;tbZ)[tKht;r?WdD\Bndh]8EQeFk;!;5Q"[ZhO^CT=85u\DFW6$E0dB\@8>;Q"bM].=JVMf9'()9jN,G00.miT4No2p[/pA+]
%BL]S$8>1'$J1R;2dRc5&?IGP(#q4qN@u,[QGW'`Ko>pXhFY(dp\-(j627#(/4LME'']HGb5ZmO>W%U8*6C.W!I2bWAF3k,W_*o=*
%o^,O:\@LR=+j;>JNf3WoAg`T=ZbCr$]q1WrpeX33dG'o)&m>3m,,r<Ag0?n*4,s@:pc'gcBoFsZ1i0OGL`6-[)CdA(J2olnaH:63
%F?EbtY\E9P,3\N3lcV2&6Gl@Z#\gY;>H\,67V\F/('Rbp_-kMk@U\(BQ,E>WlIq-O3-m;.UBtOCbS!*rH0IC+$p1Q1/2h$T"MV;:
%UD496R2\gRElN$#K^BHjN$UG>Q\FVl+>)0'%^$^8k*&<kL6"Up2V=ACSB;I2Le>S*6-],YgS8-Y$KarG0]dj.N#])[a.q%lO.Nr*
%ffNm(lS*$^6"dbI@Lce"4DK7-43?SR1b#49k"qI[n6YBe".GY@D!8#K.?,$J"XF:+(LLa)A5#U=i4I9,YNS!RWRmX>N)D=@:U`r%
%a+AJ^XN/@WGRf!1Z4F+/0e*]g+#s+3Jli=37(@IX=m-Vh*NjBECOLWU7<=MWmc$JCPRL<Ej&$Z_/M$14#==RcTRG=#6`\AmZSU>V
%Bt\""?B=ihIN%coh'f8HC6umDlE+feT=%36F(o=#7,3h'`#?i%7L+Bs59pE5LO8DEPFcVBo<VbY5u<p=lX_foAQZ9#<usUuP_g8j
%#dlMDI"A-+8qF<_(B]mK9f1LNYRU,"&<<_!%.m%mf-4[ID[)86YV,'P!BSH!kE?#!cRtHP//aekROiK4<4Q[XljRsTY99>3V3?2)
%r2fBiB"rVBSQ2TO"0LMB`O*Qq@U'BJGaeh<eC'sdA2!(S<ZCfRl8Uumj5[%$VZr<3FZmblN!sh;"Q]CD;"+3:\WW"%C)i=!LJ[=!
%3HVR*9T:[-3EQd$DW'6uMf#dGK>W&\#"'W2Zt1sSo(5<SCm+#^)4QnGE=Ki[VU<["I.BVIYj*t1!JRAq@jin]M"CGhg(0CBJ8.8)
%$SC<D%XolgnTE6Y,1G^X!Fk?m"[k6PNVCnm9=35XRuHGD*OZ'%<"p,n>[uReJ?5rO)j$p&nh5u`&N>iBWYp]8>_Eco`Xju!&?3o9
%>ECl<GSE(nmIo)?-OpDf$0Jn\=Y'T2!BaZh3`H72U*;I`e[8Z>oVh6K+H>gE-K$(5mO7LBDTtc$#Y0*g4P](O1]*M"Bqo0qE$gd/
%0#nbb,6;_M*YO)t3Fh"%Efm2P_E4MEAm3d7*Q=YFq)7KGmI'nC,+LaAF+1t:6hf(PcrRQ<5Am6u%q^8R4q>E`9s!"##ID<M=q]Et
%/qsoM7`Y]b2MsJ!86KHL+16#:^\2aSdK*d,%M#<uI_0WHm1Q=@@'Dunor,rd]Y_-*&X=X5Nk]$jX!2J!rNr,,&:3X$&u92u*eECV
%9WeY50$T@@@!Z7@:D@-^0T6%*^L.JaAU`E%*X\<f.,u5XO^aM=:5PU9on;rUIp,914&!XHi`<"Z7bHslgEYAhRQAd%nO7=*9#8H&
%P!Q$C'HbI#Fj,4EeI(tV_O9jg]/SfhNgChALljC";53%be4P"&p<1'>QC8Ci1QJ^3P=29+S_f/hmj*7hHjcD"`cdY+:LTW^L:ptL
%psnSGW,'Ysi9Fn$4sm*%af9KV)2'P0p?](9@"f<:nJ.n`NkorR1KMNF"$Pg%I=Vg\pl)ck);bWGTlQlDA3N2;f,*>aY`G"_l1BBo
%ZRM'S71thp$Naoi&IsOGT?pLX3Gl7g09\^Pc2oq8Dmlq8..58T=$=^DD,Uq)ok'!'YMs][^YDOd"hqD?j#it%Oh#e">WgoPh(hl@
%P,6uD'rVPcSj1U4Ro$>jojGN)NKVMMl.6H";0^Wh$lF1&Y5),B9`f4N^eme:1)\Er,1%@g%VJ2`fOnrW!]uYI/!57C@bI0K>a(X#
%(6kL?motC"TstF1_+]`e'b0p2X(GT7eR`aq_fEQNE1JiGaF98ZB5>OrA!q33e5eA>bN#,SPYY7L&"`RC[B\ZR/>f"Sfpkur5o_%)
%JX!0b.?B\4(nq@jE8BU>""CT'g(ND6=b*[p:0^HZ2+CN9(;HOD"cF_3][j9CS._>11>F(k8%;&8^kWK!(<c_VgXii:Z6\&8$hPOd
%bCB``;<<"frA87^?oVP()lttQC_*heB1@hL2Z!0N[8o\-eDC'05BLt7\U@Q2cE++ib)D9]Yl\Xg&?+RrKF&iF\-V-aYEqCSl/[T(
%>hJ[S@?a]"S,'Kq#c@Blf=Ks^9t).UJQ>^&p<;4Q'8g>3aTE"86.I\,r")<N,'p@s1T>8^AK'IR\6b_6Ln2;>_BPumLp&pS.6lP#
%]?drn@l.)&I&C]&a2A>4?]#X>8X\kf(!;5oGrAB&V^Gt8O.9K6n&T-]n#_VZKUG#W.6bc9)_r^8JJFefd(?]!+/\;(^6Tq'2cC3'
%pnGf"*2]i#a5".ZKc(Kf8Bl@"DNboKp=h\U<qU@kmuA9as#oSLJaIk6_?6su28<hi?4XG86+)4sAC7H.U,:-Q@YS(J[T_TO-1bo)
%=G>q3Vg`/VT6l0`!'[6PLqmg"gLp2F:D".5>;Yh;@6<Dag8.f#1)fXM0PX8CfZhFOkI$U'1N5*\%B;(X1g;a$CY=$A%@f!Dp:O[g
%ZE!oq(&&/>kWQ_!iLid"YD,QEGNZfX6%&Jh7X'KQ@tT-C%`(>iY8(b,3\;hV18o.!Kn0=-AZm_r95W_83t/Qj;7pj]5$W"S+82G0
%7oTPW:-Z"W*.ZRP!9_M!#8+Y866=Vg2Xt>Z9=sc$"58dsiW[_LW[-=gmu%A/S`SNbYu+CPc+?i3,eGE#kM&cTXrn$g<.3B7&A#\i
%\7A(TDMF6Z>/$Ce(>b<l,@6h4O7h"3^pZ[PK?\Rr9tH/pHOn\(\BfS7(sZmdFl[IB&Erh0:NV@@qdo;A*n)7BCHFn7*Pqo#"<jaP
%F7!4DYV;T=[&Rq!TeN=b;,?^EmjJ79VY:L'8?l[d2,;9eAL:&@4sn.&a.%c<bWYS$_`sSX(1NC"e-h)e1ai'CJIs7Z.*/5q6Kc+V
%FL-,qjVTn0jcaR#(kWEF&(bMb=T>eD_e.EN$QN&Z_mBu=NX9hBKSik].i%[\G:q719M<#=jp+]d5BcF];,2lGg+Pl+HVbIt/M_3:
%=pnW2pWg,6/f1$[o+Y#fr!mc)k^Wg`58f6t5gOXWXd<bQT8cuMJ;9BO,2B.4`m*Jd;F>nbW=J;h[VBW%ScXshVAA3B3edhu6%.Ms
%6_r5I%![B/?24n%h4>p7^0$p(;dh324X5j:;'TK\B!>3B&c4\_5f>ZQG#".>-^mQV,MFh#17(5D@dOJ=1p3G[nZG'*&S4Fe+"s;l
%/S_Yr!2"2]L!Mj6-C(aud\q0WALg]V.GuTqS+m[iHUih,%9$<:D30c!<Y@AMLg5=0rh3tWCe?3#&hZS&X5;S==Qhc>IZL0g+3No:
%hlWg+AEJ'bi>PUaW'\a/;#pe%^s&`*.3a4R2psd\@h`FK:497P_$ZGPFE69AFSF4]b+mGYKu,EdC24ehg5?J%(>Yfq%"sN'JmpYK
%':>_;;2M)0i5=NQ8^9\d?9mko[o$;JUZjrT"M=3IY,GX08l93(VoNf8UrD,i*B'Wc:H[7p1W#-1,*-Z*BoY127T!QhWO,pj3gSmU
%BE!2[D_q<;0ob;+hgm%DN+&mAoq!($f^goaD_K=\$j0BSptM[9OtVer@3uNjiJ/RcUr-,2'e<#H_`W[\;Y[3%n#/fG-/?:Ir&=g[
%-/PBlo#IG-ci!%8rT%BF50qB)PZlF.h@RGE?Ys#9#O"Q904[?-W.[5M^"BC8]QbIagH\:'=?BE!VB!\Y*C\CUoLNI&-6\"BMD9i^
%)6D;>+&Q.k2-Ge?Xdi03q'?=O"r-V,5$S\ZBhV<A4f%+LLDs*E=]:'OCCJd>qLZ?ORp\eQX\g_D!8/2+B+oIu2Ytd?7m&'Nk@WR`
%W:gT<WpiBFc8p19TlD+OIO1tjLUY@_q$d_&#8fs;==)Vsc]Pn]:(r\3G>@h+792OWFQ7=$/Olqg7K/9]`O]K?aTWgR>'RQN,E-FD
%Q3+TQH^YnmM8hk&A@m^BI88IkAluL3Sj4"ZO[fm\L!_L#O[Y5>K;^lm%UF)TmjP4ha\CA`U$L4MU2"g+<!uZIh$2AO9S'X;+]qHf
%nW(VcLJm+&QViQc>ImddUT1W^3hgg61(%]:#nL(bb_hHTX*FR)>J(u1^hF`GQPjH6\tRd>+iT4N,4@EAEn:6L,UkLh*IGl7\d\:X
%^D+_)c(3\O`k6BQCG-O8<BYcK-Gd_i"cCsE@qILkNUBI6-s)<["+RY=2>B@r'uk#mgYpD^N0R?'K0F5;+QMA9$!gEW&(j>SCPrN>
%d0t'#eAi/b/f'&[.p*M48MZQk9hdBhIThlMItKPCn*(pc-Xb)P/0?ENRf'B-AE\X-!25HISNaT@EJ,9Ppk-jdY$sr!N-9PBn9>pK
%Y7A8^1IH&!;fuH9dnO/D/@-\sD3,]L=iXXZ0KY\\m4j;+ViB7Q4rLtei-gre2d(k2bFle)bO<)C32&*eTkOVA^8L%IQ.0mWLRi9;
%.cA`*C[)BSgm&SQ93c&hiB3'FHpcjBCG#\V#NQ5!R>A'ZKq,GHH/Nm%T5HpkZ!thWg?qAlXTaD:fFQL;!8)S8"W%`Q;sfPFN9aL$
%ft20"C`Boe?iCp#X1n*!mb<%K9:UctIX'O*B%k+DSso?__m`[I-?i3/UYW.A40S2<*DTPP.UnU@S(g1"m[,"CI'_RoH5]Ch117B]
%#lBU9-J*e)N;_#Te3O>Il?J]0VVou:SEQF6#mF1$D?CniG*?"Hf*_?3?E0:Q1$l1i44p3,l2[49@J=dp2.*4/>kcaQCUuDT'1"7L
%MXgS'ih`_-K3r+D<Vn\cMIlJG6HuN]##\DjI=\7?4B&K'm-UWP[77-SU:r463GS9a>Lt+>]cW3/I$:Gj<&K]-c_XEb8k>gdMh[Rj
%L0tV3E,h:<[n@J1=p"3$GO-!?R"oh'WXldipgO$YmcX\Y`PAFEJ>Z!5_SZIn-=2;2K(s/$7`%6#e('Q%Hf\2q,,+ohKmu-.d>*(p
%=I]Y![O4Gfh!eZD".MY)"elg6I\To!+rkjYaY`HoUNNhN0n$?oLI!5ClP%<PX9';F4s5cs)u$s]2).majR9q_pFh'<#O`H#C"FSJ
%j:2]Y%^GR?TL5VYA9O>6EJ*IC9;^rFIU.Ss0+q2@A_dX"?X#F*"A`SiU,?XfJ?0:+jj:%q%unG$>Pgb6:aB%d8conA9u,C1-C'No
%HpdfTC3@u;?]C6VaAX$)2s9Z+jn1hGNB,VVHCJd_U,I;J\M^$&!*PUY6Zt#;0?C9\:!BmQ?NF0f=i4Di9ukO7.HuJ0Nn(*Ih/pj.
%-k^qij*Thikn&$_Fk*tZ/jmI$[SW+RD^kh-XHCd2?'Z"YB_UV)p0F6'U"hu41^S4uAO'Pa))Hf2e7&[!JBhX>F_c*TAJ:#64c7R0
%'/P$c/S4NO65$_%fuaaY/Q*o3g5bDs@ToGV@uX;j6-"dnGm\&&LK;4Cn$*Wsgo<)mpOu`<e%N:$Kmj-h2]/"T@D%Wpc*rZ.9moV[
%->DGT8d?;[Q6&l89[N0/7gSX1)&H*_5EotdQIXKX#>rGC#1L5U:T3FY!%lCVTkK]3oK_3W:3KkjF("*;.\bSPd:m0kbjI6@-qs,F
%-JGg?1r.o#l+YtoWZWZ/iDq??7_3h2:G>P*MU,iR:&E)9<`U]ZI9@1jCRgPr"M91*prRT#2tM/-97!&K<Y-/sRHK"n:55a__qmjb
%BY`>"]G)m,"@Vh5F:s7POS"r<6n/q\Ih`.kl.;FIYal<h*TqmS-n6GdYeC>P_H-3+ku)Vp:2P0qo`I"*]jn[?H@<6ENL;YGP&7Fi
%NIK[pb0erE.3j+2KaD.4%m,Ri5;0!f`jMg6PpJZ4h1]*1S\e8!"fd_/:oMO:\:_.264-At-C$k,.-QtP-8M<ZX^s^3)Ip6bMcGEQ
%U)i*O@G,=L;*"c9,B+:qVkGdr1IA"i)<-E.9Hk4Eo6EA:!;S=ORCbT$3&GXCka=g]i4$cmN31]0]gi"p*4Fe?I,WIN+.fN+A!b3g
%QbcD:eqElGYa'2F0!\Msa<KdPYMRQA^s6XM!eu[EpFt<`DNO[6.Zslu0-#edMMraHc13b+Q%3\ZHDbFQajU+NW)nYdHWEj/@+]kZ
%G;H''_AUR@$n#10M/;i"hMqHh!X[a:lSIMp`GB$:OMqt1*9DN)l3[3bA@?i;A3PFO2j@cth/[It]rZ`jl_;G'0F`0#J?Rd3b)Jae
%P-rqUV*5Xcr43X"]VA$-*qn8\g/_?_3\SC.oF+lC&^4rP/Qd'p4<>"pRj/+QSXh"9TU;Vi2QimRPO!'Zcb-<pB(FVtm(f;XeHN/J
%IoB0sJgK)t%+sp/=%ih1Q:*.*er`(aGI4X+3dNcI7Vk2Z`.bR^U6]Th'BC?]^r)U?<#IBq%`#TT77Bq6LNC;LlHPB:bYihES6$14
%NL2^2?O@.e)YkeR\eMh"l#;S3\'_+mf"(e*-6NMWD.4<^\BOGUer^@9F)V7i9gqo'0p5A*eb"7YZ>.hH!#C=V^uPJ0ac`FE\!_oj
%B9?3>e(eA_RlYcS28\M^r"Rn'!siDelGY^5cQ*eM=QV6GHC=JI6p",'-B##d).fS!0IDnl3qPR\TUh:#OS)1GSbd6^a:`o1g)Z@l
%\C+]9=+Tmt+pa^-ID(C>*!U-sZ/kk:J&cBU2etieC+JVoqOU6Uc'MQ+/_`a1ZnS`>%LX?=XtPBo&X.6@L#WK#j@buV#UIb9G:d#&
%;"WUJpSIREm]:5eg9o90VWSB,#3YJ&Z+L`*/dp66X+*DpM;/RS#mF%jIo<DDTt9pcLAl@uSR+Vl&K.esZ.;6VH;$sbFT59@P1PnO
%b'HVC$#N5b:aQPIOg@3G@%LQ]CkKHQ&r^i01A-Sq)b.49",]LATt49GI82m+OG^je<]I)=TMS(VRQ(;Uc;SIUmhFgq$`S[\OL!8q
%Gp[H/Y1";[`.F&3EEXFC@QAaL)PT7d?@q#=kK3.:@h7D'EkK;d378lUidgOT#9geM>M%q%0M727_eZO;J],X]B2YN0OCdaN,U2qn
%*/X:Z]UZdXDI?g,+nULus4"Ha9"skV@ZrR=:oDAO=+am>Fg1e-S>cMmKnT=&bjWbf35LDJ@#@o$Za$_UkbNTCO.NW&og&ACf](s'
%IP[PTH'AVQW[BaDQH"1aV-[-ObWrZtVEN]e9p#]]Q2NIFLne!j-+%j:2&CTsaPQo=V^5Z:=Q&]">(ArK!VQ<tc)jjUN:sAdWL657
%<KV$B.*`2sJIs7O/dfEt[D?l&TdXQa7hai5f8"<4ToY@qrj\KS$Y7aUC?h@T\sOt)Jj8[2Tshme![4bE14des0gEapnP4cp,K`.H
%lA<.8g?2^=mM&3*6WD;b%kf*e$MWnhfq*CTESsX<eu%Jo?NbW,Y!CoY_f=8X9STh:2H[#0NmH,NQC3!NT$TpMJB4o?I4p[tMiXGn
%MaP)joDM[^MRodq,McatNf$Vl@3VF:a"MTS-cNJLpN][M\L]!&3DCB4:/cO29?^3,bYcEaB3Y;NACUMret=?t.GFkejdnc%[B@47
%5U\Ydmasn9^,F;[l#k#mq72EdG$q5'4[SUBPO0o.UtQ2mSCqhpF:-bH;WM>`FU(qW$HcGh=oD"jI/a4r`f,2([-o64V9FkDZseh4
%Lgm@I"Oaq-<cFi`9,GEQahZ\84QJK:F`*R0`dCkkBO0=D'Gjp];!:!XI[dT2+3p@<^KJA91U9BN[,1S.i8]pVf.qSiI%Aeceqd0G
%JI\HPSrr-$b;rDAQUPpMV6/^7l'AJ-+UN.J0k-4qSTYX'Ya'%$IjXJ06e;R'2kbH9GT94*/\.bPV5MGHYXt_5B'eePI?2)%c\ICb
%i-U).NNfEI9t5[L^`1lS+e<-+p@95oO_NOHE\<X:Mo;uX[o$\I4)"o[CWk=]fDVojI"W(C1<UOiK4,#V"g_+"*<R4UC6[oLopk9p
%A:^EOKV$kA,7I0Q>>mHfn!@`cFP9j9$8;%F"$`Mq<;jJ)beWWn>J`G4g_d&mf/nklKn1?dOkMQs/@C`m#g'dX77.$T=GC[&=nRb!
%>-!AJ^fScMgV`GMmck6uXS"XA^)5D2UW=:UU33k5+1Uhl4PusN]-bXMLh<kCW>]`5(4$))S2cMYJM9AG$F94uCnAFQd@(p1_TJ>0
%N@M"d$abMJEh7LIh1m&tHF'&J'hQ]XW43<[78?Ld_t%t"Wea[$?)<SO9/Gj#K]1Ab]d#??@7ol'Z$450>(t*uf%n'I>?1rlATWOA
%dl'_6Pgf38Q3$4sYk)]-7t@GjUf9>'6\4UWorLpcjKFt9moURXLA0n/Wc?l;dd-LPGCY@pX%Y;1H6ZrT)$;s3>VWm;VRoFVTn5(+
%S&/%@2@djn'P*Au:LI[EVZf14KX6jI)sgaU/RlF`'_sc^FI/uYnR6a`hEr(fe+/T[OjB;l5f"/@1'3?SJ`eK4[2+u@Ou846"<fA]
%p+!N]oO[6"8`5-O=`''b.A0p/qh_?\`0]WN\R=SX!@!3P36C\ZYULroTEK#\5[c5&Zl".5m%NsN9[._EZnrIT8Rmo4:S-aUqaPhl
%o^'naJ4tOlVt#F0QUT3CWji&HP!6V'$S!UaCO+3'p&C94jA*f&,P#Mnm5Td%AI0O'q#XJ_d>ptVmj1`$MBH0.<>)Ujou-t<q)I1r
%:L5nQVcB:I46*![+IJ51Bi8_HS'.1rrI+ig860:MQAJYXD,B\'ZB3-2di%-Dm7!c^jFgAnhj3T<8W-='dl7bEY*)i6-,iMpfHG[%
%L\/_/*`H(>@[#"ZTnqLlh6Dark5+H=.hS&g:G$JNep2etIBF@[E*c'6maR0S_G6#@bgmrS2%F/_II?Uf/)3l5>tq2S//XO&:k?5R
%P4"h%5nS^3mBGeH&[gVl$%2I-;%kq4\P!\ic#@)99d)c@939fE2n2KV!Y%bboYQ?G*(&6]4Z"5[FSrua.nt@_WF>s9F*j`P`i_+L
%";VP.[5\2.aUNJo=a2)W[(5U4mU.ZWbe!D)0YS*STH7;5]9Wr5T#fU[7C9-]:'Y9+8r+F6pS,Q\_UiA+_Ld<7*5iCdP:YsQ+k5a-
%`p7>8Y:X2h0=5J42S_[[FCUMZJ?1(1H?\_LH.?q!DjP';E"#H1/G("AFebYP4eUE3^Y@[B;ZnC`U0a1+QY1=S9gVAG[/3a(a[<I9
%4sdo$G0CE0AqI>ME2/bZ@^7,%*Ji\DJ<R0;"uDEJ8q%-n)oE'B=8>\8PoR@T(:f)h](NCHZ$J,`Cs\IB:jT:>26#.H>-,_"?p&.`
%>N_#0m,$pH[nEF)Hg2j`2Ei>*Q%#gcSiX(2e=eN00aN`DZD;6@%l;+g?7?L<It,R$TR<)tMA/f&Xl@q3WDM_6Y!mkfDPF(k;WU$7
%ppT(Tqe`Nt#R%6C6]VM.j!-&!g"J-U1Zoq#L,,T<G/Lo(H4Quk0%f/*[jJ5WiiRFBlqL"i/maE&J%@QVZ-[iNrC1:\5+jiEInP\i
%AHH(U/SP#-VI`dC^NqM>,+&R.X8bVqMjho"3;hDI:dk"^5m-bto.\juCil=3%&/Fr_QY%?_ZQ(fVqccPo4?&eV_V>a"u'th*JVeY
%_noYI\lfQc@^OY_mIRkh3Yj8f"qTcU;VWsNdu/WF!J^"7;4.Sr'q29(B'e5+p,tS#G$g.)\3o-h^(\_!VKuBcGO-9rG[%1`;%?0o
%/=JIVgcC%M_#.:8q:I->9bgO*`cqCWIL=#SLg"k'3cY't-,.NlV-X3qF[C0;e>@3+%4b2B]V.pmA$J=UL?OnKa$T,!?C1D2)5^A]
%C+NbdgOQFGh!M4`]F=SmhL1h]OSR^+j$PHKT(#n6K&aB]'s9.K"[n_!^:HZ&MJuO0!fQu8aS^0Cpg?_:e8^0W[SEW<Jsn=\8'SXU
%(9!F"jr`f>E82TUe+^$!4L[%QfS2g5N\I7ad43U4D<?+-;XE5ELMkt)%I6WRd)d6NE7S)GJ5U[\)mX-/q\Ma)$J8%Dbf>$*KM8<I
%)]KJ!^FPA^'4u!P-%ZN`ab(N:n!nabNGBBgom:eqlh/rhr&D(-['[2WOEc+TiFdh+o]CHY..fd:2.0O+XIR3<2JPWrZ<"rn@df=?
%7"d,G$F!1dZA*Re!K4X0Gi._&EY%AVlu,+^[;i_1V(q;ThN&SBHsa=*iJj=n"+fl(ehZ<*>td>^WM:?9Y:\-.7'VhMG.fi8or%K\
%3`g]*iQ-1eOMBsX2*JIYqKbrCGbt_OR3>(Da:3bqK_!K.n>Qgq2!M_*/EH_SkhWM!DVdAqqpMb91@1;$rfL^D[<9F5&YM$s;WE0N
%?7NX*hE*N)JINi9imhTDk!:YA>0sfB*DLlZIY*u\d^!H%]BEjOg[EPZ[b"#kk!`IhVOpjc[j!qRLaMC@R(oP%pl0Q^GGqZb'K8#;
%:2_^2&JB#Q)tjhkY%1ZRqpK*Hce)dD6LPMpqi!-'E8HQOSbWI^:U*?Q-]0R8EE&L2>?bub$6,Ti0m%8cA8mK<:p]KlS4p4U,ha-L
%rOP&E?(X*q6#IlB>O/2G]ngf%S2K?%"LuW^N$aIQ%/gm</p?ZMESR`L]&,0;XBMqG'DPWGpLWW[c^gu_W%/[SV#<a&X+b=dEikJ`
%EghRma$W2OGD-^c7gY=;A9$tI4eVn2P:auE7G4K3VrtVj*c3OIKrc<F>2L/`m__Fmr&oPDHhj9g`M$Da5t&CTZ2YG(_o[QA2sNuV
%i93U00Q'uj;BT?-L79(,Yt7na4d0KDp[4E^8L\&c9DbIOmNsk.H]PDgBP;Dqkfqc;Hp!5P/s/K1W[)H^U&/R2o.XgM=@>aYgteIV
%$1194oT0;!_=EZmEkl^X#;#YL,O/%p5U0C&n'H?%Op;oA^3%g0QBOGX#X[]^&\*Q5A#^d_b^R'>?A3)d;MKUG0L2n+)iML="J1D!
%#/aM"Cj&5A3q/UtUGKHRH473@[Dt;_X,3j<E_!mlrU]gg1bF:TNmmKk$DncUm`!\*3V@?D]!l22bQehk25_loVPT?/TM2Z@M?(D\
%>JEFpLjnhYF]a[a^kc+ljbO(AFF]_03]+C[gS+B*#7k'pIHfl^lm=Y,H]PDgBP;Dqkfqc;I%:St$&<?pBc2/&"rgKMW0D<hI:CBm
%#D3$C$"31_Tb+?=-OD/L%qcqaT=#f,fO!)^?"K6rOpDi.6`6lI:TFgPh*[ub,]F6P/I>`!!\;2_*lG?dq<Pask]80%SFV,?TFIPJ
%i73&=\dW_Q>_*clZR-ngSPY7b\*a<2fK0Iq1RBj&^4i<@",SjD]q(h3"^U<?XF_kEFY#+5W1##B*CLaWj&L8CZ3n\G*?5D8IS)kB
%80IL._opnNZ6nX2cI6OV\`1R;LA1_lg!q<KqA<o2p>JIX$+OU@6YXW_]eG*#CtKm*HH568FPl6N]HdFXb1\,\Ije(:$RhaaeWQJ*
%6I5eI8@l2d-,R_+.n`1?<QejH.)Id_]tkb=W_845K,Hu2cT@YZr5fI<Zgh//SPkW^_ah+$4r8$l^J?O#V-`@#C&Vim.d86U%;kGj
%q"6ua94;;p\l43JUk6o4i=Rlck4B0AD(/=-p-L,FfGQS@*HV=oX9<<6gNSpIZ:)MsIOf99MjeZ$IuT>`e]!SPf9JA-9E1.=b/B;T
%d:Q-;Im)C\Fn1CI6\WiGqgM7&V`+^-G=X>a`?7*e_I`BDcq6c+87J+@D%Fj=ED9;H('>V6.!0/S6$]^j+(Sp.;AU!4T+4[I"N6*P
%g+8Gu7].&j*Jc^0Y5oHF]])1g>YUsaEfTLU`j,-bEuFJm24<t_!Y6*s5g>!l$62V_m/_!h$0o!,?RP7kAYGua+TY0/`eIjs_d^C;
%#H1"3*t9R^OHb]H#:,D_kPWtRFKhtSCUBV]Gf2[oa"=98o2%csJ2VTp_dl%];)n4Y>TFI'McHIm<^+?KM%HVpa*IQYd5O(Qh8Q(p
%Tm.dig@lP9$^'N"@OD3I>Bq:URn;;TTr,WQFH:BRWBNVD^NR\HG%POAY2Z.g'i+k6VJGfE.6(="T,YcGMSa,@['[gMmF0*:9,<0U
%;]0iHP*/Ns-d/SB7W>u7=Y=TK1NhK;h)PATQ^tf[='-?/VKKrYfqgie_M?b(!AgpNWd'DA+HqBdA@LBE=tHqL?(Q$)$TdroBISY-
%g,"/5qe&&?C=,7l[IiJe3dBK(b6SatS(,RFF%BC(&1O.,#>=r'2M#j=QFK!0&7d,*^O>;tVfULcSi@ZXa@a@jhkK7ucLJ.Q*<%?,
%Z>X;?l^$R,Z]S$M*ujc4Go?"=\Qe1kUN``:K.dW.Y%lq_qIDc>jp047bX03@%a_H#`/r>8MmBk?S4V\eP(o`OpZmo0UUgf^X:%lB
%<mlpX1P3]h8/1QPS\h]Xl6?r>0\*,o.;]G<Ys@=[8n;0nW&o67#u;6O:.*jA;N.^GkZqE_YeBBdMQDKK3'N/`0VnauW%5b(d]4i@
%8JH&kGY[P2>h'M`^i/)O,DL2H2,L8kA7a/9krieZ%O-)PQ(u:E"T5;>6<RQW'9-\7:s*M^=VTIdr!9tsoW[io9a\WHLXn;"XT^+p
%]?tbN]=C(^QdNO:`=Ve,"G:S3%jGAl]>G#l1FK`=kQ5nmQjHeTj->pAKk^ZZ[J<ehG_'%NgdMeo1V"tPIkVTLQrM)',\EN7LC-6>
%XA2m9QHGFc#3W+=^l@76TumI?&R,2-YS9A=[4U;_[*t&s';?]bh]dH@/:r^^+^*6H)iW5)1r.FE!o]^?-o0daed8[u3J"/:JPEIG
%4fYEX*9SW\Sts!(Lure2=;D>`8h4C$#,.o[Om7m]F.91VLWm$@KKq5a6A[_:/8uU(RFCa;LrL9LI'D$#J"'C.a`Ta+bNL)QRh0FM
%ge$lAN8dQO:M.>'#=b3)LgoGhIcmi'8fLAXlJ;sDh8BH2P*HJ'lX%iq6@2l+M:X:,S=)o-kGh,H7<47)C"9X>?<C)W:.1Z6K:;:N
%_F1J)R2B6,@_'_[O&1rH<<+0LnGU[CSZXpmG3Q+&.!IM7R7pY)"C5Tk\W!@?cU^!:87XYVj8aDLg?"jZe'>NA@[HBFYj>FR#kI$G
%>C!nb2/Luj!>uEs`T]GN@k_OqGqgOW^3SFPJjL!">QroJM)/S-.T_G<B/2(!aFuMaCaM$`Z;oS,g=qMF.LZ:db6$]G:o3gS`,^tW
%rYsuNKh1!Z5XT?]_aJX4>SXfFbE,Pe#]\E8_bUfbXl0SW#O<[_OGFI/BXe_c9jS)%mPKV1'91,%@<RZABA5R2!O3^(St5X.lR@S!
%3Kb-QfQ2+AF-Ld%cclLAZn/",2Zjt1iF"*=<Y9eAL:K;eQZd=7E,K"2C)j,(ZKL@0Z:_4Sk2nX"gOs#]4uY-i?]gmB2t>W,FkGI(
%*%XC%jtJ_K(pi1LDSCDInOUVN-(!BA*:PgWT>]pT5aY*'cDK`sh"PgFVrhBPBAU9s9gVBig/A["m9S%X:JLIIQcu%i]TZjT4Z.5s
%US$p;2=\=2c/5EG+^1Qt1LGq6DIup/4BV.pZJ&72+ul3;H\Q(q1`b7cTSPJq^ddiPZqaBC6d7@Inj64Ii6\1LhFFnbL!uh<S7"?V
%#($FhB-<H*8G)lb[$kHXq$9M\d2D&aM&SZWW\j/,qSqcki/raQmc=[CYnV0fO,<!$,g&JC&J%b=n6;H/W.BE]TF^k%bdl/IElCS,
%FN=I?%DR24EDhC_frD_7ejo_fH(?DAS:_[cC'/oq*U+KUfdAl95A`1En]W9mLrmHS8;PEEQnd4$X.N":!`P"(",GnlL/_C[Ba,fh
%Zs>pVfCP;r1cEGU)"o@/-_?mUqa$&$Bl[<p-a0:n2_cK!3r)-Z2J9=.EnF6)$oq4:PU79,U*)%:.fU*Vk`UmpObYADc9AY7%1#L=
%OVu;i*N6q_"Ej6[l+1&3S:dci0ubktQ^N;+=ge?Vn`o^sBqGJnhneaaGCu+S5SuMnXPT))g-/?M>&Rmb.2WQ!WHA9]cA_?WIS0ik
%4tKmS&)Bo.VWjF/4B7Kj9#G6>YaE(Kc>dIYot1h6&hbDt6m+@YR!1Gj`JA[r6fi-oR9h.gCV`3I#$YiY.AFQg&4C4cW(K9dYXXGg
%dj0\HOL($0:9$)\f/RXof4s#?Lplf5[4^F9a(``h.C!peOcZ&,Lk8;6[MJFt?Ut!2@a[Z@lti2Zh.0^,bf#:1epLr8U#YWZ@\RZI
%rIfN,2B-b*RFqJGi5_7rd5VGP\sq%=RKFJk-7Y89AgZ/$PWIJR'?=Wt9#[2i(D<jo2)A+"N'$*hR!&20)CK-$+uO.J_V:/$qn$J&
%l[t3R'0A^^@2,UdZt(q!lC+0o^nmX/VC)"($DH=R-MG\5[7d-\J@(oMWQEjnSG[AA2QQ<ZVC"`Fo_r]B2Y3-hVrmZf=m%J49gCIU
%f$o'fmQ4b#0e@2G*Q$".5+R(p*1V`2m@j[G_j1dG+fm^ufC=40Wgom7d47&O"<eLM4fS>07>=X8BUHj86K.B!!jRVf3sm(TOq]3`
%hC87>9g^\An<p$9\ot>=Po!%gWj:mXi,G0DeMs#IpBF#J-!1aV#hS>*Sn=F=RW+hAeZ7L\VWk!8R0]hdIS/[bi_?PO-^9>D\J)f7
%Cb9a"fi/=<"a!Cp+ubs[b8k.NFZ-/f?69P<>[rm'6!@0sqHjAr#+Q0!on/4N[9,=&TI>P"erqq9D!'*J-e^AaD4.O7!`;=t':c_b
%R,g31^%=B#VG9BRVo9p(YObMH'Cg4bL6%i`>)K;'Z+R"AVOjfIi[>#6j.M:]OH$T?,42dnSrf^<-).'ZDU("o@_W+1oQ=<)M1&h(
%RO>/H!/5k(l8KQKo3o:lpDnejI%'"?.&]?0,mKH4=?lI_culJpSF?98OpkG^VLXQK#hc-::k2P25@cQ'*2)$M8oA5fijZg?if-t<
%&=jfBH[4&?IdM31hD/ZpG6pYR<_B5+'*:$,ZRgoHWpgA.Ze,itr%irO0<5$d<%=`S-PE!gqn(FG16@/[`?[r<n#5L!0S[7DJpnTF
%)@@leBq<o]=2:Y/[0G,BU5I%8)[NbcIk)EAL-WU-h[`\i<7LD:d5V\M$6:6eBkYj!3@s]k^HMMnXCmKs,"tNWQHI5=(t6'FX'2H@
%^mg?+3`/oq#/mna[uslG)\CI\E6m-K@177D"6XU'$"BP@<bDJ5=\]dB_XR)bn\,H_jAjCcABB2/dfXopN-a;;F2>8XD[5Me<ZAk0
%G\D=A&4_4UR`?&.>qJN>IH/ok4[gb+/RA[rCO43/k6ke_I[g5W3#Z`*FkkAGVHbZ$%A9ASe66`D8LMUJK3F2#"PC6*`+FmmP(4O!
%.+M"rNd0g!b7h$*"(o7$a;3R-G'.TkqLVjQ/G<ruIi`KL>oEpSRX?.Q4+eIn4KB*F;F%-HB@',sOa=pp&Xc6M_'tR6pP>ZB660Kj
%Ttp/U9kO0k/oroDmasm!NUfo"92XDXRMr7d)6hb?K`+A-PA<F%`ZC,t@9U_:Oe;$-<8WG2Hl>+<R9O.?[,N<bH!ecK(#c7*$aE:9
%h@jL9khRsW)Xo?)qisSi^0?Kr$_7NIh</Zq%Hl!Whp*61o>UHoic!K@+VuK@"36F#<*P/6j5bO(2BOoq@&5*?,;tCb5V4(ODaPSo
%kG2<@>h:-:Pj5B]JAn*)lo,ec>_@;Bp2/Bf<C?mM)M2=D.V%;<U%fbkeg392VWl+s+e.YgcZ-d([UNpT>C(DXgG+'@Vr_U\9=(2N
%@Z(8FSSrc1kAG=$kB5k#Yi>FhTQ/r7p8)]!@KcePL[8S(AnS+(#_b/3"ud:$MCg"S#-(k3F3!XBZs"@58r.'3Ej])0=Qhl_I[dsc
%24->_ITgU0GLh)bo@B8!Oc3]0n6g[Y[=;1Uqm^(TiiPXo>"+J(,g7Sp)Ir5r4nL>Pd;E#l,P0Tm=q"O"4MpDJ=,VDbY9SO0i]t4P
%V*J//,:bO];/-ph&3msXbu-Kb(h?&h5_3m0Ya$9nXe*!0H2bQ9[it57+c<e)aF6O%HoKYNL,S\icpL\rG(]+t0K="=FhH,/@BF"e
%*>&(V@nK!:p#!ao$A4P<MPC3[b,ti(=1*27+cVPQPbIO^67fP=>AG2KDJ_Y!(8amr`gTp)$GAL=a67`VYM0.X>H]9"kFB@@<u!u8
%nh8rUbAoTl"nXQ-6'/1*R'=+$J^%..5DWuM21s6qQsJ@`6ba,i\!.#.!-MSG_@*j8!YkLekdnUdg`FJYGiR0m=qiOF`]@H4Cjq5F
%I*r>]+9j+f0e$5K!"0?#CPms<FIK7F[>+H(2Q+p&6P$ku`%P\/L]U@'_7Wt[;!9g1li'q+HPA-.rO6DFdmK2fBneSc?Mq0^[Lofe
%S,3V^FN9V*6a/__pmqWDB89d"?hnFb5bZ5KqQ9/)p&JDgqL3<U3)T"OcOC,s/"]sua<Iu+$mOCO0cO;cQCJb;2<[4_eqO!dYLWah
%\ddl7^YRZ``QMrPbmb5\a??5?,JjRjG8,%@9N/knjg/H66E##o1IZ+ELE:K_<`UEs(ZLCi7&\pHJ?7X`">pV,W<TWDcs3hbD4t<l
%*`?1K)dF3I@BATt`uAXs`+1-UgfKYc!365tTQ2C<7#XVg2NkIH5T\(Jln_-G8QmUU\Jj3n?chC1Zq;(,/\GjQJTm`H4J]c)pU780
%"'COGO7UWGkjD#$_<>,l[p:D>p,`.RN-U4W,2ULhEX\?hkTMsC?5O\b(IJ#!Ycdb9D+!1I6S^]_:.8b^F!XD;5P49g6]>U4hmtEK
%c!,N8D3u/:;P8%mh^#c%?["=UPf29s8Qr'i.=_QlPK)O4*gRZo]nLmnYd.l7\ID]V2BYLAiY.e#asE&G)YB+6J`#CsE"?G9pG1TL
%1Lt`)7M,/i[fS>,C+;9s5o^Q)QN!9;d7.e%6&1Ft:7F,pGB5;r#W^Mmm=HB/e)o`qrPIfhq9\!8DES6SDfN1o`pkh>3((\fAK%6q
%!2VY=N@(Ko!/'45S-5^L0EGWm\?0QSEY7[M(hk)(6&NR(4sKHA5n=^P@g/cLiA<c6BJ)QDhhB'3o_.98?3gFHP<lMA=P9GlomGTB
%%ZQik5tA`Y(sOl&3>Ga_Qc+Da=Q_`f=X^=b?^cJ8a0!13N6N[V+HlFq$SaIBmsQ,KIN<b`VWbM!/e-k4(12h:pDHBC%cr.:mmLLJ
%)k9<]_JONtG7s&kpou(R*TO7fdEOG<f;5;;h4'@jokl!YE)V_VethhjDS7"/V]'I&09$))-Jsd\h4-Kf4`>qL@F>:'^#X7$moiWj
%d9)V(M6ge('>"a@6BAc!pEftXB24-Y9nt(IKF#93\J&k&?Q-rK9thKlS3>emGC.bHp-dP?om&)+Tf"-`/iCfCm"$@\h=J>pfs:RU
%aaf)u'4HC@Yt:Q#Z1fr!if3f2EBrCAS$B_dAId;6/imCWbX/6:I,EA3BAGg17guV\_eHR#W^7tg2;/i::mB3b`I8iq=JU01l4k.A
%OS-a=gBLf-U+oIk'`k-(:pkcH$402KQ6$AO<pkC"qKFLCi3dNG^9786_ii!ZS1dEG1QI<L0d"UjoD0E&_Zc=I+)c1T1U_RW#aqcm
%b'K5KU\2uN=/cW/R]K?,A>\ZHpA1.pnOe;[B_SkV!X>[9?4031F;iD%Y-(,r]g5K:3:(p,FGelgRY-D.ngm,B%e7#q?t'Q@Ku<*%
%DD"2JhghjK>g;YE]SuTU'6oA6Wg*-5NSOp-eZg.oP[0G(5([mtTqXXi"Xg.GKFmQC>:8Yp@pWC7&bt[pg4G-m@qC!8(NI!E9cBn(
%9)LC`,GVP?k@\[k5G,R<Fm6Gg9W&bJrNnoGf"2N=i.P+QU+1K7Z>.;PF1K-+;X-/&:0,nTB.2o%2'?A,Q?#S@i<EA@JA`6%8\]U$
%hh,d$,$:t5okY<5P<+Do-2laUSmsKrosCRmL?1kl]"u`S4N9m-E`-Z5,Bdr9Isb/'3*_6;FKbH$+r5Kbn@H`li#^)-Yi"it#89G[
%;9shd?Vg0jlF!]p/`S9#7BC>AAn_t>>M+-2S1H<:^uRY$QGNrA7tGZC!?!V)N`elc'M[COJ$kNU3\(5*GN!mGT[#='e#<A@@c4n%
%X=QA:06!Q=0T-p!f?r)VcpX2JnqKGc6Id5o-]d[n5'l^tWsV;2*\'<=SUbtL0j"9^2&S+:SW>G>;^WtW5#<&k#/of6-69GM_&Z;*
%ehoG$ed2N&oDEhl"6.]6,Aa7s=A6]LkCZ*b5&c/EJ<J"[?j";Rh_6&!,X?a0;<@/Uce'L8Mh=VDHZtFp\'!@7?(.$oEGI=;U%\ii
%NJ8e3JDQ5jNs9>:Y',RVVeKVti6M+>@n"\Qgd4&:juam^&?YN/#3u.b7$UKd_V5Gp?&I,j(fd&oWc,'V("g.k/a+?d,eHRY/<7VP
%HSa`rT_o1pMuH<GkO3j-P6EcI3cEs87TbP6*$Y8m!6]%V#FEtB^u#P3oDh[tqB@tC^u)8:<?_^>)Y-^5MHV3++K[]Ci:<`H'`-VK
%]"-YN)T(f:Y7LGIYFh01Y<C@7\.V[%O22&cAHNoQf<%=!-d+,dm%MS[IC+%0PS+Z^[MY[EMN\1mpT**k.T/(YFSEEjr-$oV^2T-D
%2>9.BHPY4*jXMRU-oh1u"Aa%.;)9A`BGIR"_cB55S`>ahV@HW;MJ.a"`+naeM`8j@J"R;$L9^)3=!=pV\hOiOA)E;0<%Yt*F'T]=
%ZW_`4E]oUg"\U>^?[!(ZH#.W%HsU(aQ*oi<7gA]tQ5bQ5F_j9T^0M(DU3T=2P6"mn`](-MXGH6Ydl*7m48)LmGJD=DBcNkTpbHSI
%%@kft958-Gre_gYefZIR8pk7@ka?u,#=pL,aSZrfMOEoLY$0Dg\IEhnk+m#S.5rA+8'ShQ@_WE#*OBX&?+>[PXh>-D%j<+X`$FkX
%AFf$r?_(*J1I6cb>fB"kEIEruV,]XpZ0R](Si,]uaoc,"9/f[!"tU$ehI+hc*p6%,&VL,iOG0hH_Jd=dqLrpFhV=T/l[chilhSQO
%qmrP'[2W^HOaEfDia-%(:W[^5%AO5[KDcgfH$Z"RemcQU="hGDAQ(pZ&F-(69^(:e1OnaTf9L\>X23CrlZjTfb&Rr1!m$7_8!MI:
%=`;Eh#.ZiNi%gH1+q#4t>K@(0mk?Lm?!tcY%$5W1:pR0rO=XjqZ8[!uOO$%$ms%,/-)?qKijs(>`*7R/Y^IuC^\K7f4&g(g]#Eu\
%RtBTg9+g?k:pZV9QD+.tV,IP+#)MD.ZBBk;6?'hE=`(XV+n(`j_FCm%Z?LBBN=^dLrAsQ^;dK.,Xp[Vgem:j^7O^4gQk'lP6U:Ui
%iUq#PZ40"1`hY+3.u!/:@apQ)gDAk>Eekt"c#"la:dj]r6ZYH*cu4.=i<Inf@;t)YlZi(F/pm6gpkuobpq-R"PO?7i_XfC6(?';E
%/6.?m_!n8TMAdrM(s$_<bdmfgQmnCH?r'gD7u@]bf1a$X]V3B>>Wnb)B.Up-/5CI\TbZ<^RN)(44O&>-`I=Hm"*P,b/2DVY;'[KK
%;tYu9Z&A85OF4+iC7O<61>A'K&"<]U[SJji_f'P(?,d8YD]*&\r&-YhjR069j+\ZX"-\d12%aHs&5i0JoDu6^DM$rgrMt1L8Bb]B
%>8Ynal5ec\!"E-'oOKQilTVj0D@FK2RM*7;1u?;FDCdj'`Z:m?VHP$c5L$*VA]Ukt,%N-NKF";/")6D?OiSfG*@s5+-GX+@2lktq
%:oOnM"Zc>FW:ERXBn]%[AO?+7$*cHdLZ\;p]g@soAc8t=@E^29jldgC6E:=YH3r,0LrHE+K>GmO&Y)eD7#/ZcHIMX@?W1GU%ShQQ
%gsn[^_-qrR#!""ioe/E"e1diTcq\+.-6'.$DB_n2bK4C<8=U#Ga@"XrnO2:"2$9g>"/oZJphnh7V]4+s.#n#$lA4.,J5WQ.;q95P
%H2Nm(I.s1(cLFtcs&Zu2j.H>25<f)=O+6s'Du]U9+9*D7?gu$nZiB.-?i@GurUCtZrsp3$n^i9hS&aPr^AdF?rq'E"qj/E)%TiW7
%r1A7"(iNg-2!4@O-K7mpiYP9lL3iW_CAN`_QhG4imEpB"F`SZe^`<2hm4dNJfl5F@%8\u%lKtKMV*&q+TlhUGVgc\[\Q^.HrWETg
%grY:W7f2tCO-GnZ=`YG/lE&5gWFG$=TT-+n'5=Vj%`=Nql&OQ,2L/<Ug`Zfska9/EVX#:%;Y"=g-%DD]jL+W'?'S*#!RifO%K'fl
%[4.)h:8$qR,c.j%a"]04&I\eC5Jf!.OUcf<=Ct(8W:f^n\3KV*hOM+iV<1mi*MT<A'*W-FDA]3Q+?Ra$ZKp:XjaAF:g93M8Z842-
%?%EV;=Ec]-+ibkm_hh!"8hXj)&:?i$AY0I8OU,a%J0SiV^7pG;%cu@u=G=uPDm45A/-diTKBjG6m1&lS-cB-&0Dl#GX36I+Wd!./
%GW0_JH0#FQ2PAFM7e+`cra7b$j<!lUi&eTH&FN72"m6i6F"C'5-Auocb,LH[[IY,f#al:kgW-Of%:DOSVf3+h@A=]t7"+@FhU&=R
%QFTC>YlUI&,$upm\rb$P0L0CI(1$j8<KD]^PemU"dDeiGAB7^t<5?]CeAuY7.<LA*W@8Gj0/=eC=Q?tkm<omoN<+)cSt=Q$l=nl?
%`/.@4]<Hl:;FB&3:%ITn?C`QUJDr?[Gp2iX/&F8g6iqI*9_U`Jr#FV%_&Y(%\kq/3#Ia$c%4D><;qd=tWkO%O:<Z8m6U"D^s'h[W
%!+H9j`r$;&!c#n].',%cS=DZe/[fb(F0Z8>T@16LQ6j:C#Yn[&CA/Kckc?m:]1mV*So@'_&9718ODt%e%PmHkI<,g^aF&]'&(N!<
%FrmP?YYa%l19DlQPLG]:aCW#MJ303'eP,"IDdprBH32L'Oe5I7oK1PR"D0(DN?r=_XBO*F%^;&VCOQki@,>5[BP/AuSL2\l&(m:@
%QrgpQ2s!tnha5!:e9MbaP$%H1Z!>(%>-+#W3D0b6.rCU%,^p*f)!-+H5+lCpf1hOqHa?9CclKs4YbsMInYp=[/>t#qCpQaTK8"'4
%4If9QpVB-9?!f@#%18L[dN<!kg2bssp<1tkc"1p2ZOsn(XW?qgg.+2@-YMC+DXLJJ6[5js^P3<<)#.="A#IF/L*A;k"_Kl$';bG7
%Zp42F@SSc)$,0l2+XW*adp[a>jU$:(O:nLrksEiRr3dl9Vg<$r;\]JqioIr91bJO`!2X$Q_<CScf5qC+/83pss3ttS5@%RU7Z#N@
%)[gm.l-D.ei!#UOE/$Aq6?ATX`G+udYoPOTJjS[[U$<JI$NV:2C$&[PI1i&nLoCqr6"=G-cm%LfcX+/G!jO9Y\D$l)2Po>kWf\%I
%[&cIP99Q[+r>OCS((EZ[9#OD;C,2k!6paXsg3a^TP9TSaU#u+*kh$=*@h7^qQ+KXIP%[5g:RGerNg3MT*l)J&3=SsBE35h\PON<4
%eMOLMOE]sdNE0(4Z(fqNY\5`P/8^&s=uK;+=$SFnKhV/T=1Pp0`V^fX8`&(-!j-h&N@\%^1m7tMUU;[*'IOCJ&sCZRY"aVXiTD4U
%:oZM?oY.oBo2(k+[i.dpXK@&Ql]N&p!$+Ks0B8=h&PCLAgL1CVo;Y>t$+2']lAVH]e;]$OqDrkDr\j)O:oL@9Gu`qc8PmCRKh9Jm
%6F<(N=rOE6JFK?4[W[q8^,hs4%5t@tP!QUC<j0hn\hJfOGJ@eQ(pKTGSuQKbWKt@c(2A1iN]3@_)O:o"@>($Zs-``VEpoV4`Q$3g
%C4';]635sTr#/E1\YI5[m63H=e(HB*?XtS5o'#PB&/mXT$\m6jRCZuHFs&T&9L/:]*n$n]#1ZJ;IlF_TVY4m:8?E2r@t'#RF<&HX
%k(dSP*T&"%j"5AomSKJFL15:u`uAeqEJ=\ic012G/igHZ'U*h/'[A\WM0N4uI_5hL),;Y_@?Ome:0n<Qi5AU4X[6QfDaW-]R)J&*
%@EhC_2_6@q?Aii;CUdtO_Ha+ahDnQFRk@-@l8,Xf^(]TA8K,ll\)HpY&-B$56;M"hFn.-MqKqP89$39[R`iKG`E".9Zi"C15P/sh
%m-\$Qj:9:?&j:@7c^&d+9pEg/B$u7:%GnhEc\-%9d3$e4#XT^Dg_[ONfG_*%$(]n`D*u-WTG3dVhSLq+c1*&Q#@VN8Q(O4EL3nuV
%V6q>#)VU_4)O"3.8,Er?(AR$/N@pSk19?LWXk]l%LK./+mm'X5/Y8'>jYXcHUl)hmO@lMh$Jt*aFiAGH@+W8H0kj?9-?h&N"&dKJ
%!\]deVf11V\Je%_?HK(P;3I&tmjOKTBtIU>,ls7Zj(M5%bumG6*mg@d]ci$a]+m.g\4b\:M"37&bnrI<r<[>BN71J*XI/ATmfc]O
%n*%0:2Cm)Y7r4YWd\?HJQ*5_607=!CK4Z9L!]nUrLG@jl_&/@G<KsY-)?=X7aASb(&feI9Y*"mc`>S7YX+?SOCoL5OieDK#,C^)b
%'U!@B(o+a--0:hhK8cp;<QBsHPN55(CZ+O[Or.fGG5akS"+lc-`=5aF'9+`hb^m#'(5:g'>EG[MlISBIDNY=F??"hbF`-b48tkec
%CcFH`\>47J?rnegm\9U9=PLa%T>M-.#U3Hg?+iOJELPP87N#&TZHl@&G^0RtWDN"2e@rI)/oE:J.>62R-^#-^fG\j!i=n=ab8&](
%2\_MH1R3)H^T8B'"B^3#B+uP5fhf1<^oHAPOMI*$_)G>.U4ZF3RG3<>_W[<0mbgl_"&;,'4;Nd<GPh#0W65#AVm8^'[agWq"<M/%
%8SmsOK&S'd)t$1Qd4gHf$r)Oql[X/W0^5(7lGrAIn.TO?@-qCO7f[;96a:T;B;Kg67sHFrS@ca,JP*)P<F;d)dnl?/6+i=)6$$#d
%,pYtt;@G,c92s^_bO:*4ReeF,5!9\0d@C8@5K-m'T<HnpMIViWX_9A81YNptDGS9Ir.aKY)6mLa0.9?1MG#@Y7>E'0U\<8+FdXW1
%W:EnR5geq\A-Hq_mBEZ.2@`?R&n8Q!8M2GBl,!&?gK9r/Lru"+Ou>&d/A]Iko&O`N@q.qj'n8Ol-DZ8?pj0$O&a#[(DGuGmc"MUd
%cAdD&0P_:*.l&b:g*iH6i^8+G885!($`AVjr<mr8BK)pW\hD8KM/=(e4I8$j9P_qbIH[>u;G;$e,nt-Mj%]?gn12m&&:VgpOQ#UA
%g?IMQBpt.)LRZ533qR]N>=N=FH_1kgk,&JL*HEXHn3I-;(g`i`:U'Msc-^=U33s+>o8Va);+hOVM[C3HZ&aZ<W[XQ%@Qr.2ESl0^
%C;nbN>7:!s+6F7ne2Xh/[9BD_)gZYj+g]>ZDI9nD[[MO\lqa/6OP&YlW3Rh>QtOqKkF.:^fE9kK%k9,6LRR)4X3'p=ge8;o6BT-?
%>*LmE&]>NRE:A6q\R<r"E:GZ"`8NsuP3FL<[7GE9_9aCd@l,j,r).7F,B1;)CUcH,J@=.2RK5[Qk0/c?H7AoWUqr3u4Mk@X.SV8u
%!m4?XadV5"k)5A])(?[>"/U?6T*[#jEg@EG$K6m%9#-pq2@rp\`nSE_O\O)8gt=%q[q.B$TA=^42!>gI6Y_M@ISdIO4V]lJ.n*86
%Pb^D,RkaRBL!Qa_pYCEFT]ZT75ENk-=T8d@Fd:k.K:hWN_oL'`VE3&2q6Qk6q(-Yld5"s?Ytp7;*geW]msn>H3K(Gp9hqI!5s!p+
%K60i26;EbpT`^s$7UiFd_rn"ZL6Wh'HlBbN8"").DJ7:ehQ[E6YfIkKit^[6n6+]KoQkL#-fUWSrlbo+WCI]HHW=SrDEc^Vd.^5O
%)-ZYbPRc#,]jmFaBrhTKN2TG#<=`7nRee1a<M9;40*^c%PW&Z$)U7!>Z-i5[Y(DdPGscO^+>jc5i"S;<O+,0(!3u$-&[%q0As9Se
%dRDV!?NDA;9tsCs\mPB;M@:iAF+HX?SLS9*8j0s5/#_5rW9YqE7FSheZ7t)#^;dEY.k8k@e9BA1i3._=ae(mVS1/1j+U2c1I2Pf4
%XQ_o8>.::8k\<>!rUD[4C@JX/G!B\G8$hM.m(hJ`Ot-o@Ol?L*#<NTObX4Op[KmB5.hi<T$r<6e,%[q!VsH)4$fQ*<*f9%%OX:!L
%6fC,)-fnQ4Uq&[_-uEI,^5;Wf*TEP>S3&du=ZTi>FZDaRnVXao>m2-2V0tmt^idGo&lu]@?mZ:Td_msV3*^1dOKSNcS[o='3Q6]N
%W]mM'&+\AkJ&%''O9nI3:Cs(\@"(?5q(Od0[Q:1:r0c`*GRjrM,^KuWlp(hI.bPQOX[ZU33HqK]ThQ>Z*:10I5"GNM7gkVq.]1QR
%[399qE6H+ZOp>4/Tc%AtgkZ:iiK8(@r%=g56^r@H/LiCX'e;Hh8%k[Wo"O8XkuK+'Yu\O[`"rd7of1RQU;3[OR"m]T2i7jhcJm=7
%P_TRei'Z$)-V='$L&l^*#![V82TCff.U[8A5./lup[2M]_D0ZUGS$1FCRI6Zq-./HA9F\PKB*;@KiiGY7ZZZ\_X[+>^cii8Gt!CX
%acKckZKD`Ch,(.$lnu>T$WWG$$<sI9Oq_=tUinf#<XC(p;#.ug5HlA?5J7KtL[JOI*ot=m$?-TJRsmRSYFY5*9ffVl[8)]Tl;`!@
%&V]XI2'E*5D_(V3WPY+&^WAh.qNeqH`-S)IRQn33']YjMO$0]M(#gR(`&[0ei;<#!nf1#7_MA<X5or+h.f.Fr%>k]iKtRuhLRS?=
%ofP=b:e8^"F>i%7Y$<ET;i!16LEfPD;R'%nZXXOFg`:,!;Pbu#>$R0^XWK4Gp<d)k#nF/:Xprj`pKd2[pLn`60*D6J:R>3IVWe4E
%J!HYf#+I*/.J,A0MWd6eSkR6b#Df.-*MH;-\C+(C>DjH,cLpc<_sbYs=,U%\m^KnNdZ<!cmOQ1g]YW3>s&f:9*4k29YW?2o(';;i
%5U*S;LbqV@$?lW2g<?uMm)t8k*^JqFRg_hsi2CKkPf67V>?!Ob^o,umh9+(%m=p,Sp9LfG*&^d^&H$_Y\cF(]"*N+O[RTVte;RNA
%aq;]rKTCj:8jp!_)\P:mU'CbmDm:bp#=pjX#Ud%G3p$du]n*B#>9-Yn7c:g9iRH@)/o5R&Ou:G;5FH<&1jFfFgKn-8G[1Rgh0s]!
%iAX$,hgf;Z3`sF):3@>#)6mE0cubg-=Sr7/3RNHTcPQga"R)IgSDbaLUY8]^Qi!p5V6urPpHo?nP^g)]>/er@T^=1`@)NPUOEU"6
%<>B8!af:b3FDW4#M,ep.!@T#O$!>_11O7hVJQBJ/f@fcoLDrNlha*-s@ae\.oQo.Ll(JGWerrILA:1aT869&26$tiO/EUn[Fa:[N
%>_&n_RuNFp&b(*IZ+2E@>3n1$c,"XWIUO(J2toAiT6HYe)>mtkiK4'ZcPBhD.U*jH%i>M*;H,F^l2:qT8Miu4dqn?'ZVFQrm0&PF
%T2S"S;)fHb84`A9A6]dc4T&_8#Deqhr6coA'`%K4DFKp_WaRR_!OP?_S20g.Kanic"N\12X:`9M:2UNeCJ:pD*ZVG&C6d#]-Iqrs
%+kM'Kmt-.k:;:0?T@4nc>/-a<:7fom_c;U*79tqD@8\duKWlH]qI!q><htjQW%0ZgGHOWm_V/7[=.XkPP=Q.TL<c[[]3.;-$V$hB
%UFW3j(7I&01,Tc+KOgB&Cu\L/)CP9]$ajHII)IS^qK[k4^eN@Nr,EXFiE<Pa>?!%,_'PTmiORsdkSB=Sn0rIODl;FF*A'l:TMrqq
%GQB(8VWq'`]pL/I?Ck^l6.f,[XoP1#2n-6*rLR=E3.S1SbE"mYERm`K$JJZ?7DBh>HP$$WfB7]fL0-NID5d*VZDNXn6P?GtRpj93
%-\Qh5c8d>(RX(Q'S_YtLD/tpNE<QWk)$cEa3\Au0GlsQc9kirn[1I<[-b>PnbS>=90U&7kTT8d[S%KN!p@3%e5CD]W_&nq-XEN)H
%=Y_J\ll`3k;1!Bt:3%<WZrpg@T_,lnd01<+(cJ]rVe-*3!a]>r;+WW.TqD\>66ZggM#ic;]&'@&ndFL6GnL7<SqrjHf\R8kb>UK^
%(`(s91RiJrHqu<,gunXaAt_Tc"@J-%<1(t1j_[P'O"a/CKm<mgX7'*X#5hERDg+/a]uGhS*53GdjCbbE!n($6muFQG78lL<4.)nR
%AX]5Te`e.lSHHaUPQ\XMaf@tP%j.XQ)$daT##>osk8<F7)VZj<?ETRa0]rVkC"@b1<f[B%9=5KP"Et("i);efhDs\UL#]6*-/rF0
%71-,fKc_V`I$$F8=DG@L*oulk366(<jgHJG/sKucW7470:DpP]Y)+7o9W%1-<(I1$K9e`c:r?F!/,'uRBsk'Kld-)HE(q"4U3qPu
%at,YaeTTNd6K7_!.X*>!9UPDO7J(7L=-d"P10U5rM;]IfT!m`T4(K%G\=4?e/.2NO9C\N_@^:7JMC:g]m^<"<gR-=M[!SG)DYiG@
%OhE(mD/L0BbQ.\*3aHD/kU(lN7&)]lI;/c%aL&5).t[mJ*<s;]bne!j?@BD0P/1^J0O2C/74cK#+':!M!P']lZciMSF7dEOAr6!b
%b8.[gLEnh9NVk/mae7=crc"%%^m@fA3g_tLok-n+oNH`0rt4!LT]ONWenUP2Mi"*BX_"9eWT,O]?28H*A7G6WmBiW*XU<9k90T8b
%UW>c('3XXm[PTMFP3RN7CA@R4TddA0(k3%W!&_?j9W$^a()[n"@BoD5UP+F$]N@mE*;k/Pq:7P.Q`c7!pSd!aX*E-iHWS4%Whs%H
%1!12>jr="@S=:BXj;rlZYa"M(Z-[$8]XStUX!`;^k1qZo]8F>[#\J->hH0\e@uB3f'_rWd@ES!bX"&VtF[qp8R*jK^[;]PWQ8p%k
%WKTC:Yd9WA:kVK2/"5oR2eJWHf,M,naOm5an*7C92nna@(PH5!2I;.71I(>GCHBao?/@l)fg2EDJXfNd(q0hKN(K6:P\FXP&$]W(
%1,#a=IO=4P\tRS?/FWdEUas4upX@>[@S-XSaP@]0$`9gL6^oafd:QTlY1(4p9%GOa`:jZMF#j2<=sON>TjWmJ1pjGdqXkfGaK@bs
%BR?0Jb/2q%ON/SN=qHA0C@Qo1%>nG02#3#idfk.G\`"gT9n%;G>U'nYiMi9&c%N(kb<&eYGDNJc#]O3Pjs_oUmEF;HF#M`UDM[_O
%Amd8/cHU-KESGo?i#gd"rL@c6Sn=if)"N5Vd\hoN+3u(hl:88taXD#`&0<kH5t@>XjYYl1G:QQ_7bPJ+ca3JG**:t%`WW>F1!1HZ
%$J_osanYi>_)j+`?Vbt/76.5(g>sBc?!<4VZWdj"orVS>3/\c#CD$CBkI>_RR%(.*TBjoZSCQ]daFE%R7<M5B,9\ar"Oj72]O?is
%*:#:m]"^o@Dn\CdJ)),_:?A@:W:VGs_`TsXTF*UlM(89UXfc_1$cUj14,uRY`;F1<icG[283@_6FE/$nFr3>_A^WAi@N9#Dbqms7
%;M]tu.4<Z-dkE*5iuGO<D?:Q+>`7>k(E_L1X8>d?H,(R+GJsGE6cTd&jIfIf4:*0<NrbBq0h]L?JHWR.U>RhC'@PC[ANl@Gf/8IG
%C3,#()DZLuOLWe23DR\]J)4QaF`[EAK@E>9Y]?ko-bdLBs%2H[4,;p=Ji[)5]tRJDi-g5dJaniG1plKWf*rh]H$q0$+t$AqR]`jX
%:m1;Php(\`Y[XkSm\n@-D(;K(KAf//2Aa(spQ'LNK[ecE,FnkaX%ap[*%uGaIr'.8f"6CF@787G!<LY8#i?,MYn@_4PM[&!YMZI+
%.[4FHdcL+8duCLR8])[FV^][h0X-$"qiDfH4g!+e9D;@Wb/\l'5_&&cfT"mKgEo;dlOKg:IZp(oCt(:Xb]t2q$-("?93^7hX\/AO
%30TtB\>h-\7ce`XD#@=K;H43^bu'DIjFn0IA>AD$8*UQ>C+/"+)Gd>5NE%L`@=e(Q53St7&.rn7&M-^R7h'aQS-P)M_PeHRI4<@;
%/!$X_\p)%Ymh*QSMFiaRBrs^[Ql6aFF$.t$S;4"o//N!*E>7=I56Y.1N*&>QTD:4SDN*$[[p]d3b[S3`U,L5kf&XG;dlY;#+5V1A
%:GDLOR?QCPLc[;.b<s6)LltJ<)D:2lAoh4Z`l\k(X]@(gnRpKU..OGL'X8Deq7=E#YL<*))"GFZ"+GlT*ZE+Dnbg$R]rN\)]%a('
%"&Yc6NKp?NFb?k&>'R%Q9nHb4SpE=h5MnE20AQ`a9tlSbB.b_@;UA-0;sKfiB$!)]c"&Qhh;6Q5q?k^!PB!If4EnT?8n/uBG"9RA
%0]un7PWpbSo/*Iq`o>D,>W`^VOVro/8pN=3F#WGo0$@G/;XI,>5%[%*ig<4%epDq:^+)#i!MIY]:T:h[$Zr"(``0X[4Q+^\1TEnu
%bt(I,LQ+eaTYSVSqX/5cXjj^,NoHX[%6f6%#S+6iPN(Eqq\e99':jDL/Q:Zu?[!?Yp3\^mRO,_3&QA)f=r%X'39G*r#,T5&`UsC$
%M];95IF^C5(!$_6,!i$$Hf'j_mrb,YdQPb/ilfDmk1>Er*>OMuU1qs9l<8.%_:$/Y/4e1&@)rJ@$VbXCUoH45Z-G%J:,#n4U_dV"
%12*ohV0"/(I`ja`0,:=g[3)*F#sW"f[,f"^Ui34]EAUu]9tpbs'i>K"G3_3)Q$b)?#_hpZ!G<dX>L,9q*7[:6_tYX1CEHLL/btLP
%@O<l[C*D"g0X0lXgN8M`OWbcbH5(;6N.r8DJr[%kSii]fMtVhMoC[h:N6egFMdYQ;en3cpJ/TMf&QJ=?1W7]ThiHOH%f)Q.>)_c6
%4?/dSTt,]Qj+j$UNoK`>o-6.!5m;S8G0^BW4o-2elh3;=F"\d;WF+a9TdN<2YO1/\ap#EHbGXeV1<4?oG>A69GstLb"c5h<.j(&o
%_r48;0jeO,?brT$<8Dqh/.oW+-1tlAN9U*?UD-StNJW^BSUX0<$((?tj`8aZ4h(Ot/G?ec%-bEb^)q/h)Gph(K>d4qoq'I+A-Ulf
%YS\A<VF;M^i!Sm;iUl1PM3r^t?h;e<h'U&hnhNX<o*ek(Q&(%3Ns@.qCAG1*gH:f(`U2E-H*'<kg[*%A)_*cCOre"-;](jSc^1)2
%)4hO'9(;18[9T(PZqC7VQTDf'2RtR.h'il34GAEJI-.J$]];G8YgrWfoQ.dpE9S9;B_$<45P$[bA/O,QaAs7QT7,PS;*kt[r'aKP
%L+%$O9B6r6]ZS<"1Y9XU"NF7]jbH]09`A0qR<iaYjB#XVF\ICq4fR@?8*rA!g=G#:jf0t-T@pF[ahDd8&ne^X*<)?//9\bdlcpBI
%@uC]i@?C.CXkYrb>A9[EM'0&JnLurheh+^Ui,e%agZ_jm^eumK(9RbmYlgibOrXrh$qZ'l:[jmBkG+m5ml0n3Xo;GFM9d?(<XoYs
%/(U,l4,ehW/!-al:LRHQC,U8LUUm[L6ZJbD'a^4)M!6rZ?OIjES`!Htrt5f<hfX9'HNe65ZRKGd-Rr#tL;eR@U,A8;Grg`BFG;<X
%bFd]ONAf>,@c%42,"8_)ja;-2ZDgm^#i7CFik(J/+\X'f-Qg<.Yq+na;CuFj?.S(Z_Ju"j9&.h,,eIkiW&C0Mf"6_30WO#IQ9^Yu
%CsT97f2qf)<qsL!:VP#LO5oO47KR]':KNH"FF?2oI/HQ("ip7'],*@6QSp'1L*d"7^&+,_E7'\jCGI>HHgBLl[@#U+Y"QZ_<g0^s
%s-YBb+*KP6,cl-0<brVh^[j-\jXSs!9S;;$,"u!2_O>/1kt5M>^f0J*0<&H<_LuORN`B[+MR!/;f^]0_oid@B"&k=Za7sG3o]lBI
%0N`IDLG<hrFV1k)F[-Q,k15-S<f0F&WfahpmCoP*j1_SA9U26D=qOZ")*Z8;Cr'm&>u?en>7]aRNl0PmOBOjHW4Cm)r3l/f,gYG/
%+!WNa9uo#;U+`_B-S=cmY725!70:$+82^nPY?]l-h(7dmO1&Yui\-[!cAl5?;k1Bl#a@Ae>>B/Uj4=O":NGOT'W6`tihpl3#-[fm
%+0`E;JX`mVidl'Q*7K+L_X`TQ9=LsKP7o,UHB7Qi-b*5?YS23C2g3&@9gXj+"Q[YNJ'*W^$J@9seIPOU7J+A0k'WY!%YYC3/ju<j
%(^`]ETCu;>k=[TKib8ah&I)I;*Zd=(7)aNDUG\gchU'kGo2E?YG;_a;4ncX<aFPP>gs(%$_=C:?9AP4@>22qb'*NQ6r^2U%+qQer
%Ck?VuqpIWth;lc#IjX(;YU\7jbt#?DToB]Uqj9`?_[_pdW`*=kW?5(5[46q0KM%Mgg2uui[4XnT8*3gdSgk;po72)..<.'2l'YeO
%]KLp8cWuqX4<5^&_pN!eoFBihPhTW)lb]tYFN*BG\aDXHZ/:(T\a%!Rj@1W),'(Cb^JN-*dLuf)e)]rU]132Yl?M$V"-O:AW>L@=
%E`18cPD'^t<2G$<WE_6]><B[i7-(YP]%FmXaZRTA4$KA'R@[.h0/*=FJ&<[69#iaFnEf58C_30jjE9Au>)>HhN)m[<@JZ^Yn>Vj_
%=hLp:]%rh'IsZYUKajJWiY]@XKN@$uc=cLgOb[2.G$""@4W\P.AV<;G978Al9Y9/eFY\4)jYZDgL*>ON_'>dWl2j+bAR%Sj.c2q"
%2\4(QEtf^HA`]l$#["S0SJV\[I*a];@g2G\A_ak>lsYZU]>K']*li0gFiZf>8R#M!nSib7b7=>NfFf\?%rBjAa#YZ.:GP+.ih82P
%(+0#`2K*-9'Rhnpj[54NoA9.^2E^%gN(nIG!u?6-9YmBEU\iIncIM"AfRN,&rVnDZpb%cplfQ\b^)J@e5M_N!5p,5SY.W,J>`2#l
%GY-)'QbN!Ql/A3R"^q`Rr9i?E-9hsq=@&A7NS[R-5!9>HP!/IjbN]lVZJO\\^!#qlH&+[Ag#SL]'DU)94_le`?8KG-HqbT19eQH)
%;U@e&qF`=8/`HZ?W@T`q(]#Q&T79^J+S[G?n1*eo<r_-\9Z3ur`9i]cco:Okf@Rceo:Oaos3:$4kN?d`olko`p?_p1oj<1F&&8#1
%J,J[urpSbCn^%7%+9))Fs6"SJ^]"-"dDGAOl2%HAJ,&'mrqT?>puCg,rqV'BiVrtqO4FhjorGk'c[YiTJ+imB]Y/3V~>
%AI9_PrivateDataEnd
