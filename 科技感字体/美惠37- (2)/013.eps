%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: plata_1.eps
%%Creator: Adobe Illustrator(R) 19.1
%%For: user
%%CreationDate: 5/12/2016
%%BoundingBox: 0 0 1200 1200
%%HiResBoundingBox: 0 0 1200 1200
%%CropBox: 0 0 1200 1200
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 19.1.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 19.1.0 x29 R agm 4.7731 ct 5.3840%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=100 RasterRes=1 GradRes=1 Text=1 Stroke=0 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c067 79.157747, 2015/03/30-23:40:42        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
            xmlns:photoshop="http://ns.adobe.com/photoshop/1.0/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">abstract vector background with high tech circuit board Vector Illustration</rdf:li>
            </rdf:Alt>
         </dc:title>
         <dc:creator>
            <rdf:Seq>
               <rdf:li>Iryna</rdf:li>
            </rdf:Seq>
         </dc:creator>
         <dc:description>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">abstract vector background with high tech circuit board Vector Illustration</rdf:li>
            </rdf:Alt>
         </dc:description>
         <dc:subject>
            <rdf:Bag>
               <rdf:li>circuit</rdf:li>
               <rdf:li>vector</rdf:li>
               <rdf:li>backgrounds</rdf:li>
               <rdf:li>tech</rdf:li>
               <rdf:li>processor</rdf:li>
               <rdf:li>abstract</rdf:li>
               <rdf:li>abstraction</rdf:li>
               <rdf:li>chip</rdf:li>
               <rdf:li>card</rdf:li>
               <rdf:li>design</rdf:li>
               <rdf:li>electrical equipment</rdf:li>
               <rdf:li>integrated</rdf:li>
               <rdf:li>technical</rdf:li>
               <rdf:li>computer part</rdf:li>
               <rdf:li>hardware</rdf:li>
               <rdf:li>engineering</rdf:li>
               <rdf:li>line</rdf:li>
               <rdf:li>cyberspace</rdf:li>
               <rdf:li>computer equipment</rdf:li>
               <rdf:li>graphic</rdf:li>
               <rdf:li>electronics industry</rdf:li>
               <rdf:li>digital</rdf:li>
               <rdf:li>technology</rdf:li>
               <rdf:li>computer</rdf:li>
               <rdf:li>circuit board</rdf:li>
               <rdf:li>illustration</rdf:li>
               <rdf:li>creativity</rdf:li>
               <rdf:li>connection</rdf:li>
               <rdf:li>computing</rdf:li>
               <rdf:li>backdrop</rdf:li>
               <rdf:li>science</rdf:li>
               <rdf:li>cover</rdf:li>
               <rdf:li>internal</rdf:li>
               <rdf:li>connect</rdf:li>
               <rdf:li>art</rdf:li>
               <rdf:li>industry</rdf:li>
               <rdf:li>conceptual</rdf:li>
               <rdf:li>construction</rdf:li>
               <rdf:li>textured</rdf:li>
               <rdf:li>computer chip</rdf:li>
               <rdf:li>mother board</rdf:li>
               <rdf:li>motherboard</rdf:li>
               <rdf:li>black</rdf:li>
               <rdf:li>blue</rdf:li>
            </rdf:Bag>
         </dc:subject>
         <xmp:MetadataDate>2016-05-12T13:07:55+03:00</xmp:MetadataDate>
         <xmp:ModifyDate>2016-05-12T13:07:55+03:00</xmp:ModifyDate>
         <xmp:CreateDate>2016-05-12T13:07:55+03:00</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CC 2015 (Windows)</xmp:CreatorTool>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEBLAEsAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABABLAAAAAEA&#xA;AQEsAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A5n+V/mfQfJ2raTe3un6L&#xA;qjWEkrTXDXKiZllWRapWI/EnqCnIkbdj8QzzCPh8Povvt0Ay5PzBy/vuCvo4duXv+OwBvrWydeaf&#xA;Nr655kvNZ0pZLW31WWtpAskkkb+kio62kRe3jSCPi0k9w4Clq8dsy8RlGIAJP6f6osekdZF1Oqhj&#xA;yTkTCMQNyKAq+syIyJnP+HHHfv3ST/E5/wCr7bf8jP8Ar9kvzH9Mfj4tf8n/AO1S+X/HVUa3eEAj&#xA;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&#xA;irsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdi&#xA;rsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdir&#xA;sVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirs&#xA;VdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsV&#xA;dirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVd&#xA;irsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdi&#xA;rsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdir&#xA;sVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirs&#xA;VdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsV&#xA;dirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdiqcxeXhL5Xn12O8iZ7a4WCaxAPqqrj4ZG8A&#xA;WNBtTrvXbLxgvGZ3yPJwJa7h1IwmJ9UbEunu/HyrdJsoc92KuxV2KuxV2KuxV2KuxV2KuxV2KuxV&#xA;2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Kp35J4t5v0aNlDJPeQwOCK/DM4jJHuA1R75&#xA;kaT+9j7w6/tb/FchHSEj8hatYXTX1r5ruXRYzParcmOMcUVm1G22UdlHqGgyUJcQyHvF/wCyi15s&#xA;Yxy08RvU+Hfn/dT+3Zj2YrtHYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FWQWVtp+k&#xA;6Ymp6hEl3e3iE6XYPVownIo1xOFI2qrCNK7nc/CPiyYRjCPFLcnkP0n9DrMuSefIceMmMIn1y63z&#xA;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</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:InstanceID>xmp.iid:b8f81d79-7f76-984c-9bac-667d131db3ac</xmpMM:InstanceID>
         <xmpMM:DocumentID>xmp.did:b8f81d79-7f76-984c-9bac-667d131db3ac</xmpMM:DocumentID>
         <xmpMM:OriginalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</xmpMM:OriginalDocumentID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:e4224457-45fe-4a8c-b97b-785ff8072988</stRef:instanceID>
            <stRef:documentID>xmp.did:F1F2B7FBCDBDE511B2BBC0EB12123494</stRef:documentID>
            <stRef:originalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F07763D45588E411BF89F345A28D8C9F</stEvt:instanceID>
                  <stEvt:when>2014-12-20T17:10:37+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:29845C695A88E411BF89F345A28D8C9F</stEvt:instanceID>
                  <stEvt:when>2014-12-20T17:19:01+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:2E845C695A88E411BF89F345A28D8C9F</stEvt:instanceID>
                  <stEvt:when>2014-12-20T17:33:07+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:4365C60ACE89E4119A65C8F5B8A1FEA0</stEvt:instanceID>
                  <stEvt:when>2014-12-22T13:34:24+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:0B5A99264D6BE51194FFADFDE0B012D7</stEvt:instanceID>
                  <stEvt:when>2015-10-05T13:38+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F1F2B7FBCDBDE511B2BBC0EB12123494</stEvt:instanceID>
                  <stEvt:when>2016-01-18T12:26:49+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:6506640DF2BDE5119314DC75DE111CE2</stEvt:instanceID>
                  <stEvt:when>2016-01-18T16:45+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Bridge CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/metadata</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:62653C0AF8BDE5119314DC75DE111CE2</stEvt:instanceID>
                  <stEvt:when>2016-01-18T17:27:52+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Bridge CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/metadata</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:b8f81d79-7f76-984c-9bac-667d131db3ac</stEvt:instanceID>
                  <stEvt:when>2016-05-12T13:07:55+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2015 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Print</illustrator:StartupProfile>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>1200.000000</stDim:w>
            <stDim:h>1200.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 10.01</pdf:Producer>
         <photoshop:Headline>abstract vector background with high tech circuit board</photoshop:Headline>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -1200 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 1200 li
1200 1200 li
1200 0 li
cp
clp
1200 1200 mo
0 1200 li
0 0 li
1200 0 li
1200 1200 li
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
0 0 0 rgb
f
gsave
1200 1200 mo
0 1200 li
0 0 li
1200 0 li
1200 1200 li
cp
clp
2.34033 1198.21 mo
1.18213 1076.45 li
47.5708 1030.63 li
46.4214 894.088 li
68.7368 870.568 li
88.0083 870.568 li
97.4351 879.081 li
95.1187 881.648 li
86.6763 874.025 li
70.2222 874.025 li
49.8892 895.456 li
51.0425 1032.07 li
4.65283 1077.88 li
5.79736 1198.17 li
2.34033 1198.21 li
cp
0 .862745 1 rgb
f
25.6802 1198.19 mo
22.2222 1198.19 li
22.2222 1094.57 li
44.6704 1073.6 li
47.0317 1076.13 li
25.6802 1096.07 li
25.6802 1198.19 li
cp
f
55.5083 1065.14 mo
52.9048 1062.87 li
65.1548 1048.86 li
65.1548 955.443 li
108.805 910.908 li
183.583 910.908 li
183.583 914.365 li
110.256 914.365 li
68.6138 956.856 li
68.6138 1050.16 li
55.5083 1065.14 li
cp
f
38.9341 1198.19 mo
35.4751 1198.19 li
35.4751 1132.07 li
83.311 1083.66 li
83.311 1027.73 li
102.037 1009.87 li
102.037 975.602 li
136.477 941.161 li
153.329 941.161 li
153.329 944.62 li
137.909 944.62 li
105.495 977.033 li
105.495 1011.35 li
86.7681 1029.21 li
86.7681 1085.08 li
38.9341 1133.49 li
38.9341 1198.19 li
cp
f
31.4438 1198.19 mo
27.9868 1198.19 li
27.9868 1110.15 li
65.6821 1073.62 li
68.0903 1076.11 li
31.4438 1111.62 li
31.4438 1198.19 li
cp
f
44.4106 1198.19 mo
40.9536 1198.19 li
40.9536 1135.82 li
89.6489 1085.97 li
89.6489 1031.21 li
106.938 1013.92 li
106.938 983.857 li
121.013 972.283 li
124.512 972.283 li
124.512 975.74 li
122.252 975.74 li
110.395 985.49 li
110.395 1015.36 li
93.106 1032.64 li
93.106 1087.38 li
44.4106 1137.23 li
44.4106 1198.19 li
cp
f
51.3247 1198.19 mo
47.8667 1198.19 li
47.8667 1137.54 li
95.7026 1089.28 li
95.9917 1032.94 li
113.563 1015.37 li
113.563 991.926 li
121.879 985.106 li
142.856 985.106 li
147.566 980.748 li
147.566 963.813 li
154.606 956.435 li
170.906 956.435 li
170.906 959.893 li
156.085 959.893 li
151.024 965.197 li
151.024 982.26 li
144.21 988.565 li
123.116 988.565 li
117.022 993.559 li
117.022 1016.8 li
99.4419 1034.38 li
99.1538 1090.71 li
51.3247 1138.97 li
51.3247 1198.19 li
cp
f
55.9351 1198.24 mo
52.4771 1198.14 li
54.229 1139.82 li
102.039 1092.01 li
102.039 1036.39 li
127.338 1011.68 li
129.756 1014.15 li
105.496 1037.84 li
105.496 1093.45 li
57.6421 1141.3 li
55.9351 1198.24 li
cp
f
62.563 1198.19 mo
59.104 1198.19 li
59.104 1142.73 li
107.226 1094.03 li
107.226 1042.13 li
130.748 1020.12 li
140.44 1020.12 li
147.277 1012.27 li
147.277 993.408 li
157.939 983.9 li
157.939 981.79 li
161.397 981.79 li
161.397 985.45 li
150.735 994.958 li
150.735 1013.56 li
142.012 1023.57 li
132.112 1023.57 li
110.684 1043.63 li
110.684 1095.46 li
62.563 1144.15 li
62.563 1198.19 li
cp
f
68.6147 1198.19 mo
65.1567 1198.19 li
65.1567 1146.18 li
113.565 1097.77 li
113.565 1055 li
123.448 1047.28 li
125.579 1050 li
117.024 1056.69 li
117.024 1099.21 li
68.6147 1147.62 li
68.6147 1198.19 li
cp
f
73.2241 1198.19 mo
69.7661 1198.19 li
69.7661 1149.06 li
108.243 1110.88 li
136.426 1110.88 li
146.702 1099.55 li
146.702 1024.53 li
157.939 1014.45 li
157.939 1012.91 li
161.397 1012.91 li
161.397 1015.99 li
150.159 1026.07 li
150.159 1100.89 li
137.96 1114.34 li
109.666 1114.34 li
73.2241 1150.5 li
73.2241 1198.19 li
cp
f
80.1392 1198.19 mo
76.6821 1198.19 li
76.6821 1152.8 li
111.421 1118.95 li
141.937 1118.95 li
155.634 1104.85 li
155.634 1087.94 li
180.414 1065.17 li
180.414 984.182 li
185.897 979.344 li
188.186 981.938 li
183.873 985.741 li
183.873 1066.69 li
159.092 1089.45 li
159.092 1106.25 li
143.399 1122.41 li
112.827 1122.41 li
80.1392 1154.26 li
80.1392 1198.19 li
cp
f
139.343 1199.32 mo
127.757 1185.94 li
110.25 1185.94 li
110.25 1182.49 li
129.338 1182.49 li
141.956 1197.06 li
139.343 1199.32 li
cp
f
166.294 1199.48 mo
158.513 1192.49 li
160.823 1189.91 li
168.602 1196.9 li
166.294 1199.48 li
cp
f
168.67 1106.77 mo
166.225 1104.33 li
182.362 1088.19 li
184.806 1090.64 li
168.67 1106.77 li
cp
f
188.772 1134.51 mo
185.313 1134.51 li
185.313 1118.52 li
188.772 1118.52 li
188.772 1134.51 li
cp
f
240.637 1103.6 mo
237.18 1103.6 li
237.18 1097.98 li
240.637 1097.98 li
240.637 1103.6 li
cp
f
134.682 1089.41 mo
131.224 1089.41 li
131.224 1079.27 li
134.682 1079.27 li
134.682 1089.41 li
cp
f
208.077 1198.19 mo
204.618 1198.19 li
204.618 981.299 li
207.211 977.12 li
207.211 931.348 li
215.588 925.316 li
240.651 925.316 li
247.205 918.894 li
249.626 921.365 li
242.063 928.773 li
216.703 928.773 li
210.669 933.116 li
210.669 978.107 li
208.077 982.285 li
208.077 1198.19 li
cp
f
232.817 1199.44 mo
214.416 1181.93 li
214.416 1060.19 li
223.347 1053.27 li
223.347 952.113 li
226.805 952.113 li
226.805 1054.96 li
217.873 1061.88 li
217.873 1180.45 li
235.202 1196.94 li
232.817 1199.44 li
cp
f
326.579 1181.12 mo
272.477 1127.23 li
272.477 1063.38 li
258.213 1046.09 li
258.213 995.019 li
267.712 986.096 li
266.848 925.908 li
276.441 916.315 li
278.885 918.758 li
270.326 927.318 li
271.19 987.572 li
261.671 996.516 li
261.671 1044.85 li
275.935 1062.14 li
275.935 1125.79 li
329.022 1178.67 li
326.579 1181.12 li
cp
f
348.168 1177.64 mo
307.336 1135.38 li
304.649 1124.39 li
298.411 1119.34 li
298.411 989.565 li
283.714 974.723 li
283.714 951.609 li
287.172 951.609 li
287.172 973.303 li
301.868 988.143 li
301.868 1117.69 li
307.731 1122.44 li
310.473 1133.64 li
350.655 1175.23 li
348.168 1177.64 li
cp
f
363.674 1151.8 mo
360.217 1151.8 li
360.217 1094.6 li
311.809 1046.19 li
311.809 952.113 li
315.266 952.113 li
315.266 1044.76 li
363.674 1093.17 li
363.674 1151.8 li
cp
f
382.494 1181.23 mo
380.298 1178.56 li
400.226 1162.17 li
493.683 1162.17 li
508.461 1178.74 li
505.881 1181.04 li
492.133 1165.63 li
401.465 1165.63 li
382.494 1181.23 li
cp
f
446.012 1198.19 mo
442.555 1198.19 li
442.555 1191.2 li
446.012 1191.2 li
446.012 1198.19 li
cp
f
481.239 1198.19 mo
477.78 1198.19 li
477.78 1192.09 li
474.18 1189.51 li
476.196 1186.7 li
481.239 1190.32 li
481.239 1198.19 li
cp
f
507.792 1199.52 mo
495.69 1189.43 li
497.908 1186.78 li
510.008 1196.86 li
507.792 1199.52 li
cp
f
545.246 1199.37 mo
535.266 1188.79 li
535.266 1137.19 li
527.151 1128.24 li
423.471 1128.24 li
340.767 1045.76 li
340.767 929.844 li
330.827 918.174 li
330.827 907.789 li
323.1 898.519 li
241.641 898.519 li
231.774 908.385 li
229.329 905.94 li
240.209 895.06 li
324.721 895.06 li
334.284 906.539 li
334.284 916.902 li
344.225 928.572 li
344.225 1044.32 li
424.9 1124.78 li
528.684 1124.78 li
538.723 1135.86 li
538.723 1187.42 li
547.761 1197 li
545.246 1199.37 li
cp
f
378.37 1123.42 mo
374.913 1123.42 li
374.913 1094.61 li
320.454 1041.45 li
320.454 962.656 li
331.69 950.914 li
331.69 936.002 li
316.239 921.385 li
318.616 918.873 li
335.149 934.512 li
335.149 952.303 li
323.911 964.045 li
323.911 1039.99 li
378.37 1093.15 li
378.37 1123.42 li
cp
f
555.196 1199.39 mo
541.317 1184.91 li
541.317 1135.14 li
531 1122.84 li
432.547 1122.84 li
345.305 1035.96 li
345.305 920.129 li
348.764 920.129 li
348.764 1034.53 li
433.976 1119.38 li
532.616 1119.38 li
544.774 1133.88 li
544.774 1183.52 li
557.693 1196.99 li
555.196 1199.39 li
cp
f
622.394 1194.88 mo
560.886 1194.88 li
547.368 1180.58 li
547.368 1130.47 li
532.389 1115.49 li
440.318 1115.49 li
364.539 1038.4 li
364.539 899.758 li
351.758 889.036 li
353.981 886.389 li
367.997 898.144 li
367.997 1036.99 li
441.766 1112.03 li
533.821 1112.03 li
550.826 1129.04 li
550.826 1179.2 li
562.375 1191.42 li
621.023 1191.42 li
630.035 1182.96 li
632.402 1185.47 li
622.394 1194.88 li
cp
f
580.649 1178.16 mo
569.426 1178.16 li
561.199 1167.52 li
561.199 1137.24 li
534.12 1110.3 li
451.02 1110.3 li
382.26 1041.14 li
382.26 887.713 li
385.718 887.713 li
385.718 1039.71 li
452.46 1106.85 li
535.547 1106.85 li
564.656 1135.81 li
564.656 1166.33 li
571.125 1174.71 li
580.649 1174.71 li
580.649 1178.16 li
cp
f
750.941 1198.19 mo
747.482 1198.19 li
747.482 1172.54 li
741.506 1165.63 li
617.978 1165.63 li
553.577 1102.53 li
460.21 1102.53 li
406.897 1049.43 li
406.897 942.165 li
430.758 918.893 li
433.172 921.366 li
410.355 943.62 li
410.355 1048 li
461.639 1099.07 li
554.989 1099.07 li
619.389 1162.17 li
743.088 1162.17 li
750.941 1171.25 li
750.941 1198.19 li
cp
f
758.289 1198.19 mo
754.83 1198.19 li
754.83 1172.5 li
744.492 1159.58 li
624.035 1159.58 li
558.338 1096.04 li
471.452 1096.04 li
427.643 1052.68 li
427.643 955.41 li
434.059 947.164 li
436.787 949.285 li
431.1 956.598 li
431.1 1051.24 li
472.871 1092.58 li
559.737 1092.58 li
625.434 1156.12 li
746.154 1156.12 li
758.289 1171.29 li
758.289 1198.19 li
cp
f
602.26 1115.92 mo
595.505 1115.92 li
563.954 1085.24 li
476.649 1085.24 li
466.975 1075.89 li
466.975 1030.21 li
450.01 1013.64 li
450.01 959.475 li
461.357 950.756 li
461.357 948.223 li
464.814 948.223 li
464.814 952.463 li
453.468 961.176 li
453.468 1012.19 li
470.433 1028.75 li
470.433 1074.42 li
478.047 1081.78 li
565.359 1081.78 li
596.912 1112.47 li
602.26 1112.47 li
602.26 1115.92 li
cp
f
646.924 1146.32 mo
616.836 1146.32 li
560.647 1092.15 li
473.327 1092.15 li
442.555 1061.76 li
442.555 957.715 li
451.564 949.068 li
451.851 897.512 li
461.286 888.074 li
463.729 890.519 li
455.301 898.95 li
455.015 950.551 li
446.012 959.19 li
446.012 1060.31 li
474.745 1088.69 li
562.042 1088.69 li
618.23 1142.87 li
646.924 1142.87 li
646.924 1146.32 li
cp
f
355.621 1179.02 mo
355.621 1180.93 354.075 1182.48 352.163 1182.48 cv
350.252 1182.48 348.705 1180.93 348.705 1179.02 cv
348.705 1177.11 350.252 1175.56 352.163 1175.56 cv
354.075 1175.56 355.621 1177.11 355.621 1179.02 cv
346.618 1173.36 mo
345.391 1174.59 346.112 1178.14 346.787 1180.13 cv
347.983 1183.67 349.813 1186.89 353.551 1186.89 cv
357.286 1186.89 360.315 1183.87 360.315 1180.13 cv
360.315 1176.39 357.196 1174.18 353.551 1173.36 cv
351.127 1172.82 347.841 1172.14 346.618 1173.36 cv
f
335.739 1183.34 mo
335.739 1185.25 334.193 1186.79 332.282 1186.79 cv
330.37 1186.79 328.824 1185.25 328.824 1183.34 cv
328.824 1181.43 330.37 1179.88 332.282 1179.88 cv
334.193 1179.88 335.739 1181.43 335.739 1183.34 cv
326.736 1177.68 mo
325.509 1178.91 326.231 1182.46 326.906 1184.45 cv
328.101 1187.99 329.931 1191.21 333.669 1191.21 cv
337.404 1191.21 340.433 1188.19 340.433 1184.45 cv
340.433 1180.71 337.315 1178.5 333.669 1177.68 cv
331.245 1177.14 327.96 1176.46 326.736 1177.68 cv
f
515.868 1184.2 mo
515.868 1186.12 514.319 1187.66 512.411 1187.66 cv
510.5 1187.66 508.953 1186.12 508.953 1184.2 cv
508.953 1182.29 510.5 1180.75 512.411 1180.75 cv
514.319 1180.75 515.868 1182.29 515.868 1184.2 cv
506.864 1178.55 mo
505.639 1179.77 506.36 1183.33 507.034 1185.32 cv
508.229 1188.85 510.061 1192.08 513.796 1192.08 cv
517.534 1192.08 520.561 1189.05 520.561 1185.32 cv
520.561 1181.58 517.444 1179.37 513.796 1178.55 cv
511.373 1178.01 508.088 1177.33 506.864 1178.55 cv
f
369.317 1156.42 mo
368.932 1158.29 367.102 1159.49 365.231 1159.11 cv
363.361 1158.72 362.159 1156.89 362.545 1155.02 cv
362.932 1153.15 364.762 1151.95 366.633 1152.34 cv
368.502 1152.72 369.704 1154.55 369.317 1156.42 cv
361.645 1149.06 mo
360.197 1150.01 360.186 1153.64 360.44 1155.72 cv
360.896 1159.43 362.036 1162.96 365.694 1163.71 cv
369.353 1164.47 372.932 1162.12 373.69 1158.46 cv
374.447 1154.8 371.84 1152.01 368.436 1150.47 cv
366.17 1149.44 363.09 1148.11 361.645 1149.06 cv
f
379.71 1131.39 mo
378.383 1132.76 376.196 1132.8 374.82 1131.47 cv
373.446 1130.14 373.407 1127.96 374.735 1126.58 cv
376.061 1125.21 378.25 1125.17 379.624 1126.5 cv
380.996 1127.82 381.035 1130.01 379.71 1131.39 cv
377.159 1121.06 mo
375.429 1121.1 373.481 1124.15 372.58 1126.05 cv
370.984 1129.43 370.061 1133.02 372.748 1135.62 cv
375.436 1138.21 379.717 1138.13 382.315 1135.45 cv
384.911 1132.76 384.202 1129 382.147 1125.88 cv
380.783 1123.81 378.891 1121.03 377.159 1121.06 cv
f
71.1743 1074.93 mo
69.3071 1074.53 68.1138 1072.7 68.5103 1070.83 cv
68.9087 1068.96 70.7461 1067.77 72.6128 1068.17 cv
74.48 1068.56 75.6724 1070.4 75.2739 1072.27 cv
74.8794 1074.14 73.0391 1075.33 71.1743 1074.93 cv
72.0737 1077.37 mo
75.8071 1077.32 79.3188 1075.81 80.0981 1072.16 cv
80.8755 1068.51 78.5425 1064.91 74.8892 1064.13 cv
71.2349 1063.36 68.772 1066.13 66.8657 1069.34 cv
65.7915 1071.15 64.3472 1074.47 65.2915 1075.92 cv
66.2339 1077.38 69.5874 1077.4 72.0737 1077.37 cv
f
50.0435 1073.07 mo
48.1353 1072.99 46.6528 1071.38 46.731 1069.47 cv
46.8091 1067.57 48.4185 1066.08 50.3286 1066.16 cv
52.2349 1066.24 53.7183 1067.85 53.6392 1069.76 cv
53.561 1071.67 51.9507 1073.15 50.0435 1073.07 cv
51.3384 1075.32 mo
55.0151 1074.65 58.2212 1072.57 58.3765 1068.84 cv
58.5278 1065.11 55.6274 1061.96 51.897 1061.8 cv
48.1626 1061.65 46.1997 1064.8 44.8579 1068.28 cv
44.103 1070.24 43.2388 1073.76 44.4106 1075.03 cv
45.5825 1076.31 48.8931 1075.77 51.3384 1075.32 cv
f
656.014 1142.4 mo
657.363 1143.75 657.363 1145.94 656.014 1147.29 cv
654.662 1148.64 652.473 1148.64 651.123 1147.29 cv
649.771 1145.94 649.771 1143.75 651.123 1142.4 cv
652.473 1141.05 654.662 1141.05 656.014 1142.4 cv
645.646 1144.77 mo
645.646 1146.5 648.668 1148.51 650.551 1149.44 cv
653.898 1151.09 657.475 1152.08 660.119 1149.44 cv
662.758 1146.79 662.758 1142.51 660.115 1139.87 cv
657.475 1137.23 653.707 1137.87 650.551 1139.87 cv
648.453 1141.2 645.646 1143.04 645.646 1144.77 cv
f
133.809 971.34 mo
135.159 972.691 135.159 974.881 133.809 976.231 cv
132.457 977.58 130.269 977.58 128.919 976.231 cv
127.568 974.881 127.568 972.691 128.919 971.34 cv
130.269 969.991 132.457 969.991 133.809 971.34 cv
123.443 973.711 mo
123.443 975.441 126.464 977.443 128.346 978.373 cv
131.695 980.031 135.271 981.018 137.914 978.373 cv
140.554 975.731 140.554 971.449 137.912 968.809 cv
135.271 966.165 131.502 966.807 128.346 968.809 cv
126.249 970.137 123.443 971.979 123.443 973.711 cv
f
162.377 940.781 mo
163.726 942.133 163.726 944.322 162.377 945.672 cv
161.025 947.021 158.837 947.021 157.487 945.672 cv
156.136 944.322 156.136 942.133 157.487 940.781 cv
158.837 939.434 161.025 939.434 162.377 940.781 cv
152.011 943.152 mo
152.011 944.883 155.032 946.885 156.914 947.815 cv
160.263 949.473 163.839 950.459 166.482 947.815 cv
169.122 945.172 169.122 940.891 166.479 938.25 cv
163.839 935.607 160.07 936.248 156.914 938.25 cv
154.817 939.578 152.011 941.42 152.011 943.152 cv
f
103.76 885.17 mo
103.583 887.072 101.899 888.473 99.998 888.297 cv
98.0967 888.119 96.6978 886.435 96.873 884.535 cv
97.0469 882.635 98.7314 881.234 100.635 881.41 cv
102.533 881.586 103.932 883.269 103.76 885.17 cv
95.3101 878.713 mo
93.9795 879.82 94.3711 883.424 94.8589 885.465 cv
95.7236 889.1 97.251 892.481 100.975 892.824 cv
104.694 893.164 107.986 890.428 108.328 886.708 cv
108.673 882.988 105.771 880.499 102.215 879.352 cv
99.8535 878.588 96.6421 877.606 95.3101 878.713 cv
f
1034.89 1122.54 mo
1036.24 1123.89 1036.24 1126.08 1034.89 1127.43 cv
1033.54 1128.78 1031.35 1128.78 1030 1127.43 cv
1028.64 1126.08 1028.64 1123.89 1030 1122.54 cv
1031.35 1121.19 1033.54 1121.19 1034.89 1122.54 cv
1024.52 1124.91 mo
1024.52 1126.64 1027.54 1128.64 1029.43 1129.57 cv
1032.78 1131.23 1036.35 1132.21 1039 1129.57 cv
1041.63 1126.93 1041.63 1122.65 1038.99 1120 cv
1036.35 1117.36 1032.58 1118 1029.43 1120 cv
1027.33 1121.33 1024.52 1123.18 1024.52 1124.91 cv
f
654.594 1006.6 mo
653.244 1007.96 651.055 1007.96 649.703 1006.61 cv
648.348 1005.26 648.348 1003.07 649.699 1001.72 cv
651.051 1000.37 653.242 1000.36 654.59 1001.71 cv
655.941 1003.06 655.941 1005.25 654.594 1006.6 cv
644.225 1004.24 mo
644.228 1005.97 647.035 1007.81 649.131 1009.14 cv
652.291 1011.14 656.057 1011.78 658.697 1009.14 cv
661.338 1006.49 661.338 1002.21 658.693 999.57 cv
656.049 996.93 652.477 997.915 649.129 999.574 cv
647.244 1000.5 644.225 1002.51 644.225 1004.24 cv
f
770.203 1067.98 mo
768.31 1067.7 767.006 1065.95 767.283 1064.06 cv
767.555 1062.16 769.31 1060.86 771.201 1061.13 cv
773.09 1061.41 774.4 1063.16 774.123 1065.05 cv
773.848 1066.94 772.092 1068.25 770.203 1067.98 cv
765.908 1058.25 mo
764.519 1059.28 764.719 1062.63 764.908 1065.11 cv
765.191 1068.84 766.928 1072.24 770.625 1072.78 cv
774.32 1073.32 777.756 1070.76 778.297 1067.07 cv
778.834 1063.37 775.908 1061.09 772.576 1059.39 cv
770.705 1058.44 767.295 1057.21 765.908 1058.25 cv
f
846.809 1046.37 mo
845.531 1047.78 843.346 1047.89 841.928 1046.61 cv
840.506 1045.33 840.398 1043.14 841.678 1041.73 cv
842.961 1040.31 845.144 1040.2 846.563 1041.48 cv
847.978 1042.76 848.09 1044.95 846.809 1046.37 cv
836.34 1044.52 mo
836.426 1046.25 839.32 1047.95 841.482 1049.17 cv
844.738 1051.01 848.533 1051.46 851.035 1048.69 cv
853.541 1045.92 853.328 1041.64 850.553 1039.13 cv
847.783 1036.63 844.26 1037.79 840.998 1039.62 cv
839.166 1040.64 836.25 1042.79 836.34 1044.52 cv
f
773.16 1120.44 mo
771.881 1121.86 769.695 1121.97 768.277 1120.69 cv
766.859 1119.41 766.75 1117.22 768.033 1115.81 cv
769.314 1114.39 771.5 1114.28 772.913 1115.56 cv
774.332 1116.84 774.443 1119.03 773.16 1120.44 cv
762.689 1118.6 mo
762.777 1120.33 765.67 1122.03 767.836 1123.25 cv
771.09 1125.09 774.883 1125.54 777.389 1122.77 cv
779.893 1119.99 779.68 1115.72 776.908 1113.21 cv
774.133 1110.71 770.615 1111.87 767.352 1113.7 cv
765.518 1114.72 762.602 1116.87 762.689 1118.6 cv
f
789.99 1066.6 mo
790.379 1068.46 789.18 1070.29 787.309 1070.68 cv
785.438 1071.07 783.607 1069.87 783.221 1068 cv
782.834 1066.13 784.033 1064.3 785.902 1063.91 cv
787.771 1063.53 789.605 1064.72 789.99 1066.6 cv
782.326 1073.96 mo
783.771 1074.91 786.85 1073.58 789.113 1072.55 cv
792.519 1071.01 795.119 1068.21 794.359 1064.55 cv
793.6 1060.9 790.023 1058.54 786.363 1059.3 cv
782.707 1060.06 781.568 1063.59 781.115 1067.3 cv
780.859 1069.39 780.877 1073.01 782.326 1073.96 cv
f
673.787 1098.65 mo
675.695 1098.66 677.234 1100.21 677.228 1102.12 cv
677.225 1104.03 675.668 1105.57 673.76 1105.57 cv
671.85 1105.56 670.309 1104.01 670.316 1102.1 cv
670.322 1100.19 671.877 1098.64 673.787 1098.65 cv
679.406 1107.68 mo
680.631 1106.46 679.967 1103.17 679.434 1100.74 cv
678.627 1097.09 676.432 1093.97 672.693 1093.96 cv
668.959 1093.94 665.916 1096.95 665.898 1100.69 cv
665.889 1104.43 669.105 1106.27 672.643 1107.48 cv
674.629 1108.16 678.176 1108.9 679.406 1107.68 cv
f
560.123 1000.87 mo
562.033 1000.87 563.573 1002.43 563.565 1004.34 cv
563.56 1006.25 562.005 1007.79 560.096 1007.78 cv
558.188 1007.77 556.645 1006.22 556.654 1004.31 cv
556.661 1002.4 558.213 1000.86 560.123 1000.87 cv
565.743 1009.89 mo
566.969 1008.67 566.303 1005.38 565.768 1002.96 cv
564.961 999.307 562.767 996.182 559.033 996.17 cv
555.294 996.156 552.254 999.168 552.237 1002.91 cv
552.227 1006.64 555.444 1008.49 558.978 1009.7 cv
560.964 1010.38 564.513 1011.11 565.743 1009.89 cv
f
593.753 972.627 mo
595.663 972.633 597.203 974.185 597.195 976.098 cv
597.19 978.008 595.635 979.549 593.726 979.541 cv
591.818 979.531 590.275 977.979 590.284 976.07 cv
590.29 974.162 591.843 972.617 593.753 972.627 cv
599.373 981.652 mo
600.599 980.434 599.933 977.144 599.398 974.721 cv
598.591 971.066 596.397 967.941 592.663 967.93 cv
588.924 967.916 585.884 970.928 585.867 974.666 cv
585.857 978.4 589.074 980.246 592.608 981.455 cv
594.594 982.139 598.143 982.873 599.373 981.652 cv
f
619.236 911.789 mo
621.144 911.795 622.685 913.348 622.678 915.26 cv
622.672 917.17 621.117 918.711 619.209 918.703 cv
617.301 918.693 615.758 917.141 615.766 915.232 cv
615.773 913.324 617.326 911.779 619.236 911.789 cv
624.855 920.815 mo
626.081 919.596 625.416 916.307 624.881 913.883 cv
624.074 910.229 621.879 907.104 618.144 907.092 cv
614.406 907.078 611.367 910.09 611.35 913.828 cv
611.34 917.563 614.557 919.408 618.09 920.617 cv
620.076 921.301 623.625 922.035 624.855 920.815 cv
f
942.91 994.479 mo
943.355 996.333 942.215 998.199 940.357 998.648 cv
938.502 999.098 936.633 997.955 936.188 996.096 cv
935.742 994.238 936.883 992.37 938.742 991.926 cv
940.598 991.481 942.463 992.62 942.91 994.479 cv
935.478 1002.08 mo
936.957 1002.98 939.992 1001.55 942.219 1000.46 cv
945.574 998.809 948.088 995.93 947.213 992.299 cv
946.338 988.665 942.688 986.432 939.055 987.303 cv
935.422 988.182 934.394 991.744 934.06 995.465 cv
933.871 997.555 934.004 1001.18 935.478 1002.08 cv
f
1024.16 1109.81 mo
1022.88 1111.23 1020.7 1111.35 1019.28 1110.07 cv
1017.86 1108.79 1017.74 1106.6 1019.02 1105.19 cv
1020.3 1103.77 1022.48 1103.65 1023.9 1104.93 cv
1025.32 1106.21 1025.44 1108.39 1024.16 1109.81 cv
1013.69 1107.99 mo
1013.78 1109.72 1016.67 1111.41 1018.84 1112.63 cv
1022.1 1114.46 1025.89 1114.91 1028.39 1112.13 cv
1030.89 1109.35 1030.67 1105.08 1027.89 1102.57 cv
1025.11 1100.07 1021.6 1101.25 1018.34 1103.08 cv
1016.51 1104.1 1013.59 1106.26 1013.69 1107.99 cv
f
1039.41 1146.78 mo
1038.13 1148.2 1035.95 1148.32 1034.53 1147.04 cv
1033.11 1145.76 1032.99 1143.58 1034.27 1142.15 cv
1035.55 1140.74 1037.73 1140.62 1039.15 1141.9 cv
1040.57 1143.18 1040.69 1145.36 1039.41 1146.78 cv
1028.94 1144.96 mo
1029.03 1146.69 1031.92 1148.38 1034.09 1149.6 cv
1037.35 1151.43 1041.14 1151.87 1043.64 1149.1 cv
1046.14 1146.32 1045.92 1142.04 1043.14 1139.54 cv
1040.36 1137.05 1036.84 1138.21 1033.59 1140.04 cv
1031.75 1141.07 1028.85 1143.23 1028.94 1144.96 cv
f
861.545 1180.59 mo
861.324 1178.69 862.68 1176.97 864.582 1176.76 cv
866.478 1176.53 868.191 1177.89 868.413 1179.79 cv
868.631 1181.69 867.271 1183.4 865.375 1183.62 cv
863.478 1183.84 861.766 1182.48 861.545 1180.59 cv
869.838 1173.94 mo
868.478 1172.86 865.295 1173.91 862.951 1174.73 cv
859.42 1175.97 856.578 1178.52 857.012 1182.23 cv
857.441 1185.94 860.797 1188.6 864.506 1188.17 cv
868.219 1187.74 869.668 1184.33 870.451 1180.67 cv
870.891 1178.62 871.197 1175.01 869.838 1173.94 cv
f
837.365 1164.76 mo
839.166 1165.4 840.107 1167.37 839.461 1169.17 cv
838.824 1170.97 836.846 1171.91 835.045 1171.27 cv
833.25 1170.62 832.31 1168.65 832.951 1166.85 cv
833.594 1165.05 835.574 1164.12 837.365 1164.76 cv
839.666 1175.14 mo
841.23 1174.39 841.693 1171.07 841.997 1168.61 cv
842.453 1164.89 841.418 1161.22 837.898 1159.96 cv
834.381 1158.71 830.51 1160.54 829.254 1164.06 cv
828.002 1167.58 830.424 1170.39 833.353 1172.7 cv
834.998 1174.01 838.102 1175.88 839.666 1175.14 cv
f
766.478 1191.59 mo
765.084 1190.29 765.01 1188.1 766.316 1186.71 cv
767.623 1185.31 769.807 1185.24 771.205 1186.55 cv
772.594 1187.86 772.663 1190.04 771.357 1191.43 cv
770.055 1192.83 767.865 1192.9 766.478 1191.59 cv
768.512 1181.16 mo
766.779 1181.21 765.027 1184.07 763.766 1186.21 cv
761.865 1189.44 761.35 1193.22 764.074 1195.78 cv
766.801 1198.33 771.08 1198.19 773.637 1195.47 cv
776.189 1192.74 775.092 1189.2 773.328 1185.91 cv
772.34 1184.05 770.24 1181.1 768.512 1181.16 cv
f
1041.54 1162.08 mo
1040.26 1163.5 1038.07 1163.61 1036.65 1162.34 cv
1035.23 1161.06 1035.12 1158.87 1036.4 1157.45 cv
1037.68 1156.03 1039.86 1155.92 1041.28 1157.2 cv
1042.7 1158.47 1042.81 1160.66 1041.54 1162.08 cv
1031.06 1160.26 mo
1031.15 1161.99 1034.05 1163.68 1036.21 1164.89 cv
1039.47 1166.73 1043.27 1167.17 1045.77 1164.39 cv
1048.27 1161.62 1048.04 1157.34 1045.27 1154.84 cv
1042.49 1152.34 1038.97 1153.51 1035.71 1155.34 cv
1033.88 1156.37 1030.97 1158.53 1031.06 1160.26 cv
f
971.004 1002.1 mo
971.451 1003.96 970.309 1005.83 968.451 1006.27 cv
966.596 1006.72 964.728 1005.58 964.283 1003.72 cv
963.836 1001.87 964.977 999.998 966.836 999.551 cv
968.691 999.104 970.555 1000.25 971.004 1002.1 cv
963.574 1009.71 mo
965.053 1010.61 968.084 1009.18 970.313 1008.08 cv
973.668 1006.44 976.182 1003.56 975.307 999.924 cv
974.432 996.295 970.783 994.055 967.148 994.93 cv
963.516 995.807 962.49 999.37 962.154 1003.09 cv
961.967 1005.18 962.098 1008.8 963.574 1009.71 cv
f
913.953 989.971 mo
913.791 988.066 915.201 986.394 917.105 986.232 cv
919.01 986.068 920.682 987.479 920.844 989.383 cv
921.004 991.286 919.594 992.958 917.689 993.12 cv
915.788 993.283 914.115 991.87 913.953 989.971 cv
922.449 983.574 mo
921.125 982.456 917.908 983.414 915.539 984.161 cv
911.973 985.285 909.057 987.752 909.37 991.473 cv
909.688 995.193 912.959 997.956 916.682 997.641 cv
920.404 997.324 921.959 993.956 922.85 990.327 cv
923.353 988.289 923.771 984.69 922.449 983.574 cv
f
377.41 1186.7 mo
375.5 1186.7 373.952 1185.15 373.952 1183.24 cv
373.952 1181.33 375.5 1179.79 377.41 1179.79 cv
379.319 1179.79 380.868 1181.33 380.868 1183.24 cv
380.868 1185.15 379.319 1186.7 377.41 1186.7 cv
383.064 1177.7 mo
381.838 1176.47 378.289 1177.19 376.297 1177.87 cv
372.758 1179.06 369.534 1180.89 369.534 1184.63 cv
369.534 1188.37 372.563 1191.4 376.297 1191.4 cv
380.036 1191.4 382.246 1188.28 383.064 1184.63 cv
383.608 1182.21 384.286 1178.92 383.064 1177.7 cv
f
101.596 1186.41 mo
100.248 1185.06 100.248 1182.87 101.596 1181.52 cv
102.948 1180.17 105.136 1180.17 106.487 1181.52 cv
107.834 1182.87 107.834 1185.06 106.487 1186.41 cv
105.136 1187.76 102.948 1187.76 101.596 1186.41 cv
111.961 1184.03 mo
111.961 1182.31 108.941 1180.3 107.059 1179.37 cv
103.709 1177.72 100.135 1176.73 97.4917 1179.37 cv
94.8481 1182.02 94.8481 1186.3 97.4927 1188.94 cv
100.135 1191.58 103.901 1190.94 107.059 1188.94 cv
109.158 1187.61 111.961 1185.77 111.961 1184.03 cv
f
133.008 1012.2 mo
131.141 1011.8 129.948 1009.97 130.344 1008.1 cv
130.743 1006.23 132.58 1005.04 134.448 1005.44 cv
136.315 1005.83 137.506 1007.67 137.108 1009.54 cv
136.713 1011.41 134.876 1012.6 133.008 1012.2 cv
133.909 1014.63 mo
137.643 1014.59 141.153 1013.08 141.934 1009.43 cv
142.71 1005.77 140.377 1002.18 136.723 1001.4 cv
133.069 1000.62 130.606 1003.4 128.7 1006.61 cv
127.626 1008.42 126.181 1011.74 127.126 1013.19 cv
128.069 1014.64 131.421 1014.66 133.909 1014.63 cv
f
128.227 1048.13 mo
126.36 1047.74 125.166 1045.9 125.563 1044.03 cv
125.961 1042.16 127.798 1040.97 129.667 1041.37 cv
131.534 1041.76 132.725 1043.6 132.327 1045.47 cv
131.932 1047.34 130.092 1048.53 128.227 1048.13 cv
129.127 1050.57 mo
132.86 1050.53 136.371 1049.02 137.15 1045.36 cv
137.928 1041.71 135.596 1038.12 131.942 1037.34 cv
128.287 1036.56 125.825 1039.33 123.918 1042.54 cv
122.844 1044.35 121.399 1047.67 122.344 1049.13 cv
123.287 1050.58 126.64 1050.6 129.127 1050.57 cv
f
188.332 1090.35 mo
186.465 1089.95 185.272 1088.11 185.669 1086.24 cv
186.067 1084.38 187.904 1083.18 189.771 1083.58 cv
191.638 1083.98 192.83 1085.81 192.432 1087.68 cv
192.037 1089.55 190.2 1090.74 188.332 1090.35 cv
189.233 1092.78 mo
192.967 1092.74 196.477 1091.23 197.257 1087.57 cv
198.034 1083.92 195.7 1080.33 192.047 1079.55 cv
188.393 1078.77 185.93 1081.55 184.024 1084.76 cv
182.95 1086.56 181.505 1089.88 182.451 1091.34 cv
183.393 1092.79 186.745 1092.81 189.233 1092.78 cv
f
250.896 920.559 mo
249.029 920.16 247.835 918.324 248.232 916.455 cv
248.63 914.59 250.467 913.396 252.334 913.795 cv
254.202 914.193 255.394 916.027 254.995 917.894 cv
254.6 919.766 252.763 920.955 250.896 920.559 cv
251.796 922.994 mo
255.531 922.952 259.04 921.44 259.821 917.785 cv
260.597 914.133 258.263 910.54 254.611 909.76 cv
250.956 908.982 248.494 911.76 246.587 914.971 cv
245.513 916.775 244.069 920.098 245.014 921.551 cv
245.956 923.004 249.309 923.021 251.796 922.994 cv
f
192.074 980.119 mo
190.206 979.721 189.013 977.885 189.41 976.016 cv
189.808 974.15 191.645 972.956 193.512 973.356 cv
195.379 973.754 196.572 975.588 196.173 977.455 cv
195.778 979.325 193.941 980.516 192.074 980.119 cv
192.974 982.555 mo
196.708 982.514 200.218 980.999 200.998 977.346 cv
201.775 973.693 199.441 970.102 195.788 969.32 cv
192.134 968.543 189.671 971.32 187.765 974.531 cv
186.691 976.336 185.246 979.658 186.192 981.111 cv
187.134 982.565 190.487 982.581 192.974 982.555 cv
f
435.561 920.559 mo
433.694 920.16 432.5 918.324 432.897 916.455 cv
433.295 914.59 435.132 913.396 436.999 913.795 cv
438.867 914.193 440.059 916.027 439.661 917.894 cv
439.265 919.766 437.428 920.955 435.561 920.559 cv
436.461 922.994 mo
440.196 922.952 443.705 921.44 444.486 917.785 cv
445.262 914.133 442.928 910.54 439.276 909.76 cv
435.621 908.982 433.159 911.76 431.252 914.971 cv
430.178 916.775 428.734 920.098 429.679 921.551 cv
430.621 923.004 433.974 923.021 436.461 922.994 cv
f
438.764 947.1 mo
436.863 947.273 435.178 945.874 435.001 943.971 cv
434.829 942.072 436.228 940.387 438.129 940.213 cv
440.031 940.039 441.714 941.438 441.888 943.338 cv
442.065 945.242 440.664 946.924 438.764 947.1 cv
440.346 949.158 mo
443.9 948.01 446.803 945.523 446.463 941.801 cv
446.12 938.083 442.825 935.346 439.105 935.685 cv
435.385 936.027 433.858 939.41 432.991 943.043 cv
432.5 945.084 432.107 948.685 433.442 949.793 cv
434.773 950.9 437.979 949.922 440.346 949.158 cv
f
527.603 947.1 mo
525.702 947.273 524.017 945.874 523.841 943.971 cv
523.668 942.072 525.067 940.387 526.969 940.213 cv
528.87 940.039 530.553 941.438 530.727 943.338 cv
530.905 945.242 529.504 946.924 527.603 947.1 cv
529.185 949.158 mo
532.74 948.01 535.642 945.523 535.302 941.801 cv
534.959 938.083 531.664 935.346 527.945 935.685 cv
524.225 936.027 522.697 939.41 521.83 943.043 cv
521.34 945.084 520.947 948.685 522.281 949.793 cv
523.612 950.9 526.819 949.922 529.185 949.158 cv
f
467.045 888.141 mo
465.144 888.315 463.46 886.915 463.283 885.012 cv
463.11 883.113 464.509 881.428 466.411 881.254 cv
468.312 881.08 469.995 882.479 470.169 884.379 cv
470.347 886.283 468.946 887.965 467.045 888.141 cv
468.627 890.199 mo
472.182 889.051 475.084 886.565 474.744 882.842 cv
474.401 879.124 471.106 876.387 467.387 876.726 cv
463.666 877.068 462.139 880.451 461.272 884.083 cv
460.782 886.125 460.389 889.727 461.723 890.833 cv
463.054 891.941 466.261 890.963 468.627 890.199 cv
f
226.796 909.334 mo
228.662 908.932 230.503 910.119 230.906 911.986 cv
231.307 913.852 230.12 915.691 228.253 916.094 cv
226.386 916.494 224.547 915.31 224.147 913.443 cv
223.741 911.574 224.929 909.736 226.796 909.334 cv
224.976 907.481 mo
221.586 909.047 219.004 911.865 219.789 915.519 cv
220.577 919.17 224.177 921.49 227.829 920.707 cv
231.481 919.92 232.591 916.377 233.015 912.666 cv
233.255 910.58 233.213 906.958 231.755 906.019 cv
230.3 905.08 227.234 906.438 224.976 907.481 cv
f
282.272 917.688 mo
280.405 917.289 279.211 915.452 279.608 913.583 cv
280.006 911.719 281.843 910.525 283.71 910.924 cv
285.578 911.322 286.77 913.156 286.371 915.023 cv
285.976 916.894 284.139 918.083 282.272 917.688 cv
283.172 920.123 mo
286.907 920.081 290.417 918.568 291.197 914.914 cv
291.973 911.262 289.639 907.67 285.987 906.889 cv
282.332 906.111 279.87 908.889 277.963 912.1 cv
276.889 913.904 275.445 917.227 276.39 918.68 cv
277.332 920.133 280.685 920.15 283.172 920.123 cv
f
633.947 1185.76 mo
632.08 1185.36 630.887 1183.53 631.287 1181.66 cv
631.684 1179.79 633.519 1178.6 635.389 1179 cv
637.256 1179.39 638.447 1181.23 638.049 1183.1 cv
637.652 1184.96 635.815 1186.16 633.947 1185.76 cv
634.848 1188.19 mo
638.582 1188.15 642.094 1186.64 642.873 1182.99 cv
643.65 1179.33 641.318 1175.74 637.664 1174.96 cv
634.012 1174.18 631.545 1176.96 629.639 1180.17 cv
628.566 1181.98 627.121 1185.3 628.066 1186.75 cv
629.008 1188.2 632.363 1188.22 634.848 1188.19 cv
f
623.764 1125.38 mo
623.764 1127.29 622.215 1128.84 620.307 1128.84 cv
618.396 1128.84 616.85 1127.29 616.85 1125.38 cv
616.85 1123.47 618.396 1121.93 620.307 1121.93 cv
622.215 1121.93 623.764 1123.47 623.764 1125.38 cv
614.76 1119.73 mo
613.533 1120.96 614.254 1124.51 614.93 1126.5 cv
616.125 1130.03 617.957 1133.26 621.691 1133.26 cv
625.43 1133.26 628.457 1130.23 628.457 1126.5 cv
628.457 1122.76 625.34 1120.55 621.691 1119.73 cv
619.268 1119.19 615.984 1118.51 614.76 1119.73 cv
f
442.734 1182.07 mo
444.082 1180.71 446.272 1180.71 447.621 1182.07 cv
448.972 1183.42 448.972 1185.61 447.621 1186.96 cv
446.272 1188.3 444.082 1188.3 442.734 1186.96 cv
441.383 1185.61 441.383 1183.42 442.734 1182.07 cv
445.102 1192.43 mo
446.832 1192.43 448.836 1189.41 449.766 1187.53 cv
451.421 1184.18 452.408 1180.6 449.766 1177.96 cv
447.123 1175.32 442.842 1175.32 440.2 1177.96 cv
437.557 1180.6 438.199 1184.37 440.2 1187.53 cv
441.528 1189.63 443.37 1192.43 445.102 1192.43 cv
f
189.742 1110.41 mo
191.09 1111.76 191.09 1113.95 189.742 1115.3 cv
188.39 1116.65 186.202 1116.65 184.851 1115.3 cv
183.5 1113.95 183.5 1111.76 184.851 1110.41 cv
186.202 1109.06 188.39 1109.06 189.742 1110.41 cv
193.118 1112.81 mo
193.805 1110.45 193.729 1108.15 191.883 1106.3 cv
189.242 1103.66 184.957 1103.66 182.315 1106.3 cv
179.674 1108.95 180.316 1112.71 182.315 1115.87 cv
183.647 1117.97 185.489 1120.78 187.219 1120.78 cv
188.951 1120.78 190.954 1117.75 191.883 1115.87 cv
192.383 1114.86 192.821 1113.83 193.118 1112.81 cv
f
162.369 972.734 mo
163.717 974.084 163.717 976.273 162.369 977.623 cv
161.017 978.975 158.829 978.975 157.478 977.623 cv
156.127 976.273 156.127 974.084 157.478 972.734 cv
158.829 971.383 161.017 971.383 162.369 972.734 cv
165.745 975.135 mo
166.432 972.775 166.356 970.475 164.51 968.629 cv
161.869 965.986 157.585 965.988 154.942 968.629 cv
152.301 971.271 152.943 975.039 154.942 978.197 cv
156.274 980.295 158.116 983.1 159.846 983.1 cv
161.578 983.1 163.58 980.078 164.51 978.197 cv
165.01 977.185 165.448 976.156 165.745 975.135 cv
f
288.298 942.586 mo
289.647 943.935 289.647 946.125 288.298 947.475 cv
286.947 948.826 284.758 948.826 283.408 947.475 cv
282.057 946.125 282.057 943.935 283.408 942.586 cv
284.758 941.234 286.947 941.234 288.298 942.586 cv
291.674 944.986 mo
292.362 942.627 292.286 940.326 290.44 938.481 cv
287.798 935.838 283.514 935.84 280.871 938.481 cv
278.231 941.123 278.873 944.891 280.871 948.049 cv
282.204 950.146 284.045 952.951 285.776 952.951 cv
287.507 952.951 289.51 949.93 290.44 948.049 cv
290.94 947.037 291.377 946.008 291.674 944.986 cv
f
316.333 942.938 mo
317.682 944.287 317.682 946.477 316.333 947.826 cv
314.982 949.178 312.793 949.178 311.443 947.826 cv
310.092 946.477 310.092 944.287 311.443 942.938 cv
312.793 941.586 314.982 941.586 316.333 942.938 cv
319.71 945.338 mo
320.397 942.979 320.321 940.678 318.475 938.832 cv
315.833 936.19 311.549 936.191 308.907 938.832 cv
306.266 941.475 306.908 945.242 308.907 948.4 cv
310.239 950.498 312.08 953.303 313.811 953.303 cv
315.542 953.303 317.545 950.281 318.475 948.4 cv
318.975 947.389 319.413 946.359 319.71 945.338 cv
f
350.004 911.143 mo
351.353 912.491 351.353 914.682 350.004 916.031 cv
348.653 917.383 346.464 917.383 345.114 916.031 cv
343.763 914.682 343.763 912.491 345.114 911.143 cv
346.464 909.79 348.653 909.79 350.004 911.143 cv
353.38 913.543 mo
354.068 911.184 353.992 908.883 352.146 907.036 cv
349.504 904.394 345.22 904.396 342.578 907.036 cv
339.937 909.68 340.579 913.447 342.578 916.606 cv
343.91 918.702 345.751 921.508 347.482 921.508 cv
349.213 921.508 351.216 918.486 352.146 916.606 cv
352.646 915.594 353.083 914.565 353.38 913.543 cv
f
386.69 879.461 mo
388.039 880.81 388.039 883 386.69 884.35 cv
385.339 885.701 383.15 885.701 381.8 884.35 cv
380.449 883 380.449 880.81 381.8 879.461 cv
383.15 878.109 385.339 878.109 386.69 879.461 cv
390.066 881.861 mo
390.754 879.502 390.678 877.201 388.832 875.356 cv
386.19 872.713 381.906 872.715 379.264 875.356 cv
376.623 877.998 377.265 881.766 379.264 884.924 cv
380.596 887.021 382.438 889.826 384.168 889.826 cv
385.899 889.826 387.902 886.805 388.832 884.924 cv
389.332 883.912 389.769 882.883 390.066 881.861 cv
f
465.388 939.021 mo
466.736 940.371 466.736 942.56 465.388 943.91 cv
464.036 945.262 461.848 945.262 460.497 943.91 cv
459.146 942.56 459.146 940.371 460.497 939.021 cv
461.848 937.67 464.036 937.67 465.388 939.021 cv
468.764 941.422 mo
469.451 939.063 469.375 936.762 467.529 934.916 cv
464.888 932.273 460.603 932.275 457.961 934.916 cv
455.32 937.559 455.962 941.326 457.961 944.484 cv
459.293 946.582 461.135 949.387 462.865 949.387 cv
464.597 949.387 466.6 946.365 467.529 944.484 cv
468.029 943.473 468.467 942.443 468.764 941.422 cv
f
532.587 973.734 mo
533.936 975.084 533.936 977.273 532.587 978.623 cv
531.236 979.975 529.047 979.975 527.697 978.623 cv
526.346 977.273 526.346 975.084 527.697 973.734 cv
529.047 972.383 531.236 972.383 532.587 973.734 cv
535.963 976.135 mo
536.651 973.775 536.575 971.475 534.729 969.629 cv
532.087 966.986 527.803 966.988 525.161 969.629 cv
522.52 972.271 523.162 976.039 525.161 979.197 cv
526.493 981.295 528.334 984.1 530.065 984.1 cv
531.796 984.1 533.799 981.078 534.729 979.197 cv
535.229 978.185 535.667 977.156 535.963 976.135 cv
f
532.587 909.762 mo
533.935 911.112 533.935 913.302 532.587 914.651 cv
531.235 916.003 529.047 916.003 527.696 914.651 cv
526.346 913.302 526.346 911.112 527.696 909.762 cv
529.047 908.411 531.235 908.411 532.587 909.762 cv
535.963 912.163 mo
536.65 909.804 536.574 907.503 534.729 905.657 cv
532.087 903.015 527.803 903.017 525.16 905.657 cv
522.519 908.3 523.161 912.067 525.16 915.226 cv
526.492 917.323 528.334 920.128 530.065 920.128 cv
531.796 920.128 533.799 917.106 534.729 915.226 cv
535.229 914.214 535.666 913.185 535.963 912.163 cv
f
508.223 811.676 mo
510.041 812.252 511.051 814.195 510.475 816.014 cv
509.899 817.837 507.957 818.846 506.136 818.268 cv
504.315 817.692 503.306 815.749 503.882 813.93 cv
504.458 812.107 506.401 811.1 508.223 811.676 cv
512.326 812.25 mo
511.848 809.84 510.721 807.832 508.231 807.045 cv
504.669 805.916 500.869 807.894 499.74 811.455 cv
498.615 815.018 500.919 818.065 504.15 819.945 cv
506.298 821.194 509.226 822.834 510.761 822.037 cv
512.297 821.239 512.683 817.635 512.641 815.537 cv
512.619 814.408 512.533 813.293 512.326 812.25 cv
f
473.591 973.734 mo
474.94 975.084 474.94 977.273 473.591 978.623 cv
472.24 979.975 470.051 979.975 468.701 978.623 cv
467.35 977.273 467.35 975.084 468.701 973.734 cv
470.051 972.383 472.24 972.383 473.591 973.734 cv
476.967 976.135 mo
477.655 973.775 477.579 971.475 475.733 969.629 cv
473.091 966.986 468.807 966.988 466.164 969.629 cv
463.524 972.271 464.165 976.039 466.164 979.197 cv
467.496 981.295 469.338 984.1 471.069 984.1 cv
472.8 984.1 474.803 981.078 475.733 979.197 cv
476.233 978.185 476.67 977.156 476.967 976.135 cv
f
488.017 831.996 mo
489.366 833.346 489.366 835.535 488.017 836.885 cv
486.665 838.236 484.477 838.236 483.126 836.885 cv
481.776 835.535 481.776 833.346 483.126 831.996 cv
484.477 830.644 486.665 830.644 488.017 831.996 cv
491.393 834.396 mo
492.08 832.037 492.004 829.736 490.159 827.891 cv
487.517 825.248 483.233 825.25 480.59 827.891 cv
477.95 830.533 478.591 834.301 480.59 837.459 cv
481.922 839.557 483.764 842.361 485.495 842.361 cv
487.226 842.361 489.229 839.34 490.159 837.459 cv
490.659 836.447 491.096 835.418 491.393 834.396 cv
f
84.335 885.572 mo
85.6831 886.922 85.6831 889.111 84.335 890.461 cv
82.9834 891.813 80.7949 891.813 79.4443 890.461 cv
78.0938 889.111 78.0938 886.922 79.4443 885.572 cv
80.7949 884.221 82.9834 884.221 84.335 885.572 cv
87.7109 887.973 mo
88.3984 885.613 88.3223 883.313 86.4761 881.467 cv
83.835 878.824 79.5508 878.826 76.9082 881.467 cv
74.2671 884.109 74.9092 887.877 76.9082 891.035 cv
78.2402 893.133 80.082 895.938 81.8125 895.938 cv
83.5439 895.938 85.5469 892.916 86.4761 891.035 cv
86.9761 890.023 87.4141 888.994 87.7109 887.973 cv
f
162.368 1004.15 mo
163.717 1005.5 163.717 1007.69 162.368 1009.04 cv
161.016 1010.39 158.828 1010.39 157.477 1009.04 cv
156.127 1007.69 156.127 1005.5 157.477 1004.15 cv
158.828 1002.8 161.016 1002.8 162.368 1004.15 cv
165.744 1006.55 mo
166.432 1004.19 166.355 1001.89 164.51 1000.05 cv
161.868 997.403 157.584 997.405 154.941 1000.05 cv
152.301 1002.69 152.942 1006.46 154.941 1009.61 cv
156.273 1011.71 158.115 1014.52 159.846 1014.52 cv
161.577 1014.52 163.58 1011.5 164.51 1009.61 cv
165.01 1008.6 165.447 1007.57 165.744 1006.55 cv
f
227.509 942.586 mo
228.858 943.935 228.858 946.125 227.509 947.475 cv
226.158 948.826 223.969 948.826 222.619 947.475 cv
221.268 946.125 221.268 943.935 222.619 942.586 cv
223.969 941.234 226.158 941.234 227.509 942.586 cv
230.885 944.986 mo
231.573 942.627 231.496 940.326 229.651 938.481 cv
227.009 935.838 222.725 935.84 220.082 938.481 cv
217.442 941.123 218.083 944.891 220.082 948.049 cv
221.414 950.146 223.256 952.951 224.987 952.951 cv
226.718 952.951 228.721 949.93 229.651 948.049 cv
230.151 947.037 230.588 946.008 230.885 944.986 cv
f
169.176 1046.71 mo
165.719 1046.71 li
165.719 1036.3 li
169.176 1036.3 li
169.176 1046.71 li
cp
f
170.146 1028.2 mo
171.496 1029.55 171.496 1031.74 170.146 1033.09 cv
168.795 1034.44 166.606 1034.44 165.256 1033.09 cv
163.905 1031.74 163.905 1029.55 165.256 1028.2 cv
166.606 1026.85 168.795 1026.85 170.146 1028.2 cv
173.524 1030.6 mo
174.211 1028.24 174.133 1025.94 172.289 1024.09 cv
169.648 1021.45 165.364 1021.45 162.722 1024.09 cv
160.079 1026.74 160.723 1030.5 162.722 1033.66 cv
164.051 1035.76 165.894 1038.56 167.625 1038.56 cv
169.358 1038.56 171.358 1035.54 172.289 1033.66 cv
172.789 1032.65 173.227 1031.62 173.524 1030.6 cv
f
467.799 1183.18 mo
467.831 1181.27 469.408 1179.75 471.317 1179.78 cv
473.225 1179.82 474.746 1181.39 474.711 1183.3 cv
474.679 1185.21 473.103 1186.73 471.196 1186.7 cv
469.286 1186.66 467.765 1185.09 467.799 1183.18 cv
476.704 1188.99 mo
477.95 1187.78 477.291 1184.22 476.653 1182.22 cv
475.516 1178.66 473.742 1175.4 470.006 1175.34 cv
466.269 1175.27 463.19 1178.25 463.123 1181.99 cv
463.059 1185.72 466.137 1187.98 469.769 1188.87 cv
472.185 1189.45 475.457 1190.19 476.704 1188.99 cv
f
484.965 1067.55 mo
483.596 1066.22 483.558 1064.03 484.889 1062.66 cv
486.219 1061.28 488.408 1061.25 489.778 1062.58 cv
491.148 1063.91 491.182 1066.1 489.856 1067.47 cv
488.522 1068.84 486.333 1068.87 484.965 1067.55 cv
495.291 1065.02 mo
495.265 1063.28 492.212 1061.33 490.316 1060.43 cv
486.942 1058.82 483.352 1057.9 480.75 1060.58 cv
478.149 1063.26 478.216 1067.54 480.899 1070.14 cv
483.581 1072.74 487.34 1072.04 490.463 1069.99 cv
492.541 1068.63 495.317 1066.75 495.291 1065.02 cv
f
561.725 977.313 mo
560.356 975.986 560.318 973.793 561.649 972.422 cv
562.979 971.051 565.168 971.018 566.538 972.348 cv
567.908 973.676 567.942 975.866 566.616 977.238 cv
565.282 978.607 563.094 978.639 561.725 977.313 cv
572.052 974.783 mo
572.025 973.051 568.973 971.096 567.076 970.193 cv
563.702 968.59 560.112 967.661 557.511 970.342 cv
554.909 973.025 554.976 977.309 557.659 979.91 cv
560.342 982.508 564.1 981.809 567.224 979.76 cv
569.302 978.398 572.077 976.514 572.052 974.783 cv
f
622.572 976.31 mo
621.203 974.985 621.164 972.792 622.495 971.421 cv
623.826 970.05 626.014 970.017 627.385 971.346 cv
628.754 972.675 628.788 974.866 627.463 976.237 cv
626.129 977.606 623.94 977.637 622.572 976.31 cv
632.898 973.782 mo
632.871 972.05 629.818 970.095 627.922 969.192 cv
624.549 967.589 620.959 966.661 618.357 969.341 cv
615.756 972.024 615.822 976.307 618.506 978.909 cv
621.188 981.507 624.947 980.807 628.07 978.759 cv
630.148 977.398 632.924 975.512 632.898 973.782 cv
f
591.524 888.207 mo
590.155 886.881 590.117 884.688 591.448 883.316 cv
592.778 881.945 594.966 881.912 596.336 883.242 cv
597.706 884.57 597.741 886.762 596.414 888.133 cv
595.08 889.502 592.892 889.533 591.524 888.207 cv
601.85 885.678 mo
601.824 883.945 598.771 881.99 596.875 881.088 cv
593.5 879.484 589.911 878.557 587.309 881.236 cv
584.707 883.92 584.775 888.203 587.457 890.805 cv
590.14 893.402 593.899 892.703 597.022 890.654 cv
599.1 889.293 601.875 887.408 601.85 885.678 cv
f
489.577 1184.65 mo
489.609 1182.75 491.184 1181.22 493.094 1181.26 cv
495.003 1181.29 496.525 1182.87 496.492 1184.78 cv
496.457 1186.68 494.883 1188.21 492.975 1188.17 cv
491.065 1188.14 489.544 1186.56 489.577 1184.65 cv
498.483 1190.46 mo
499.727 1189.26 499.067 1185.7 498.428 1183.7 cv
497.293 1180.14 495.522 1176.88 491.784 1176.82 cv
488.049 1176.75 484.968 1179.73 484.903 1183.46 cv
484.838 1187.2 487.916 1189.46 491.547 1190.34 cv
493.961 1190.93 497.235 1191.67 498.483 1190.46 cv
f
515.237 1038.06 mo
515.514 1036.18 517.274 1034.87 519.163 1035.15 cv
521.051 1035.43 522.356 1037.19 522.077 1039.08 cv
521.797 1040.96 520.039 1042.27 518.151 1041.99 cv
516.262 1041.71 514.958 1039.95 515.237 1038.06 cv
523.317 1044.97 mo
524.707 1043.94 524.515 1040.32 524.14 1038.26 cv
523.472 1034.58 522.133 1031.12 518.438 1030.57 cv
514.742 1030.03 511.301 1032.58 510.754 1036.28 cv
510.209 1039.97 512.969 1042.62 516.455 1043.96 cv
518.775 1044.85 521.924 1046.01 523.317 1044.97 cv
f
468.579 913.565 mo
468.856 911.677 470.616 910.372 472.504 910.649 cv
474.393 910.927 475.698 912.688 475.418 914.579 cv
475.139 916.466 473.381 917.769 471.493 917.491 cv
469.604 917.212 468.3 915.454 468.579 913.565 cv
476.659 920.476 mo
478.049 919.444 477.857 915.825 477.482 913.759 cv
476.814 910.083 475.475 906.622 471.78 906.075 cv
468.083 905.53 464.643 908.081 464.096 911.78 cv
463.551 915.474 466.311 918.118 469.797 919.46 cv
472.117 920.352 475.266 921.507 476.659 920.476 cv
f
311.321 916.438 mo
311.598 914.549 313.358 913.244 315.246 913.521 cv
317.135 913.799 318.44 915.56 318.161 917.45 cv
317.881 919.338 316.123 920.641 314.235 920.363 cv
312.346 920.083 311.042 918.325 311.321 916.438 cv
319.401 923.348 mo
320.792 922.316 320.599 918.697 320.224 916.631 cv
319.556 912.955 318.217 909.494 314.522 908.947 cv
310.826 908.402 307.385 910.952 306.838 914.652 cv
306.293 918.346 309.053 920.99 312.539 922.331 cv
314.859 923.225 318.008 924.379 319.401 923.348 cv
f
344.992 881.725 mo
345.269 879.836 347.029 878.531 348.917 878.809 cv
350.806 879.086 352.111 880.848 351.831 882.738 cv
351.552 884.625 349.794 885.928 347.906 885.65 cv
346.017 885.371 344.713 883.613 344.992 881.725 cv
353.072 888.635 mo
354.462 887.604 354.27 883.984 353.895 881.918 cv
353.227 878.242 351.888 874.781 348.193 874.234 cv
344.496 873.69 341.056 876.24 340.509 879.94 cv
339.964 883.633 342.724 886.277 346.21 887.619 cv
348.53 888.512 351.679 889.666 353.072 888.635 cv
f
152.455 1187.39 mo
152.489 1185.48 154.065 1183.96 155.974 1183.99 cv
157.883 1184.02 159.405 1185.6 159.37 1187.51 cv
159.336 1189.42 157.761 1190.94 155.852 1190.91 cv
153.943 1190.87 152.423 1189.3 152.455 1187.39 cv
161.362 1193.2 mo
162.606 1192 161.948 1188.43 161.309 1186.43 cv
160.174 1182.87 158.4 1179.62 154.663 1179.55 cv
150.928 1179.48 147.846 1182.46 147.782 1186.2 cv
147.717 1189.93 150.797 1192.2 154.427 1193.08 cv
156.842 1193.66 160.116 1194.4 161.362 1193.2 cv
f
472.62 990.088 mo
469.163 990.088 li
469.163 981.152 li
472.62 981.152 li
472.62 990.088 li
cp
f
319.537 1087.02 mo
316.08 1087.02 li
316.08 1078.09 li
319.537 1078.09 li
319.537 1087.02 li
cp
f
563.163 1176.69 mo
561.569 1177.75 559.425 1177.31 558.369 1175.72 cv
557.315 1174.12 557.75 1171.98 559.343 1170.92 cv
560.935 1169.87 563.079 1170.31 564.135 1171.9 cv
565.19 1173.49 564.754 1175.63 563.163 1176.69 cv
562.9 1166.06 mo
561.205 1165.71 558.643 1168.28 557.354 1169.94 cv
555.065 1172.89 553.388 1176.2 555.455 1179.31 cv
557.516 1182.43 561.713 1183.28 564.829 1181.22 cv
567.943 1179.15 568.064 1175.33 566.731 1171.84 cv
565.844 1169.52 564.597 1166.4 562.9 1166.06 cv
f
488.286 1038.77 mo
486.439 1039.25 484.551 1038.14 484.075 1036.29 cv
483.596 1034.43 484.709 1032.55 486.56 1032.07 cv
488.408 1031.6 490.291 1032.71 490.771 1034.56 cv
491.247 1036.41 490.136 1038.29 488.286 1038.77 cv
491.51 1028.64 mo
490.022 1027.76 486.763 1029.35 485 1030.49 cv
481.873 1032.54 479.209 1035.12 480.144 1038.73 cv
481.077 1042.35 484.764 1044.53 488.383 1043.59 cv
492 1042.66 493.362 1039.09 493.243 1035.35 cv
493.164 1032.87 493.002 1029.52 491.51 1028.64 cv
f
341.813 1131.37 mo
338.354 1131.37 li
338.354 1122.43 li
341.813 1122.43 li
341.813 1131.37 li
cp
f
343.139 1140.36 mo
341.815 1141.73 339.623 1141.77 338.249 1140.44 cv
336.875 1139.12 336.836 1136.93 338.165 1135.55 cv
339.492 1134.18 341.68 1134.14 343.055 1135.47 cv
344.428 1136.79 344.465 1138.98 343.139 1140.36 cv
340.588 1130.04 mo
338.86 1130.07 336.911 1133.12 336.011 1135.02 cv
334.414 1138.4 333.492 1141.99 336.178 1144.59 cv
338.866 1147.18 343.148 1147.1 345.745 1144.42 cv
348.34 1141.73 347.631 1137.97 345.577 1134.85 cv
344.211 1132.78 342.321 1130.01 340.588 1130.04 cv
f
454.052 1144.03 mo
445.12 1144.03 li
445.12 1140.57 li
454.052 1140.57 li
454.052 1144.03 li
cp
f
436.129 1145.35 mo
434.754 1144.03 434.717 1141.84 436.045 1140.46 cv
437.371 1139.09 439.56 1139.05 440.934 1140.38 cv
442.308 1141.71 442.346 1143.89 441.018 1145.27 cv
439.693 1146.64 437.504 1146.68 436.129 1145.35 cv
446.452 1142.8 mo
446.42 1141.07 443.365 1139.12 441.467 1138.22 cv
438.09 1136.63 434.498 1135.71 431.903 1138.39 cv
429.308 1141.08 429.382 1145.36 432.07 1147.96 cv
434.758 1150.55 438.514 1149.84 441.634 1147.79 cv
443.711 1146.43 446.482 1144.53 446.452 1142.8 cv
f
286.463 1035.55 mo
283.005 1035.55 li
283.005 1026.62 li
286.463 1026.62 li
286.463 1035.55 li
cp
f
287.789 1044.54 mo
286.463 1045.92 284.275 1045.95 282.901 1044.62 cv
281.526 1043.3 281.489 1041.11 282.816 1039.74 cv
284.143 1038.37 286.331 1038.32 287.705 1039.65 cv
289.079 1040.98 289.118 1043.17 287.789 1044.54 cv
285.242 1034.22 mo
283.508 1034.25 281.56 1037.31 280.663 1039.21 cv
279.065 1042.58 278.141 1046.17 280.83 1048.77 cv
283.516 1051.36 287.798 1051.29 290.395 1048.6 cv
292.992 1045.92 292.282 1042.16 290.228 1039.04 cv
288.862 1036.96 286.969 1034.19 285.242 1034.22 cv
f
169.176 1046.71 mo
165.719 1046.71 li
165.719 1036.3 li
169.176 1036.3 li
169.176 1046.71 li
cp
f
170.146 1028.2 mo
171.496 1029.55 171.496 1031.74 170.146 1033.09 cv
168.795 1034.44 166.606 1034.44 165.256 1033.09 cv
163.905 1031.74 163.905 1029.55 165.256 1028.2 cv
166.606 1026.85 168.795 1026.85 170.146 1028.2 cv
173.524 1030.6 mo
174.211 1028.24 174.133 1025.94 172.289 1024.09 cv
169.648 1021.45 165.364 1021.45 162.722 1024.09 cv
160.079 1026.74 160.723 1030.5 162.722 1033.66 cv
164.051 1035.76 165.894 1038.56 167.625 1038.56 cv
169.358 1038.56 171.358 1035.54 172.289 1033.66 cv
172.789 1032.65 173.227 1031.62 173.524 1030.6 cv
f
135.473 1069.91 mo
136.823 1071.26 136.823 1073.46 135.473 1074.8 cv
134.123 1076.15 131.935 1076.15 130.585 1074.8 cv
129.234 1073.46 129.234 1071.26 130.585 1069.91 cv
131.935 1068.56 134.123 1068.56 135.473 1069.91 cv
138.85 1072.32 mo
139.537 1069.96 139.461 1067.65 137.617 1065.81 cv
134.973 1063.17 130.69 1063.17 128.048 1065.81 cv
125.409 1068.45 126.049 1072.22 128.048 1075.38 cv
129.379 1077.47 131.223 1080.28 132.952 1080.28 cv
134.684 1080.28 136.684 1077.26 137.617 1075.38 cv
138.116 1074.37 138.553 1073.33 138.85 1072.32 cv
f
241.607 1088.43 mo
242.955 1089.78 242.955 1091.97 241.607 1093.32 cv
240.256 1094.67 238.068 1094.67 236.717 1093.32 cv
235.368 1091.97 235.366 1089.78 236.717 1088.43 cv
238.068 1087.08 240.256 1087.08 241.607 1088.43 cv
244.983 1090.83 mo
245.67 1088.47 245.594 1086.17 243.748 1084.32 cv
241.108 1081.68 236.824 1081.68 234.182 1084.32 cv
231.541 1086.97 232.182 1090.73 234.182 1093.89 cv
235.512 1095.99 237.356 1098.79 239.084 1098.79 cv
240.817 1098.79 242.819 1095.77 243.748 1093.89 cv
244.248 1092.88 244.686 1091.85 244.983 1090.83 cv
f
82.7192 991.227 mo
80.8101 991.227 79.2622 989.678 79.2622 987.768 cv
79.2622 985.857 80.8101 984.31 82.7192 984.31 cv
84.6304 984.31 86.1772 985.857 86.1772 987.768 cv
86.1772 989.678 84.6304 991.227 82.7192 991.227 cv
81.6333 980.715 mo
77.4341 980.715 74.0317 984.119 74.0317 988.32 cv
74.0317 992.519 77.4341 995.924 81.6333 995.924 cv
85.8325 995.924 89.2388 992.519 89.2388 988.32 cv
89.2388 984.119 85.8325 980.715 81.6333 980.715 cv
f
188.125 913.815 mo
186.216 913.815 184.669 912.266 184.669 910.356 cv
184.669 908.445 186.216 906.898 188.125 906.898 cv
190.037 906.898 191.583 908.445 191.583 910.356 cv
191.583 912.266 190.037 913.815 188.125 913.815 cv
187.039 903.303 mo
182.84 903.303 179.438 906.707 179.438 910.908 cv
179.438 915.107 182.84 918.512 187.039 918.512 cv
191.239 918.512 194.645 915.107 194.645 910.908 cv
194.645 906.707 191.239 903.303 187.039 903.303 cv
f
125.6 1174.8 mo
123.69 1174.8 122.143 1173.25 122.143 1171.35 cv
122.143 1169.44 123.69 1167.89 125.6 1167.89 cv
127.51 1167.89 129.057 1169.44 129.057 1171.35 cv
129.057 1173.25 127.51 1174.8 125.6 1174.8 cv
124.512 1164.29 mo
120.315 1164.29 116.911 1167.7 116.911 1171.9 cv
116.911 1176.1 120.315 1179.5 124.512 1179.5 cv
128.713 1179.5 132.118 1176.1 132.118 1171.9 cv
132.118 1167.7 128.713 1164.29 124.512 1164.29 cv
f
165.034 1174.8 mo
163.121 1174.8 161.576 1173.25 161.576 1171.35 cv
161.576 1169.44 163.121 1167.89 165.034 1167.89 cv
166.943 1167.89 168.492 1169.44 168.492 1171.35 cv
168.492 1173.25 166.943 1174.8 165.034 1174.8 cv
163.946 1164.29 mo
159.746 1164.29 156.343 1167.7 156.343 1171.9 cv
156.343 1176.1 159.746 1179.5 163.946 1179.5 cv
168.147 1179.5 171.551 1176.1 171.551 1171.9 cv
171.551 1167.7 168.147 1164.29 163.946 1164.29 cv
f
239.993 1185.28 mo
238.083 1185.28 236.536 1183.73 236.536 1181.82 cv
236.536 1179.92 238.083 1178.37 239.993 1178.37 cv
241.905 1178.37 243.451 1179.92 243.451 1181.82 cv
243.451 1183.73 241.905 1185.28 239.993 1185.28 cv
238.909 1174.77 mo
234.708 1174.77 231.305 1178.18 231.305 1182.38 cv
231.305 1186.58 234.708 1189.98 238.909 1189.98 cv
243.107 1189.98 246.512 1186.58 246.512 1182.38 cv
246.512 1178.18 243.107 1174.77 238.909 1174.77 cv
f
268.632 1184.73 mo
266.723 1184.73 265.174 1183.18 265.174 1181.27 cv
265.174 1179.37 266.723 1177.81 268.632 1177.81 cv
270.542 1177.81 272.09 1179.37 272.09 1181.27 cv
272.09 1183.18 270.542 1184.73 268.632 1184.73 cv
267.547 1174.22 mo
263.346 1174.22 259.943 1177.62 259.943 1181.82 cv
259.943 1186.02 263.346 1189.43 267.547 1189.43 cv
271.745 1189.43 275.151 1186.02 275.151 1181.82 cv
275.151 1177.62 271.745 1174.22 267.547 1174.22 cv
f
521.647 1144.3 mo
519.738 1144.3 518.19 1142.75 518.19 1140.84 cv
518.19 1138.93 519.738 1137.38 521.647 1137.38 cv
523.558 1137.38 525.105 1138.93 525.105 1140.84 cv
525.105 1142.75 523.558 1144.3 521.647 1144.3 cv
520.564 1133.78 mo
516.362 1133.78 512.959 1137.19 512.959 1141.39 cv
512.959 1145.59 516.362 1149 520.564 1149 cv
524.76 1149 528.165 1145.59 528.165 1141.39 cv
528.165 1137.19 524.76 1133.78 520.564 1133.78 cv
f
516.954 1166.81 mo
515.043 1166.81 513.496 1165.26 513.496 1163.35 cv
513.496 1161.44 515.043 1159.89 516.954 1159.89 cv
518.865 1159.89 520.411 1161.44 520.411 1163.35 cv
520.411 1165.26 518.865 1166.81 516.954 1166.81 cv
515.868 1156.29 mo
511.668 1156.29 508.266 1159.7 508.266 1163.9 cv
508.266 1168.1 511.668 1171.5 515.868 1171.5 cv
520.067 1171.5 523.471 1168.1 523.471 1163.9 cv
523.471 1159.7 520.067 1156.29 515.868 1156.29 cv
f
261.028 1092.32 mo
259.119 1092.32 257.571 1090.77 257.571 1088.87 cv
257.571 1086.95 259.119 1085.41 261.028 1085.41 cv
262.938 1085.41 264.486 1086.95 264.486 1088.87 cv
264.486 1090.77 262.938 1092.32 261.028 1092.32 cv
259.943 1081.81 mo
255.743 1081.81 252.338 1085.21 252.338 1089.42 cv
252.338 1093.62 255.743 1097.02 259.943 1097.02 cv
264.143 1097.02 267.547 1093.62 267.547 1089.42 cv
267.547 1085.21 264.143 1081.81 259.943 1081.81 cv
f
32.8755 1034.12 mo
30.9644 1034.12 29.4185 1032.57 29.4185 1030.66 cv
29.4185 1028.75 30.9644 1027.2 32.8755 1027.2 cv
34.7856 1027.2 36.3335 1028.75 36.3335 1030.66 cv
36.3335 1032.57 34.7856 1034.12 32.8755 1034.12 cv
31.7881 1023.61 mo
27.5894 1023.61 24.186 1027.01 24.186 1031.21 cv
24.186 1035.41 27.5894 1038.81 31.7881 1038.81 cv
35.9888 1038.81 39.3931 1035.41 39.3931 1031.21 cv
39.3931 1027.01 35.9888 1023.61 31.7881 1023.61 cv
f
300.641 1131.65 mo
298.731 1131.65 297.182 1130.1 297.182 1128.19 cv
297.182 1126.28 298.731 1124.73 300.641 1124.73 cv
302.549 1124.73 304.098 1126.28 304.098 1128.19 cv
304.098 1130.1 302.549 1131.65 300.641 1131.65 cv
299.555 1121.13 mo
295.354 1121.13 291.95 1124.54 291.95 1128.74 cv
291.95 1132.94 295.354 1136.34 299.555 1136.34 cv
303.753 1136.34 307.159 1132.94 307.159 1128.74 cv
307.159 1124.54 303.753 1121.13 299.555 1121.13 cv
f
1001.08 1177.12 mo
1001.56 1178.97 1000.46 1180.86 998.609 1181.34 cv
996.764 1181.83 994.871 1180.73 994.389 1178.88 cv
993.902 1177.03 995.008 1175.14 996.853 1174.66 cv
998.701 1174.17 1000.59 1175.28 1001.08 1177.12 cv
991.188 1180.84 mo
992.254 1184.9 996.408 1187.33 1000.47 1186.27 cv
1004.53 1185.2 1006.96 1181.04 1005.9 1176.98 cv
1004.83 1172.92 1000.67 1170.49 996.615 1171.56 cv
992.549 1172.62 990.121 1176.78 991.188 1180.84 cv
f
970.992 1177.12 mo
971.475 1178.97 970.369 1180.86 968.523 1181.34 cv
966.676 1181.83 964.785 1180.73 964.303 1178.88 cv
963.816 1177.03 964.92 1175.14 966.768 1174.66 cv
968.613 1174.17 970.506 1175.28 970.992 1177.12 cv
961.102 1180.84 mo
962.168 1184.9 966.322 1187.33 970.387 1186.27 cv
974.445 1185.2 976.877 1181.04 975.809 1176.98 cv
974.742 1172.92 970.586 1170.49 966.527 1171.56 cv
962.461 1172.62 960.035 1176.78 961.102 1180.84 cv
f
944.133 1176.7 mo
944.62 1178.55 943.516 1180.44 941.668 1180.92 cv
939.82 1181.41 937.93 1180.3 937.443 1178.45 cv
936.961 1176.61 938.064 1174.71 939.912 1174.23 cv
941.76 1173.75 943.65 1174.85 944.133 1176.7 cv
934.242 1180.42 mo
935.31 1184.48 939.467 1186.91 943.533 1185.84 cv
947.592 1184.78 950.021 1180.62 948.955 1176.55 cv
947.889 1172.49 943.73 1170.07 939.668 1171.13 cv
935.607 1172.2 933.18 1176.36 934.242 1180.42 cv
f
894.975 1180.86 mo
894.039 1179.19 894.631 1177.08 896.297 1176.15 cv
897.959 1175.21 900.07 1175.8 901.002 1177.47 cv
901.938 1179.13 901.348 1181.24 899.682 1182.18 cv
898.018 1183.11 895.91 1182.52 894.975 1180.86 cv
903.605 1174.76 mo
901.549 1171.1 896.916 1169.8 893.25 1171.86 cv
889.592 1173.91 888.288 1178.55 890.346 1182.21 cv
892.402 1185.87 897.038 1187.17 900.699 1185.12 cv
904.361 1183.06 905.662 1178.42 903.605 1174.76 cv
f
998.391 1004.18 mo
996.478 1004.18 994.932 1002.63 994.932 1000.72 cv
994.932 998.81 996.478 997.26 998.391 997.26 cv
1000.3 997.26 1001.85 998.81 1001.85 1000.72 cv
1001.85 1002.63 1000.3 1004.18 998.391 1004.18 cv
997.303 993.665 mo
993.105 993.665 989.701 997.07 989.701 1001.27 cv
989.701 1005.47 993.105 1008.88 997.303 1008.88 cv
1001.5 1008.88 1004.91 1005.47 1004.91 1001.27 cv
1004.91 997.07 1001.5 993.665 997.303 993.665 cv
f
1051.62 1022.98 mo
1049.71 1022.98 1048.16 1021.43 1048.16 1019.52 cv
1048.16 1017.61 1049.71 1016.06 1051.62 1016.06 cv
1053.53 1016.06 1055.08 1017.61 1055.08 1019.52 cv
1055.08 1021.43 1053.53 1022.98 1051.62 1022.98 cv
1050.53 1012.47 mo
1046.34 1012.47 1042.93 1015.87 1042.93 1020.07 cv
1042.93 1024.27 1046.34 1027.68 1050.53 1027.68 cv
1054.73 1027.68 1058.14 1024.27 1058.14 1020.07 cv
1058.14 1015.87 1054.73 1012.47 1050.53 1012.47 cv
f
940.871 1044.92 mo
938.961 1044.92 937.412 1043.37 937.412 1041.46 cv
937.412 1039.55 938.961 1038.01 940.871 1038.01 cv
942.783 1038.01 944.329 1039.55 944.329 1041.46 cv
944.329 1043.37 942.783 1044.92 940.871 1044.92 cv
939.783 1034.41 mo
935.586 1034.41 932.184 1037.81 932.184 1042.02 cv
932.184 1046.21 935.586 1049.62 939.783 1049.62 cv
943.984 1049.62 947.389 1046.21 947.389 1042.02 cv
947.389 1037.81 943.984 1034.41 939.783 1034.41 cv
f
1022.99 1037.75 mo
1021.08 1037.75 1019.54 1036.2 1019.54 1034.29 cv
1019.54 1032.38 1021.08 1030.83 1022.99 1030.83 cv
1024.9 1030.83 1026.45 1032.38 1026.45 1034.29 cv
1026.45 1036.2 1024.9 1037.75 1022.99 1037.75 cv
1021.91 1027.24 mo
1017.71 1027.24 1014.3 1030.64 1014.3 1034.85 cv
1014.3 1039.04 1017.71 1042.45 1021.91 1042.45 cv
1026.11 1042.45 1029.51 1039.04 1029.51 1034.85 cv
1029.51 1030.64 1026.11 1027.24 1021.91 1027.24 cv
f
787.902 1175.72 mo
789.193 1177.14 789.092 1179.32 787.684 1180.61 cv
786.275 1181.9 784.088 1181.8 782.799 1180.39 cv
781.512 1178.98 781.609 1176.79 783.021 1175.51 cv
784.428 1174.22 786.617 1174.32 787.902 1175.72 cv
780.881 1183.62 mo
783.713 1186.72 788.521 1186.94 791.623 1184.1 cv
794.721 1181.27 794.938 1176.46 792.103 1173.36 cv
789.271 1170.26 784.463 1170.04 781.363 1172.88 cv
778.26 1175.71 778.047 1180.52 780.881 1183.62 cv
f
697.715 1183.75 mo
699.004 1185.16 698.902 1187.35 697.494 1188.64 cv
696.084 1189.93 693.898 1189.83 692.609 1188.42 cv
691.318 1187.01 691.418 1184.82 692.828 1183.53 cv
694.238 1182.25 696.426 1182.34 697.715 1183.75 cv
690.688 1191.65 mo
693.521 1194.75 698.332 1194.96 701.434 1192.13 cv
704.533 1189.29 704.747 1184.48 701.916 1181.39 cv
699.078 1178.29 694.269 1178.07 691.17 1180.9 cv
688.07 1183.74 687.853 1188.55 690.688 1191.65 cv
f
734.635 1183.33 mo
735.926 1184.74 735.824 1186.93 734.416 1188.21 cv
733.006 1189.5 730.82 1189.4 729.531 1187.99 cv
728.24 1186.59 728.338 1184.4 729.75 1183.11 cv
731.158 1181.82 733.346 1181.92 734.635 1183.33 cv
727.609 1191.22 mo
730.441 1194.32 735.254 1194.54 738.353 1191.7 cv
741.453 1188.87 741.668 1184.06 738.836 1180.96 cv
736 1177.86 731.191 1177.65 728.092 1180.48 cv
724.992 1183.31 724.777 1188.12 727.609 1191.22 cv
f
671.066 1139.42 mo
670.082 1137.78 670.617 1135.66 672.256 1134.68 cv
673.893 1133.69 676.016 1134.22 677 1135.86 cv
677.98 1137.5 677.451 1139.62 675.81 1140.6 cv
674.174 1141.59 672.049 1141.06 671.066 1139.42 cv
679.521 1133.08 mo
677.363 1129.48 672.693 1128.31 669.088 1130.47 cv
665.486 1132.63 664.318 1137.3 666.48 1140.9 cv
668.641 1144.5 673.307 1145.67 676.91 1143.51 cv
680.514 1141.35 681.682 1136.69 679.521 1133.08 cv
f
959.459 1083.39 mo
957.549 1083.39 956.002 1081.84 956.002 1079.93 cv
956.002 1078.02 957.549 1076.47 959.459 1076.47 cv
961.37 1076.47 962.918 1078.02 962.918 1079.93 cv
962.918 1081.84 961.37 1083.39 959.459 1083.39 cv
958.373 1072.88 mo
954.176 1072.88 950.771 1076.28 950.771 1080.48 cv
950.771 1084.68 954.176 1088.09 958.373 1088.09 cv
962.574 1088.09 965.978 1084.68 965.978 1080.48 cv
965.978 1076.28 962.574 1072.88 958.373 1072.88 cv
f
933.695 1077.48 mo
934.117 1079.35 932.949 1081.2 931.09 1081.62 cv
929.225 1082.04 927.373 1080.88 926.949 1079.01 cv
926.527 1077.15 927.695 1075.3 929.557 1074.88 cv
931.42 1074.46 933.269 1075.62 933.695 1077.48 cv
923.684 1080.87 mo
924.615 1084.97 928.688 1087.53 932.787 1086.6 cv
936.879 1085.67 939.447 1081.6 938.518 1077.5 cv
937.586 1073.41 933.514 1070.84 929.418 1071.77 cv
925.322 1072.7 922.756 1076.78 923.684 1080.87 cv
f
1047.97 1108.73 mo
1046.06 1108.73 1044.51 1107.18 1044.51 1105.27 cv
1044.51 1103.36 1046.06 1101.81 1047.97 1101.81 cv
1049.88 1101.81 1051.43 1103.36 1051.43 1105.27 cv
1051.43 1107.18 1049.88 1108.73 1047.97 1108.73 cv
1046.89 1098.22 mo
1042.69 1098.22 1039.28 1101.62 1039.28 1105.83 cv
1039.28 1110.03 1042.69 1113.43 1046.89 1113.43 cv
1051.08 1113.43 1054.49 1110.03 1054.49 1105.83 cv
1054.49 1101.62 1051.08 1098.22 1046.89 1098.22 cv
f
802.297 993.691 mo
800.541 994.443 798.514 993.627 797.76 991.873 cv
797.01 990.115 797.824 988.081 799.579 987.331 cv
801.336 986.581 803.367 987.394 804.117 989.152 cv
804.867 990.906 804.053 992.94 802.297 993.691 cv
797.17 984.455 mo
793.307 986.107 791.514 990.574 793.168 994.438 cv
794.818 998.299 799.287 1000.09 803.148 998.438 cv
807.012 996.785 808.801 992.316 807.15 988.455 cv
805.498 984.592 801.029 982.801 797.17 984.455 cv
f
848.432 1071.49 mo
846.676 1072.24 844.641 1071.43 843.891 1069.67 cv
843.139 1067.91 843.953 1065.88 845.709 1065.13 cv
847.465 1064.38 849.497 1065.19 850.25 1066.95 cv
851 1068.71 850.188 1070.74 848.432 1071.49 cv
843.297 1062.25 mo
839.435 1063.91 837.644 1068.37 839.297 1072.24 cv
840.949 1076.1 845.42 1077.89 849.283 1076.24 cv
853.141 1074.58 854.935 1070.12 853.279 1066.25 cv
851.627 1062.39 847.16 1060.6 843.297 1062.25 cv
f
640.163 1054.86 mo
638.408 1055.61 636.379 1054.8 635.627 1053.04 cv
634.875 1051.29 635.69 1049.26 637.445 1048.5 cv
639.201 1047.75 641.232 1048.57 641.984 1050.32 cv
642.734 1052.08 641.92 1054.11 640.163 1054.86 cv
635.033 1045.62 mo
631.17 1047.28 629.379 1051.75 631.033 1055.61 cv
632.684 1059.47 637.152 1061.26 641.016 1059.61 cv
644.877 1057.96 646.668 1053.49 645.016 1049.62 cv
643.363 1045.76 638.896 1043.97 635.033 1045.62 cv
f
838.662 1111 mo
836.908 1111.75 834.877 1110.93 834.123 1109.18 cv
833.373 1107.42 834.188 1105.39 835.943 1104.64 cv
837.699 1103.89 839.732 1104.7 840.48 1106.46 cv
841.23 1108.21 840.418 1110.24 838.662 1111 cv
833.533 1101.76 mo
829.67 1103.41 827.877 1107.88 829.533 1111.74 cv
831.184 1115.6 835.65 1117.39 839.514 1115.74 cv
843.375 1114.09 845.166 1109.62 843.514 1105.76 cv
841.863 1101.9 837.393 1100.11 833.533 1101.76 cv
f
9.77197 1198.24 mo
8.04346 1087.02 li
8.02979 1086.1 8.3833 1085.21 9.02393 1084.55 cv
54.9263 1037.41 li
54.9263 940.211 li
54.9263 939.281 55.2993 938.394 55.9624 937.741 cv
78.1763 915.945 li
78.1763 892.854 li
85.0923 892.854 li
85.0923 917.398 li
85.0923 918.325 84.7192 919.215 84.0552 919.866 cv
61.8403 941.661 li
61.8403 1038.81 li
61.8403 1039.71 61.4917 1040.58 60.8599 1041.22 cv
14.981 1088.35 li
16.688 1198.13 li
9.77197 1198.24 li
cp
f
786.543 1138.63 mo
734.656 1138.42 li
697.346 1100.64 li
697.346 1084.73 li
690.641 1078.77 li
657.953 1078.77 li
651.291 1084.29 li
592.256 1084.29 li
591.75 1083.79 li
491.304 984.268 li
491.304 951.379 li
504.471 938.706 li
504.471 899.596 li
483.174 877.918 li
483.174 840.049 li
486.631 840.049 li
486.631 876.504 li
507.928 898.182 li
507.928 940.18 li
494.762 952.85 li
494.762 982.824 li
593.676 1080.83 li
650.045 1080.83 li
656.709 1075.31 li
691.954 1075.31 li
700.805 1083.18 li
700.805 1099.22 li
736.107 1134.96 li
785.363 1135.16 li
791.412 1130.47 li
847.736 1130.47 li
864.736 1112.47 li
1007.92 1112.47 li
1019.59 1123.11 li
1027.13 1123.11 li
1027.13 1126.57 li
1018.25 1126.57 li
1006.58 1115.92 li
866.227 1115.92 li
849.225 1133.93 li
792.596 1133.93 li
786.543 1138.63 li
cp
f
1029.42 1145.87 mo
1003.98 1122.5 li
867.107 1122.5 li
851.115 1139.99 li
794.346 1139.99 li
788.283 1144.9 li
731.623 1144.02 li
692.16 1104.05 li
692.16 1089.31 li
686.422 1085.23 li
660.324 1085.23 li
654.219 1090.59 li
589.561 1090.59 li
589.057 1090.09 li
485.561 987.086 li
485.561 931.333 li
473.987 920.161 li
476.388 917.674 li
489.019 929.865 li
489.019 985.648 li
590.99 1087.13 li
652.916 1087.13 li
659.019 1081.78 li
687.527 1081.78 li
695.617 1087.53 li
695.617 1102.64 li
733.09 1140.58 li
787.079 1141.43 li
793.119 1136.53 li
849.594 1136.53 li
865.584 1119.05 li
1005.33 1119.05 li
1031.76 1143.32 li
1029.42 1145.87 li
cp
f
783.473 1131.77 mo
737.691 1131.77 li
704.262 1098.2 li
704.262 1081.31 li
693.271 1072.27 li
657.609 1072.27 li
650.693 1077.54 li
594.398 1077.54 li
510.68 993.891 li
510.68 959.586 li
523.914 946.971 li
526.298 949.477 li
514.137 961.065 li
514.137 992.458 li
595.83 1074.09 li
649.525 1074.09 li
656.441 1068.81 li
694.51 1068.81 li
707.719 1079.68 li
707.719 1096.77 li
739.127 1128.31 li
782.381 1128.31 li
789.006 1123.66 li
843.549 1123.66 li
859.535 1106.42 li
1015.46 1105.98 li
1015.47 1109.44 li
861.049 1109.87 li
845.057 1127.12 li
790.098 1127.12 li
783.473 1131.77 li
cp
f
1031.53 1161.12 mo
1000.92 1130.57 li
869.266 1130.57 li
854.568 1146.58 li
796.492 1146.58 li
790.435 1151.37 li
727.742 1150.71 li
684.813 1107.56 li
684.813 1094.81 li
682.127 1093.02 li
662.783 1093.02 li
657.707 1097.77 li
585.492 1097.77 li
566.263 1078.75 li
517.487 1078.75 li
505.499 1067.08 li
493.034 1067.08 li
493.034 1063.62 li
506.905 1063.62 li
518.893 1075.3 li
567.686 1075.3 li
586.913 1094.31 li
656.34 1094.31 li
661.416 1089.56 li
683.174 1089.56 li
688.269 1092.96 li
688.269 1106.13 li
729.193 1147.27 li
789.25 1147.9 li
795.291 1143.12 li
853.051 1143.12 li
867.745 1127.12 li
1002.34 1127.12 li
1033.97 1158.67 li
1031.53 1161.12 li
cp
f
921.607 987.68 mo
920.662 987.68 919.723 987.299 919.041 986.543 cv
917.758 985.129 917.869 982.94 919.283 981.66 cv
926.111 975.484 li
926.75 974.906 927.574 974.588 928.432 974.588 cv
946.059 974.588 li
960.435 958.458 li
961.094 957.723 962.033 957.301 963.019 957.301 cv
1194.38 957.301 li
1196.29 957.301 1197.84 958.848 1197.84 960.758 cv
1197.84 962.668 1196.29 964.217 1194.38 964.217 cv
964.57 964.217 li
950.191 980.346 li
949.533 981.083 948.594 981.504 947.607 981.504 cv
929.766 981.504 li
923.924 986.786 li
923.262 987.387 922.434 987.68 921.607 987.68 cv
cp
f
1193.16 1083.86 mo
1120.21 1010.61 li
1018.29 1010.61 li
1005.58 1022.13 li
748.434 1022.13 li
731.576 1003 li
691.869 1003 li
649.943 960.325 li
582.111 960.325 li
543.875 923.373 li
543.875 899.615 li
511.668 868.144 li
510.688 825.781 li
509.026 821.654 li
512.234 820.361 li
514.128 825.072 li
514.137 825.387 li
515.094 866.656 li
547.331 898.16 li
547.331 921.906 li
583.509 956.866 li
651.391 956.866 li
693.318 999.54 li
733.141 999.54 li
749.996 1018.68 li
1004.24 1018.68 li
1016.96 1007.15 li
1121.64 1007.15 li
1122.15 1007.66 li
1195.61 1081.43 li
1193.16 1083.86 li
cp
f
960.06 1016.08 mo
751.682 1016.08 li
735.185 997.639 li
696.627 997.494 li
696.123 996.986 li
627.045 927.611 li
621.594 919.918 li
624.416 917.92 li
629.785 925.494 li
698.07 994.04 li
736.736 994.185 li
753.227 1012.62 li
958.484 1012.62 li
962.723 1007.74 li
965.332 1010.01 li
960.06 1016.08 li
cp
f
935.982 1006.14 mo
851.912 1006.14 li
847.414 1002.63 li
849.541 999.908 li
853.102 1002.68 li
933.787 1002.68 li
934.799 1000.53 li
937.928 1002.01 li
935.982 1006.14 li
cp
f
833.732 1006.14 mo
752.15 1006.14 li
736.807 990.2 li
700.523 990.2 li
700.018 989.699 li
635.973 926.035 li
635.973 896.874 li
626.611 887.473 li
600.109 887.473 li
600.109 884.016 li
628.047 884.016 li
639.43 895.445 li
639.43 924.598 li
701.949 986.744 li
738.279 986.744 li
753.623 1002.68 li
832.394 1002.68 li
835.359 999.99 li
837.688 1002.55 li
833.732 1006.14 li
cp
f
1194.61 1152.28 mo
1102.04 1058.44 li
1035.65 1058.44 li
1000.21 1095.61 li
757.992 1094.74 li
713.477 1049.22 li
641.158 1049.22 li
641.158 1045.76 li
714.932 1045.76 li
759.451 1091.29 li
998.732 1092.15 li
1034.17 1054.98 li
1103.49 1054.98 li
1197.07 1149.85 li
1194.61 1152.28 li
cp
f
763.935 1119.98 mo
755.281 1119.98 li
702.227 1064.92 li
651.514 1064.5 li
646.191 1071.41 li
595.908 1071.41 li
528.35 1001.51 li
528.35 981.79 li
531.807 981.79 li
531.807 1000.11 li
597.373 1067.95 li
644.49 1067.95 li
649.822 1061.03 li
703.709 1061.47 li
756.75 1116.53 li
763.935 1116.53 li
763.935 1119.98 li
cp
f
951.574 1081.71 mo
921.387 1051.75 li
915.43 1051.75 li
892.422 1058.44 li
803.305 1058.44 li
782.125 1033.49 li
742.861 1033.49 li
726.006 1016.08 li
682.385 1016.08 li
657.316 991.816 li
605.816 991.816 li
597.184 982.315 li
599.744 979.991 li
607.346 988.359 li
658.713 988.359 li
683.783 1012.62 li
727.471 1012.62 li
744.326 1030.03 li
783.727 1030.03 li
804.904 1054.98 li
892.17 1054.98 li
899.129 1052.89 li
915.185 1048.29 li
922.813 1048.29 li
954.008 1079.26 li
951.574 1081.71 li
cp
f
838.682 1045.9 mo
817.129 1045.9 li
801.568 1027.32 li
744.549 1027.32 li
727.693 1008.43 li
684.957 1008.43 li
652.846 975.99 li
631.219 975.99 li
631.219 972.533 li
654.287 972.533 li
686.4 1004.97 li
729.242 1004.97 li
746.1 1023.86 li
803.184 1023.86 li
818.744 1042.45 li
838.682 1042.45 li
838.682 1045.9 li
cp
f
776.447 1084.37 mo
763.178 1084.37 li
716.035 1033.48 li
619.563 1032.94 li
602.701 1042.16 li
578.231 1042.16 li
543.875 1009.62 li
543.875 940.981 li
528.35 926.949 li
528.35 918.918 li
531.807 918.918 li
531.807 925.411 li
547.331 939.443 li
547.331 1008.13 li
579.609 1038.7 li
601.818 1038.7 li
618.69 1029.48 li
717.557 1030.03 li
764.688 1080.91 li
774.809 1080.91 li
782.021 1072.11 li
784.695 1074.3 li
776.447 1084.37 li
cp
f
765.924 1060.56 mo
744.885 1045.31 li
728.111 1026.02 li
623.027 1026.02 li
576.011 975.99 li
570.61 975.99 li
570.61 972.533 li
577.506 972.533 li
624.521 1022.56 li
729.689 1022.56 li
747.363 1042.89 li
767.943 1057.76 li
765.924 1060.56 li
cp
f
1086.79 1203.1 mo
1068.72 1183.24 li
1038.59 1183.24 li
1020.65 1166.06 li
1020.65 1160.62 li
994.875 1135.51 li
871.416 1135.51 li
857.152 1150.72 li
799.633 1150.72 li
794.232 1156.12 li
726.018 1156.12 li
676.238 1105.9 li
678.693 1103.47 li
727.461 1152.66 li
792.799 1152.66 li
798.203 1147.27 li
855.654 1147.27 li
869.916 1132.06 li
996.279 1132.06 li
1024.1 1159.16 li
1024.1 1164.58 li
1039.98 1179.79 li
1070.25 1179.79 li
1089.35 1200.77 li
1086.79 1203.1 li
cp
f
1074.91 1201.37 mo
1064.41 1189.93 li
1034.22 1189.93 li
1015.62 1172.4 li
1013.88 1164.77 li
988.986 1139.85 li
874.029 1139.85 li
857.605 1158.03 li
801.799 1158.03 li
794.236 1165.63 li
776.389 1165.63 li
770.391 1172.18 li
770.391 1184.34 li
766.934 1184.34 li
766.934 1170.83 li
774.865 1162.17 li
792.797 1162.17 li
800.359 1154.57 li
856.068 1154.57 li
872.494 1136.39 li
990.418 1136.39 li
1017.04 1163.03 li
1018.76 1170.61 li
1035.59 1186.47 li
1065.92 1186.47 li
1077.46 1199.04 li
1074.91 1201.37 li
cp
f
1066.83 1201.5 mo
1061.48 1196.75 li
1032.08 1196.75 li
1008.98 1175.59 li
1008.98 1168.88 li
986.225 1146.32 li
900.334 1146.32 li
870.152 1176.06 li
867.725 1173.6 li
898.916 1142.87 li
987.644 1142.87 li
1012.43 1167.43 li
1012.43 1174.07 li
1033.42 1193.29 li
1062.79 1193.29 li
1069.12 1198.91 li
1066.83 1201.5 li
cp
f
1094.61 1201.41 mo
1060.41 1166.02 li
1060.41 1105.22 li
1053.58 1095.18 li
1011.03 1095.18 li
1005.67 1101.01 li
846.861 1101.01 li
843.059 1105.77 li
840.357 1103.61 li
845.199 1097.55 li
1004.15 1097.55 li
1009.52 1091.72 li
1055.4 1091.72 li
1063.87 1104.15 li
1063.87 1164.62 li
1097.09 1199 li
1094.61 1201.41 li
cp
f
914.611 987.988 mo
901.357 987.988 li
901.357 984.529 li
914.611 984.529 li
914.611 987.988 li
cp
f
575.026 1017.81 mo
574.432 1017.81 573.829 1017.66 573.279 1017.33 cv
564.536 1012.2 li
562.889 1011.23 562.336 1009.12 563.304 1007.47 cv
564.27 1005.82 566.385 1005.27 568.036 1006.24 cv
576.78 1011.37 li
578.427 1012.34 578.979 1014.46 578.011 1016.1 cv
577.368 1017.2 576.213 1017.81 575.026 1017.81 cv
cp
f
645.346 1007.87 mo
645.166 1007.87 644.984 1007.86 644.801 1007.83 cv
634.863 1006.26 li
632.977 1005.96 631.691 1004.19 631.988 1002.3 cv
632.288 1000.41 634.059 999.135 635.943 999.424 cv
645.883 1001 li
647.768 1001.29 649.055 1003.06 648.758 1004.95 cv
648.486 1006.65 647.018 1007.87 645.346 1007.87 cv
cp
f
666.227 1137.24 mo
665.469 1137.24 664.701 1137 664.063 1136.48 cv
654.553 1128.85 li
653.064 1127.66 652.828 1125.48 654.023 1123.99 cv
655.215 1122.5 657.394 1122.26 658.883 1123.46 cv
668.393 1131.09 li
669.881 1132.28 670.12 1134.46 668.926 1135.95 cv
668.242 1136.8 667.236 1137.24 666.227 1137.24 cv
cp
f
805.404 1181.32 mo
793.516 1181.32 li
791.607 1181.32 790.059 1179.77 790.059 1177.87 cv
790.059 1175.96 791.607 1174.41 793.516 1174.41 cv
805.404 1174.41 li
807.313 1174.41 808.861 1175.96 808.861 1177.87 cv
808.861 1179.77 807.313 1181.32 805.404 1181.32 cv
cp
f
841.711 1185.94 mo
840.363 1185.94 839.084 1185.15 838.523 1183.83 cv
835.497 1176.69 li
834.754 1174.93 835.576 1172.9 837.334 1172.15 cv
839.09 1171.41 841.123 1172.23 841.867 1173.99 cv
844.891 1181.14 li
845.639 1182.9 844.814 1184.93 843.055 1185.67 cv
842.615 1185.86 842.16 1185.94 841.711 1185.94 cv
cp
f
860.725 1074.94 mo
850.352 1074.94 li
849.396 1074.94 848.623 1074.16 848.623 1073.21 cv
848.623 1072.25 849.396 1071.48 850.352 1071.48 cv
860.725 1071.48 li
861.68 1071.48 862.453 1072.25 862.453 1073.21 cv
862.453 1074.16 861.68 1074.94 860.725 1074.94 cv
cp
f
897.814 1203.17 mo
895.387 1200.71 li
910.646 1185.65 li
910.646 1158.26 li
920.689 1147.26 li
983.217 1147.26 li
988.662 1151.62 li
988.662 1187.56 li
998.613 1199.08 li
995.996 1201.34 li
985.203 1188.84 li
985.203 1153.28 li
982.006 1150.72 li
922.215 1150.72 li
914.103 1159.6 li
914.103 1187.1 li
897.814 1203.17 li
cp
f
988.482 1203.12 mo
978.288 1192.25 li
978.288 1158.91 li
975.537 1156.77 li
924.859 1156.77 li
920.227 1162.36 li
920.227 1190.11 li
909.07 1201.42 li
906.609 1198.99 li
916.768 1188.69 li
916.768 1161.12 li
923.232 1153.31 li
976.721 1153.31 li
981.746 1157.22 li
981.746 1190.88 li
991.004 1200.75 li
988.482 1203.12 li
cp
f
971.049 1203.19 mo
953.219 1186.25 li
953.219 1167.32 li
949.588 1162.82 li
930.938 1162.82 li
926.205 1168.82 li
926.205 1191.82 li
917.086 1201.4 li
914.58 1199.02 li
922.748 1190.44 li
922.748 1167.62 li
929.258 1159.36 li
951.236 1159.36 li
956.678 1166.1 li
956.678 1184.77 li
973.43 1200.68 li
971.049 1203.19 li
cp
f
970.732 1000.09 mo
970.564 1000.09 970.396 1000.08 970.225 1000.05 cv
968.338 999.779 967.027 998.023 967.305 996.133 cv
968.816 985.76 li
969.094 983.869 970.838 982.563 972.738 982.838 cv
974.629 983.111 975.935 984.866 975.662 986.76 cv
974.15 997.133 li
973.894 998.85 972.42 1000.09 970.732 1000.09 cv
cp
f
1195.84 1125 mo
1193.61 1125 1191.39 1124.15 1189.7 1122.44 cv
1118.62 1050.66 li
1032.75 1050.66 li
1027.97 1050.66 1024.1 1046.79 1024.1 1042.02 cv
1024.1 1037.24 1027.97 1033.37 1032.75 1033.37 cv
1122.22 1033.37 li
1124.53 1033.37 1126.73 1034.29 1128.36 1035.93 cv
1201.98 1110.28 li
1205.34 1113.67 1205.31 1119.14 1201.92 1122.5 cv
1200.24 1124.17 1198.04 1125 1195.84 1125 cv
cp
f
530.462 1054.96 mo
520.437 1043.44 li
523.046 1041.17 li
533.073 1052.7 li
530.462 1054.96 li
cp
f
1022.29 994.74 mo
1019.95 994.74 1018.05 992.842 1018.05 990.499 cv
1018.05 988.156 1019.95 986.258 1022.29 986.258 cv
1024.64 986.258 1026.54 988.156 1026.54 990.499 cv
1026.54 992.842 1024.64 994.74 1022.29 994.74 cv
cp
1202.06 1049.7 mo
1138.81 984.202 li
1137.18 982.518 1134.94 981.565 1132.59 981.565 cv
1020.65 981.565 li
1015.87 981.565 1012 985.435 1012 990.206 cv
1012 994.981 1015.87 998.852 1020.65 998.852 cv
1128.92 998.852 li
1189.62 1061.71 li
1191.32 1063.46 1193.58 1064.35 1195.84 1064.35 cv
1198 1064.35 1200.16 1063.54 1201.84 1061.92 cv
1205.28 1058.6 1205.37 1053.13 1202.06 1049.7 cv
cp
f
1050.53 1075.82 mo
1048.19 1075.82 1046.29 1073.92 1046.29 1071.58 cv
1046.29 1069.24 1048.19 1067.34 1050.53 1067.34 cv
1052.88 1067.34 1054.77 1069.24 1054.77 1071.58 cv
1054.77 1073.92 1052.88 1075.82 1050.53 1075.82 cv
cp
1126.34 1198.6 mo
1090.36 1160.47 li
1090.36 1082.64 li
1090.36 1080.51 1089.57 1078.46 1088.15 1076.88 cv
1078.09 1065.64 li
1076.45 1063.81 1074.11 1062.76 1071.65 1062.76 cv
1048.62 1062.76 li
1043.84 1062.76 1039.97 1066.63 1039.97 1071.41 cv
1039.97 1076.18 1043.84 1080.05 1048.62 1080.05 cv
1067.79 1080.05 li
1073.07 1085.95 li
1073.07 1163.9 li
1073.07 1166.11 1073.92 1168.23 1075.43 1169.83 cv
1113.77 1210.46 li
1115.47 1212.26 1117.76 1213.17 1120.06 1213.17 cv
1122.19 1213.17 1124.32 1212.39 1125.99 1210.82 cv
1129.46 1207.54 1129.62 1202.07 1126.34 1198.6 cv
cp
f
145.233 942.977 mo
145.233 948.231 140.978 952.484 135.723 952.484 cv
130.473 952.484 126.214 948.231 126.214 942.977 cv
126.214 937.727 130.473 933.467 135.723 933.467 cv
140.978 933.467 145.233 937.727 145.233 942.977 cv
1 1 1 rgb
f
257.926 968.213 mo
257.926 973.469 253.668 977.723 248.418 977.723 cv
243.164 977.723 238.909 973.469 238.909 968.213 cv
238.909 962.963 243.164 958.705 248.418 958.705 cv
253.668 958.705 257.926 962.963 257.926 968.213 cv
f
188.195 958.164 mo
188.195 963.418 183.938 967.674 178.686 967.674 cv
173.433 967.674 169.176 963.418 169.176 958.164 cv
169.176 952.911 173.433 948.656 178.686 948.656 cv
183.938 948.656 188.195 952.911 188.195 958.164 cv
f
301.284 979.62 mo
301.284 984.874 297.028 989.131 291.774 989.131 cv
286.522 989.131 282.266 984.874 282.266 979.62 cv
282.266 974.369 286.522 970.113 291.774 970.113 cv
297.028 970.113 301.284 974.369 301.284 979.62 cv
f
438.881 991.301 mo
438.881 996.555 434.624 1000.81 429.371 1000.81 cv
424.12 1000.81 419.864 996.555 419.864 991.301 cv
419.864 986.051 424.12 981.79 429.371 981.79 cv
434.624 981.79 438.881 986.051 438.881 991.301 cv
f
453.792 1037.21 mo
453.792 1042.46 449.537 1046.71 444.284 1046.71 cv
439.033 1046.71 434.775 1042.46 434.775 1037.21 cv
434.775 1031.95 439.033 1027.7 444.284 1027.7 cv
449.537 1027.7 453.792 1031.95 453.792 1037.21 cv
f
422.445 1163.9 mo
422.445 1169.15 418.188 1173.41 412.936 1173.41 cv
407.684 1173.41 403.426 1169.15 403.426 1163.9 cv
403.426 1158.65 407.684 1154.39 412.936 1154.39 cv
418.188 1154.39 422.445 1158.65 422.445 1163.9 cv
f
598.464 1174.83 mo
598.464 1180.08 594.209 1184.34 588.954 1184.34 cv
583.704 1184.34 579.447 1180.08 579.447 1174.83 cv
579.447 1169.58 583.704 1165.32 588.954 1165.32 cv
594.209 1165.32 598.464 1169.58 598.464 1174.83 cv
f
619.127 1114.2 mo
619.127 1119.45 614.87 1123.71 609.617 1123.71 cv
604.363 1123.71 600.109 1119.45 600.109 1114.2 cv
600.109 1108.94 604.363 1104.69 609.617 1104.69 cv
614.87 1104.69 619.127 1108.94 619.127 1114.2 cv
f
460.813 997.19 mo
460.813 991.94 465.069 987.68 470.322 987.68 cv
475.574 987.68 479.83 991.94 479.83 997.19 cv
479.83 1002.44 475.574 1006.7 470.322 1006.7 cv
465.069 1006.7 460.813 1002.44 460.813 997.19 cv
f
502.9 959.029 mo
502.9 953.779 507.159 949.521 512.409 949.521 cv
517.663 949.521 521.917 953.779 521.917 959.029 cv
521.917 964.281 517.663 968.536 512.409 968.536 cv
507.159 968.536 502.9 964.281 502.9 959.029 cv
f
327.885 1070.99 mo
327.885 1076.24 323.629 1080.5 318.376 1080.5 cv
313.123 1080.5 308.868 1076.24 308.868 1070.99 cv
308.868 1065.74 313.123 1061.48 318.376 1061.48 cv
323.629 1061.48 327.885 1065.74 327.885 1070.99 cv
f
326.936 1093.45 mo
326.936 1098.7 322.68 1102.96 317.428 1102.96 cv
312.175 1102.96 307.918 1098.7 307.918 1093.45 cv
307.918 1088.2 312.175 1083.94 317.428 1083.94 cv
322.68 1083.94 326.936 1088.2 326.936 1093.45 cv
f
350.161 1115.33 mo
350.161 1120.58 345.903 1124.84 340.653 1124.84 cv
335.4 1124.84 331.143 1120.58 331.143 1115.33 cv
331.143 1110.08 335.4 1105.82 340.653 1105.82 cv
345.903 1105.82 350.161 1110.08 350.161 1115.33 cv
f
461.158 1152.38 mo
455.903 1152.38 451.648 1148.12 451.648 1142.87 cv
451.648 1137.61 455.903 1133.36 461.158 1133.36 cv
466.409 1133.36 470.666 1137.61 470.666 1142.87 cv
470.666 1148.12 466.409 1152.38 461.158 1152.38 cv
f
294.813 1019.52 mo
294.813 1024.77 290.555 1029.03 285.303 1029.03 cv
280.051 1029.03 275.794 1024.77 275.794 1019.52 cv
275.794 1014.26 280.051 1010.01 285.303 1010.01 cv
290.555 1010.01 294.813 1014.26 294.813 1019.52 cv
f
376.346 986.366 mo
376.346 991.62 372.09 995.874 366.837 995.874 cv
361.585 995.874 357.329 991.62 357.329 986.366 cv
357.329 981.115 361.585 976.857 366.837 976.857 cv
372.09 976.857 376.346 981.115 376.346 986.366 cv
f
215.856 1005.01 mo
215.856 1010.26 211.6 1014.52 206.347 1014.52 cv
201.095 1014.52 196.838 1010.26 196.838 1005.01 cv
196.838 999.758 201.095 995.499 206.347 995.499 cv
211.6 995.499 215.856 999.758 215.856 1005.01 cv
f
177.209 1051.96 mo
177.209 1057.21 172.954 1061.46 167.702 1061.46 cv
162.448 1061.46 158.192 1057.21 158.192 1051.96 cv
158.192 1046.7 162.448 1042.45 167.702 1042.45 cv
172.954 1042.45 177.209 1046.7 177.209 1051.96 cv
f
142.537 1093.67 mo
142.537 1098.93 138.28 1103.18 133.03 1103.18 cv
127.775 1103.18 123.52 1098.93 123.52 1093.67 cv
123.52 1088.42 127.775 1084.16 133.03 1084.16 cv
138.28 1084.16 142.537 1088.42 142.537 1093.67 cv
f
248.67 1112.97 mo
248.67 1118.22 244.413 1122.48 239.163 1122.48 cv
233.908 1122.48 229.653 1118.22 229.653 1112.97 cv
229.653 1107.71 233.908 1103.46 239.163 1103.46 cv
244.413 1103.46 248.67 1107.71 248.67 1112.97 cv
f
323.342 1165.83 mo
323.342 1171.08 319.085 1175.34 313.833 1175.34 cv
308.58 1175.34 304.324 1171.08 304.324 1165.83 cv
304.324 1160.58 308.58 1156.32 313.833 1156.32 cv
319.085 1156.32 323.342 1160.58 323.342 1165.83 cv
f
178.686 1112.86 mo
178.686 1118.11 174.428 1122.36 169.176 1122.36 cv
163.924 1122.36 159.669 1118.11 159.669 1112.86 cv
159.669 1107.6 163.924 1103.35 169.176 1103.35 cv
174.428 1103.35 178.686 1107.6 178.686 1112.86 cv
f
196.551 1142.39 mo
196.551 1147.65 192.293 1151.9 187.044 1151.9 cv
181.788 1151.9 177.534 1147.65 177.534 1142.39 cv
177.534 1137.14 181.788 1132.89 187.044 1132.89 cv
192.293 1132.89 196.551 1137.14 196.551 1142.39 cv
f
28.3071 946.391 mo
28.3071 954.947 21.3711 961.883 12.8149 961.883 cv
4.2583 961.883 -2.67725 954.947 -2.67725 946.391 cv
-2.67725 937.833 4.2583 930.898 12.8149 930.898 cv
21.3711 930.898 28.3071 937.833 28.3071 946.391 cv
cp
f
28.3071 1006.7 mo
28.3071 1015.25 21.3711 1022.19 12.8149 1022.19 cv
4.2583 1022.19 -2.67725 1015.25 -2.67725 1006.7 cv
-2.67725 998.141 4.2583 991.205 12.8149 991.205 cv
21.3711 991.205 28.3071 998.141 28.3071 1006.7 cv
cp
f
981.047 981.152 mo
981.047 986.435 976.766 990.721 971.482 990.721 cv
966.199 990.721 961.914 986.435 961.914 981.152 cv
961.914 975.869 966.199 971.588 971.482 971.588 cv
976.766 971.588 981.047 975.869 981.047 981.152 cv
cp
f
904.06 986.87 mo
904.06 992.154 899.779 996.438 894.495 996.438 cv
889.215 996.438 884.93 992.154 884.93 986.87 cv
884.93 981.588 889.215 977.307 894.495 977.307 cv
899.779 977.307 904.06 981.588 904.06 986.87 cv
cp
f
851.273 996.438 mo
851.273 1001.72 846.992 1006 841.709 1006 cv
836.426 1006 832.141 1001.72 832.141 996.438 cv
832.141 991.154 836.426 986.87 841.709 986.87 cv
846.992 986.87 851.273 991.154 851.273 996.438 cv
cp
f
824.537 1037.7 mo
824.537 1042.98 820.252 1047.26 814.971 1047.26 cv
809.685 1047.26 805.404 1042.98 805.404 1037.7 cv
805.404 1032.41 809.685 1028.13 814.971 1028.13 cv
820.252 1028.13 824.537 1032.41 824.537 1037.7 cv
cp
f
916.109 1050.66 mo
916.109 1055.94 911.824 1060.22 906.545 1060.22 cv
901.26 1060.22 896.978 1055.94 896.978 1050.66 cv
896.978 1045.37 901.26 1041.09 906.545 1041.09 cv
911.824 1041.09 916.109 1045.37 916.109 1050.66 cv
cp
f
878.504 1074.29 mo
878.504 1079.57 874.221 1083.85 868.938 1083.85 cv
863.658 1083.85 859.371 1079.57 859.371 1074.29 cv
859.371 1069 863.658 1064.72 868.938 1064.72 cv
874.221 1064.72 878.504 1069 878.504 1074.29 cv
cp
f
765.566 1047.26 mo
765.566 1052.54 761.285 1056.83 756 1056.83 cv
750.719 1056.83 746.434 1052.54 746.434 1047.26 cv
746.434 1041.98 750.719 1037.7 756 1037.7 cv
761.285 1037.7 765.566 1041.98 765.566 1047.26 cv
cp
f
733.221 1083.88 mo
733.221 1089.17 728.939 1093.45 723.654 1093.45 cv
718.375 1093.45 714.088 1089.17 714.088 1083.88 cv
714.088 1078.6 718.375 1074.32 723.654 1074.32 cv
728.939 1074.32 733.221 1078.6 733.221 1083.88 cv
cp
f
680.605 1047.26 mo
680.605 1052.54 676.322 1056.83 671.039 1056.83 cv
665.758 1056.83 661.473 1052.54 661.473 1047.26 cv
661.473 1041.98 665.758 1037.7 671.039 1037.7 cv
676.322 1037.7 680.605 1041.98 680.605 1047.26 cv
cp
f
638.023 1006 mo
638.023 1011.29 633.74 1015.57 628.457 1015.57 cv
623.176 1015.57 618.893 1011.29 618.893 1006 cv
618.893 1000.72 623.176 996.438 628.457 996.438 cv
633.74 996.438 638.023 1000.72 638.023 1006 cv
cp
f
616.449 1041.09 mo
616.449 1046.37 612.164 1050.66 606.883 1050.66 cv
601.598 1050.66 597.316 1046.37 597.316 1041.09 cv
597.316 1035.81 601.598 1031.52 606.883 1031.52 cv
612.164 1031.52 616.449 1035.81 616.449 1041.09 cv
cp
f
592.967 1012.41 mo
592.967 1017.69 588.684 1021.97 583.4 1021.97 cv
578.118 1021.97 573.834 1017.69 573.834 1012.41 cv
573.834 1007.12 578.118 1002.84 583.4 1002.84 cv
588.684 1002.84 592.967 1007.12 592.967 1012.41 cv
cp
f
515.764 1065.36 mo
515.764 1070.64 511.484 1074.92 506.2 1074.92 cv
500.917 1074.92 496.633 1070.64 496.633 1065.36 cv
496.633 1060.07 500.917 1055.79 506.2 1055.79 cv
511.484 1055.79 515.764 1060.07 515.764 1065.36 cv
cp
f
506.2 1021.77 mo
506.2 1027.06 501.917 1031.34 496.633 1031.34 cv
491.352 1031.34 487.067 1027.06 487.067 1021.77 cv
487.067 1016.49 491.352 1012.21 496.633 1012.21 cv
501.917 1012.21 506.2 1016.49 506.2 1021.77 cv
cp
f
662.102 1119.78 mo
662.102 1125.44 657.62 1130.03 652.096 1130.03 cv
646.568 1130.03 642.09 1125.44 642.09 1119.78 cv
642.09 1114.11 646.568 1109.52 652.096 1109.52 cv
657.62 1109.52 662.102 1114.11 662.102 1119.78 cv
cp
f
822.244 1179.89 mo
822.244 1185.56 817.764 1190.15 812.238 1190.15 cv
806.711 1190.15 802.234 1185.56 802.234 1179.89 cv
802.234 1174.23 806.711 1169.63 812.238 1169.63 cv
817.764 1169.63 822.244 1174.23 822.244 1179.89 cv
cp
f
851.713 1191.11 mo
851.713 1196.78 847.236 1201.37 841.709 1201.37 cv
836.184 1201.37 831.701 1196.78 831.701 1191.11 cv
831.701 1185.44 836.184 1180.85 841.709 1180.85 cv
847.236 1180.85 851.713 1185.44 851.713 1191.11 cv
cp
f
888.51 1163.9 mo
888.51 1169.57 884.033 1174.16 878.504 1174.16 cv
872.978 1174.16 868.5 1169.57 868.5 1163.9 cv
868.5 1158.23 872.978 1153.64 878.504 1153.64 cv
884.033 1153.64 888.51 1158.23 888.51 1163.9 cv
cp
f
546.132 1060.22 mo
546.132 1065.51 541.848 1069.79 536.566 1069.79 cv
531.283 1069.79 527 1065.51 527 1060.22 cv
527 1054.94 531.283 1050.66 536.566 1050.66 cv
541.848 1050.66 546.132 1054.94 546.132 1060.22 cv
cp
f
508.893 891.109 mo
508.893 896.365 504.635 900.616 499.384 900.616 cv
494.13 900.616 489.875 896.365 489.875 891.109 cv
489.875 885.859 494.13 881.602 499.384 881.602 cv
504.635 881.602 508.893 885.859 508.893 891.109 cv
f
498.304 930.594 mo
498.304 935.848 494.048 940.104 488.795 940.104 cv
483.545 940.104 479.287 935.848 479.287 930.594 cv
479.287 925.342 483.545 921.086 488.795 921.086 cv
494.048 921.086 498.304 925.342 498.304 930.594 cv
f
245.101 88.8481 mo
242.528 86.5371 li
252.885 74.9976 li
252.885 49.9839 li
214.702 11.2388 li
60.5283 11.2388 li
40.9346 30.2573 li
-5.31543 30.2573 li
-5.31543 26.7993 li
39.5322 26.7993 li
59.1279 7.78174 li
216.151 7.78174 li
256.342 48.5649 li
256.342 76.3218 li
245.101 88.8481 li
cp
0 .862745 1 rgb
f
241.36 54.1733 mo
237.902 54.1733 li
237.902 49.4243 li
208.958 21.0366 li
67.4424 21.0366 li
42.374 45.3071 li
-5.31543 45.3071 li
-5.31543 41.8491 li
40.9766 41.8491 li
66.0449 17.5791 li
210.368 17.5791 li
241.36 47.9731 li
241.36 54.1733 li
cp
f
240.642 93.938 mo
238.729 93.938 237.183 92.3921 237.183 90.481 cv
237.183 88.5688 238.729 87.0229 240.642 87.0229 cv
242.55 87.0229 244.099 88.5688 244.099 90.481 cv
244.099 92.3921 242.55 93.938 240.642 93.938 cv
246.294 84.9341 mo
245.069 83.7085 241.519 84.4292 239.528 85.105 cv
235.989 86.3003 232.763 88.1289 232.763 91.8667 cv
232.763 95.603 235.792 98.6313 239.528 98.6313 cv
243.265 98.6313 245.476 95.5132 246.294 91.8667 cv
246.837 89.4438 247.517 86.1577 246.294 84.9341 cv
f
237.95 123.043 mo
236.04 123.043 234.492 121.494 234.492 119.585 cv
234.492 117.673 236.04 116.127 237.95 116.127 cv
239.861 116.127 241.407 117.673 241.407 119.585 cv
241.407 121.494 239.861 123.043 237.95 123.043 cv
243.604 114.037 mo
242.38 112.811 238.827 113.534 236.839 114.205 cv
233.3 115.404 230.073 117.234 230.073 120.968 cv
230.073 124.706 233.102 127.736 236.839 127.736 cv
240.575 127.736 242.785 124.616 243.604 120.968 cv
244.149 118.546 244.828 115.262 243.604 114.037 cv
f
268.722 123.076 mo
266.81 123.076 265.264 121.529 265.264 119.619 cv
265.264 117.709 266.81 116.16 268.722 116.16 cv
270.633 116.16 272.179 117.709 272.179 119.619 cv
272.179 121.529 270.633 123.076 268.722 123.076 cv
274.374 114.074 mo
273.151 112.848 269.6 113.567 267.61 114.242 cv
264.071 115.437 260.846 117.269 260.846 121.005 cv
260.846 124.742 263.874 127.771 267.61 127.771 cv
271.345 127.771 273.557 124.653 274.374 121.005 cv
274.919 118.581 275.6 115.296 274.374 114.074 cv
f
302.02 180.669 mo
302.02 182.581 300.473 184.126 298.564 184.126 cv
296.653 184.126 295.105 182.581 295.105 180.669 cv
295.105 178.759 296.653 177.211 298.564 177.211 cv
300.473 177.211 302.02 178.759 302.02 180.669 cv
293.017 175.016 mo
291.791 176.241 292.512 179.792 293.185 181.782 cv
294.383 185.32 296.214 188.546 299.948 188.546 cv
303.685 188.546 306.714 185.518 306.714 181.782 cv
306.714 178.045 303.597 175.833 299.948 175.016 cv
297.524 174.472 294.241 173.792 293.017 175.016 cv
f
272.63 211.789 mo
272.63 213.7 271.082 215.247 269.173 215.247 cv
267.263 215.247 265.714 213.7 265.714 211.789 cv
265.714 209.878 267.263 208.331 269.173 208.331 cv
271.082 208.331 272.63 209.878 272.63 211.789 cv
263.626 206.136 mo
262.4 207.36 263.121 210.911 263.795 212.901 cv
264.991 216.44 266.823 219.665 270.558 219.665 cv
274.295 219.665 277.323 216.637 277.323 212.901 cv
277.323 209.165 274.205 206.954 270.558 206.136 cv
268.134 205.592 264.851 204.912 263.626 206.136 cv
f
424.226 254.819 mo
424.226 256.729 422.679 258.278 420.768 258.278 cv
418.856 258.278 417.31 256.729 417.31 254.819 cv
417.31 252.91 418.856 251.362 420.768 251.362 cv
422.679 251.362 424.226 252.91 424.226 254.819 cv
415.222 249.165 mo
413.996 250.391 414.717 253.94 415.392 255.93 cv
416.587 259.471 418.417 262.696 422.155 262.696 cv
425.89 262.696 428.919 259.667 428.919 255.93 cv
428.919 252.195 425.8 249.983 422.155 249.165 cv
419.731 248.622 416.445 247.943 415.222 249.165 cv
f
269.223 277.293 mo
269.223 279.204 267.676 280.752 265.765 280.752 cv
263.853 280.752 262.307 279.204 262.307 277.293 cv
262.307 275.384 263.853 273.836 265.765 273.836 cv
267.676 273.836 269.223 275.384 269.223 277.293 cv
260.219 271.639 mo
258.993 272.866 259.714 276.415 260.389 278.405 cv
261.584 281.946 263.414 285.17 267.152 285.17 cv
270.887 285.17 273.916 282.141 273.916 278.405 cv
273.916 274.669 270.797 272.457 267.152 271.639 cv
264.728 271.096 261.442 270.418 260.219 271.639 cv
f
396.565 351.331 mo
396.565 353.241 395.019 354.79 393.107 354.79 cv
391.196 354.79 389.649 353.241 389.649 351.331 cv
389.649 349.422 391.196 347.874 393.107 347.874 cv
395.019 347.874 396.565 349.422 396.565 351.331 cv
387.561 345.677 mo
386.336 346.903 387.057 350.452 387.731 352.442 cv
388.927 355.983 390.757 359.208 394.495 359.208 cv
398.229 359.208 401.259 356.179 401.259 352.442 cv
401.259 348.707 398.14 346.495 394.495 345.677 cv
392.071 345.134 388.785 344.455 387.561 345.677 cv
f
607.991 414.558 mo
607.991 416.468 606.444 418.017 604.532 418.017 cv
602.622 418.017 601.075 416.468 601.075 414.558 cv
601.075 412.649 602.622 411.101 604.532 411.101 cv
606.444 411.101 607.991 412.649 607.991 414.558 cv
598.987 408.904 mo
597.761 410.13 598.481 413.679 599.157 415.669 cv
600.352 419.21 602.182 422.435 605.921 422.435 cv
609.655 422.435 612.685 419.406 612.685 415.669 cv
612.685 411.934 609.565 409.722 605.921 408.904 cv
603.497 408.361 600.21 407.682 598.987 408.904 cv
f
241.796 63.0483 mo
240.431 64.3853 238.243 64.3618 236.907 62.9976 cv
235.571 61.6333 235.593 59.4448 236.957 58.1079 cv
238.321 56.77 240.511 56.7939 241.847 58.1587 cv
243.184 59.5229 243.159 61.7119 241.796 63.0483 cv
239.535 52.6597 mo
237.803 52.6431 235.77 55.6431 234.821 57.5132 cv
233.131 60.8462 232.105 64.4106 234.722 67.0791 cv
237.335 69.7505 241.618 69.7939 244.288 67.1812 cv
246.956 64.564 246.352 60.7905 244.386 57.6128 cv
243.079 55.5015 241.266 52.6782 239.535 52.6597 cv
f
486.741 125.24 mo
485.376 126.578 483.186 126.554 481.851 125.19 cv
480.515 123.826 480.535 121.635 481.899 120.298 cv
483.264 118.962 485.454 118.986 486.789 120.35 cv
488.126 121.714 488.104 123.903 486.741 125.24 cv
484.479 114.85 mo
482.747 114.834 480.713 117.834 479.764 119.706 cv
478.074 123.037 477.052 126.601 479.665 129.272 cv
482.279 131.941 486.563 131.987 489.23 129.372 cv
491.898 126.757 491.295 122.981 489.33 119.804 cv
488.021 117.692 486.208 114.869 484.479 114.85 cv
f
483.054 155.171 mo
481.69 156.508 479.503 156.485 478.165 155.121 cv
476.827 153.756 476.852 151.567 478.216 150.23 cv
479.579 148.894 481.768 148.917 483.105 150.282 cv
484.44 151.646 484.419 153.833 483.054 155.171 cv
480.792 144.781 mo
479.06 144.764 477.027 147.764 476.079 149.637 cv
474.387 152.968 473.364 156.532 475.977 159.203 cv
478.595 161.873 482.876 161.917 485.547 159.302 cv
488.214 156.689 487.61 152.912 485.645 149.735 cv
484.334 147.623 482.524 144.799 480.792 144.781 cv
f
515.561 121.475 mo
514.198 122.81 512.008 122.789 510.674 121.424 cv
509.335 120.059 509.359 117.869 510.722 116.533 cv
512.085 115.198 514.275 115.221 515.61 116.585 cv
516.947 117.95 516.927 120.138 515.561 121.475 cv
513.3 111.085 mo
511.567 111.068 509.534 114.069 508.585 115.941 cv
506.895 119.272 505.87 122.835 508.485 125.507 cv
511.099 128.176 515.383 128.221 518.052 125.606 cv
520.72 122.991 520.117 119.215 518.151 116.039 cv
516.842 113.926 515.03 111.104 513.3 111.085 cv
f
303.197 123.798 mo
301.833 125.133 299.645 125.112 298.308 123.748 cv
296.971 122.383 296.995 120.192 298.358 118.856 cv
299.723 117.521 301.911 117.544 303.248 118.909 cv
304.586 120.273 304.561 122.46 303.197 123.798 cv
300.935 113.408 mo
299.202 113.391 297.171 116.391 296.222 118.264 cv
294.53 121.595 293.508 125.159 296.122 127.829 cv
298.735 130.499 303.019 130.544 305.689 127.929 cv
308.356 125.316 307.753 121.54 305.788 118.362 cv
304.479 116.249 302.667 113.427 300.935 113.408 cv
f
244.102 115.862 mo
241.569 113.508 li
262.683 90.7739 li
262.683 47.397 li
218.454 2.88525 li
49.5537 2.88525 li
39.8193 7.47412 li
38.3447 4.34717 li
48.7803 -.572754 li
219.892 -.572754 li
266.14 45.9702 li
266.14 92.1313 li
244.102 115.862 li
cp
f
15.7197 13.9048 mo
14.3706 12.5562 14.3706 10.3667 15.7197 9.01709 cv
17.0703 7.6665 19.2588 7.6665 20.6094 9.01709 cv
21.9619 10.3667 21.9619 12.5562 20.6094 13.9048 cv
19.2588 15.2563 17.0703 15.2563 15.7197 13.9048 cv
26.085 11.5347 mo
26.085 9.8042 23.0635 7.80127 21.1816 6.87354 cv
17.832 5.21533 14.2578 4.23096 11.6143 6.87354 cv
8.97168 9.51318 8.97559 13.7949 11.6162 16.439 cv
14.2578 19.0791 18.0244 18.438 21.1816 16.439 cv
23.2803 15.1089 26.085 13.269 26.085 11.5347 cv
f
303.303 155.431 mo
303.634 157.313 302.378 159.105 300.496 159.436 cv
298.616 159.769 296.822 158.511 296.491 156.633 cv
296.161 154.752 297.413 152.96 299.296 152.626 cv
301.177 152.294 302.97 153.55 303.303 155.431 cv
293.452 151.426 mo
292.46 152.846 293.787 156.218 294.793 158.061 cv
296.586 161.337 298.951 164.198 302.63 163.545 cv
306.31 162.897 308.766 159.39 308.118 155.711 cv
307.47 152.031 304.011 150.396 300.28 150.224 cv
297.798 150.108 294.445 150.008 293.452 151.426 cv
f
486.907 180.2 mo
487.237 182.081 485.982 183.874 484.102 184.206 cv
482.223 184.539 480.429 183.283 480.097 181.402 cv
479.767 179.52 481.02 177.726 482.902 177.397 cv
484.784 177.064 486.576 178.319 486.907 180.2 cv
477.058 176.197 mo
476.063 177.617 477.392 180.987 478.399 182.83 cv
480.193 186.105 482.559 188.965 486.235 188.315 cv
489.916 187.667 492.372 184.161 491.725 180.48 cv
491.073 176.802 487.618 175.165 483.886 174.993 cv
481.403 174.877 478.05 174.778 477.058 176.197 cv
f
517.737 178.482 mo
518.07 180.363 516.815 182.157 514.935 182.489 cv
513.053 182.82 511.261 181.564 510.929 179.683 cv
510.597 177.802 511.851 176.009 513.732 175.678 cv
515.614 175.345 517.405 176.6 517.737 178.482 cv
507.89 174.477 mo
506.897 175.898 508.223 179.267 509.231 181.111 cv
511.023 184.388 513.389 187.247 517.067 186.598 cv
520.747 185.95 523.202 182.442 522.555 178.761 cv
521.905 175.083 518.449 173.448 514.718 173.274 cv
512.236 173.159 508.883 173.061 507.89 174.477 cv
f
292.25 176.952 mo
284.694 168.857 li
269.975 168.857 li
255.19 152.227 li
255.19 116.46 li
272.19 97.9585 li
272.19 44.2241 li
225.436 -3.021 li
227.894 -5.45313 li
275.648 42.8022 li
275.648 99.3052 li
258.648 117.808 li
258.648 150.91 li
271.527 165.4 li
286.198 165.4 li
294.78 174.594 li
292.25 176.952 li
cp
f
273.195 115.832 mo
270.612 113.537 li
281.702 101.06 li
281.702 41.3462 li
237.588 -3.01709 li
240.04 -5.45605 li
285.159 39.9175 li
285.159 102.377 li
273.195 115.832 li
cp
f
285.321 138.322 mo
282.255 136.721 li
283.798 133.765 li
284.31 112.698 li
290.056 106.247 li
290.056 38.1709 li
249.352 -3.021 li
251.811 -5.45313 li
293.513 36.7529 li
293.513 107.563 li
287.737 114.049 li
287.236 134.653 li
285.321 138.322 li
cp
f
302.735 114.685 mo
299.276 114.685 li
299.276 35.5747 li
261.45 -3.02686 li
263.919 -5.44482 li
302.735 34.1636 li
302.735 114.685 li
cp
f
293.653 153.417 mo
286.083 148.964 li
287.835 145.987 li
295.406 150.437 li
293.653 153.417 li
cp
f
24.5439 12.9009 mo
24.4956 9.44287 li
29.7656 9.36865 li
29.8125 12.8267 li
24.5439 12.9009 li
cp
f
215.519 117.362 mo
213.033 114.957 li
222.056 105.63 li
222.056 53.3599 li
199.421 29.9692 li
76.3721 29.9692 li
51.0166 54.3882 li
-5.31543 54.3882 li
-5.31543 50.9302 li
49.6221 50.9302 li
74.9775 26.5122 li
200.887 26.5122 li
225.513 51.9585 li
225.513 107.028 li
215.519 117.362 li
cp
f
96.6606 63.9702 mo
-5.31543 63.9702 li
-5.31543 60.5122 li
95.1084 60.5122 li
116.382 36.5981 li
185.557 36.5981 li
204.493 53.9507 li
202.157 56.5005 li
184.213 40.0552 li
117.935 40.0552 li
96.6606 63.9702 li
cp
f
-4.00293 76.7856 mo
-6.62598 74.5337 li
-1.7627 68.8696 li
111.217 68.8696 li
135.189 45.2407 li
163.934 45.2407 li
172.492 52.8843 li
170.188 55.4629 li
162.613 48.6987 li
136.607 48.6987 li
112.635 72.3267 li
-.175781 72.3267 li
-4.00293 76.7856 li
cp
f
-4.05762 92.6362 mo
-6.57324 90.2661 li
4.62207 78.377 li
127.47 78.377 li
145.423 62.7339 li
147.695 65.3403 li
128.767 81.8354 li
6.11426 81.8354 li
-4.05762 92.6362 li
cp
f
-4.09277 107.84 mo
-6.53711 105.393 li
10.127 88.7515 li
168.747 88.7515 li
168.747 92.2095 li
11.5586 92.2095 li
-4.09277 107.84 li
cp
f
-4.07324 124.244 mo
-6.55762 121.837 li
17.5957 96.9048 li
161.385 96.8188 li
180.907 115.914 li
178.489 118.385 li
159.977 100.278 li
19.0615 100.361 li
-4.07324 124.244 li
cp
f
227.382 167.702 mo
193.09 167.702 li
164.138 138.227 li
164.138 122.315 li
152.72 110.018 li
25.2236 110.018 li
-4.10449 138.755 li
-6.52637 136.286 li
23.8125 106.56 li
154.229 106.56 li
167.596 120.956 li
167.596 136.813 li
194.542 164.245 li
225.947 164.245 li
231.907 158.268 li
234.354 160.71 li
227.382 167.702 li
cp
f
-4.10254 150.933 mo
-6.52832 148.468 li
21.0786 121.311 li
142.237 121.348 li
142.237 124.806 li
22.4927 124.769 li
-4.10254 150.933 li
cp
f
228.104 185.857 mo
157.659 185.857 li
135.688 163.958 li
111.729 163.958 li
86.5146 140.618 li
23.3369 140.618 li
9.07861 153.841 li
6.72949 151.305 li
21.9795 137.161 li
87.8677 137.161 li
113.084 160.499 li
137.118 160.499 li
159.089 182.4 li
228.104 182.4 li
228.104 185.857 li
cp
f
120.916 176.059 mo
93.9258 176.059 li
61.4619 146.38 li
36.583 146.38 li
28.4346 153.847 li
26.0986 151.298 li
35.2393 142.922 li
62.8066 142.922 li
95.2705 172.602 li
120.916 172.602 li
120.916 176.059 li
cp
f
24.4536 222.162 mo
-5.31543 222.162 li
-5.31543 218.704 li
23.1641 218.704 li
37.3525 206.389 li
37.3525 168.394 li
40.8105 168.394 li
40.8105 207.966 li
24.4536 222.162 li
cp
f
59.8286 207.466 mo
56.3696 207.466 li
56.3696 169.722 li
59.8286 169.722 li
59.8286 207.466 li
cp
f
147.278 231.383 mo
-5.31543 231.383 li
-5.31543 227.925 li
145.84 227.925 li
185.388 188.162 li
221.225 188.162 li
228.718 194.212 li
254.038 194.212 li
261.647 188.506 li
263.721 191.275 li
255.188 197.67 li
227.495 197.67 li
220.003 191.62 li
186.825 191.62 li
147.278 231.383 li
cp
f
154.186 238.012 mo
-5.31543 238.012 li
-5.31543 234.554 li
152.762 234.554 li
192.816 194.79 li
218.06 194.79 li
224.4 199.977 li
258.431 199.977 li
265.548 206.164 li
263.278 208.773 li
257.138 203.434 li
223.168 203.434 li
216.827 198.248 li
194.241 198.248 li
154.186 238.012 li
cp
f
199.981 243.199 mo
-5.31543 243.199 li
-5.31543 239.741 li
198.598 239.741 li
210.989 227.925 li
285.884 227.925 li
295.761 237.951 li
293.299 240.379 li
284.435 231.383 li
212.374 231.383 li
199.981 243.199 li
cp
f
61.5215 257.999 mo
51.9385 248.96 li
-5.31543 248.96 li
-5.31543 245.501 li
53.3135 245.501 li
63.8955 255.484 li
61.5215 257.999 li
cp
f
177.961 278.063 mo
61.9927 278.063 li
52.0479 268.119 li
52.0479 258.779 li
49.7666 255.874 li
-5.31543 255.874 li
-5.31543 252.417 li
51.4463 252.417 li
55.5059 257.582 li
55.5059 266.687 li
63.4248 274.605 li
176.532 274.605 li
213.849 237.435 li
264.413 237.435 li
264.413 240.892 li
215.276 240.892 li
177.961 278.063 li
cp
f
166.006 316.963 mo
113.231 316.963 li
102.187 306.772 li
102.187 292.283 li
97.0176 286.707 li
59.0752 286.707 li
47.5732 274.34 li
38.1514 274.635 li
34.0986 268.266 li
29.4561 268.266 li
12.4648 286.707 li
-5.31543 286.707 li
-5.31543 283.25 li
10.9482 283.25 li
27.9404 264.807 li
35.9946 264.807 li
40.0127 271.118 li
49.0347 270.835 li
60.5811 283.25 li
98.5273 283.25 li
105.644 290.928 li
105.644 305.255 li
114.581 313.505 li
164.573 313.505 li
225.948 252.129 li
245.022 252.129 li
263.927 271.674 li
261.441 274.079 li
243.557 255.587 li
227.38 255.587 li
166.006 316.963 li
cp
f
166.875 301.981 mo
129.547 301.981 li
129.547 298.522 li
165.433 298.522 li
219.606 243.772 li
249.551 243.772 li
265.114 258.762 li
309.789 259.042 li
319.362 249.196 li
321.841 251.607 li
311.241 262.508 li
263.71 262.211 li
248.155 247.231 li
221.048 247.231 li
166.875 301.981 li
cp
f
323.7 178.523 mo
314.27 169.119 li
313.969 141.188 li
320.333 123.515 li
308.497 111.503 li
308.497 31.27 li
273.845 -3.00732 li
276.276 -5.46533 li
311.955 29.8247 li
311.955 110.085 li
324.323 122.636 li
317.435 141.776 li
317.711 167.669 li
326.143 176.075 li
323.7 178.523 li
cp
f
338.466 150.162 mo
335.009 150.162 li
335.009 111.447 li
330.252 106.031 li
316.854 88.272 li
316.854 28.9429 li
285.72 -3.03076 li
288.198 -5.44189 li
320.313 27.5386 li
320.313 87.1138 li
332.931 103.849 li
338.466 110.143 li
338.466 150.162 li
cp
f
347.974 224.765 mo
344.517 224.749 li
345.102 87.5049 li
347.11 69.0181 li
347.11 16.2969 li
339.495 8.93604 li
309.821 8.93604 li
297.367 -2.98682 li
299.759 -5.48584 li
311.209 5.47803 li
340.894 5.47803 li
350.567 14.8276 li
350.558 69.2983 li
348.55 87.7886 li
347.974 224.765 li
cp
f
357.77 206.892 mo
354.313 206.892 li
354.313 99.606 li
365.839 87.021 li
365.839 18.894 li
345.55 -.572754 li
315.128 -.572754 li
312.075 -2.85205 li
314.142 -5.62109 li
316.275 -4.03076 li
346.941 -4.03076 li
369.296 17.4185 li
369.296 88.3647 li
357.77 100.95 li
357.77 206.892 li
cp
f
278.274 368.937 mo
275.903 366.418 li
293.845 349.525 li
337.174 349.525 li
359.788 326.909 li
359.788 269.024 li
386.31 240.772 li
386.858 210.514 li
374.77 199.287 li
374.77 27.5522 li
390.62 10.8403 li
390.62 -4.23584 li
394.078 -4.23584 li
394.078 12.2183 li
378.228 28.9292 li
378.228 197.782 li
390.344 209.032 li
389.745 242.167 li
363.245 270.391 li
363.245 328.34 li
338.606 352.982 li
295.215 352.982 li
278.274 368.937 li
cp
f
307.933 391.669 mo
305.499 389.211 li
371.89 323.446 li
371.89 268.134 li
393.212 246.523 li
393.212 192.335 li
387.45 186.573 li
387.45 28.8862 li
399.552 18.5122 li
399.552 -4.23584 li
403.009 -4.23584 li
403.009 20.103 li
390.907 30.4761 li
390.907 185.141 li
396.67 190.904 li
396.67 247.941 li
375.348 269.551 li
375.348 324.887 li
307.933 391.669 li
cp
f
390.329 347.951 mo
386.872 347.951 li
386.872 271.004 li
400.993 257.027 li
400.993 40.4712 li
408.774 32.9819 li
408.774 -4.23584 li
412.231 -4.23584 li
412.231 34.4507 li
404.452 41.9438 li
404.452 258.471 li
390.329 272.448 li
390.329 347.951 li
cp
f
427.501 5.47803 mo
424.043 5.47803 li
424.043 -4.23584 li
427.501 -4.23584 li
427.501 5.47803 li
cp
f
414.958 251.249 mo
408.774 244.132 li
408.774 72.2378 li
439.029 42.5005 li
439.029 -4.23584 li
442.487 -4.23584 li
442.487 43.9487 li
412.231 73.688 li
412.231 242.838 li
417.568 248.979 li
414.958 251.249 li
cp
f
600.408 412.193 mo
587.829 398.847 li
586.102 389.076 li
536.71 339.394 li
536.71 285.252 li
531.083 279.505 li
472.87 279.505 li
420.881 225.458 li
420.876 224.768 li
420.008 83.5649 li
420.512 83.0552 li
478.792 24.0737 li
478.792 -4.23584 li
482.251 -4.23584 li
482.251 25.4927 li
423.474 84.9761 li
424.329 224.056 li
474.343 276.047 li
532.538 276.047 li
540.168 283.84 li
540.168 337.97 li
589.321 387.408 li
591.054 397.23 li
602.924 409.82 li
600.408 412.193 li
cp
f
637.272 415.328 mo
636.163 415.328 635.056 414.904 634.211 414.056 cv
551.226 330.783 li
550.416 329.972 549.964 328.875 549.964 327.73 cv
549.964 275.821 li
540.104 265.96 li
480.233 265.96 li
479.081 265.96 477.978 265.501 477.167 264.685 cv
431.928 219.16 li
431.122 218.349 430.672 217.253 430.672 216.112 cv
430.672 91.6333 li
430.672 90.4868 431.128 89.3882 431.938 88.5776 cv
492.046 28.4673 li
492.046 -4.23584 li
492.046 -6.62354 493.981 -8.55811 496.368 -8.55811 cv
498.756 -8.55811 500.69 -6.62354 500.69 -4.23584 cv
500.69 30.2583 li
500.69 31.4048 500.235 32.5039 499.425 33.314 cv
439.315 93.4253 li
439.315 214.331 li
482.031 257.317 li
541.896 257.317 li
543.042 257.317 544.141 257.773 544.951 258.582 cv
557.343 270.974 li
558.152 271.784 558.608 272.883 558.608 274.03 cv
558.608 325.945 li
640.333 407.955 li
642.019 409.648 642.016 412.382 640.323 414.066 cv
639.478 414.908 638.376 415.328 637.272 415.328 cv
cp
f
512.421 249.537 mo
489.575 249.537 li
466.691 225.448 li
466.691 207.601 li
445.366 185.991 li
445.366 102.731 li
509.972 38.188 li
509.962 34.5449 509.919 18.0571 509.974 10.939 cv
509.999 7.68701 510.926 5.24854 512.731 3.68896 cv
514.862 1.84814 517.403 1.95361 518.077 2.021 cv
540.743 2.021 li
543.442 2.021 545.414 1.35693 546.605 .04834 cv
548.161 -1.65967 547.96 -4.03955 547.956 -4.06299 cv
551.396 -4.42139 li
551.413 -4.26514 551.782 -.54248 549.201 2.33447 cv
547.329 4.4209 544.481 5.47803 540.743 5.47803 cv
517.741 5.46094 li
517.741 5.46094 li
517.741 5.45947 516.142 5.28955 514.965 6.3291 cv
513.964 7.21191 513.448 8.77295 513.431 10.9653 cv
513.371 18.9312 513.431 38.6987 513.431 38.8979 cv
513.433 39.6167 li
512.925 40.1265 li
448.825 104.162 li
448.825 184.572 li
470.148 206.183 li
470.148 224.067 li
491.06 246.079 li
510.985 246.079 li
524.821 232.18 li
527.291 229.357 li
550.949 229.645 li
558.03 222.057 li
558.03 196.732 li
566.241 187.405 li
568.839 189.688 li
561.489 198.036 li
561.489 223.421 li
552.435 233.123 li
528.841 232.835 li
527.347 234.54 li
512.421 249.537 li
cp
f
500.403 219.859 mo
496.946 219.859 li
496.946 204.988 li
492.458 200.263 li
476.954 200.263 li
458.046 182.468 li
458.046 113.967 li
579.577 -6.98486 li
582.016 -4.53369 li
461.505 115.404 li
461.505 180.972 li
478.323 196.806 li
493.94 196.806 li
500.403 203.607 li
500.403 219.859 li
cp
f
478.126 178.417 mo
468.13 168.116 li
468.13 113.965 li
468.64 113.46 li
588.222 -5.46143 li
590.66 -3.01025 li
471.587 115.404 li
471.587 166.714 li
480.608 176.009 li
478.126 178.417 li
cp
f
485.996 115.835 mo
482.538 115.835 li
482.538 108.203 li
593.912 -2.59229 li
644.625 -2.59229 li
649.016 -6.98193 li
651.461 -4.53711 li
646.057 .866699 li
595.341 .866699 li
485.996 109.64 li
485.996 115.835 li
cp
f
481.101 148.76 mo
478.788 146.189 li
497.809 129.089 li
497.809 102.736 li
595.922 3.74951 li
648.343 3.74951 li
658.493 -6.95068 li
661.002 -4.5708 li
649.829 7.20752 li
597.365 7.20752 li
501.267 104.16 li
501.267 130.632 li
481.101 148.76 li
cp
f
515.098 111.804 mo
511.64 111.804 li
511.64 96.9673 li
512.148 96.4585 li
599.387 9.51025 li
649.531 9.51025 li
666.314 -6.9917 li
668.738 -4.52686 li
650.946 12.9683 li
600.815 12.9683 li
515.098 98.4019 li
515.098 111.804 li
cp
f
509.04 175.614 mo
496.656 164.406 li
496.656 142.792 li
503.384 135.404 li
522.655 135.404 li
527.921 129.225 li
527.921 89.7681 li
600.945 16.1392 li
653.847 16.1392 li
675.526 -5.46143 li
677.968 -3.01025 li
655.274 19.5962 li
602.387 19.5962 li
531.378 91.1929 li
531.378 130.498 li
524.251 138.862 li
504.913 138.862 li
500.114 144.132 li
500.114 162.872 li
511.36 173.047 li
509.04 175.614 li
cp
f
521.424 155.465 mo
519.15 152.858 li
534.404 139.544 li
534.404 93.229 li
605.142 21.3257 li
657.587 21.3257 li
684.164 -5.45605 li
686.618 -3.01709 li
659.024 24.7827 li
606.59 24.7827 li
537.861 94.647 li
537.861 141.118 li
521.424 155.465 li
cp
f
546.793 143.462 mo
543.335 143.462 li
543.335 93.2319 li
543.83 92.7261 li
607.442 27.9536 li
660.752 27.9536 li
693.669 -5.44873 li
696.131 -3.02393 li
662.2 31.4116 li
608.894 31.4116 li
546.793 94.644 li
546.793 143.462 li
cp
f
551.167 177.012 mo
548.761 174.533 li
558.322 165.244 li
558.322 86.9761 li
611.776 33.7163 li
664.216 33.7163 li
703.185 -5.45605 li
705.636 -3.01709 li
665.653 37.1743 li
613.204 37.1743 li
561.779 88.4106 li
561.779 166.706 li
551.167 177.012 li
cp
f
577.049 113.408 mo
573.591 113.408 li
573.591 81.4155 li
614.361 40.0552 li
666.81 40.0552 li
712.409 -5.4585 li
714.852 -3.01416 li
668.242 43.5142 li
615.807 43.5142 li
577.049 82.8335 li
577.049 113.408 li
cp
f
821.683 12.9692 mo
818.226 12.9692 li
818.226 3.94873 li
810.452 -2.94287 li
812.745 -5.52979 li
821.683 2.396 li
821.683 12.9692 li
cp
f
581.942 147.385 mo
579.646 144.801 li
588.721 136.745 li
588.721 78.2173 li
621.018 47.2583 li
668.54 47.2583 li
697.066 18.7319 li
796.756 18.7319 li
808.571 30.5469 li
825.242 30.5469 li
830.04 25.2681 li
830.04 -4.23584 li
833.499 -4.23584 li
833.499 26.605 li
826.772 34.0039 li
807.14 34.0039 li
795.325 22.1899 li
698.497 22.1899 li
669.971 50.7163 li
622.407 50.7163 li
592.178 79.6929 li
592.178 138.297 li
581.942 147.385 li
cp
f
607.304 111.804 mo
603.847 111.804 li
603.847 75.9331 li
626.47 53.3101 li
673.412 53.3101 li
699.924 25.3608 li
793.863 25.3608 li
806.542 37.7495 li
829.038 37.7495 li
836.669 30.1187 li
836.669 -4.23584 li
840.127 -4.23584 li
840.127 31.5503 li
830.469 41.2075 li
805.135 41.2075 li
792.454 28.8179 li
701.408 28.8179 li
674.897 56.7671 li
627.901 56.7671 li
607.304 77.3657 li
607.304 111.804 li
cp
f
637.85 111.804 mo
634.393 111.804 li
634.393 99.5708 li
701.956 30.8369 li
791.293 30.5435 li
803.396 42.936 li
831.077 42.936 li
842.434 32.1108 li
842.434 -4.23584 li
845.892 -4.23584 li
845.892 33.5933 li
832.462 46.394 li
801.939 46.394 li
789.841 34.0083 li
703.411 34.2871 li
637.85 100.986 li
637.85 111.804 li
cp
f
669.255 85.0469 mo
665.799 85.0469 li
665.799 77.9556 li
705.563 37.7495 li
786.975 37.7495 li
798.212 49.2739 li
835.118 49.2739 li
848.483 36.7129 li
848.483 -4.23584 li
851.942 -4.23584 li
851.942 38.2085 li
836.489 52.7329 li
796.754 52.7329 li
785.517 41.2075 li
707.004 41.2075 li
669.255 79.377 li
669.255 85.0469 li
cp
f
728.327 82.1245 mo
724.87 82.1245 li
724.87 68.9058 li
750.357 42.9429 li
784.647 42.6421 li
796.756 54.7515 li
837.689 54.7515 li
854.243 38.4673 li
854.243 -4.23584 li
857.702 -4.23584 li
857.702 39.9165 li
839.104 58.2085 li
795.325 58.2085 li
783.229 46.1138 li
751.819 46.3872 li
728.327 70.3208 li
728.327 82.1245 li
cp
f
835.349 71.3403 mo
813.329 71.3403 li
813.329 67.8833 li
833.955 67.8833 li
860.873 41.9136 li
860.873 -4.23584 li
864.332 -4.23584 li
864.332 43.3823 li
835.349 71.3403 li
cp
f
833.649 83.854 mo
786.468 83.854 li
779.934 78.2495 li
782.183 75.6265 li
787.747 80.396 li
832.195 80.396 li
867.502 44.2495 li
867.502 -4.23584 li
870.96 -4.23584 li
870.96 45.6577 li
833.649 83.854 li
cp
f
876.146 51.5806 mo
872.688 51.5806 li
872.688 -4.23584 li
876.146 -4.23584 li
876.146 51.5806 li
cp
f
720.393 123.515 mo
676.748 123.515 li
676.748 120.056 li
718.971 120.056 li
752.396 87.0229 li
861.873 87.0229 li
891.416 56.6421 li
891.416 39.6567 li
878.74 26.939 li
878.74 -4.23584 li
882.197 -4.23584 li
882.197 25.5103 li
894.873 38.229 li
894.873 58.0469 li
863.335 90.481 li
753.818 90.481 li
720.393 123.515 li
cp
f
894.873 12.9692 mo
891.416 12.9692 li
891.416 -4.23584 li
894.873 -4.23584 li
894.873 12.9692 li
cp
f
600.529 240.466 mo
588.718 230.154 li
588.718 145.365 li
602.136 132.262 li
716.374 132.262 li
756.429 92.4976 li
865.634 92.4976 li
904.096 54.3188 li
904.096 -4.23584 li
907.553 -4.23584 li
907.553 55.7573 li
867.06 95.9556 li
757.852 95.9556 li
717.799 135.72 li
603.544 135.72 li
592.176 146.821 li
592.176 228.581 li
602.803 237.86 li
600.529 240.466 li
cp
f
640.907 260.774 mo
629.3 260.774 li
620.271 250.779 li
620.271 241.018 li
595.49 215.559 li
595.49 151.69 li
608.344 139.466 li
718.958 139.466 li
758.144 99.7026 li
868.508 99.7026 li
909.569 58.0659 li
909.569 -4.23584 li
913.026 -4.23584 li
913.026 59.4829 li
869.953 103.16 li
759.592 103.16 li
720.406 142.924 li
609.726 142.924 li
598.949 153.173 li
598.949 214.154 li
623.729 239.613 li
623.729 249.45 li
630.835 257.317 li
639.401 257.317 li
650.608 245.268 li
658.93 240.809 li
660.564 243.857 li
652.749 248.044 li
640.907 260.774 li
cp
f
629.702 240.379 mo
607.017 217.397 li
607.017 164.113 li
626.461 144.364 li
721.28 144.364 li
736.263 129.669 li
824.415 129.669 li
849.484 104.024 li
871.685 104.024 li
915.333 60.6587 li
915.333 -4.23584 li
918.79 -4.23584 li
918.79 62.0972 li
873.11 107.482 li
850.939 107.482 li
825.87 133.126 li
737.675 133.126 li
722.692 147.822 li
627.909 147.822 li
610.474 165.531 li
610.474 215.979 li
632.165 237.948 li
629.702 240.379 li
cp
f
643.414 270.083 mo
640.929 267.682 li
650.947 257.317 li
674.905 257.317 li
679.628 252.829 li
679.628 239.848 li
671.389 231.096 li
629.899 231.096 li
613.646 213.917 li
613.646 170.147 li
632.82 151.277 li
725.909 151.277 li
740.896 137.161 li
831.023 137.161 li
853.786 112.956 li
873.712 112.956 li
923.977 63.8179 li
923.977 -4.23584 li
927.435 -4.23584 li
927.435 65.2729 li
875.118 116.414 li
855.282 116.414 li
832.519 140.618 li
742.267 140.618 li
727.28 154.736 li
634.235 154.736 li
617.102 171.595 li
617.102 212.542 li
631.388 227.639 li
672.882 227.639 li
683.087 238.478 li
683.087 254.313 li
676.286 260.774 li
652.413 260.774 li
643.414 270.083 li
cp
f
872.176 127.439 mo
869.741 124.984 li
928.587 66.7085 li
928.587 -4.23584 li
932.044 -4.23584 li
932.044 68.1499 li
872.176 127.439 li
cp
f
885.941 124.482 mo
882.484 124.482 li
882.484 119.728 li
933.773 68.8931 li
933.773 -4.23584 li
937.231 -4.23584 li
937.231 70.3345 li
885.941 121.17 li
885.941 124.482 li
cp
f
628.558 208.115 mo
622.577 202.132 li
622.577 173.652 li
638.823 156.177 li
739.551 156.177 li
758.279 141.734 li
889.42 141.734 li
894.586 135.124 li
894.586 118.001 li
895.097 117.494 li
958.555 54.3188 li
958.555 17.729 li
973.538 2.74463 li
973.538 -4.23584 li
976.995 -4.23584 li
976.995 4.17627 li
962.013 19.1606 li
962.013 55.7573 li
961.503 56.2642 li
898.044 119.439 li
898.044 136.316 li
891.104 145.192 li
759.458 145.192 li
740.73 159.635 li
640.331 159.635 li
626.034 175.009 li
626.034 200.701 li
631.003 205.67 li
628.558 208.115 li
cp
f
644.216 178.476 mo
641.856 175.948 li
650.998 167.415 li
704.954 167.415 li
710.718 171.451 li
747.45 171.451 li
772.59 147.82 li
894.032 147.82 li
900.347 139.737 li
900.347 121.063 li
964.315 58.0503 li
964.315 20.8892 li
980.452 5.03955 li
980.452 -4.23584 li
983.911 -4.23584 li
983.911 6.4917 li
967.773 22.3384 li
967.773 59.4976 li
903.804 122.51 li
903.804 140.924 li
895.717 151.277 li
773.96 151.277 li
748.821 174.908 li
709.627 174.908 li
703.863 170.873 li
652.362 170.873 li
644.216 178.476 li
cp
f
1092.69 7.49365 mo
1071.22 7.49365 li
1071.22 4.03662 li
1091.24 4.03662 li
1100.53 -5.44482 li
1103 -3.02686 li
1092.69 7.49365 li
cp
f
1127.41 12.9692 mo
1123.95 12.9692 li
1123.95 -4.23584 li
1127.41 -4.23584 li
1127.41 12.9692 li
cp
f
1143.54 28.8179 mo
1140.09 28.8179 li
1140.09 -4.23584 li
1143.54 -4.23584 li
1143.54 28.8179 li
cp
f
1158.24 12.2896 mo
1154.78 12.2896 li
1154.78 -4.23584 li
1158.24 -4.23584 li
1158.24 12.2896 li
cp
f
1172.65 28.8179 mo
1169.19 28.8179 li
1169.19 -4.23584 li
1172.65 -4.23584 li
1172.65 28.8179 li
cp
f
1039.03 189.083 mo
1036.56 186.665 li
1049.81 173.122 li
1052.28 175.54 li
1039.03 189.083 li
cp
f
1143.01 157.618 mo
1142.92 154.162 li
1153.87 153.874 li
1153.96 157.329 li
1143.01 157.618 li
cp
f
934.469 102.502 mo
931.93 100.155 li
934.232 97.6621 li
989.097 42.5112 li
989.097 38.1782 li
999.375 28.8198 li
1080.58 28.5259 li
1099.02 46.9712 li
1183.16 46.9712 li
1207.42 22.4565 li
1209.88 24.8882 li
1184.61 50.4292 li
1097.59 50.4292 li
1079.15 31.9888 li
1000.72 32.2729 li
992.555 39.7075 li
992.555 43.938 li
936.727 100.056 li
934.469 102.502 li
cp
f
744.016 191.333 mo
703.965 191.333 li
697.813 187.946 li
699.479 184.917 li
704.852 187.874 li
742.6 187.874 li
777.182 153.871 li
896.126 154.159 li
906.401 142.795 li
906.401 125.494 li
914.33 117.565 li
953.804 117.565 li
978.15 93.2222 li
978.15 71.6216 li
1014.01 34.8735 li
1076.79 34.5757 li
1096.39 52.8569 li
1186.89 52.8569 li
1207.4 31.4907 li
1209.9 33.8853 li
1188.37 56.3149 li
1095.03 56.3149 li
1075.44 38.0405 li
1015.48 38.3237 li
981.607 73.0298 li
981.607 94.6538 li
955.235 121.023 li
915.762 121.023 li
909.86 126.925 li
909.86 144.129 li
897.659 157.62 li
778.594 157.333 li
744.016 191.333 li
cp
f
686.564 205.004 mo
671.806 190.849 li
674.198 188.354 li
687.682 201.287 li
693.449 200.263 li
739.434 199.98 li
780.355 160.212 li
899.889 160.212 li
912.452 146.792 li
912.452 130.577 li
919.902 124.48 li
956.116 124.48 li
983.336 97.5415 li
983.336 76.8032 li
1018.06 41.7856 li
1073.64 41.7856 li
1092.08 59.2573 li
1188.65 59.2573 li
1208.89 39.1772 li
1211.33 41.6333 li
1190.07 62.7153 li
1090.7 62.7153 li
1072.26 45.2427 li
1019.5 45.2427 li
986.794 78.2271 li
986.794 98.9829 li
957.539 127.938 li
921.137 127.938 li
915.909 132.216 li
915.909 148.158 li
901.388 163.67 li
781.761 163.67 li
740.844 203.429 li
693.622 203.722 li
686.564 205.004 li
cp
f
960.982 132.548 mo
930.315 132.548 li
930.315 129.091 li
959.585 129.091 li
989.097 100.594 li
989.097 77.9507 li
1020.66 46.394 li
1071.64 46.394 li
1090.67 65.4116 li
1193.22 65.4116 li
1207.39 50.394 li
1209.91 52.7671 li
1194.71 68.8696 li
1089.23 68.8696 li
1070.21 49.8511 li
1022.09 49.8511 li
992.555 79.3823 li
992.555 102.061 li
960.982 132.548 li
cp
f
930.022 154.303 mo
927.733 151.711 li
945.511 136.008 li
963.88 136.008 li
994.861 104.466 li
994.861 81.4009 li
1023.83 52.8569 li
1068.5 52.8569 li
1085.79 70.8882 li
1196.38 71.1743 li
1208.83 57.605 li
1211.38 59.9429 li
1197.9 74.6353 li
1084.31 74.3433 li
1067.03 56.3149 li
1025.25 56.3149 li
998.318 82.8472 li
998.318 105.881 li
965.332 139.466 li
946.818 139.466 li
930.022 154.303 li
cp
f
817.135 172.234 mo
814.424 170.088 li
817.678 165.973 li
932.317 165.973 li
933.773 163.971 li
933.773 154.84 li
948.084 141.734 li
966.189 141.734 li
1002.06 105.615 li
1002.06 84.3276 li
1028.15 58.395 li
1065.63 58.395 li
1083.5 77.5132 li
1198.71 77.5132 li
1208.87 67.0859 li
1211.34 69.4985 li
1200.17 80.9712 li
1081.99 80.9712 li
1064.13 61.853 li
1029.57 61.853 li
1005.52 85.7661 li
1005.52 107.04 li
967.627 145.192 li
949.428 145.192 li
937.231 156.362 li
937.231 165.097 li
934.077 169.431 li
819.351 169.431 li
817.135 172.234 li
cp
f
705.629 249.034 mo
703.191 246.581 li
765.069 184.991 li
816.679 184.991 li
829.935 172.602 li
934.786 172.602 li
939.824 167.563 li
939.824 159.784 li
951.21 148.398 li
968.782 148.398 li
1007.54 109.363 li
1007.54 87.4653 li
1029.87 64.8345 li
1062.41 64.8345 li
1081.43 83.3188 li
1201.59 83.3188 li
1208.86 75.7407 li
1211.35 78.1353 li
1203.06 86.7759 li
1080.03 86.7759 li
1061.01 68.2915 li
1031.31 68.2915 li
1011 88.8833 li
1011 110.789 li
970.221 151.855 li
952.643 151.855 li
943.281 161.215 li
943.281 168.996 li
936.218 176.059 li
831.3 176.059 li
818.044 188.449 li
766.497 188.449 li
705.629 249.034 li
cp
f
736.465 238.657 mo
734.021 236.212 li
779.188 191.044 li
818.418 191.044 li
831.095 179.374 li
937.659 179.374 li
962.441 154.16 li
972.81 154.16 li
1013.3 112.706 li
1013.3 92.3647 li
1034.19 71.1743 li
1057.5 71.1743 li
1077.09 89.6157 li
1203.3 89.6157 li
1210.28 82.0991 li
1212.81 84.4526 li
1204.81 93.0737 li
1075.72 93.0737 li
1056.13 74.6313 li
1035.63 74.6313 li
1016.76 93.7827 li
1016.76 114.114 li
974.267 157.618 li
963.89 157.618 li
939.108 182.831 li
832.444 182.831 li
819.769 194.501 li
780.618 194.501 li
736.465 238.657 li
cp
f
952.649 187.873 mo
840.99 187.873 li
840.99 184.415 li
951.204 184.415 li
1039.67 94.8022 li
1208.65 94.8022 li
1208.65 98.2603 li
1041.11 98.2603 li
952.649 187.873 li
cp
f
863.639 195.307 mo
861.566 192.542 li
865.482 189.604 li
954.667 189.604 li
1042.26 102.067 li
1211.54 102.067 li
1211.54 105.526 li
1043.7 105.526 li
956.1 193.061 li
866.634 193.061 li
863.639 195.307 li
cp
f
879.033 202.045 mo
877.291 199.058 li
881.15 196.806 li
957.835 196.806 li
1046.01 108.056 li
1210.11 108.056 li
1210.11 111.514 li
1047.45 111.514 li
959.274 200.263 li
882.087 200.263 li
879.033 202.045 li
cp
f
898.851 207.267 mo
897.233 204.21 li
902.511 201.415 li
960.142 201.415 li
1047.16 114.107 li
1211.54 114.107 li
1211.54 117.565 li
1048.6 117.565 li
961.577 204.874 li
903.368 204.874 li
898.851 207.267 li
cp
f
915.935 213.848 mo
914.154 210.883 li
918.886 208.044 li
961.587 208.044 li
1050.34 120.056 li
1210.11 120.056 li
1210.11 123.515 li
1051.76 123.515 li
963.013 211.501 li
919.844 211.501 li
915.935 213.848 li
cp
f
936.571 220.929 mo
934.435 218.21 li
938.939 214.671 li
965.913 214.671 li
1054.08 127.364 li
1210.11 127.364 li
1210.11 130.822 li
1055.51 130.822 li
967.334 218.13 li
940.135 218.13 li
936.571 220.929 li
cp
f
815.373 238.917 mo
813.592 235.952 li
818.323 233.113 li
936.505 233.113 li
948.606 220.723 li
969.374 220.723 li
1058.41 133.126 li
1210.11 133.126 li
1210.11 136.583 li
1059.83 136.583 li
970.789 224.181 li
950.063 224.181 li
937.961 236.57 li
819.283 236.57 li
815.373 238.917 li
cp
f
639.991 291.894 mo
628.071 291.894 li
619.695 285.865 li
619.695 267.79 li
613.179 260.774 li
564.21 260.774 li
556.783 253.039 li
559.278 250.644 li
565.683 257.317 li
614.685 257.317 li
623.154 266.434 li
623.154 284.093 li
629.185 288.436 li
638.584 288.436 li
651.263 276.047 li
803.695 276.047 li
841.731 239.164 li
939.348 239.164 li
951.449 225.91 li
972.683 225.91 li
1061.87 137.738 li
1210.11 137.738 li
1210.11 141.195 li
1063.29 141.195 li
974.104 229.368 li
952.976 229.368 li
940.874 242.622 li
843.132 242.622 li
805.097 279.505 li
652.672 279.505 li
639.991 291.894 li
cp
f
302.02 242.909 mo
302.02 244.82 300.473 246.366 298.564 246.366 cv
296.653 246.366 295.105 244.82 295.105 242.909 cv
295.105 240.999 296.653 239.451 298.564 239.451 cv
300.473 239.451 302.02 240.999 302.02 242.909 cv
293.017 237.255 mo
291.791 238.48 292.512 242.03 293.185 244.021 cv
294.383 247.559 296.214 250.787 299.948 250.787 cv
303.685 250.787 306.714 247.757 306.714 244.021 cv
306.714 240.285 303.597 238.073 299.948 237.255 cv
297.524 236.712 294.241 236.031 293.017 237.255 cv
f
270.901 244.404 mo
270.901 246.417 269.352 248.049 267.443 248.049 cv
265.534 248.049 263.985 246.417 263.985 244.404 cv
263.985 242.391 265.534 240.76 267.443 240.76 cv
269.352 240.76 270.901 242.391 270.901 244.404 cv
261.897 238.444 mo
260.671 239.737 261.393 243.478 262.065 245.576 cv
263.263 249.307 265.095 252.708 268.829 252.708 cv
272.565 252.708 275.595 249.513 275.595 245.576 cv
275.595 241.638 272.476 239.309 268.829 238.444 cv
266.405 237.874 263.121 237.155 261.897 238.444 cv
f
70.3516 261.926 mo
70.3516 263.837 68.8037 265.383 66.8945 265.383 cv
64.9854 265.383 63.4365 263.837 63.4365 261.926 cv
63.4365 260.016 64.9854 258.468 66.8945 258.468 cv
68.8037 258.468 70.3516 260.016 70.3516 261.926 cv
61.3486 256.273 mo
60.1221 257.498 60.8428 261.048 61.5166 263.039 cv
62.7139 266.578 64.5459 269.803 68.2803 269.803 cv
72.0166 269.803 75.0449 266.775 75.0449 263.039 cv
75.0449 259.302 71.9268 257.09 68.2803 256.273 cv
65.8564 255.729 62.5723 255.049 61.3486 256.273 cv
f
638.029 243.635 mo
638.029 245.545 636.481 247.093 634.572 247.093 cv
632.663 247.093 631.115 245.545 631.115 243.635 cv
631.115 241.726 632.663 240.178 634.572 240.178 cv
636.481 240.178 638.029 241.726 638.029 243.635 cv
629.026 237.981 mo
627.8 239.206 628.521 242.757 629.196 244.749 cv
630.392 248.287 632.224 251.512 635.958 251.512 cv
639.695 251.512 642.724 248.483 642.724 244.749 cv
642.724 241.01 639.605 238.801 635.958 237.981 cv
633.534 237.438 630.251 236.759 629.026 237.981 cv
f
608.063 243.635 mo
608.063 245.545 606.516 247.093 604.605 247.093 cv
602.695 247.093 601.148 245.545 601.148 243.635 cv
601.148 241.726 602.695 240.178 604.605 240.178 cv
606.516 240.178 608.063 241.726 608.063 243.635 cv
599.058 237.981 mo
597.832 239.206 598.555 242.757 599.228 244.749 cv
600.427 248.287 602.256 251.512 605.992 251.512 cv
609.728 251.512 612.756 248.483 612.756 244.749 cv
612.756 241.01 609.638 238.801 605.992 237.981 cv
603.568 237.438 600.283 236.759 599.058 237.981 cv
f
636.606 211.022 mo
636.606 212.932 635.06 214.48 633.149 214.48 cv
631.237 214.48 629.691 212.932 629.691 211.022 cv
629.691 209.111 631.237 207.564 633.149 207.564 cv
635.06 207.564 636.606 209.111 636.606 211.022 cv
627.603 205.368 mo
626.378 206.591 627.099 210.144 627.773 212.133 cv
628.969 215.671 630.8 218.898 634.538 218.898 cv
638.272 218.898 641.3 215.87 641.3 212.133 cv
641.3 208.397 638.182 206.186 634.538 205.368 cv
632.112 204.822 628.827 204.144 627.603 205.368 cv
f
178.972 59.0669 mo
178.972 60.978 177.424 62.5249 175.515 62.5249 cv
173.602 62.5249 172.057 60.978 172.057 59.0669 cv
172.057 57.1567 173.602 55.6089 175.515 55.6089 cv
177.424 55.6089 178.972 57.1567 178.972 59.0669 cv
169.966 53.4146 mo
168.74 54.6382 169.463 58.189 170.137 60.1782 cv
171.334 63.7183 173.163 66.9448 176.899 66.9448 cv
180.636 66.9448 183.665 63.9165 183.665 60.1782 cv
183.665 56.4429 180.546 54.231 176.899 53.4146 cv
174.476 52.8687 171.191 52.1899 169.966 53.4146 cv
f
211.714 60.7949 mo
211.714 62.7075 210.167 64.2529 208.258 64.2529 cv
206.347 64.2529 204.799 62.7075 204.799 60.7949 cv
204.799 58.8862 206.347 57.3384 208.258 57.3384 cv
210.167 57.3384 211.714 58.8862 211.714 60.7949 cv
202.71 55.1431 mo
201.485 56.3667 202.206 59.9175 202.88 61.9067 cv
204.076 65.4468 205.907 68.6733 209.643 68.6733 cv
213.379 68.6733 216.407 65.645 216.407 61.9067 cv
216.407 58.1719 213.289 55.9604 209.643 55.1431 cv
207.218 54.5972 203.935 53.9189 202.71 55.1431 cv
f
4.25488 160.388 mo
2.34277 160.388 .796875 158.84 .796875 156.931 cv
.796875 155.02 2.34277 153.472 4.25488 153.472 cv
6.16602 153.472 7.71191 155.02 7.71191 156.931 cv
7.71191 158.84 6.16602 160.388 4.25488 160.388 cv
9.90723 151.382 mo
8.68457 150.157 5.13281 150.879 3.14355 151.551 cv
-.395508 152.749 -3.62207 154.581 -3.62207 158.315 cv
-3.62207 162.053 -.592773 165.081 3.14355 165.081 cv
6.87793 165.081 9.08984 161.961 9.90723 158.315 cv
10.4536 155.892 11.1328 152.608 9.90723 151.382 cv
f
23.751 159.867 mo
21.8408 159.867 20.2939 158.319 20.2939 156.409 cv
20.2939 154.499 21.8408 152.951 23.751 152.951 cv
25.6606 152.951 27.21 154.499 27.21 156.409 cv
27.21 158.319 25.6606 159.867 23.751 159.867 cv
29.4053 150.863 mo
28.1807 149.637 24.6289 150.358 22.6387 151.032 cv
19.0986 152.228 15.874 154.058 15.874 157.794 cv
15.874 161.531 18.9033 164.56 22.6387 164.56 cv
26.375 164.56 28.5869 161.442 29.4053 157.794 cv
29.9482 155.371 30.626 152.086 29.4053 150.863 cv
f
36.0264 160.419 mo
37.3525 159.044 39.54 159.007 40.915 160.335 cv
42.29 161.66 42.3267 163.849 40.999 165.223 cv
39.6729 166.596 37.4854 166.635 36.1104 165.308 cv
34.7373 163.981 34.6982 161.794 36.0264 160.419 cv
38.5752 170.741 mo
40.3076 170.711 42.2559 167.655 43.1543 165.755 cv
44.751 162.378 45.6748 158.787 42.9854 156.191 cv
40.2988 153.597 36.0176 153.672 33.4189 156.357 cv
30.8257 159.046 31.5342 162.802 33.5869 165.922 cv
34.9536 167.999 36.8447 170.771 38.5752 170.741 cv
f
331.663 20.5991 mo
332.99 19.2251 335.179 19.188 336.553 20.5142 cv
337.927 21.8423 337.964 24.0308 336.637 25.4048 cv
335.31 26.7769 333.122 26.8159 331.747 25.4888 cv
330.375 24.1636 330.336 21.9741 331.663 20.5991 cv
334.213 30.9219 mo
335.945 30.8911 337.894 27.8354 338.792 25.938 cv
340.389 22.561 341.313 18.9683 338.622 16.3735 cv
335.936 13.7788 331.655 13.853 329.057 16.5386 cv
326.464 19.229 327.173 22.9829 329.226 26.105 cv
330.591 28.1802 332.481 30.9526 334.213 30.9219 cv
f
34.1758 218.064 mo
35.5264 219.415 35.5264 221.603 34.1758 222.954 cv
32.8242 224.303 30.6367 224.303 29.2856 222.954 cv
27.9336 221.603 27.9336 219.415 29.2856 218.064 cv
30.6367 216.715 32.8242 216.715 34.1758 218.064 cv
23.8105 220.434 mo
23.8105 222.165 26.8311 224.167 28.7139 225.096 cv
32.0615 226.754 35.6377 227.74 38.2822 225.096 cv
40.9219 222.456 40.9219 218.173 38.2783 215.532 cv
35.6377 212.889 31.8687 213.531 28.7139 215.532 cv
26.6152 216.861 23.8105 218.703 23.8105 220.434 cv
f
1161.88 152.976 mo
1163.23 154.327 1163.23 156.515 1161.88 157.866 cv
1160.53 159.216 1158.34 159.216 1156.99 157.866 cv
1155.64 156.515 1155.64 154.327 1156.99 152.976 cv
1158.34 151.627 1160.53 151.627 1161.88 152.976 cv
1151.51 155.347 mo
1151.51 157.079 1154.53 159.079 1156.42 160.009 cv
1159.77 161.667 1163.34 162.653 1165.99 160.009 cv
1168.63 157.369 1168.63 153.086 1165.99 150.444 cv
1163.34 147.803 1159.57 148.445 1156.42 150.444 cv
1154.32 151.774 1151.51 153.615 1151.51 155.347 cv
f
150.856 120.884 mo
152.206 122.235 152.206 124.423 150.856 125.774 cv
149.508 127.124 147.317 127.124 145.966 125.774 cv
144.614 124.423 144.614 122.235 145.966 120.884 cv
147.317 119.536 149.508 119.536 150.856 120.884 cv
140.491 123.254 mo
140.491 124.987 143.511 126.988 145.395 127.918 cv
148.743 129.575 152.319 130.56 154.962 127.918 cv
157.604 125.277 157.602 120.994 154.96 118.351 cv
152.319 115.711 148.552 116.353 145.395 118.351 cv
143.296 119.682 140.491 121.522 140.491 123.254 cv
f
113.498 215.974 mo
112.146 214.624 112.146 212.435 113.498 211.085 cv
114.847 209.735 117.036 209.735 118.386 211.085 cv
119.737 212.435 119.737 214.624 118.386 215.974 cv
117.036 217.325 114.847 217.325 113.498 215.974 cv
123.86 213.603 mo
123.86 211.873 120.841 209.871 118.958 208.942 cv
115.608 207.284 112.034 206.299 109.392 208.942 cv
106.747 211.583 106.751 215.864 109.392 218.506 cv
112.034 221.149 115.8 220.507 118.958 218.506 cv
121.056 217.178 123.86 215.336 123.86 213.603 cv
f
122.376 302.172 mo
121.025 300.823 121.025 298.634 122.376 297.283 cv
123.725 295.934 125.915 295.934 127.264 297.283 cv
128.616 298.634 128.616 300.823 127.264 302.172 cv
125.915 303.523 123.725 303.523 122.376 302.172 cv
132.739 299.802 mo
132.739 298.071 129.719 296.069 127.836 295.14 cv
124.487 293.482 120.913 292.498 118.27 295.14 cv
115.625 297.781 115.629 302.063 118.27 304.705 cv
120.913 307.347 124.678 306.706 127.836 304.705 cv
129.934 303.376 132.739 301.535 132.739 299.802 cv
f
118.775 148.428 mo
117.425 147.078 117.425 144.889 118.775 143.539 cv
120.126 142.188 122.313 142.188 123.665 143.539 cv
125.017 144.889 125.017 147.078 123.665 148.428 cv
122.313 149.779 120.126 149.779 118.775 148.428 cv
129.141 146.057 mo
129.141 144.329 126.12 142.327 124.237 141.394 cv
120.89 139.74 117.313 138.753 114.669 141.394 cv
112.028 144.039 112.028 148.32 114.673 150.96 cv
117.313 153.602 121.082 152.961 124.237 150.96 cv
126.336 149.631 129.141 147.79 129.141 146.057 cv
f
177.658 88.2886 mo
179.009 89.6401 179.009 91.8276 177.658 93.1782 cv
176.308 94.5298 174.12 94.5298 172.769 93.1782 cv
171.417 91.8276 171.417 89.6401 172.769 88.2886 cv
174.12 86.938 176.308 86.938 177.658 88.2886 cv
167.294 90.6587 mo
167.294 92.3882 170.313 94.3911 172.196 95.3228 cv
175.544 96.9771 179.12 97.9629 181.765 95.3228 cv
184.405 92.6802 184.405 88.397 181.761 85.7563 cv
179.12 83.1138 175.352 83.7549 172.196 85.7563 cv
170.099 87.0854 167.294 88.9272 167.294 90.6587 cv
f
236.632 181.935 mo
237.981 183.286 237.981 185.476 236.632 186.825 cv
235.282 188.175 233.094 188.175 231.743 186.825 cv
230.392 185.476 230.392 183.286 231.743 181.935 cv
233.094 180.585 235.282 180.585 236.632 181.935 cv
226.266 184.305 mo
226.266 186.037 229.288 188.04 231.169 188.968 cv
234.519 190.624 238.095 191.611 240.739 188.968 cv
243.379 186.329 243.378 182.044 240.735 179.403 cv
238.095 176.762 234.327 177.404 231.169 179.403 cv
229.072 180.733 226.266 182.573 226.266 184.305 cv
f
238.361 212.161 mo
239.71 213.51 239.71 215.699 238.361 217.049 cv
237.011 218.4 234.823 218.4 233.472 217.049 cv
232.12 215.699 232.12 213.51 233.472 212.161 cv
234.823 210.809 237.011 210.809 238.361 212.161 cv
227.995 214.531 mo
227.995 216.261 231.018 218.261 232.897 219.194 cv
236.248 220.848 239.823 221.835 242.468 219.194 cv
245.108 216.551 245.106 212.267 242.464 209.627 cv
239.823 206.985 236.056 207.626 232.897 209.627 cv
230.801 210.956 227.995 212.798 227.995 214.531 cv
f
702.776 254.473 mo
700.868 254.473 699.318 252.925 699.318 251.016 cv
699.318 249.105 700.868 247.558 702.776 247.558 cv
704.688 247.558 706.233 249.105 706.233 251.016 cv
706.233 252.925 704.688 254.473 702.776 254.473 cv
708.433 245.467 mo
707.206 244.242 703.654 244.964 701.664 245.638 cv
698.126 246.835 694.901 248.665 694.901 252.402 cv
694.901 256.138 697.93 259.167 701.664 259.167 cv
705.402 259.167 707.611 256.047 708.433 252.402 cv
708.976 249.977 709.655 246.694 708.433 245.467 cv
f
731.984 245.396 mo
730.073 245.396 728.527 243.85 728.527 241.939 cv
728.527 240.028 730.073 238.481 731.984 238.481 cv
733.896 238.481 735.442 240.028 735.442 241.939 cv
735.442 243.85 733.896 245.396 731.984 245.396 cv
737.637 236.393 mo
736.414 235.167 732.862 235.888 730.873 236.562 cv
727.334 237.758 724.106 239.589 724.106 243.325 cv
724.106 247.061 727.135 250.09 730.873 250.09 cv
734.608 250.09 736.82 246.971 737.637 243.325 cv
738.185 240.903 738.863 237.617 737.637 236.393 cv
f
303.504 398.122 mo
301.593 398.122 300.047 396.576 300.047 394.665 cv
300.047 392.753 301.593 391.207 303.504 391.207 cv
305.415 391.207 306.962 392.753 306.962 394.665 cv
306.962 396.576 305.415 398.122 303.504 398.122 cv
309.156 389.119 mo
307.934 387.892 304.382 388.614 302.393 389.288 cv
298.853 390.484 295.626 392.315 295.626 396.05 cv
295.626 399.787 298.654 402.816 302.393 402.816 cv
306.128 402.816 308.34 399.697 309.156 396.05 cv
309.704 393.628 310.383 390.342 309.156 389.119 cv
f
274.613 375.331 mo
272.702 375.331 271.156 373.785 271.156 371.874 cv
271.156 369.963 272.702 368.416 274.613 368.416 cv
276.524 368.416 278.071 369.963 278.071 371.874 cv
278.071 373.785 276.524 375.331 274.613 375.331 cv
280.266 366.328 mo
279.043 365.102 275.491 365.823 273.502 366.497 cv
269.963 367.693 266.735 369.524 266.735 373.26 cv
266.735 376.996 269.764 380.025 273.502 380.025 cv
277.237 380.025 279.449 376.906 280.266 373.26 cv
280.814 370.838 281.492 367.552 280.266 366.328 cv
f
209.997 124.272 mo
208.086 124.272 206.54 122.724 206.54 120.815 cv
206.54 118.905 208.086 117.357 209.997 117.357 cv
211.906 117.357 213.455 118.905 213.455 120.815 cv
213.455 122.724 211.906 124.272 209.997 124.272 cv
215.649 115.269 mo
214.425 114.044 210.874 114.764 208.885 115.437 cv
205.345 116.634 202.12 118.466 202.12 122.201 cv
202.12 125.937 205.148 128.966 208.885 128.966 cv
212.62 128.966 214.833 125.848 215.649 122.201 cv
216.194 119.777 216.874 116.493 215.649 115.269 cv
f
213.455 137.511 mo
209.997 137.511 li
209.997 127.138 li
213.455 127.138 li
213.455 137.511 li
cp
f
129.959 171.851 mo
131.309 173.201 131.309 175.391 129.959 176.741 cv
128.608 178.09 126.419 178.09 125.069 176.741 cv
123.716 175.391 123.716 173.201 125.069 171.851 cv
126.419 170.501 128.608 170.501 129.959 171.851 cv
119.593 174.221 mo
119.593 175.952 122.614 177.954 124.495 178.884 cv
127.845 180.54 131.421 181.526 134.065 178.884 cv
136.706 176.242 136.704 171.96 134.061 169.318 cv
131.421 166.676 127.653 167.318 124.495 169.318 cv
122.399 170.647 119.593 172.489 119.593 174.221 cv
f
667.421 123.54 mo
666.072 122.189 666.072 119.999 667.421 118.651 cv
668.772 117.299 670.961 117.299 672.313 118.651 cv
673.661 119.999 673.661 122.189 672.313 123.54 cv
670.961 124.889 668.772 124.889 667.421 123.54 cv
677.788 121.17 mo
677.788 119.439 674.766 117.437 672.885 116.506 cv
669.534 114.85 665.96 113.864 663.317 116.506 cv
660.675 119.149 660.675 123.43 663.317 126.073 cv
665.96 128.715 669.728 128.074 672.885 126.073 cv
674.981 124.744 677.788 122.902 677.788 121.17 cv
f
805.907 73.0493 mo
804.557 71.6987 804.557 69.5112 805.907 68.1606 cv
807.258 66.8091 809.445 66.8091 810.797 68.1606 cv
812.147 69.5112 812.147 71.6987 810.797 73.0493 cv
809.445 74.3999 807.258 74.3999 805.907 73.0493 cv
816.269 70.6792 mo
816.269 68.9487 813.252 66.9468 811.367 66.0161 cv
808.021 64.3599 804.444 63.3755 801.802 66.0161 cv
799.159 68.6587 799.159 72.9399 801.802 75.5815 cv
804.444 78.2222 808.21 77.5815 811.367 75.5815 cv
813.469 74.2515 816.269 72.4116 816.269 70.6792 cv
f
237.163 158.658 mo
235.296 158.261 234.102 156.424 234.499 154.556 cv
234.897 152.687 236.734 151.497 238.602 151.895 cv
240.469 152.292 241.661 154.128 241.262 155.996 cv
240.867 157.865 239.028 159.054 237.163 158.658 cv
238.063 161.094 mo
241.796 161.052 245.308 159.539 246.086 155.883 cv
246.864 152.232 244.53 148.638 240.878 147.861 cv
237.224 147.085 234.761 149.858 232.854 153.071 cv
231.78 154.874 230.335 158.197 231.28 159.651 cv
232.223 161.102 235.575 161.121 238.063 161.094 cv
f
208.501 95.6938 mo
206.634 95.2969 205.442 93.4619 205.839 91.5952 cv
206.235 89.7261 208.072 88.5337 209.941 88.9302 cv
211.81 89.3286 212.999 91.1665 212.602 93.0327 cv
212.206 94.8999 210.368 96.0923 208.501 95.6938 cv
209.403 98.1323 mo
213.138 98.0894 216.647 96.5767 217.427 92.9209 cv
218.204 89.2681 215.872 85.6753 212.216 84.8979 cv
208.563 84.1206 206.101 86.895 204.192 90.1069 cv
203.122 91.9121 201.677 95.2349 202.619 96.687 cv
203.561 98.1382 206.916 98.1597 209.403 98.1323 cv
f
150.425 64.3667 mo
148.558 63.9702 147.366 62.1323 147.763 60.2651 cv
148.159 58.396 149.997 57.2065 151.866 57.603 cv
153.733 57.9995 154.923 59.8359 154.526 61.7046 cv
154.13 63.5718 152.292 64.7632 150.425 64.3667 cv
151.327 66.8022 mo
155.061 66.7603 158.571 65.2476 159.35 61.5933 cv
160.128 57.939 157.798 54.3481 154.14 53.5698 cv
150.487 52.7905 148.024 55.5649 146.117 58.7778 cv
145.046 60.5825 143.601 63.9058 144.542 65.3569 cv
145.485 66.811 148.84 66.8291 151.327 66.8022 cv
f
663.491 243.408 mo
661.625 243.009 660.432 241.172 660.827 239.305 cv
661.227 237.438 663.061 236.246 664.932 236.644 cv
666.797 237.042 667.989 238.876 667.591 240.744 cv
667.194 242.615 665.357 243.804 663.491 243.408 cv
664.392 245.842 mo
668.128 245.801 671.636 244.29 672.416 240.634 cv
673.192 236.982 670.86 233.389 667.206 232.609 cv
663.553 231.833 661.091 234.609 659.184 237.819 cv
658.108 239.624 656.664 242.947 657.609 244.401 cv
658.552 245.852 661.905 245.872 664.392 245.842 cv
f
1053.35 174.985 mo
1051.49 174.587 1050.29 172.751 1050.69 170.883 cv
1051.09 169.016 1052.92 167.824 1054.79 168.222 cv
1056.66 168.619 1057.85 170.454 1057.45 172.322 cv
1057.06 174.189 1055.22 175.382 1053.35 174.985 cv
1054.25 177.42 mo
1057.99 177.379 1061.5 175.867 1062.28 172.211 cv
1063.05 168.558 1060.72 164.965 1057.07 164.187 cv
1053.41 163.411 1050.95 166.182 1049.04 169.397 cv
1047.97 171.201 1046.52 174.525 1047.47 175.977 cv
1048.41 177.429 1051.76 177.447 1054.25 177.42 cv
f
323.634 251.475 mo
321.767 251.077 320.573 249.241 320.971 247.376 cv
321.367 245.504 323.204 244.315 325.073 244.711 cv
326.94 245.11 328.132 246.947 327.734 248.812 cv
327.338 250.68 325.501 251.874 323.634 251.475 cv
324.534 253.912 mo
328.269 253.869 331.78 252.357 332.558 248.703 cv
333.335 245.048 331.003 241.456 327.348 240.679 cv
323.696 239.899 321.233 242.673 319.325 245.886 cv
318.253 247.694 316.808 251.016 317.751 252.468 cv
318.693 253.919 322.048 253.94 324.534 253.912 cv
f
323.634 251.475 mo
321.767 251.077 320.573 249.241 320.971 247.376 cv
321.367 245.504 323.204 244.315 325.073 244.711 cv
326.94 245.11 328.132 246.947 327.734 248.812 cv
327.338 250.68 325.501 251.874 323.634 251.475 cv
324.534 253.912 mo
328.269 253.869 331.78 252.357 332.558 248.703 cv
333.335 245.048 331.003 241.456 327.348 240.679 cv
323.696 239.899 321.233 242.673 319.325 245.886 cv
318.253 247.694 316.808 251.016 317.751 252.468 cv
318.693 253.919 322.048 253.94 324.534 253.912 cv
f
571.188 189.373 mo
569.321 188.975 568.128 187.138 568.525 185.271 cv
568.925 183.402 570.759 182.212 572.628 182.609 cv
574.495 183.005 575.688 184.842 575.289 186.71 cv
574.894 188.579 573.056 189.769 571.188 189.373 cv
572.088 191.808 mo
575.823 191.766 579.335 190.253 580.113 186.598 cv
580.892 182.945 578.558 179.354 574.905 178.576 cv
571.251 177.796 568.786 180.573 566.88 183.786 cv
565.808 185.588 564.362 188.912 565.305 190.364 cv
566.251 191.817 569.602 191.835 572.088 191.808 cv
f
267.729 190.1 mo
265.861 189.702 264.669 187.867 265.067 186.001 cv
265.465 184.13 267.3 182.939 269.169 183.335 cv
271.036 183.735 272.227 185.572 271.83 187.437 cv
271.433 189.306 269.597 190.499 267.729 190.1 cv
268.63 192.536 mo
272.365 192.494 275.876 190.981 276.653 187.328 cv
277.432 183.674 275.101 180.081 271.444 179.305 cv
267.791 178.525 265.327 181.3 263.42 184.511 cv
262.35 186.318 260.904 189.641 261.847 191.092 cv
262.788 192.545 266.144 192.565 268.63 192.536 cv
f
1062.17 7.95654 mo
1060.82 6.60596 1060.82 4.41846 1062.17 3.06689 cv
1063.52 1.71924 1065.7 1.71924 1067.06 3.06689 cv
1068.41 4.41846 1068.41 6.60596 1067.06 7.95654 cv
1065.7 9.30811 1063.52 9.30811 1062.17 7.95654 cv
1072.53 5.58594 mo
1072.53 3.85791 1069.51 1.85596 1067.63 .92334 cv
1064.28 -.730957 1060.7 -1.71729 1058.06 .92334 cv
1055.42 3.56689 1055.42 7.84912 1058.06 10.4897 cv
1060.7 13.1313 1064.47 12.4897 1067.63 10.4897 cv
1069.73 9.16064 1072.53 7.31885 1072.53 5.58594 cv
f
811.503 245.396 mo
809.595 245.396 808.046 243.85 808.046 241.939 cv
808.046 240.028 809.595 238.481 811.503 238.481 cv
813.414 238.481 814.96 240.028 814.96 241.939 cv
814.96 243.85 813.414 245.396 811.503 245.396 cv
817.158 236.393 mo
815.933 235.167 812.384 235.888 810.391 236.562 cv
806.852 237.758 803.628 239.589 803.628 243.325 cv
803.628 247.061 806.657 250.09 810.391 250.09 cv
814.129 250.09 816.341 246.971 817.158 243.325 cv
817.702 240.903 818.381 237.617 817.158 236.393 cv
f
926.473 159.389 mo
924.564 159.389 923.016 157.84 923.016 155.931 cv
923.016 154.02 924.564 152.473 926.473 152.473 cv
928.383 152.473 929.93 154.02 929.93 155.931 cv
929.93 157.84 928.383 159.389 926.473 159.389 cv
932.129 150.383 mo
930.902 149.158 927.354 149.88 925.361 150.554 cv
921.822 151.751 918.599 153.581 918.599 157.317 cv
918.599 161.053 921.627 164.083 925.361 164.083 cv
929.099 164.083 931.311 160.962 932.129 157.317 cv
932.672 154.892 933.352 151.609 932.129 150.383 cv
f
867.269 133.79 mo
865.356 133.79 863.811 132.244 863.811 130.333 cv
863.811 128.421 865.356 126.874 867.269 126.874 cv
869.181 126.874 870.727 128.421 870.727 130.333 cv
870.727 132.244 869.181 133.79 867.269 133.79 cv
872.922 124.786 mo
871.699 123.56 868.147 124.281 866.158 124.956 cv
862.618 126.152 859.391 127.982 859.391 131.718 cv
859.391 135.455 862.42 138.484 866.158 138.484 cv
869.893 138.484 872.104 135.366 872.922 131.718 cv
873.465 129.295 874.147 126.01 872.922 124.786 cv
f
930.413 109.102 mo
928.502 109.102 926.955 107.556 926.955 105.645 cv
926.955 103.736 928.502 102.187 930.413 102.187 cv
932.321 102.187 933.871 103.736 933.871 105.645 cv
933.871 107.556 932.321 109.102 930.413 109.102 cv
936.065 100.101 mo
934.841 98.8735 931.29 99.5942 929.299 100.269 cv
925.761 101.464 922.534 103.294 922.534 107.033 cv
922.534 110.767 925.564 113.796 929.299 113.796 cv
933.037 113.796 935.249 110.678 936.065 107.033 cv
936.609 104.609 937.288 101.323 936.065 100.101 cv
f
545.833 183.411 mo
543.924 183.411 542.376 181.863 542.376 179.953 cv
542.376 178.042 543.924 176.496 545.833 176.496 cv
547.743 176.496 549.292 178.042 549.292 179.953 cv
549.292 181.863 547.743 183.411 545.833 183.411 cv
551.486 174.405 mo
550.263 173.179 546.712 173.902 544.724 174.576 cv
541.183 175.773 537.956 177.602 537.956 181.338 cv
537.956 185.075 540.985 188.104 544.724 188.104 cv
548.458 188.104 550.67 184.985 551.486 181.338 cv
552.032 178.915 552.71 175.63 551.486 174.405 cv
f
517.369 160.388 mo
515.457 160.388 513.911 158.84 513.911 156.931 cv
513.911 155.02 515.457 153.472 517.369 153.472 cv
519.278 153.472 520.827 155.02 520.827 156.931 cv
520.827 158.84 519.278 160.388 517.369 160.388 cv
523.022 151.382 mo
521.799 150.157 518.247 150.879 516.258 151.551 cv
512.717 152.749 509.491 154.581 509.491 158.315 cv
509.491 162.053 512.519 165.081 516.258 165.081 cv
519.992 165.081 522.204 161.961 523.022 158.315 cv
523.565 155.892 524.245 152.608 523.022 151.382 cv
f
576.09 154.415 mo
574.178 154.415 572.633 152.867 572.633 150.958 cv
572.633 149.045 574.178 147.499 576.09 147.499 cv
577.999 147.499 579.549 149.045 579.549 150.958 cv
579.549 152.867 577.999 154.415 576.09 154.415 cv
581.742 145.41 mo
580.519 144.184 576.968 144.906 574.979 145.579 cv
571.438 146.777 568.212 148.607 568.212 152.343 cv
568.212 156.079 571.24 159.108 574.979 159.108 cv
578.713 159.108 580.925 155.989 581.742 152.343 cv
582.288 149.919 582.966 146.635 581.742 145.41 cv
f
549.708 247.058 mo
549.739 245.151 551.315 243.629 553.224 243.662 cv
555.134 243.697 556.655 245.27 556.619 247.18 cv
556.587 249.089 555.012 250.61 553.104 250.577 cv
551.192 250.542 549.674 248.968 549.708 247.058 cv
558.612 252.869 mo
559.858 251.667 559.197 248.103 558.561 246.103 cv
557.424 242.544 555.65 239.287 551.915 239.221 cv
548.178 239.155 545.099 242.131 545.034 245.867 cv
544.967 249.601 548.046 251.867 551.677 252.748 cv
554.094 253.333 557.364 254.072 558.612 252.869 cv
f
664.249 185.822 mo
664.281 183.912 665.857 182.391 667.766 182.423 cv
669.678 182.458 671.197 184.033 671.163 185.942 cv
671.129 187.851 669.556 189.371 667.644 189.338 cv
665.735 189.305 664.216 187.73 664.249 185.822 cv
673.156 191.629 mo
674.398 190.427 673.74 186.865 673.102 184.863 cv
671.967 181.303 670.194 178.048 666.456 177.981 cv
662.721 177.917 659.64 180.891 659.575 184.627 cv
659.511 188.361 662.591 190.626 666.22 191.508 cv
668.634 192.095 671.909 192.833 673.156 191.629 cv
f
773.177 73.2798 mo
773.21 71.3696 774.784 69.8481 776.695 69.8823 cv
778.603 69.9165 780.126 71.4897 780.09 73.4009 cv
780.058 75.3091 778.482 76.8306 776.573 76.7983 cv
774.663 76.7622 773.143 75.187 773.177 73.2798 cv
782.082 79.0869 mo
783.327 77.8853 782.669 74.3228 782.03 72.3208 cv
780.896 68.7632 779.12 65.5063 775.385 65.4409 cv
771.647 65.3745 768.567 68.3491 768.501 72.0859 cv
768.439 75.8198 771.515 78.0845 775.149 78.9663 cv
777.563 79.5532 780.836 80.2915 782.082 79.0869 cv
f
333.173 182.64 mo
333.173 184.552 331.624 186.098 329.716 186.098 cv
327.804 186.098 326.258 184.552 326.258 182.64 cv
326.258 180.731 327.804 179.183 329.716 179.183 cv
331.624 179.183 333.173 180.731 333.173 182.64 cv
324.167 176.988 mo
322.941 178.211 323.664 181.762 324.338 183.753 cv
325.534 187.292 327.364 190.519 331.101 190.519 cv
334.837 190.519 337.866 187.49 337.866 183.753 cv
337.866 180.017 334.746 177.805 331.101 176.988 cv
328.677 176.445 325.394 175.764 324.167 176.988 cv
f
56.4854 161.026 mo
57.8096 159.652 59.999 159.615 61.3721 160.942 cv
62.7471 162.267 62.7856 164.458 61.459 165.831 cv
60.1318 167.205 57.9443 167.243 56.5693 165.915 cv
55.1953 164.589 55.1582 162.401 56.4854 161.026 cv
59.0342 171.349 mo
60.7637 171.319 62.7139 168.263 63.6123 166.365 cv
65.2109 162.987 66.1318 159.395 63.4443 156.799 cv
60.7568 154.206 56.4756 154.28 53.8779 156.963 cv
51.2842 159.654 51.9922 163.411 54.0469 166.531 cv
55.4106 168.608 57.3027 171.379 59.0342 171.349 cv
f
60.8677 215.88 mo
59.541 217.255 57.3525 217.292 55.9795 215.965 cv
54.6045 214.638 54.5654 212.451 55.8945 211.076 cv
57.2197 209.704 59.4072 209.665 60.7822 210.992 cv
62.1553 212.317 62.1934 214.507 60.8677 215.88 cv
58.3174 205.558 mo
56.5869 205.588 54.6387 208.645 53.7393 210.542 cv
52.1426 213.919 51.2178 217.512 53.9072 220.107 cv
56.5928 222.703 60.875 222.627 63.4717 219.942 cv
66.0684 217.252 65.3604 213.498 63.3047 210.376 cv
61.9385 208.3 60.0479 205.528 58.3174 205.558 cv
f
339.071 158.129 mo
337.745 159.503 335.557 159.542 334.183 158.213 cv
332.808 156.888 332.77 154.698 334.099 153.325 cv
335.425 151.953 337.612 151.915 338.987 153.24 cv
340.36 154.567 340.399 156.754 339.071 158.129 cv
336.522 147.809 mo
334.79 147.836 332.843 150.893 331.943 152.79 cv
330.347 156.169 329.423 159.762 332.112 162.357 cv
334.799 164.952 339.081 164.877 341.679 162.191 cv
344.271 159.501 343.563 155.746 341.51 152.626 cv
340.144 150.548 338.251 147.777 336.522 147.809 cv
f
348.432 231.753 mo
347.105 233.127 344.917 233.167 343.542 231.837 cv
342.168 230.512 342.13 228.323 343.458 226.949 cv
344.783 225.576 346.974 225.537 348.348 226.864 cv
349.719 228.189 349.758 230.377 348.432 231.753 cv
345.883 221.432 mo
344.149 221.46 342.202 224.518 341.304 226.414 cv
339.706 229.794 338.783 233.386 341.471 235.979 cv
344.157 238.576 348.44 238.501 351.037 235.813 cv
353.632 233.126 352.923 229.368 350.87 226.248 cv
349.502 224.17 347.611 221.401 345.883 221.432 cv
f
547.258 152.297 mo
545.933 153.672 543.743 153.708 542.368 152.382 cv
540.994 151.055 540.955 148.867 542.282 147.493 cv
543.608 146.119 545.799 146.081 547.171 147.408 cv
548.545 148.734 548.583 150.921 547.258 152.297 cv
544.707 141.975 mo
542.977 142.005 541.028 145.062 540.13 146.958 cv
538.53 150.335 537.608 153.928 540.296 156.524 cv
542.985 159.119 547.267 159.044 549.862 156.358 cv
552.458 153.669 551.749 149.912 549.694 146.792 cv
548.33 144.715 546.438 141.945 544.707 141.975 cv
f
500.576 228.827 mo
499.253 230.202 497.063 230.24 495.688 228.912 cv
494.313 227.586 494.274 225.399 495.602 224.022 cv
496.93 222.652 499.117 222.613 500.492 223.937 cv
501.866 225.265 501.903 227.453 500.576 228.827 cv
498.026 218.506 mo
496.299 218.536 494.347 221.592 493.45 223.489 cv
491.852 226.868 490.929 230.46 493.616 233.055 cv
496.305 235.65 500.587 235.576 503.183 232.889 cv
505.778 230.202 505.068 226.444 503.014 223.323 cv
501.649 221.247 499.759 218.474 498.026 218.506 cv
f
358.243 215.578 mo
356.917 216.948 354.727 216.989 353.353 215.661 cv
351.979 214.335 351.94 212.146 353.268 210.772 cv
354.595 209.398 356.782 209.36 358.157 210.688 cv
359.531 212.013 359.568 214.203 358.243 215.578 cv
355.691 205.254 mo
353.963 205.285 352.013 208.341 351.115 210.239 cv
349.517 213.615 348.594 217.208 351.282 219.803 cv
353.97 222.398 358.251 222.324 360.849 219.638 cv
363.443 216.948 362.733 213.193 360.679 210.072 cv
359.315 207.995 357.425 205.224 355.691 205.254 cv
f
191.888 111.998 mo
189.406 109.588 li
203.107 95.4829 li
205.589 97.8921 li
191.888 111.998 li
cp
f
578.281 122.978 mo
576.917 124.315 574.727 124.29 573.392 122.927 cv
572.054 121.563 572.079 119.373 573.442 118.037 cv
574.807 116.701 576.995 116.724 578.332 118.088 cv
579.667 119.453 579.646 121.641 578.281 122.978 cv
576.019 112.589 mo
574.286 112.571 572.254 115.571 571.305 117.443 cv
569.612 120.776 568.59 124.34 571.204 127.009 cv
573.818 129.679 578.102 129.724 580.772 127.111 cv
583.44 124.494 582.836 120.719 580.87 117.541 cv
579.56 115.429 577.75 112.606 576.019 112.589 cv
f
607.695 121.783 mo
606.331 123.12 604.144 123.095 602.807 121.731 cv
601.469 120.368 601.493 118.177 602.855 116.84 cv
604.222 115.505 606.409 115.529 607.747 116.893 cv
609.081 118.257 609.06 120.446 607.695 121.783 cv
605.432 111.392 mo
603.7 111.376 601.668 114.376 600.719 116.248 cv
599.027 119.579 598.005 123.143 600.618 125.814 cv
603.232 128.483 607.517 128.529 610.188 125.914 cv
612.854 123.3 612.251 119.524 610.286 116.345 cv
608.977 114.234 607.165 111.411 605.432 111.392 cv
f
638.815 121.783 mo
637.45 123.12 635.263 123.095 633.926 121.731 cv
632.589 120.368 632.612 118.177 633.976 116.84 cv
635.34 115.505 637.528 115.529 638.865 116.893 cv
640.2 118.257 640.18 120.446 638.815 121.783 cv
636.554 111.392 mo
634.82 111.376 632.788 114.376 631.839 116.248 cv
630.147 119.579 629.124 123.143 631.739 125.814 cv
634.352 128.483 638.636 128.529 641.307 125.914 cv
643.975 123.3 643.37 119.524 641.405 116.345 cv
640.097 114.234 638.284 111.411 636.554 111.392 cv
f
670.329 93.6138 mo
668.969 94.9517 666.776 94.9272 665.443 93.563 cv
664.105 92.1987 664.127 90.0093 665.491 88.6733 cv
666.853 87.3359 669.047 87.3599 670.379 88.7241 cv
671.717 90.0884 671.692 92.2769 670.329 93.6138 cv
668.07 83.2251 mo
666.337 83.2075 664.305 86.2085 663.353 88.0791 cv
661.663 91.4116 660.641 94.9761 663.254 97.646 cv
665.868 100.315 670.153 100.361 672.821 97.7466 cv
675.489 95.1299 674.888 91.3569 672.919 88.1772 cv
671.612 86.0669 669.799 83.2427 668.07 83.2251 cv
f
728.79 91.8843 mo
727.427 93.2222 725.234 93.1987 723.9 91.8345 cv
722.563 90.4702 722.586 88.2808 723.95 86.9448 cv
725.313 85.6079 727.504 85.6313 728.838 86.9956 cv
730.175 88.3599 730.154 90.5469 728.79 91.8843 cv
726.528 81.4966 mo
724.796 81.478 722.763 84.48 721.813 86.3501 cv
720.122 89.6831 719.099 93.2476 721.713 95.9165 cv
724.325 98.5859 728.611 98.6313 731.278 96.0181 cv
733.946 93.4009 733.345 89.627 731.38 86.4487 cv
730.07 84.3384 728.256 81.5132 726.528 81.4966 cv
f
876.896 59.688 mo
875.532 61.0259 873.344 61.0015 872.008 59.6372 cv
870.669 58.2729 870.692 56.0835 872.057 54.7476 cv
873.421 53.4106 875.609 53.4341 876.946 54.7983 cv
878.284 56.1621 878.261 58.353 876.896 59.688 cv
874.633 49.2993 mo
872.901 49.2827 870.868 52.2827 869.92 54.1538 cv
868.228 57.4858 867.205 61.0503 869.818 63.7202 cv
872.432 66.3911 876.717 66.4351 879.388 63.8208 cv
882.055 61.2075 881.45 57.4312 879.486 54.252 cv
878.175 52.1411 876.366 49.3179 874.633 49.2993 cv
f
822.148 21.4702 mo
820.784 22.8081 818.594 22.7837 817.259 21.4209 cv
815.924 20.0571 815.946 17.8677 817.31 16.5308 cv
818.671 15.1938 820.863 15.2173 822.196 16.5815 cv
823.534 17.9458 823.513 20.1343 822.148 21.4702 cv
819.888 11.0825 mo
818.154 11.0649 816.122 14.0649 815.174 15.936 cv
813.481 19.269 812.458 22.8345 815.072 25.502 cv
817.685 28.1733 821.97 28.2173 824.638 25.604 cv
827.306 22.9868 826.704 19.2129 824.739 16.0356 cv
823.43 13.9233 821.616 11.1001 819.888 11.0825 cv
f
895.336 21.4702 mo
893.972 22.8081 891.783 22.7837 890.446 21.4209 cv
889.113 20.0571 889.134 17.8677 890.498 16.5308 cv
891.862 15.1938 894.049 15.2173 895.387 16.5815 cv
896.723 17.9458 896.7 20.1343 895.336 21.4702 cv
893.077 11.0825 mo
891.342 11.0649 889.309 14.0649 888.359 15.936 cv
886.672 19.269 885.644 22.8345 888.262 25.502 cv
890.875 28.1733 895.157 28.2173 897.828 25.604 cv
900.495 22.9868 899.891 19.2129 897.926 16.0356 cv
896.618 13.9233 894.807 11.1001 893.077 11.0825 cv
f
1127.87 21.4702 mo
1126.51 22.8081 1124.32 22.7837 1122.98 21.4209 cv
1121.65 20.0571 1121.67 17.8677 1123.03 16.5308 cv
1124.4 15.1938 1126.58 15.2173 1127.92 16.5815 cv
1129.26 17.9458 1129.23 20.1343 1127.87 21.4702 cv
1125.61 11.0825 mo
1123.88 11.0649 1121.84 14.0649 1120.89 15.936 cv
1119.21 19.269 1118.18 22.8345 1120.79 25.502 cv
1123.41 28.1733 1127.69 28.2173 1130.36 25.604 cv
1133.03 22.9868 1132.42 19.2129 1130.46 16.0356 cv
1129.15 13.9233 1127.34 11.1001 1125.61 11.0825 cv
f
1158.7 21.1621 mo
1157.34 22.5005 1155.15 22.4771 1153.81 21.1128 cv
1152.48 19.7485 1152.5 17.5581 1153.86 16.2231 cv
1155.23 14.8862 1157.42 14.9097 1158.75 16.2729 cv
1160.09 17.6382 1160.07 19.8276 1158.7 21.1621 cv
1156.44 10.7749 mo
1154.71 10.7583 1152.67 13.7583 1151.73 15.6284 cv
1150.03 18.9619 1149.01 22.5259 1151.63 25.1948 cv
1154.24 27.8657 1158.52 27.9097 1161.19 25.2959 cv
1163.86 22.6792 1163.26 18.9058 1161.29 15.729 cv
1159.98 13.6167 1158.17 10.7935 1156.44 10.7749 cv
f
1144.01 37.1753 mo
1142.64 38.5122 1140.45 38.4888 1139.12 37.1245 cv
1137.78 35.7593 1137.8 33.5718 1139.17 32.2329 cv
1140.53 30.8979 1142.72 30.9219 1144.06 32.2866 cv
1145.39 33.6509 1145.37 35.8384 1144.01 37.1753 cv
1141.74 26.7856 mo
1140.01 26.7681 1137.98 29.769 1137.03 31.6411 cv
1135.34 34.9722 1134.32 38.5366 1136.93 41.2075 cv
1139.54 43.8765 1143.83 43.9219 1146.5 41.3071 cv
1149.17 38.6919 1148.56 34.9165 1146.6 31.7388 cv
1145.29 29.6265 1143.48 26.8042 1141.74 26.7856 cv
f
1173.11 37.1753 mo
1171.75 38.5122 1169.56 38.4888 1168.22 37.1245 cv
1166.88 35.7593 1166.91 33.5718 1168.27 32.2329 cv
1169.63 30.8979 1171.82 30.9219 1173.16 32.2866 cv
1174.49 33.6509 1174.47 35.8384 1173.11 37.1753 cv
1170.85 26.7856 mo
1169.12 26.7681 1167.08 29.769 1166.13 31.6411 cv
1164.44 34.9722 1163.42 38.5366 1166.03 41.2075 cv
1168.65 43.8765 1172.93 43.9219 1175.6 41.3071 cv
1178.27 38.6919 1177.67 34.9165 1175.7 31.7388 cv
1174.39 29.6265 1172.58 26.8042 1170.85 26.7856 cv
f
886.26 132.024 mo
884.896 133.361 882.707 133.337 881.37 131.973 cv
880.037 130.609 880.056 128.419 881.421 127.084 cv
882.784 125.747 884.973 125.77 886.31 127.134 cv
887.647 128.499 887.624 130.687 886.26 132.024 cv
884.001 121.635 mo
882.266 121.617 880.232 124.617 879.283 126.489 cv
877.595 129.822 876.567 133.386 879.185 136.056 cv
881.799 138.725 886.081 138.77 888.751 136.157 cv
891.419 133.542 890.814 129.765 888.849 126.587 cv
887.543 124.475 885.728 121.652 884.001 121.635 cv
f
858.472 201.31 mo
856.561 201.31 855.015 199.762 855.015 197.853 cv
855.015 195.942 856.561 194.395 858.472 194.395 cv
860.384 194.395 861.931 195.942 861.931 197.853 cv
861.931 199.762 860.384 201.31 858.472 201.31 cv
864.125 192.304 mo
862.902 191.079 859.351 191.801 857.362 192.475 cv
853.822 193.672 850.595 195.502 850.595 199.239 cv
850.595 202.975 853.624 206.003 857.362 206.003 cv
861.097 206.003 863.308 202.884 864.125 199.239 cv
864.669 196.815 865.351 193.531 864.125 192.304 cv
f
874.377 208.491 mo
872.466 208.491 870.919 206.943 870.919 205.034 cv
870.919 203.124 872.466 201.576 874.377 201.576 cv
876.288 201.576 877.834 203.124 877.834 205.034 cv
877.834 206.943 876.288 208.491 874.377 208.491 cv
880.029 199.488 mo
878.805 198.262 875.255 198.982 873.266 199.656 cv
869.725 200.853 866.498 202.683 866.498 206.419 cv
866.498 210.156 869.528 213.184 873.266 213.184 cv
877.001 213.184 879.212 210.066 880.029 206.419 cv
880.573 203.996 881.252 200.711 880.029 199.488 cv
f
893.685 213.305 mo
891.777 213.305 890.227 211.758 890.227 209.846 cv
890.227 207.938 891.777 206.389 893.685 206.389 cv
895.597 206.389 897.144 207.938 897.144 209.846 cv
897.144 211.758 895.597 213.305 893.685 213.305 cv
899.341 204.302 mo
898.115 203.077 894.563 203.795 892.574 204.471 cv
889.036 205.667 885.81 207.499 885.81 211.234 cv
885.81 214.971 888.84 218.001 892.574 218.001 cv
896.313 218.001 898.521 214.882 899.341 211.234 cv
899.885 208.81 900.563 205.525 899.341 204.302 cv
f
910.627 219.537 mo
908.715 219.537 907.167 217.992 907.167 216.081 cv
907.167 214.169 908.715 212.623 910.627 212.623 cv
912.537 212.623 914.084 214.169 914.084 216.081 cv
914.084 217.992 912.537 219.537 910.627 219.537 cv
916.279 210.534 mo
915.057 209.308 911.504 210.03 909.515 210.705 cv
905.977 211.9 902.748 213.73 902.748 217.468 cv
902.748 221.203 905.776 224.232 909.515 224.232 cv
913.249 224.232 915.462 221.113 916.279 217.468 cv
916.825 215.044 917.504 211.758 916.279 210.534 cv
f
931.371 226.222 mo
929.461 226.222 927.914 224.674 927.914 222.764 cv
927.914 220.853 929.461 219.307 931.371 219.307 cv
933.283 219.307 934.831 220.853 934.831 222.764 cv
934.831 224.674 933.283 226.222 931.371 226.222 cv
937.024 217.218 mo
935.803 215.993 932.25 216.713 930.262 217.387 cv
926.723 218.585 923.493 220.415 923.493 224.151 cv
923.493 227.887 926.523 230.915 930.262 230.915 cv
933.996 230.915 936.208 227.797 937.024 224.151 cv
937.571 221.726 938.25 218.442 937.024 217.218 cv
f
837.821 194.128 mo
835.909 194.128 834.362 192.581 834.362 190.67 cv
834.362 188.761 835.909 187.212 837.821 187.212 cv
839.732 187.212 841.278 188.761 841.278 190.67 cv
841.278 192.581 839.732 194.128 837.821 194.128 cv
843.474 185.126 mo
842.251 183.9 838.699 184.62 836.71 185.294 cv
833.171 186.49 829.943 188.323 829.943 192.059 cv
829.943 195.794 832.975 198.822 836.71 198.822 cv
840.444 198.822 842.656 195.704 843.474 192.059 cv
844.021 189.633 844.699 186.348 843.474 185.126 cv
f
811.503 178.98 mo
809.595 178.98 808.046 177.434 808.046 175.523 cv
808.046 173.614 809.595 172.065 811.503 172.065 cv
813.414 172.065 814.96 173.614 814.96 175.523 cv
814.96 177.434 813.414 178.98 811.503 178.98 cv
817.158 169.978 mo
815.933 168.752 812.384 169.471 810.391 170.147 cv
806.852 171.342 803.628 173.174 803.628 176.911 cv
803.628 180.645 806.657 183.675 810.391 183.675 cv
814.129 183.675 816.341 180.558 817.158 176.911 cv
817.702 174.486 818.381 171.201 817.158 169.978 cv
f
639.116 185.129 mo
637.204 185.129 635.658 183.581 635.658 181.671 cv
635.658 179.76 637.204 178.213 639.116 178.213 cv
641.026 178.213 642.573 179.76 642.573 181.671 cv
642.573 183.581 641.026 185.129 639.116 185.129 cv
644.769 176.124 mo
643.545 174.898 639.993 175.621 638.003 176.294 cv
634.465 177.491 631.237 179.322 631.237 183.056 cv
631.237 186.794 634.267 189.823 638.003 189.823 cv
641.739 189.823 643.95 186.704 644.769 183.056 cv
645.311 180.633 645.993 177.35 644.769 176.124 cv
f
692.434 182.411 mo
692.468 180.503 694.04 178.982 695.95 179.014 cv
697.859 179.049 699.382 180.623 699.349 182.533 cv
699.314 184.442 697.741 185.963 695.831 185.929 cv
693.924 185.896 692.403 184.321 692.434 182.411 cv
701.341 188.22 mo
702.584 187.02 701.925 183.456 701.287 181.456 cv
700.152 177.896 698.38 174.638 694.642 174.574 cv
690.907 174.507 687.823 177.483 687.76 181.219 cv
687.695 184.954 690.775 187.219 694.404 188.101 cv
696.82 188.685 700.091 189.424 701.341 188.22 cv
f
927.243 138.761 mo
925.331 138.761 923.784 137.212 923.784 135.302 cv
923.784 133.392 925.331 131.844 927.243 131.844 cv
929.153 131.844 930.7 133.392 930.7 135.302 cv
930.7 137.212 929.153 138.761 927.243 138.761 cv
932.895 129.754 mo
931.674 128.529 928.121 129.251 926.132 129.925 cv
922.593 131.122 919.365 132.953 919.365 136.689 cv
919.365 140.425 922.394 143.455 926.132 143.455 cv
929.866 143.455 932.078 140.335 932.895 136.689 cv
933.441 134.264 934.12 130.981 932.895 129.754 cv
f
799.93 116.903 mo
790.999 116.903 li
790.999 113.446 li
799.93 113.446 li
799.93 116.903 li
cp
f
808.924 112.119 mo
810.297 113.444 810.335 115.631 809.008 117.008 cv
807.681 118.382 805.492 118.419 804.117 117.092 cv
802.747 115.765 802.706 113.577 804.034 112.203 cv
805.36 110.829 807.549 110.791 808.924 112.119 cv
798.601 114.668 mo
798.63 116.398 801.685 118.346 803.584 119.247 cv
806.96 120.844 810.554 121.765 813.15 119.078 cv
815.743 116.391 815.67 112.108 812.984 109.511 cv
810.297 106.916 806.538 107.626 803.418 109.68 cv
801.342 111.044 798.57 112.937 798.601 114.668 cv
f
453.802 216.081 mo
451.891 216.081 450.345 214.533 450.345 212.623 cv
450.345 210.713 451.891 209.165 453.802 209.165 cv
455.713 209.165 457.261 210.713 457.261 212.623 cv
457.261 214.533 455.713 216.081 453.802 216.081 cv
452.716 205.569 mo
448.518 205.569 445.114 208.974 445.114 213.174 cv
445.114 217.374 448.518 220.779 452.716 220.779 cv
456.915 220.779 460.319 217.374 460.319 213.174 cv
460.319 208.974 456.915 205.569 452.716 205.569 cv
f
484.588 216.835 mo
482.677 216.835 481.13 215.286 481.13 213.377 cv
481.13 211.465 482.677 209.919 484.588 209.919 cv
486.499 209.919 488.046 211.465 488.046 213.377 cv
488.046 215.286 486.499 216.835 484.588 216.835 cv
483.502 206.324 mo
479.303 206.324 475.899 209.727 475.899 213.929 cv
475.899 218.128 479.303 221.532 483.502 221.532 cv
487.7 221.532 491.104 218.128 491.104 213.929 cv
491.104 209.727 487.7 206.324 483.502 206.324 cv
f
516.184 216.835 mo
514.274 216.835 512.727 215.286 512.727 213.377 cv
512.727 211.465 514.274 209.919 516.184 209.919 cv
518.095 209.919 519.642 211.465 519.642 213.377 cv
519.642 215.286 518.095 216.835 516.184 216.835 cv
515.098 206.324 mo
510.899 206.324 507.495 209.727 507.495 213.929 cv
507.495 218.128 510.899 221.532 515.098 221.532 cv
519.297 221.532 522.702 218.128 522.702 213.929 cv
522.702 209.727 519.297 206.324 515.098 206.324 cv
f
546.152 216.835 mo
544.24 216.835 542.694 215.286 542.694 213.377 cv
542.694 211.465 544.24 209.919 546.152 209.919 cv
548.061 209.919 549.609 211.465 549.609 213.377 cv
549.609 215.286 548.061 216.835 546.152 216.835 cv
545.065 206.324 mo
540.866 206.324 537.462 209.727 537.462 213.929 cv
537.462 218.128 540.866 221.532 545.065 221.532 cv
549.265 221.532 552.669 218.128 552.669 213.929 cv
552.669 209.727 549.265 206.324 545.065 206.324 cv
f
576.947 216.835 mo
575.036 216.835 573.489 215.286 573.489 213.377 cv
573.489 211.465 575.036 209.919 576.947 209.919 cv
578.858 209.919 580.405 211.465 580.405 213.377 cv
580.405 215.286 578.858 216.835 576.947 216.835 cv
575.861 206.324 mo
571.662 206.324 568.258 209.727 568.258 213.929 cv
568.258 218.128 571.662 221.532 575.861 221.532 cv
580.06 221.532 583.464 218.128 583.464 213.929 cv
583.464 209.727 580.06 206.324 575.861 206.324 cv
f
576.947 248.122 mo
575.036 248.122 573.489 246.572 573.489 244.665 cv
573.489 242.752 575.036 241.206 576.947 241.206 cv
578.858 241.206 580.405 242.752 580.405 244.665 cv
580.405 246.572 578.858 248.122 576.947 248.122 cv
575.861 237.61 mo
571.662 237.61 568.258 241.014 568.258 245.214 cv
568.258 249.415 571.662 252.819 575.861 252.819 cv
580.06 252.819 583.464 249.415 583.464 245.214 cv
583.464 241.014 580.06 237.61 575.861 237.61 cv
f
854.448 259.647 mo
852.54 259.647 850.989 258.098 850.989 256.189 cv
850.989 254.28 852.54 252.731 854.448 252.731 cv
856.358 252.731 857.905 254.28 857.905 256.189 cv
857.905 258.098 856.358 259.647 854.448 259.647 cv
853.363 249.134 mo
849.162 249.134 845.76 252.54 845.76 256.741 cv
845.76 260.94 849.162 264.344 853.363 264.344 cv
857.563 264.344 860.969 260.94 860.969 256.741 cv
860.969 252.54 857.563 249.134 853.363 249.134 cv
f
1195.08 196.009 mo
1193.17 196.009 1191.62 194.46 1191.62 192.551 cv
1191.62 190.64 1193.17 189.092 1195.08 189.092 cv
1196.99 189.092 1198.54 190.64 1198.54 192.551 cv
1198.54 194.46 1196.99 196.009 1195.08 196.009 cv
1194 185.498 mo
1189.8 185.498 1186.39 188.901 1186.39 193.102 cv
1186.39 197.302 1189.8 200.706 1194 200.706 cv
1198.19 200.706 1201.6 197.302 1201.6 193.102 cv
1201.6 188.901 1198.19 185.498 1194 185.498 cv
f
1194.09 225.67 mo
1192.18 225.67 1190.63 224.122 1190.63 222.212 cv
1190.63 220.303 1192.18 218.754 1194.09 218.754 cv
1196 218.754 1197.55 220.303 1197.55 222.212 cv
1197.55 224.122 1196 225.67 1194.09 225.67 cv
1193 215.158 mo
1188.81 215.158 1185.4 218.564 1185.4 222.764 cv
1185.4 226.963 1188.81 230.37 1193 230.37 cv
1197.2 230.37 1200.61 226.963 1200.61 222.764 cv
1200.61 218.564 1197.2 215.158 1193 215.158 cv
f
1195.18 255.638 mo
1193.27 255.638 1191.72 254.088 1191.72 252.18 cv
1191.72 250.269 1193.27 248.719 1195.18 248.719 cv
1197.08 248.719 1198.63 250.269 1198.63 252.18 cv
1198.63 254.088 1197.08 255.638 1195.18 255.638 cv
1194.09 245.126 mo
1189.89 245.126 1186.49 248.531 1186.49 252.731 cv
1186.49 256.932 1189.89 260.335 1194.09 260.335 cv
1198.29 260.335 1201.69 256.932 1201.69 252.731 cv
1201.69 248.531 1198.29 245.126 1194.09 245.126 cv
f
827.519 116.704 mo
825.606 116.704 824.061 115.156 824.061 113.246 cv
824.061 111.336 825.606 109.789 827.519 109.789 cv
829.426 109.789 830.976 111.336 830.976 113.246 cv
830.976 115.156 829.426 116.704 827.519 116.704 cv
826.432 106.192 mo
822.234 106.192 818.827 109.595 818.827 113.798 cv
818.827 117.998 822.234 121.401 826.432 121.401 cv
830.632 121.401 834.034 117.998 834.034 113.798 cv
834.034 109.595 830.632 106.192 826.432 106.192 cv
f
950.237 11.9526 mo
948.327 11.9526 946.78 10.4038 946.78 8.49561 cv
946.78 6.5835 948.327 5.03564 950.237 5.03564 cv
952.145 5.03564 953.695 6.5835 953.695 8.49561 cv
953.695 10.4038 952.145 11.9526 950.237 11.9526 cv
949.15 1.44189 mo
944.95 1.44189 941.547 4.84717 941.547 9.04688 cv
941.547 13.2461 944.95 16.6499 949.15 16.6499 cv
953.351 16.6499 956.755 13.2461 956.755 9.04688 cv
956.755 4.84717 953.351 1.44189 949.15 1.44189 cv
f
950.237 49.877 mo
948.327 49.877 946.78 48.3286 946.78 46.4189 cv
946.78 44.5093 948.327 42.9604 950.237 42.9604 cv
952.145 42.9604 953.695 44.5093 953.695 46.4189 cv
953.695 48.3286 952.145 49.877 950.237 49.877 cv
949.15 39.3647 mo
944.95 39.3647 941.547 42.771 941.547 46.9712 cv
941.547 51.1699 944.95 54.5757 949.15 54.5757 cv
953.351 54.5757 956.755 51.1699 956.755 46.9712 cv
956.755 42.771 953.351 39.3647 949.15 39.3647 cv
f
965.98 91.7612 mo
964.069 91.7612 962.522 90.2129 962.522 88.3042 cv
962.522 86.395 964.069 84.8442 965.98 84.8442 cv
967.892 84.8442 969.438 86.395 969.438 88.3042 cv
969.438 90.2129 967.892 91.7612 965.98 91.7612 cv
964.893 81.2495 mo
960.694 81.2495 957.289 84.6538 957.289 88.856 cv
957.289 93.0552 960.694 96.4585 964.893 96.4585 cv
969.093 96.4585 972.497 93.0552 972.497 88.856 cv
972.497 84.6538 969.093 81.2495 964.893 81.2495 cv
f
1052.13 88.6733 mo
1050.23 88.6733 1048.68 87.1255 1048.68 85.2163 cv
1048.68 83.3062 1050.23 81.7583 1052.13 81.7583 cv
1054.04 81.7583 1055.59 83.3062 1055.59 85.2163 cv
1055.59 87.1255 1054.04 88.6733 1052.13 88.6733 cv
1051.05 78.1621 mo
1046.85 78.1621 1043.44 81.5669 1043.44 85.7681 cv
1043.44 89.9673 1046.85 93.3706 1051.05 93.3706 cv
1055.25 93.3706 1058.65 89.9673 1058.65 85.7681 cv
1058.65 81.5669 1055.25 78.1621 1051.05 78.1621 cv
f
1095.34 163.294 mo
1093.43 163.294 1091.88 161.746 1091.88 159.836 cv
1091.88 157.927 1093.43 156.376 1095.34 156.376 cv
1097.25 156.376 1098.8 157.927 1098.8 159.836 cv
1098.8 161.746 1097.25 163.294 1095.34 163.294 cv
1094.25 152.782 mo
1090.05 152.782 1086.65 156.188 1086.65 160.388 cv
1086.65 164.587 1090.05 167.993 1094.25 167.993 cv
1098.45 167.993 1101.86 164.587 1101.86 160.388 cv
1101.86 156.188 1098.45 152.782 1094.25 152.782 cv
f
989.171 238.635 mo
987.26 238.635 985.713 237.087 985.713 235.177 cv
985.713 233.268 987.26 231.718 989.171 231.718 cv
991.079 231.718 992.629 233.268 992.629 235.177 cv
992.629 237.087 991.079 238.635 989.171 238.635 cv
988.084 228.126 mo
983.884 228.126 980.479 231.529 980.479 235.729 cv
980.479 239.928 983.884 243.333 988.084 243.333 cv
992.284 243.333 995.688 239.928 995.688 235.729 cv
995.688 231.529 992.284 228.126 988.084 228.126 cv
f
1010.93 238.635 mo
1009.02 238.635 1007.47 237.087 1007.47 235.177 cv
1007.47 233.268 1009.02 231.718 1010.93 231.718 cv
1012.84 231.718 1014.39 233.268 1014.39 235.177 cv
1014.39 237.087 1012.84 238.635 1010.93 238.635 cv
1009.84 228.126 mo
1005.64 228.126 1002.24 231.529 1002.24 235.729 cv
1002.24 239.928 1005.64 243.333 1009.84 243.333 cv
1014.04 243.333 1017.45 239.928 1017.45 235.729 cv
1017.45 231.529 1014.04 228.126 1009.84 228.126 cv
f
300.724 216.688 mo
298.814 216.688 297.267 215.14 297.267 213.231 cv
297.267 211.321 298.814 209.772 300.724 209.772 cv
302.634 209.772 304.182 211.321 304.182 213.231 cv
304.182 215.14 302.634 216.688 300.724 216.688 cv
299.639 206.176 mo
295.44 206.176 292.034 209.581 292.034 213.783 cv
292.034 217.981 295.44 221.387 299.639 221.387 cv
303.839 221.387 307.243 217.981 307.243 213.783 cv
307.243 209.581 303.839 206.176 299.639 206.176 cv
f
331.495 217.387 mo
329.583 217.387 328.036 215.837 328.036 213.929 cv
328.036 212.018 329.583 210.468 331.495 210.468 cv
333.405 210.468 334.952 212.018 334.952 213.929 cv
334.952 215.837 333.405 217.387 331.495 217.387 cv
330.409 206.876 mo
326.21 206.876 322.806 210.279 322.806 214.48 cv
322.806 218.68 326.21 222.085 330.409 222.085 cv
334.607 222.085 338.011 218.68 338.011 214.48 cv
338.011 210.279 334.607 206.876 330.409 206.876 cv
f
375.669 228.8 mo
373.758 228.8 372.211 227.251 372.211 225.343 cv
372.211 223.431 373.758 221.882 375.669 221.882 cv
377.578 221.882 379.126 223.431 379.126 225.343 cv
379.126 227.251 377.578 228.8 375.669 228.8 cv
374.581 218.289 mo
370.382 218.289 366.978 221.692 366.978 225.893 cv
366.978 230.094 370.382 233.498 374.581 233.498 cv
378.781 233.498 382.185 230.094 382.185 225.893 cv
382.185 221.692 378.781 218.289 374.581 218.289 cv
f
229.281 216.585 mo
212.68 216.585 li
212.68 213.127 li
229.281 213.127 li
229.281 216.585 li
cp
f
332.643 41.4438 mo
332.483 29.2163 li
335.941 29.1689 li
336.101 41.3979 li
332.643 41.4438 li
cp
f
795.933 5.27197 mo
787.082 -2.97217 li
789.439 -5.50244 li
798.289 2.73975 li
795.933 5.27197 li
cp
f
804.385 8.23584 mo
804.385 10.2476 802.837 11.8799 800.927 11.8799 cv
799.019 11.8799 797.47 10.2476 797.47 8.23584 cv
797.47 6.2251 799.019 4.59229 800.927 4.59229 cv
802.837 4.59229 804.385 6.2251 804.385 8.23584 cv
795.382 2.27783 mo
794.157 3.56689 794.875 7.31201 795.552 9.40869 cv
796.746 13.1372 798.58 16.5366 802.314 16.5366 cv
806.049 16.5366 809.077 13.3442 809.077 9.40869 cv
809.077 5.47021 805.961 3.13818 802.314 2.27783 cv
799.891 1.70361 796.604 .987793 795.382 2.27783 cv
f
1106.36 256.986 mo
1104.81 256.986 1103.55 255.729 1103.55 254.175 cv
1103.55 252.626 1104.81 251.367 1106.36 251.367 cv
1107.92 251.367 1109.17 252.626 1109.17 254.175 cv
1109.17 255.729 1107.92 256.986 1106.36 256.986 cv
cp
1208.65 164.126 mo
1189.58 164.126 li
1101.49 251.694 li
1099.46 253.713 1099.45 256.996 1101.47 259.029 cv
1102.48 260.048 1103.82 260.558 1105.15 260.558 cv
1106.47 260.558 1107.8 260.055 1108.8 259.049 cv
1193.86 174.499 li
1208.65 174.499 li
1211.52 174.499 1213.84 172.178 1213.84 169.313 cv
1213.84 166.45 1211.52 164.126 1208.65 164.126 cv
cp
f
1034.97 239.695 mo
1032.52 239.695 1030.54 237.711 1030.54 235.265 cv
1030.54 232.819 1032.52 230.835 1034.97 230.835 cv
1037.41 230.835 1039.4 232.819 1039.4 235.265 cv
1039.4 237.711 1037.41 239.695 1034.97 239.695 cv
cp
935.032 260.558 mo
932.588 260.558 930.602 258.575 930.602 256.128 cv
930.602 253.681 932.588 251.698 935.032 251.698 cv
937.479 251.698 939.462 253.681 939.462 256.128 cv
939.462 258.575 937.479 260.558 935.032 260.558 cv
cp
1034.91 225.729 mo
1030.14 225.729 1026.27 229.601 1026.27 234.374 cv
1026.27 240.46 li
1019.13 247.376 li
934.06 247.376 li
929.284 247.376 925.415 251.246 925.415 256.02 cv
925.415 260.794 929.284 264.665 934.06 264.665 cv
1022.63 264.665 li
1024.88 264.665 1027.03 263.79 1028.65 262.228 cv
1040.93 250.329 li
1042.61 248.7 1043.56 246.46 1043.56 244.121 cv
1043.56 234.374 li
1043.56 229.601 1039.69 225.729 1034.91 225.729 cv
cp
f
45.835 10.7749 mo
45.835 16.0278 41.5811 20.2837 36.3257 20.2837 cv
31.0752 20.2837 26.8174 16.0278 26.8174 10.7749 cv
26.8174 5.52197 31.0752 1.26611 36.3257 1.26611 cv
41.5811 1.26611 45.835 5.52197 45.835 10.7749 cv
1 1 1 rgb
f
115.151 52.6597 mo
115.151 57.9116 110.896 62.1685 105.644 62.1685 cv
100.392 62.1685 96.1338 57.9116 96.1338 52.6597 cv
96.1338 47.4067 100.392 43.1499 105.644 43.1499 cv
110.896 43.1499 115.151 47.4067 115.151 52.6597 cv
f
335.767 99.6772 mo
335.767 104.929 331.509 109.186 326.258 109.186 cv
321.003 109.186 316.748 104.929 316.748 99.6772 cv
316.748 94.4243 321.003 90.1685 326.258 90.1685 cv
331.509 90.1685 335.767 94.4243 335.767 99.6772 cv
f
146.849 75.6597 mo
146.849 80.9121 142.591 85.1685 137.341 85.1685 cv
132.087 85.1685 127.831 80.9121 127.831 75.6597 cv
127.831 70.4087 132.087 66.1509 137.341 66.1509 cv
142.591 66.1509 146.849 70.4087 146.849 75.6597 cv
f
194.681 115.642 mo
194.681 120.894 190.424 125.151 185.172 125.151 cv
179.919 125.151 175.663 120.894 175.663 115.642 cv
175.663 110.389 179.919 106.133 185.172 106.133 cv
190.424 106.133 194.681 110.389 194.681 115.642 cv
f
98.6826 168.394 mo
98.6826 173.646 94.4258 177.903 89.1738 177.903 cv
83.9209 177.903 79.665 173.646 79.665 168.394 cv
79.665 163.14 83.9209 158.886 89.1738 158.886 cv
94.4258 158.886 98.6826 163.14 98.6826 168.394 cv
f
222.189 144.781 mo
222.189 150.036 217.933 154.29 212.68 154.29 cv
207.428 154.29 203.171 150.036 203.171 144.781 cv
203.171 139.531 207.428 135.272 212.68 135.272 cv
217.933 135.272 222.189 139.531 222.189 144.781 cv
f
291.352 144.781 mo
291.352 150.036 287.098 154.29 281.844 154.29 cv
276.593 154.29 272.334 150.036 272.334 144.781 cv
272.334 139.531 276.593 135.272 281.844 135.272 cv
287.098 135.272 291.352 139.531 291.352 144.781 cv
f
330.839 132.325 mo
330.839 137.576 326.581 141.833 321.331 141.833 cv
316.077 141.833 311.821 137.576 311.821 132.325 cv
311.821 127.072 316.077 122.816 321.331 122.816 cv
326.581 122.816 330.839 127.072 330.839 132.325 cv
f
358.346 77.7437 mo
358.346 82.9956 354.091 87.252 348.837 87.252 cv
343.587 87.252 339.329 82.9956 339.329 77.7437 cv
339.329 72.4907 343.587 68.2349 348.837 68.2349 cv
354.091 68.2349 358.346 72.4907 358.346 77.7437 cv
f
147.498 147.499 mo
147.498 152.749 143.239 157.008 137.989 157.008 cv
132.735 157.008 128.479 152.749 128.479 147.499 cv
128.479 142.246 132.735 137.99 137.989 137.99 cv
143.239 137.99 147.498 142.246 147.498 147.499 cv
f
169.008 185.991 mo
169.008 191.242 164.753 195.499 159.499 195.499 cv
154.248 195.499 149.989 191.242 149.989 185.991 cv
149.989 180.738 154.248 176.482 159.499 176.482 cv
164.753 176.482 169.008 180.738 169.008 185.991 cv
f
142.669 212.558 mo
142.669 217.811 138.415 222.067 133.16 222.067 cv
127.909 222.067 123.651 217.811 123.651 212.558 cv
123.651 207.305 127.909 203.049 133.16 203.049 cv
138.415 203.049 142.669 207.305 142.669 212.558 cv
f
190.963 241.939 mo
190.963 247.19 186.704 251.448 181.454 251.448 cv
176.2 251.448 171.945 247.19 171.945 241.939 cv
171.945 236.687 176.2 232.43 181.454 232.43 cv
186.704 232.43 190.963 236.687 190.963 241.939 cv
f
172.193 276.699 mo
172.193 281.952 167.936 286.208 162.685 286.208 cv
157.433 286.208 153.175 281.952 153.175 276.699 cv
153.175 271.448 157.433 267.19 162.685 267.19 cv
167.936 267.19 172.193 271.448 172.193 276.699 cv
f
783.894 105.096 mo
789.148 105.096 793.403 109.352 793.403 114.606 cv
793.403 119.858 789.148 124.114 783.894 124.114 cv
778.644 124.114 774.387 119.858 774.387 114.606 cv
774.387 109.352 778.644 105.096 783.894 105.096 cv
f
194.681 156.032 mo
194.681 161.284 190.424 165.54 185.172 165.54 cv
179.919 165.54 175.663 161.284 175.663 156.032 cv
175.663 150.778 179.919 146.524 185.172 146.524 cv
190.424 146.524 194.681 150.778 194.681 156.032 cv
f
435.14 13.189 mo
435.14 18.4419 430.881 22.6987 425.63 22.6987 cv
420.376 22.6987 416.122 18.4419 416.122 13.189 cv
416.122 7.93896 420.376 3.68018 425.63 3.68018 cv
430.881 3.68018 435.14 7.93896 435.14 13.189 cv
f
757.644 153.472 mo
757.644 158.724 753.39 162.982 748.136 162.982 cv
742.885 162.982 738.626 158.724 738.626 153.472 cv
738.626 148.218 742.885 143.964 748.136 143.964 cv
753.39 143.964 757.644 148.218 757.644 153.472 cv
f
733.618 174.931 mo
733.618 180.186 729.36 184.44 724.11 184.44 cv
718.855 184.44 714.602 180.186 714.602 174.931 cv
714.602 169.681 718.855 165.423 724.11 165.423 cv
729.36 165.423 733.618 169.681 733.618 174.931 cv
f
694.901 201.576 mo
694.901 206.828 690.644 211.085 685.393 211.085 cv
680.139 211.085 675.884 206.828 675.884 201.576 cv
675.884 196.323 680.139 192.067 685.393 192.067 cv
690.644 192.067 694.901 196.323 694.901 201.576 cv
f
1002.35 28.8179 mo
1002.35 34.0698 998.096 38.3267 992.846 38.3267 cv
987.592 38.3267 983.336 34.0698 983.336 28.8179 cv
983.336 23.564 987.592 19.3101 992.846 19.3101 cv
998.096 19.3101 1002.35 23.564 1002.35 28.8179 cv
f
539.158 230.915 mo
539.158 236.169 534.902 240.424 529.649 240.424 cv
524.397 240.424 520.141 236.169 520.141 230.915 cv
520.141 225.664 524.397 221.407 529.649 221.407 cv
534.902 221.407 539.158 225.664 539.158 230.915 cv
f
1043.84 193.102 mo
1043.84 198.354 1039.58 202.61 1034.33 202.61 cv
1029.08 202.61 1024.82 198.354 1024.82 193.102 cv
1024.82 187.85 1029.08 183.593 1034.33 183.593 cv
1039.58 183.593 1043.84 187.85 1043.84 193.102 cv
f
1143.67 155.746 mo
1143.67 160.998 1139.41 165.254 1134.16 165.254 cv
1128.91 165.254 1124.65 160.998 1124.65 155.746 cv
1124.65 150.493 1128.91 146.236 1134.16 146.236 cv
1139.41 146.236 1143.67 150.493 1143.67 155.746 cv
f
216.048 214.351 mo
216.048 219.604 211.79 223.86 206.54 223.86 cv
201.285 223.86 197.03 219.604 197.03 214.351 cv
197.03 209.098 201.285 204.843 206.54 204.843 cv
211.79 204.843 216.048 209.098 216.048 214.351 cv
f
344.227 49.2993 mo
344.227 54.5522 339.972 58.8091 334.72 58.8091 cv
329.466 58.8091 325.21 54.5522 325.21 49.2993 cv
325.21 44.0469 329.466 39.7905 334.72 39.7905 cv
339.972 39.7905 344.227 44.0469 344.227 49.2993 cv
f
469.886 -5.75928 mo
469.886 -.478027 465.604 3.80713 460.319 3.80713 cv
455.036 3.80713 450.753 -.478027 450.753 -5.75928 cv
450.753 -11.0435 455.036 -15.3257 460.319 -15.3257 cv
465.604 -15.3257 469.886 -11.0435 469.886 -5.75928 cv
cp
f
grestore
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 19.1.0
%%For: (user) ()
%%Title: (plata_1.eps)
%%CreationDate: 5/12/2016 1:07 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb",KBj2NJZL7ZRcdVn[DJroJY'g=e,7rM[fO2LAgK6uMaCqoGme2#f^\u.kO]bZs&emM&87H\e4ah8t[tp!%/L.%YhHb'n)O5't
%FM7MEEmD`XR?h:Bpclc:s13RO=`lso>g]G$/GJF,UV#,qQD72fUKMB@43P0o+/MHpAa,G..HN`][9E1*gj6)%5,USuD>._E>)ThX
%m<Yb$oC<(fm3D&sVF/%1!;t)\s(K#>TS'2tV.J$+4R`9up%4JN)ZFC;dscCBm<%*ZDRJ0m4HH@nD,5mMLfu,#JHf?(RIi^boOG$@
%SWnH.Y0<;,>1&tuq&G,kaR-D9l#8;:-8PCH%.ujU0/JCbqL=f)r;WSG`P:oOQ*YOlbd4c[`#P("n;Nmtda+6E?s]3#O?$Vm.!QTZ
%>I@?fim%$&,Oac\jSu%UTc;H%E'rBand_eNY`*rHk(:t+3u7eL&+c[#)CPD%rE5-Z>0]9h8sQ?W[^4?K*`W/6gD4jcqI.-?MqW(f
%eLj_E@ot.+nZl;SC=GEb@&m>fh+]'8s&CW\9C:3,9+9LToro1S\KIL*<Nj,8q@S;K9Jsq0.r$%^hss[3beUOk1Y9eFKI["1jDFaC
%[+)n:H'X/t_e_O8+&bt\405<pGSj0$j(#^pLbEu,e^J8Cfa<Rf@H]/+IG1i)&ruXe>Tj(*U%:S8Ima1LC>hR8DDu<D9MFbcj(4,B
%NVps%9YK,XCc(J1OUhB$:0c\L"&Wj*WaCs>n8C-OYGH2H^sT20Ff72Pn8J>Q-,0URHaOpnppAlD[C.#%c/8LX=/[s:UYOV&ghjK6
%O"7csj)=RNq:ls^bM6O<<2MD6hf5-5WS3fU@R.f:*Tc?`lHB4Ws#3T#3j^.sOoY]sg%[A'2-[&2V-TB!pM-NoWL`&kiW48'J'otr
%U/Nfm)FiQWRDpLaBb=Km'Q,]\rZr"O5@$!DVq^N,#?uOnSl3%M<iJdRXk%7Z%m"L6.\5%@Ek?XfM68qj`eB[3XOQ\;eSLjfh^_PQ
%&`?dr4ZJM6jg2d3(%a^.Gd#U[,K19Q.\2s&o$:jYY_</%1?(c[.!F;s[Ebf6gj6Ta3QiF$S$dM5+hu&RV17Ntcncmbh5K/^D$W<A
%B2oBF-R>rGI3s3I\C[sQkf7D+72':>;C+mni^@/-k2<EUnbc/T3"n(hr2:\rCXl0C*^'tcUQ\V.f:mm>SSjZ``#Y(fEPlJ>s&2T=
%"hkb;IebNGn)!Gg]R*_^d&nI49D+VM<u,M*]g&JS82fT?HIZnt*:RRR"e.GpE)p^B9P3,O+;rTj+s!0(ThA$[C0/lG*tR3l,q7H"
%p%0s;41@o`HN/$K'cBL=GHk>+SPs;'\DjEOgt^f[>(_9/+t=5f6l_AEMq"uXDO1R^Pg?A;8ipd,$S1sjRoEVi,Q?0j!OV+33R]\M
%cK?5id%HBIr^MC'C-C,4/?5;5F[rfSPj6\U<hLBa:,G"]JV,^cUY:\8R4P<7SH4_b-Q@a]),U)_4qsH%$`AC5X"cZoj3Bhc#2K&Y
%Nsj.Jp/.O73\)5==//j!AAAP3(:1,fdUZgrf01OZ[S`'fVM4ZROrElKj#Mg=_n?tRj&.8YC.I0.KR&k>3RE4[aB;SSf'(Y.bMCU=
%;3p70DEKPA)U3nPQ&Neb;<r0_`-JZHf%54QaPhALNEA:-oP.N&%c&h6YSji\o<L5\/b,URX+WrWc'M@XJiBO[(j4R/6pFk7Mn@n`
%>_PYR't$]q\RiQ&Bf[l"%[t(S3I3.uLFcYoBns]W?J#MKYZI.L\GW($YiU$#!Zi,PPMF=)Q(($\B!0o7TeLQL-HVNoB!0o\]0s)T
%m8^LH\N.r?"rD\[ICTb+47hQG^>-r!S,%(\?Z,#Lh-aU8\QQXO-?Q-'QWpb5J2`f(M$`q>aO=:QretRsB;J5lYM%Hk<\Wn>rET"N
%WU<$L>:E$k<]QR,PL5n<4taL.CV<T6C5T.UVkm^t;_9lX7q4L2G&mk2X(7?KQ-&`m.p5hMAW42Lg[UYUl.%mVksX?#:;[d<oj,RS
%.Sk=!VD,=Ob5A:#YHuW*9:qgO;9KRk<:.\;BH%gcBgq,iXjl5*]@C^cN@\=YZ-1c2b`:RMZdJ$'Y(^62AR,"AaOBDGg*`_;FAOT$
%j2ess1R\4aT`IX9m>YSSs+3M.1hjP^)Faq!1[3c#Bk0P?_Ymn`l8,.(mgNn-HgEZ1?F/ALmUV5p/cN=m*%9XIU[3`71jZ;B(RX"e
%9WV]kWQ9)$U[-`V9UZ+*TGGgC);",t5bi>(<YcZE"[Mp'E$j:i3Oc?Q?r&Zj=]EK<(cBAl"Ra3D_c",#4f_*//9f68V%nL=IJK7>
%:L,S00N4#3&b.5C[pCH14"WH50;J5T"A2Fc[?LQ^h9>imV5otpq96-lL8&27Ub!TH""ocYf$)'>'->[$T6[fKd;7CbgJRV3%+gV#
%4cd_/B6`"`/lepb/3BpPNb`\d<E/=sOhTLC8N"\A_`r._-5Dl>/O+]P^"I52c;<UVK9DZg2e48T-=2Ye"QB$3SmY8B/i2JZ?h,7U
%5X'"]LN&H+]JJ?P9[EMU_^g^RFhjn7$hacgN6fFFPCD)B//I91^@'=/gH'];YAftefDW`m]U,Tp4;j6K(<&)k"U[`\\"lemf'N)b
%VmU/GWl\$Z\Ikk53!3AZO0m&[b]T`3GV1j/>X!"pPo>X\FqE4!diqr_U+UO*(Ol6!D@!G,ho.3Xei(K^Vc>74,CGC2AZ7PP.]6UI
%iA+XY:5,U0HlFPZiD6fKc`7Z?5I4If]&?%M`/3)C).I@0USGh*@.77>3;I%:AO9k3j]eUqR.Sjij`0`gf)*N"q3[aPT)k@LSt9tc
%0hpha5LGcC"0"1JCLWP%:IcD"dnJ1W[2To3)5KV,WHdu8N5:e#%C@2nP)X&u"7)5pj^,WEab>-bAuWf16HdWhL6X<TKr!8/ctGr9
%.qRA+8u7CU5A&T?\EO-3k*'tpSjh4MZ`u5f"qRr+`W'_6%u4'MYL8I?LP6.jDQ02SUl^o&6E+"&7&:<QB?I&S)4qYhJ5am<XI_k[
%;6=Jo_2H'C"ZN).gJT`K7%";cXaH<f;6h<#/`DUj-H[UQB/=PYUn@<!rR&D3Fn0.T-jmG?a@.Q8Ug0-8a@qNWRIXUI%&W-NjJ$0o
%Wl`RU\IlujI$8SJZ61sH7@E83r&;"-//Mm7I%;c#:i9kt8g]BSnN,q^je?9OAm-bNC!T5iZknpT3c8[b9)0gqU1?Q%>#,%B]VV%9
%S=3,uGn$`-cFob9id$qI]Oj5[IDmY4B-Vli.`T#N)caYWY^KL3RP75r3C5Q^qC>4WDcZ+8likRMgrGbb=_21lf<-@M]U<$J5_>D/
%S&r(+>al)2[b3"KbZqb_k$!F4SOp5W<;YR=C,9Ae7N#ttWA]rTs3jjtI3WhjLAU@0,=r(Pr23W%;fr+#4%@gd7fM`kAK\hU(sS(<
%+4%GdcHVHd-V3]=b2H"$*LAYW5P&T_^$=KPD6I":EAWD/O-@T,mASk]=a"6-MRQP(Q0>$t)#`F<^9k%D<9b5Te^-jp*>`HLW%Q=p
%EcG-EAf,+n:mAuD_M#7q1h4Df#$+(TZqq.lC6\^3-'[qiU7Ac')*-0Bru*ooh\H!WrpL3mOS^o]6H82>>c6T)UmX\2l^NA'"\3c!
%q72nW1d3cgr7THm?VKLPN[p!DIo/C-:eg7-;T9A+l12C?XLFW=Ea<m9UZBpS.*om^#W=M_;^hl*"T-J7`KJZ=JOX,W+Cr8re=BJZ
%%aGnck6s>/8nI;*_4GH_Z7(k,1$Xj9>/h5Z'2._-pT,EYZ`*YudZ)jW.T</gIo5aT)keOTnKQt]HTO+,5dQf+ZhrY5rU4:Rs,NfB
%i2#o6m/D3Ps#[jmS_a=kmXL#Zd-Uc+7Xk_SI+BN[J1Y7WUEqq4o:=7LeqD(:Ap:tq45\_^n$UE1$q="bjJ:Ca2OY*'OGteRG+lsd
%R-dCCX#9pg)T>nQoW1[pQHCVkR/t4A%V)hCZV#t)N0Wc,>*$pCa<8WPm1V6jZ_H"-I)9IPUha.V]Pim0b)F_!65G>6AeD=OK^@ms
%]btq\/5.t$@C"S,HY6cm=d\QRpaI_km3l_NOHgZbORB-?2HTmZ2JZ06V&`Q:RdF!_jLt7<IQ!4L3uOc\;2tR?1#A.04#V("AAG2:
%mqTPf*VH\R4pe/lN]Bd3XE#Fm#H#LCF&RtUB^@.:B.DTkbi55'U,#jumENCMAG9UA)I;\b[R6/8%-Z5J,:[lAbP7$e;/Y`[Ll'Bn
%7hZn,dcY#>Da,RCW6PGtZbXa8nFA*VS-<52JX?Bt<jTTbF9GoLQph'0.LO)`QW`6XJj%I`i8m"NQgkq02^cpa@KK(*b'BH@#guFo
%;L@HH9O,b0T*64S.@I'FfL2#,!OH5KPC^WI(RrKt_k\*<aI\2Gq-*=.(7P#PTCNh_Xkqka<CbnSc'75k$ac=BS.$WRdZrieW5NdP
%Y@OLQ-XWQ@NGb7d@(KJUR'*]tZg(2il:^/He,Pgs70dJ%9(T7>7quqqX8EB+Ve3.'-cRF!qWI2_4qq/An>0$#1bRA%K#9!"d"fNr
%PC>V@?@"J):-)5gVkG,215b.,47g(Cj8Yhan5"6%Ai^$X[PKl8A(`XKmDaEbVJY,%RR>DqCmdY1_f9BQe&d3e?e%cG1c3a#>f\Ia
%D?aXWfMZ39V6V8,`MafP:&D[@a-[TG^0u!iD\gB\,+iK4iu#TALgsu3@2?nN=AO.pcMT5R0oKO8g<Rq%(pc3APf,<UG<E6M.9"7:
%:%ut/g8/i!<.!/sB#uuuITOrB*e#XgQ%*g4cZh3Wo,6iF*1&_6<]g07M]1\.I_\5GET*4[Z;RH!h^-;?1Xf:fFQ7?aeS$"GX53?F
%G\CH;!::8s[7n+'[3"(baq2[`RPN2lOLaUbIo^52';LT$cqkJa5:b#8%'p6gc82NG1O=Df?CN=+JT]CYf!C/sDDj[P148_mgWX-9
%2og]mXB&5bF442@Bmdahl]_kT<Ipd[?Mh66,J?(]6,?^sP7b<`s7ohF2do<F[F]cd2%,X\M.,2@KWe)59M**&(/uVCh(&j?ZXg8]
%\4T:#OeYeBs8Riu9AQYmZ>$pG0_36.%E2u$cC%,\'lFZsM9#.tH!*3b?g`LMR/(e&oi![<k%<K*baY)IF#.b&+q"@.hHU8ks/(-a
%2_[D=aCcp'0W"2B#0^]Igru=Y\T9QND?,Za4#_6DDN6gAhCNk''09(Oc7PGC^nJr+`6>'I%%$BfZWT;*Qa3R+S*nVY[#Yu5E-Psu
%)92^;,3&e%.JXD-eCTtQe]431Q'fG"&n=>tjp8/_;]oR4_<;dTEq5dljl9ODI(kaW:pX.O=1^\_1PL!6h&j$U;/4X!>^Vn.F6lhH
%N\]TM/]VN4N&R$"kb$C^R0>Suot\eQK/$!+%MsHH\66+S]"aSuU&'Q@^?.nk_;Fk0i[#$,(`1*gFdD9[HVJo*I-EC8P"'Dp_mo3Z
%r.V8*E[d1if@P=R=CoQ!l1E[WV/he8Xo@H=#PLAK,P1YQVa`=Ns+9_L%sWF=C(3ThqH(]+E2r<X7&6A>S<X"YXnOU,#KA@9Kb(5U
%1">:[<T[5bau7+3[bKo_?b$^`!]s#^:T$(:iV_so_J]A/C,Ve[p>!V>'5[1%`EpGg^"?n.Yg,qSs$>-%>$m3e<I'mo-<+VId<$3o
%1RmU+0B>C?K;gbdAdQTn*kT1QesYdL=g7c>H4T26g8$Y0NQ/qD)2s^L;>9p83&m+]_l2QKI5olCNC+I]E]ureP!/4nq-(&QY'/.V
%;5VYR9U0e6Bh?CRC3Qj\*>t33.E;`1BJ\a0)+McE/&s2#9Y,8WVH5NOOHZkEB"E!YFlP;JOCoXSS5c9Hf>s!:foKLOMQ,Zm)d(#@
%Apm\W-5W&?IHtb(8ePE4]P!+=[OEk'<%lX<)9Od0Ka]n]LAINNJ&RMMZ/n3V*&$,e)G\l%/$5`!]5pP5dhGF]Ia7QUZElIB@cD!&
%7lRioa00t)2pO39oeeLj1>(Y$?R0.G-</+^F]#$@TX4N&H4N*_dm(f?-N;-\9Yk#VND$OgLAa.&+otaOi4-ZD=UfVeP6e>#2\XMP
%AsUaa:Sg4FhP^jd$)d/)9t`i@dffCAPGl/pD3$FN0ki`)/KJKWh5Q3*>.G%X(Q@k<XPq46emk!m>J3LOIk&FY9k(E@T/1LHS^!bO
%fPK>ZB&7oD[Q`:'&9`%i8)UUWC334VHq@`JH2cNCq6R$?A/h+=@7L^WNRs>bKg(7Y%]?rSC:0Ibo2#1)Q=BZ*;Cm=F$Ej1:Uq;=t
%dl?&t<8rr^1!BgbkZ+so8#($[RO&,EO%ua8oImuXlW&jm$fne1>*&Zpb9(>i"ViN3j!_CnmWHfq02%;QC"1Gq[O\`)X+&:7Y8a<A
%Xa2H(>r=c]2JWif^V03kOImW?kON@RKLGi\IK=1.ecuUQX`0k1LJ3X+^L?X3VZ,cAY<S9/$LR6^.Y;m.4MGJcs(_&<E%'m5&O2LN
%XF2GHGsuPdBD/!%Dq1SlOceD;Irq+mro\\9OF?t$hK8qH$$,ZnBA4bYKm>&MJcL;q^>nu(rF+Eojgt6)10lQo5?oS[]e<b1SN6BB
%#QFCdrq]*g^PG"_QaonaNEkR(qJdTIKP%C6!]`mnCn0YN&-PV!H8Wt@9!tVPN<Hf*A&]iL$sp7")$UlAR"jW%^!I&p_bj'tqm9-$
%FLl<!*#%jm`VY.;T`%+Qp921#0]L?jj4[DrkH*-Qci$@'mOA,'qBJB#hcim\NH)NNC[BE:qq0jO8YsNnj?sV=r8YVSqJiirU&JD&
%#Rs$hc(GhXCmKEjnlUdG/eR14d6e?C\)O$..[9u_I66NQdFsKsa85,:29\jbAX&XoHZZ6TE;+&6?DDT6B;s]i\^Es?`q\LbT0$@R
%VuNAf:T=UZc<7)FCR3;A/'At'8p&P$M*UR?g;!sEY0LRS[_ss,;>1f8P6''Qo:O,=s#Eq/[D_JSAKsVY6)I=',KiiCSIr"X'UJdC
%/f)fW1)M'WQ@#0?ZT\ELn!C?DEi0$j%m#s#@<PEEDk*;LWtV`:gZuCQ8%E^3f*(U;'M.diX]iG!@be>,4)^Jrd:GNleLn["gBWIY
%.B-)O:BH7dS1$J3'#RE#*9NM3?QC1PIS4#(Zb.fN].u$CQ7saYR?hRM:#?G`7-r'tF^E(K#sjNqfm9uM)*Z*c0%h.)d7JPk>s5k^
%k/rUmfP+g=$C7"kB'-9Q:PN.@l>@fs;3/;b$5m)5@56_j]U7Fg'fF+OF/d_!1A"FLY=2:l]_FBB\=lr)fJ^uZ*1\6/Wn5D\PT$I5
%dV4s#CUSO@c(BW$dl-h8Pu]cG=ucphDV!O`9QJ):V9\lZXAl7c"(9/9ZW4#)#1$q[ea+Wm(:J:<?FQ?W06Oj']DCu0E*Pk*'-pZH
%1i&q*PTrPX]k,aJ[2^]Qkn)uLmI"u#e?7lBl?ggNp:VtG5&W:$kKR<lGM6rSUe8$(F0/=jC?IY.HEWXqYU4As9tIjdDjB%$9MYaj
%/(FLSd/ZsL>bGii\ZY=[`kos-j(QDs9i'M@beI4Wk?<kKZ%s+E:!X=9\?0AlNDef_;Wj^67]FYcCIaqorF_?VN;i8-2Cm<ql*sot
%G(3aVH,H#!MmfT(2/(<\S8Kqo!/ZaNf)7AhSAboX>FXB.Ls^OJ?1.$_gZu;(;mLT*@scjE%@l/%O8CWsdQbA?kGP`MEN-Ag[<f5U
%13AsY7d_Nk[&")[r%i)s&CBfLPS33jD+7suc`#Wq*M]#pr9X3q5tUf"f;^FV@X,80'/uH0Z8r(S"%6&Ja7d16Q*>&7S`nCuG/`Ze
%"DcOWPj<GGc1=?$?81jFQ0^e9HWKDE"46[;Hb7qhT8+rX\F!%t>cN?(qHBe$*5Wr>e67s'?J`c$MpS"2[^URjRV'7B;&e7X^CEQY
%9;,L'FK7Er8u\#:*aLf.(\c?=3ZrDl09M`hR!XFP^%Q,*/_]%GT@$T#7n:oIRt#WP.@508GPX:=oN9>FK7bTu8>^T'IoaZP3SJ:?
%P2,7:02(KUHDu95b?ZnaDQ.5)J$jPfT;5](ksX8@g9IRlDs,IRpS3&B;;#g9IO+)N8=F9M37?S[.J\,NKOe\P&(2I%Q%Rr88bMP>
%W<f,:ZX&D;6PqlYn5ZgLs1:Hd4*3^q9!3%Js/F."dsA+C9Z0<$g>Ja-Z;1VL:G8J8[9$-q[*S>lU=RJLg:fndVRR[.*pd25]-g34
%/];nP%1&7/-!9m<"NuM-]BWK<oSEla<3sL'o_<=hpn3V&nV;$O#-R^B5]`Ucm\!f*:dLRt#M1(,>$j]9)=nKh(`+)$Vp/3]QXKA<
%EG6JCCEDZH?74dqFO9:mCeLcM#20fog8##.SZ'YU#lTu/Ct^nQ[Z5&pcECp%]2GZZ0'pc8L.Hkd@<0nK)Z*LP9c5<<5L5h>gPqD/
%/u9gGmbSL-1l]4:N)ghl:^oG+Lf\H^W3&%^G3^I,%K4:>Cr3+)[nc8Pq0K#ghJ&ROjM`tt<$N45+%*5:BKqI@rQT\[LdW1tV+rS0
%;CN<tp(uL#0c<l%DV.pZDCo4XZ'^D')\*r+buMB?X*.(h<i&RV\CSa8MH8i];<>)/BfU!&>HP>KG8[*ROd]A;^X1506ar/GVLro?
%A*1[:<6N#NjD^EX<n05O_0h4n&`#3\Ngs>mGFP_a8rY?)[o9?;I)47FO#,sTa69a.ElUCb`AZC1m1IQsrf&'R73=l,dVj6.X(`r6
%2:\JtX+hR0GC^.3)1/Gd8F&mtWLc#&q7K(+k-57_>rj=ACn=UA=/cN=_]9=f<sn^$rO@Z(XduXCG4MRYj^s.R]o,G#AU'k^Ce9bL
%.\C)!\6[38gJp#Y9)Us5d$?&Tn'@HiIh.pEK?`%d)rbjDSG4pj3<uQRqJqtRe*puI3&;WCb(bCPJSD%;Wg/'=,-7S;\^@sPQ`3ik
%>"_Pfd9+hOeOlqPjA6:=6\%$p`;\#X65e$/8F3pPJ[q0Sn'o1`Ub-S6\(XQ::u64_WaV(bYX&J(d3UjKW^c)nZZT7efNM91O036L
%:*oI:3A6oYj&3L1f`q/>&nt?eFmEo`YH&S><D<[e.CG<IXco#\BUiDNY]Fp7kiOD'/#8doC:-j+(IL]Fm5hr@pe9DZG,n!op'#hu
%2*%hVAA,WM,<@D"l>V#!pp"AMG-9aH1aLW#\72h6M=F1mK#?[i2=-iuaGYm-UD@$%?,Uh'[(^(3L5n4>bTA2/s)-rq@s(?KJ"TsA
%Jn8l3,FY31BKDl];NIf5e1c>E)G2FHMPd3=/tWjjZVnQ14JHDn<PD/dE/W"QgWqH$]km5#JW<f6+QPt812%)6G1(/j04Pc3UnS<h
%M\1dRD+fjXI.qYQZRc!0E]n8.c+V4@jE'daj4m+f>lRFaO1Bme]6f%OkPhhXq.XuWldFAA0S>N,_;hOR0&n].8V5g\qN"8YYbYj:
%HPS\jrU,&![nf*Xkm33:`7t!cIn-o[W-o:)Y.pI;-]j/3drq\lX"ROh<7FX[i%[mH(>Wa2iIXC#HL^CCKjJAkO2M/V9QdU=L7'kU
%#NNQ&rc=.]OP\!XJe3!q[VN8lC\hX)pJ7=T@>Y9!lkR!i2HX?gqlYa0nVh@H;Bs0C?Ob-&HVnXuZ/q\-<-LDH]bbh#8;Z]N@*ot\
%H<3doK$=OK2k7dS>A4#5'/;]m%[aUJa&b"9_pnWp('5UN8OrLDXB.W(Pc?Sm6`rae,>kitZAhuE<S&9:BA/Q*b=f-[%f6l%7ad8L
%68hs3?u:88=u@YF:_QGs-0<pjg<DZ!Ktj)Do:<fr)pY"#9(`DMa/c9#6FoN=l?')d9j\L.)UbAkUW_h_91gBtV9_RMi?N#&*4Dnj
%&H#fp)W;)^)0D43bsjKL7b``t'TSZ4?@eL^n(7%RkRP#0Z<l-h6Y?oL+o5K]p8Q<Ilo6DZ)g39W>?\q@cS.pRXD>h6fP@b3G(l/M
%oqWMl`9SG/r@8kK;3Xtf_HMCl_[PA[`4E`oc5#\K5,74/,Bi<L#p]^BJXkQV;Ko&2,AMH%&WmQ5=71)s#>W2@9XAOdm_Bdt4Ya/r
%ar&ZT]29pR4=FkunD`qQq[raU`VoMlWg"qhTM)Jt([G..7#Xrbr<td),Ku`$EnSYCduK`S=a;F]`68Gk?*XQ*m?C3b:"VEGmIG6;
%em[hn-\LqV7SKk*<QbNmoct5n)+EQnZOC[SZ"i;SG9U',[)qD+]WFYQC#*iT7T(I$<`kC[N1@ImaUo'CH"AAtf3-VE+]j1hEN,(Q
%76JopZsAWCQn*=KUV))RH/_6"I#a.Q$r$]g8ADliIl)M_(7F5D@^ud8SS#\nAC/e'[?7LJUgG`cN%a=,icotXiLfEo0i0mQ<B3dH
%PcL(Fh[cO)d2nF'&D$:-%5oe_]2@XiJn-R'=j9Hae>$#&:Qbl]41S\X*:K]pUXc\/K$*Iql`+WBh\KhU9QJ-E5%N;cZM7fN>oJ4Z
%>K6N)(SuQ)%kipC`i=k0_tN2ceNoZWb;%B_0?"j!_F5E?Q=SlQUJ#)qf>oWb*jrRQ#$srgNR3E.Wf>e`C+:"V7dP)/GBU["?.m*2
%`qFT6(<N,LnB:dBcBI(2T,(Jb4hAC+HGB71^:1_]^=Ia:5?g<ggj6\WCN8eA7^\KLh!s5`g[oA:YJ#5XpndRmH0:7c0A"pkZG3e]
%]aX=tNcWr/3lQ$Vdm`<Bg<,c[K=07K<bJQ+_Knc%XKCjEC?npH]BcB@?LOtt3mkc5p!Mf?0qZ41H=<tIap4B^05fTOp-1b.(;G9(
%G<RW2(@'/8:1=$mHa`Fr]A;3k3d9G_J#hCT8(//JN9A5K8%[f:-iVlPTDg5YDWK]8Si,>Aq=E>*q:=`:j\EP(:gCZfgR<Im3MC/S
%?<^cNCPjL3htcTG[G(N>PP)9M`gQkSm%_YRHc<;$o6kKKao-E=&1tK"n`BC9PQ&/f]sqA$^9tZhI(N<:=M!=M7D(9RH8J@kD/Q&[
%=a"/uD4EUV/$"B9p:Z1Q=,UE%ei)s2g"M7.%j&K6If!rX>V;T-YNj!eaj-;JD&NpXI_0phlZ2[Ao?)CHmZ[N@m=dcNKq3jChgrT@
%g<0"CS#5^VhL8c]1s5RY$]eVs4S7rh4KA8W_p4*EBU?3QL%Ak3*jT$uhK_bYoC#3K456\b=#V1dBTp]-O62`DU\1(j<u2i?m+bn$
%fNu8iDK@OS;-]g)rQ2\Mf\^@k=]g)Vq6XrYhu:j[5&T.%PTG/^DIZm7H1/Dt%?TlFqY@e5U_r`@A]HJhhgS^U=B`DIF_frG)q0',
%i<t^`9kYI*q"JW\s0;'<CK:>@qJPnY[,5!@r$nIE+09>=i:k7.j2[XI<q4;r,;mi[8#n/*Dm-nEDT43(nTNMi4Unf&Ii^9%F0Ypi
%ma44%71R5j>O06Q-9$e\-][rKqc5<h(;DF8:EI7F^0)rA^U*>K^Ngjfh0o=#Ye.0S=$/LAIUE!OH23]%=a*%L*XP+sHBjP\8*7\C
%Fm"0]GH:N+h9e^bS+gm`Uji&[CZFK,8MkhmebAegc"+]Li-YDk@<^nNMlkudjb6N$doqb3=J4Ek^Ku0U[e*j%HL(g3[?\YtmtJ[B
%h;1T]#)JbCK\h[^m9=n8"$/`[)lNnEq6=u7eG?cQUhFTCZ">d6XF=I2.M@e)=BnsHL0k/ZX.Qodc./:,m.9;>dpkE>Rl%+9mlW0A
%4ZAdI<Ynpi?ao/m?K;L6lJY6Krm$j1=\1hH]\\)SD9^mPc#9+tqraFV48H"3?g/PXBX4j&fW9U#fB@>,mh'TLk;Q/^2EUn1q9=B)
%s(K(bgkWRU[C:R:s8I+]C%4/&[OpH`oO<HM.3-('/<I)]*#@.M5+E-f0/lV5HhtQCTu43N):haLj[Jn-mVU5;eQ0,9mRM'On^F\?
%Q'%_/Ga2(52N+`QmOdh?A_E8+T=nOk=c3g*[N;N"lW3<:[Dps5iUH44*?*tW69IMKF0YP`g:FcSIk'fWSDC)\TC8n/$ThunFNt[u
%mQ^;V^!/>FM48G@5LU79ApEkAd,%qfIInTOrbM&V3I=hPF19rhDg/ChJ,#uYI&ej$Z?/b3!iAO-1nP_flfW>klIP6!F"Sd(5OL`a
%V9)'8,pg,sj1)QYpZVLd7.Uib$AP/<qPU^9khnd[i9S8&G3=P>GPS\ZDY@h;$3sq1Dl@$\_Ul3GB,c,2o(=TVK:RATk/Z=UiLkDY
%,enA0a>ALuf@o?JHa75IKDP)TlBC%`L@;l*h):jK5HPeVk3AH.T?=b8_Q4I4YNHuKL%O!o`rmopV.&NN3qpEHl)#cWo>TMLL@4ks
%rgFAlUm()HB97[T[+6##Ha6FsI4Io'e[VHQM&1tKl%+)JH?!n_eFMW@cd++1[2`<_<l^u^,'Y$BP_[2_k1:+HVFG(.GT(ZGUf+kh
%_-(t_'m41P_<041<;5S3h,S4_jpD"L;^"k0Sq$1ORO7+\lP'qaU`]'?d\D1=,fIYYrOXq7J$6I%"$;W=A)2I2ks\6Fm6<bbV!=_2
%ZqLBI9Z-4LW@ol5'K0+&KlN3hoT8@i^41_nG]-'Ua!JCgn^^GRYCp78dYiV5Bnk#.ct-["MPRIGj.UR+#"`7*BUB?J&97!2-B-"/
%?V]mn$GrDVpW\TcACgL9jkM+cf"\UZ4q&n-M&=-jN&mBjL3&Gg<M&NGg)DlY0"J/r)Q*@X5q^,jna7cqj?0#Or$,h7D,CQHdJ-CF
%p3CRXs2?Ae&]+/>+8n+VK>QU%(QGQ)qp?S_!@LoOItWL[C!Y8!XfjBB/8s?jOG@!qU>t?#>6%<?aIXiPYJ%RHk&dBpj_/M;I/a)9
%kdH_8iHFrb]/s_2ADnQ@47Lht4W[pEnT8LEM:dK.g[fn?9!?P_1N'D0]g!<NSFuS?(14`L^7If.r?s/^2i>4_#@H3*0Q(ZAFgHRd
%"a2J`?Q$8HeYTHRc,!a/r]^@=*7_O#c19lQ_f]nF>"Z>kk5+U^0m^)"/2=]fJ9p&['A=l#m#PO5jkZab$h@Z`!/Itak)#IB(C#-Q
%:q*:`_jC7M'X08.:h7b]+9*#;-%kBt#1S.d]O^M:ZoJsZl4T0la1BSarc4TT0L7;JI\uhtc/!GP2SFUSc5(:aWar%IkBO5GXZ`h"
%IhZ7kHhV6/q;_/"CS)ZL^V9TUbGMT8r2Jok+][5r@IAX3]uV#!^\O^ZEc=-+4LG?H`\[X3D<J.-qrS'e4WRJ[d:=PuHk%=aA']K5
%T7a'-2=L/NqZ\lOiZ;?0C:%2mH@@fIF7snpiK#bm[Ffo]qY`A^(KR&-rT!=)n6oAd.q/%VE)9bCT^J`8c1:jt?#/iPX\cR7LCYT'
%f=>rkE5;<pIXC,AO'Bf7ihIaC!h](;E#qnbrVYaY3@]A':4,m(iAZ-e5IV]i8q)SAhH6r1CBh64H(QJOX`(=ZrfN73n[H5[IW0XL
%ZdH\\[-i\A5ko-bcGNG/?f$(Brd&L"c^Ol1J#/Ibqf'%6qUNDd\E*LAGMd4*k2nhE5OTW])*=sJm:g2lC(F"?O6==F5C7.6-K`OS
%[<DH6NO/QRh%QAg`H\]Z'b9/VE>!/*VZu$qXZp$6HL$<rpni,5D]_/k.>03)QJrtrSaZAh6+jVM`O5F.c_#&;QsXr+FM/n(BX,u.
%Fg\ulFYnU6%(P#,X2eQcC[YR_gflsH32huu%)4O/Ve#IS:rfo=iq)krYDUd]o$+;]a3le.aaKpq43!Rf\Ap(]@l@DZA35WH?@Ii3
%/&<qeDm=Sn;=.=G%R2Lm,,8W=qo6F5)57/2EF7TIAZh*!D*Hd#;<'"HAoR&NUqln`]l)fJ#I>V$q<5eu9!M8)(GuTGrD)eY';N)-
%m'\=?V<4o#GmP<Y[-cZoG<,MG02eTl[eFaSQJXW8d";PW+uG;'q<C]DH1U7Ch+tEUdp$VFf>#PK.dS_K5*Eb=S\%:KE#Uk%FS#:d
%a(iA#_t*[<]D,!Pn!q7Fo&%,s*VAZ=C$MnUS'gAbh;]`c=B6Pk:?FLY$cX7lB.eR+U@;G2p48[i^:guOjNYBtG.m`dh0o/a?[2NW
%n$K<K\?L[.F8+p3J,S0([*o5<.%!L8MqakI*l%j1k9_IT<tC$;5<-<"k@!W>p:V!U'-c+U/\&,hHp0JRa!OS+"k^II]mEME&cTLb
%Ep)@saK,lNec!eU_?96PXm`K$XeYPBCN&Z`]CFB4[*>MX]^F&\SAKFC0Yc-3g\k?rp8=ghC5c9VEa8A#\!*$;lM]<fajsZIC_]/s
%HS>l=^38oG9saE$q<<s`>.o@B^FHGR%Q%=F^<E3jghll;kt6)>Z2)cm1$P-\"*a)&dsCc)IC/ke$_%O:FLsoOjlMnt2c%*\:H)Ts
%]R;QN+R8BiIHqQ7eDL"7Vq8Y\bXOISOXCLN6Np].58ga;GrhlW4R^\KpLgPGg5_X>aD)s7gqHcN3V_=`W;_7d-2r(2$]W3]c!cRL
%HNW-ZD3eDbbEI]n@<["g`S/I\.rCTQ[B7`V[?n`O,kP9Vs'0hL4:/bdh#&"3mgY@8r78T38@H=#%u'0!mK4$&T4MI^MZ<KBZ@#j,
%PO0'b4FZAE_mgsS05M[Fr,A:qaeRk;lOK/d8.Du`B=G?.$D1,'2V(XtTA=d'DAU0FkCqkh$4jkQ]fk.'D64ScWTB4H^A[r_o"4+-
%/SMPQ30ZF6RS@Ss!Ugipdb\,->fH^.+(b+Zm:C_)Z2aG6oZd,k.j*d,Z:SeKFqEY_9g&"6hV-_J_d7*Ia56Do0u%'u>$HIKm6"sj
%dshk@hmXLClKT][\).Q/Xs2H_U_!@2i-t(P=nLgV-?nOH.Iq;a=+'_<djZmjDf)Z&hmrW=3:au]p%n)dpEJ)!rghQlq+!?9<m3Q:
%HHog%i=6qF:Cc.?%iQhge5>#hI/a!7maeKVC[Kk`]#BkF4$SC:6dha-o=,cd^U8(P`(l>Tp2==np^#c7l*YZsrO8e8\`[VEViU:9
%A9W]u6uL1d5Bc%+=178"/+;DHrW-a'^)3u$JKrQH8:8ANR`Kq32]oQsQ$6ai4oJF62:l^9`h/d)XZgXY:*3)F*RS5ZLFGP.S]-ZH
%j#>7q_-MBW)C!'=1(C_PV1.+'%YlO5hm[bIRq9&p;_R7qLX>@9_*<1T7JlR_YL"hjb`/!EW;e%Y29$UR<Q=:ob6=AWlf#N]R>u)*
%pT(tFFTCF2^!W\:I+Thaes!5f`*-N-c16Xu>?lO+qQ:bj2IYfp_G*fjXO[+B;4AO5O.LiKSg"`FU!N$^J*d_m)X9Z=_p*l7TEilL
%^V"Zog5^/Ia!tCZRlAo6[FWq15<m,$.91i0H#0S=:YYVY85F[_e4L>@1iD?Za!g:5GIkc4h<u(q5b7Z/AbYF.T'"mAq029`GriFg
%>FWJ.ZU"u[qm65AG,JD:lM'_/GQ5o\9V`h4_+TsKRsEk09QQ&aZ1;dR@JBa&dI>?-AaLPRV"=B@%SaX%+#YuN'@6YqD7-f0T/P%$
%7lqQ9!-+=>DnOd4^TrGoGhi*3-@ul)'3IDdHThB0*mC[?e_A9Jb1>+F[Z5)54VF,gD9[Q[\lf<1G.P1S?eUrq^@ZTdHrKL87*G>i
%K_>=lHKrQ.lYKn5KRQgZqF,&#&0//S;]:8,n&O%VB4M-'NKo]6e/f=Bbm24CW?1RM1NO&#*8f$1J;j#NXf]!0@ePH2@HD5^p=M05
%9#+)E8NcXj+sU[lA`7$:NV;N,6)/?:k0_Fon+WSDYa#/.VP6#bA>Gh9dCOC*WH`@=I"!%0:H"e]S:.F8%N"L+[FNn&Qf<o>X1u^L
%c@aq\Veq^eD6C!gIR=mMs*DMc(;H2-k^P]B213h%m+:$:I3Q5oI]YF+rqGE1k;I>[mIf$al)KpIp-/>.8%f,DFpGK8*YhIVn+YAO
%hB,bdnb39Xj<d%b^9tOP<_OCSW`Vr/nYB]!8,4-OpD+gPq7d_+)1biZH,DkF1fn+c\*eWH8g:"QPtLjkfd]/;>H]WHLJQfWI,CU1
%l)lE(5AB]RbAhIdlf[+B1-"^.o<d"L4EPg(dMm)n-O40P:*)%$UYUDU=(iSGG%*J`2rkdUc<;rf\'[/&>I&%ZoSA5DmZNBQh+N2s
%SG'+)pr5Nla;:GOIG5q+lgO\eS=oN+GGMQK7]0Xq^1sJGWD'Mgql>Lk#M"Uke\r%PedK=R2TE@1"ZCaC@lnB=p%8M<dr1FdXS$UB
%pVerD]:OHO-*4g<^&FRE7J(;joWJ!!0(-X%Dg/ZK_e+&_bPSV),^Yh@$u,alHaEV6Rh@V@>CVSOHu$I.dbHC#oBuIuq>%&JfRCNL
%%f9WNq_d%.0=U?_=5Wh`\b%%)?$G/Y9.:XTIT\cb*#:UH]^ILG:EGW'4\+A\WnBUF4N`:H3&en$kDtLmWul5WfI\/#h1*j=ohf5O
%Y;abX.SIbJg;^`*1Vg5$s)EC$m_sL&^"N:mfM%F#07rW2185*te_N>OgiO2aff/Ro(_b4F*9l%jP`HuC?eCRNNCn\JApL`Tp"NrL
%n`89Xf%7IY((S;*`TO^*N+@Kcn=qWegUkf*^#f!,NX;1g9A,?DE(Y"12\7*drARM.r/m$2Hcrl_B?FCu_kVq1QO=t-^4f!:98B(_
%o&F@>e=1fe45l[R:Ns\)GOVDBD9idBc[RA`Ss?oijo7LC/Ugf7TgDLlQh**s\KVjNe;8PCW,D*)fg-jcoAKNE`L>4BV6[l!Ot9a-
%jMSn1VR.9n>a6@>88:8m[g*7T[7ZGR%J)e5Z;YV1f/h`8\_2m^O7f![mDaD]?XaoCf^PR+BCrK2lW.5tW,SF;dDad;hrYgOCs-+3
%p]]=JQMPh7^LiQ\rKulf5kqN)k"I;HnOJ7Q/tb;H^\qr.>Na6+geNJN5mnT3Er4+)OXMHVO/TIZC)g+B2f\dO/G'4?lJZXo^&JIu
%.(&WuO08).T'LdOa>/_0'*#G$VXio1Hnf;)rLWp%s*XCl^V9a>hIJ7Rqs@`YZ6&%q+;n@3ki9Rppgb%@FUF1Wi*!eSW_XF6H.t&i
%Rt``:+E&-hM:p.d)-A5YL@=4Ef.o(Ej6'_*#QV8l]Os;,6`GWJ3k;(0FRhmdRnH""aSRk-F=H_L/ZHMd0F76(&_R&td*Fd3Xc7iS
%FZ4TCd*8%li"Iduo:D_gH[3s3\3!Dq\I>9r/Gakp5UXb\5mSSBjL?7ll'cn8Z!:VKQ)F#Y\S9oAX["T5WL)Q(k)"2gVl4)$-6kC$
%<jI(<S+d!%d`lK,&CIf5dLtb=)JThs>eLPLLJN;QA_;:S0KhjD"(1#MD4i[0bD9de68(f=a;ST/Y+'VE_9aF43eiF/\Q1mN*8X?7
%,*m1"hDT-,$IfCQJa5CGd#c7f*1MMV5n+7f[M51KCIZ)AR"7tebB?BCS\2'O1JKtH`.k._`&XE'o4/oE^ifO)VVr.HUXRLbbQMK=
%aG736C0K!R5hW$RqedKtV[ppd@IVXN@+tgG`[;6&XaZr)'73r@%b/\q)/KlAH(in%%Xg:m:t);Zi\T)X1Zf"QRk>.dKpP&]4"Nal
%[L]\?"&OWS#[O#24C_Uo:t%*m@U>3%EfPN#&3RhB79hYL%G^_$VC6051mh\\5Z<mMiD&f30R+.Baak6:*eXZ2@S[HXCEA<RI1V(@
%C&<n:d,Kl.iW2r@&U'`pr%hjiZ8NmC8U55^D%:QbCO60.;c)J7^iEuc6cbuuOXTiBDZECN>G`,Bm6.0UF0')>.(4alBLoe3O-aRC
%A0U0Rk)jTgeE0mZ*DGc3-j_?C:f(oc&jQ(WM6(lV6Pm9&f#9mXQ^bJ7&jeZ5Uk*4O*67FO#(GD=KM>?D,Yk^__]=7;#TmM;bOGgo
%:6O3"r'@&):`A&1S5?0dhlpW/`3$aEG_1[D84Hd&BZg\21!]niOGi4ZJl3-5#rg4!-]R-lFYlaZ%`q&h)[+T(8-T'/&9WU+TLW4#
%>11os1C6*-G`c/CTFXWX#,@k;2F:%>"LTob`uTgGLKHH17dD8K1]Ruhs.NV`6`N_d4eO+D?CDXHVWmpZ:m6P91DB.555j+=,U/CF
%#X-jqOH,ST>jfPc5Yr(lbiL"1`eZLShK29qcO0rM(DKh^a)]i7pPOP88L_o$O(B-Tf<R^a3K2:\aP)`07VLa3q1E(<]/Di_aeU%s
%[KB#k7F0Qo&a"Md4AIGg7#$"C#Vi9Q%rq^ug,Y10M<iXT@Hh?d,e(nL;0lsg6,B'JYKWA7;mc!?>68NlRK/13'@fGtcr,cElc7T;
%8AN`DCd4%Q[P0AQ507$XPK"m5*'4Q^J8#GLA$APKjge\^(`_RLohK1U_M9E%$q7Z/B]d8^,gAfa`ub>6V5@c;l$2*/GSZ&;ER55,
%M&LH9K+/W?,p"FZ-:<ko+KZ1`Jk>g$h'o.NH4c&b%;(OGANikt`rSOU?$'N$e6^![\KL.hFLiUZ;GaZjaZAu*3@,N*<UBV*cq8kG
%P71o7IA2Sc`)adYKH_,O%WqZb;l3IJRLceXK9.)oK^KtMcE]?B;n13$>-e^T:f&N.D-7\!/W\2@k7&=9.4A?`L)*/]c@t@1@iu&Y
%+?#Q;Tlq>J7.UkMrj6FlFo4NZe>-s8I>l81RWR9f-n,^+ELpd_O\e*]6""J_1u1EoK,sA^"(3kiC!@j3fPYb5nX?\*D'c=+AFr!&
%&=fIC%B#6*&2FXl"#tPaT_m\pg6,'H<shP4egG!]%nu*'iR#@H<`4G^VX4m\M$qH$j'=AZ&rE;@!/A<$C-<BK]9]c,^/r$J!Y,;n
%>_02A8I>SO%`fNp[B'hAHr%Zb/Op7C>1^6JWqII^lA*euKP@BF&;a32%(7o8Zp1#]__AE%F]M$gcp"\"+i>dqEl8Q@-)WX):(\Sj
%a`YK%B`D4dhBKm+JC'o(9j\^5jL[U.@9[IoMd7UG]aRS-#s;Fm0W!J!^t;(WSO>O-Y,?Z0M^qY?,gohhmAaM53j?7dQRiBM;[Js4
%hBOY^/@N'F\03bq_'CWA`IDFk)O>,dEGRdRTRC57#)g7-l<oJB1iPdGa$U-dSd9T1LYc`SVLUd4AW_5GdeQ8M<jP\:he/J#Y&On3
%Is'^;S)YSFFJfXaJeYqsfi*ka*1@cHYlY0RP$\X-qR6/i,Tf_A^ME=6*uI%ic3c3e296&BH4X[M-haT[!jG83'-<(QPSh'^&#Otm
%GtM;:"rRG:%0Bd+XHU[_W"^i;8'gf42+[kh6+<(lZ=(qEVB`7GW>sb/e4r,1Mo;q@huJk,:Kup,<1t<LK[L,1]?IX!5q%W3,,O@'
%ON/M)#hjp8?t?JH@0JCW=Kmh=1[0\CA01U_[N1i9.B$#J)rbudjC&-S:m2>3RNa*s2'aS;I<HT-Zkh/[.6<,.Ur^sufUsH]bcB`!
%2X&,]j4a#M-K*7)l"!F`M%lEdndL6#&7hGZipp8`9E`(_A&u2Y/j]VNOfo1)Mqi&?F>Z\rV(@@0.(J"gVsCZD%j[RI**Png":P4-
%=N2dDm2MJm@Q9J<7pKQ1ktf<N&_[?F&>d-971kSKZH5jaJ@;Vb(l>$'6(A)%U]Xj;U8/:*(ib7H.V>Eg%Kb5t(*i?%Z]X9\>O76`
%'/9Ts@`2M=[[6qP/4`f(aXq+GU69;L'qRYs%?bq<g2K:M1D&$anZW]E`Zb/j]Iu/l$ZYc3=scq)S`*OKoQQ*+]muN0cCkJm$o'UA
%cBQA$Q+#2.F(jSZ4%b-gbZ8U4*U,OW?mb_5!L(rkI8c&'3T8%L`l\+DjUXVuTCg4l&L^3Th\lqMe&aL![5R#=cW?\l\IW"2e:^Pt
%%0rQhgSS$I.a2;LBm(2X%_7UdfIl4nHWVWB>k?r/asiblCO3]3;Q_Ig(hcO>Ptk$qGc)(rOlK9cRS5Y$C8U!)/M7ZTqW-?U+>#Ld
%LI7K%1o$q6#9VPs/2Cb`$6@b=b$9T"-\9;$d'9K#[M>]Sa3?=ImA690<b3)q!2N<T6*O!KdIG.?V*VK%7lCpL0N#pmiqn`S"E(E1
%2@(]\2p\0lG!'s[4D`h8.V.aWkHZag7I%[2h*LA0%nu"#@^c"?1'65QW5KnH?ndI1nr0qL3#L?8"-]/t;'THr[O6$oPQBbdIL;,S
%@-B8OR.QV4X<WM&7+US]@"ah(j4NY5)FK0r3LYJ$*MnW5fI2KE0$NU]BSgH%$R&OPJLfo,f[sq>LD\Q=Q7N=R?NMQtbe@n9$,`Qh
%YbBQtG"Lb`C^\UHL<h;rjM701@6Xb#a`8Lu/-geqV[B[Ti/iVj%LJ8/Wr)riHiF"Y587c7E][YR*+p+uoa5+`.ZNKHZHF5@P(>t'
%K4^cD@&k4r$b!e)%N'('!/7Bs_*?_&OkNl7*<O`t#,#M8OZ;HfOjpkjaqCY@=RA"uMJRs`f$W2#J[4(8<B/9tl%fSOo_/Fg]@9a_
%=o,olD4.5R.@k'H]_41LjL@SSc![j2HquX-^5T;b&ACsbM.D>-Krf9u`MQ0O3ZFc,V4fu!:rl_aP_Icb"L6_c(lfIQ0F=,j*tnJ1
%$e_mg_Z(c."76GlTXLcM9LhI@/[dLd[ZWY$G`-%*5g<m#Ft;MM#lgCn!0h#>XPO5V:m@sB_u_ZEP$\d?+cI+\=Mh*Mf+=s]oB3]i
%oDkEa0`kUu3gJ5br`<cdC0)$%euF*PQ`+=0ik1FP%91Ed+k)Kqf,4SC['d?J2/*V=CF7sN;+iL_8_*[/1D7j8CKFjUPNiX+@2`5m
%b!pJm"2[.H%u+QS;oh",>IS<#/ihIMFV+lh,u>'B2H8sV#lSpG,ac"O4pZV2j5UMU4UrT;.B#90[^&m7c=J[7_);]9_q4\9JV54@
%"Kds-F!0WDDu`S/S;76nMH$_cjsFJFj2=35rce0)T7jmd9CU:TY9JXN9Il0Vm^+[BK!.S3W@ataaq=JH723i0O+W+_'jkUbTY"b<
%K4#K.<]1@EXV,/Y0Uu-1@QlE8<nhh(V2_lfnLVCIE<a6I87F[.U/jJ-JRKMf+%o+>*-DoSA/!M(Tl&6O0`4.2]PlC0j7&oMo+K19
%%OH]t"Od-"%E?qfUKS=(K?9K1[&8W]6QNl\)?@Y&YroQf`D*ZsIUb)!(4707(6QTmK98ur,\2hVl,@e)$?$jPO;+bDOk#4J%JGm,
%+m/h\h\;'7#*YNf/!URiaH@Qr-Xb":o[.a`32%dqe<%b3);hOZ0I\"]-a<H_48iP/P"C0N=]0,s?pK&!0p#c2%Y.h$(D#NH)ce/,
%fT'%<W"^*@OW^t4bK9JSTHS2n_ub.%Oi,47+r@PA&80/?iQ-^tD@Uh3ZjZ]@6R5)/jI:cU'ZrH*.OA\`W4LrE%Ht[H%t\0hm'1A+
%9UaVuj;:Dtci?$oHeM4f+s"RE7.1j.@6nQ:mM2iM5QGb2Y>ScpPmWl<;E>KogEeWgi;c';:4/j9?t-bC<Y/CkN^t?t/=e&9!,CJ]
%O)5P.60&I]=!qD$P>RYO%\6C)),B5]@t&Mjh"cLHJqS.-LH6rl&3%S^_b6XZ*=Qs7,mdQi6/R""J_I8'AR;4,*]a5D;F&roUM)h2
%7T]D+.<(1@fWB*(fY:R\Tl-JkQ#Nl.hd[ina*#g<53/L\>Xp01,hRA+jGFdJEZgV=*5dQ8-gDrd[UJ_V+[jc4'_,eP0:)Z0!lgeB
%(=ll;g\$f1k,Z"?$;+?OV4nG0$)W6J0LLDQIEF/cPE>e+ZO(WRmZnM7h^dqf*3!W<MIb]h5\(<jI>%*Sit`4'Yp;2GH`F7G>RsCG
%MJO^qN".n"8l[q;$GLGV7Y$\n_U]?Pn3<97VNNNY>j[[@)V?5=20_X8(!lCblY1._61@>2:&;Y^[u>97]E'`HFT%GM0bG7cdpf9"
%5l_!gga,0CMm7mMkAURF2cR8,%WS$MHRp<6<a09u$R6;3!uN>XOrJoi-Moj6HZKp?`U5dS-uo&m-QY!CgJG-a-m\X@-^PK-RKVB_
%J2Q-np.1'^,0^bXmKZ@+pX+Em32&KPeq5$L>`1:\]f<_9id3T@0sStCR\nN#0#TT8WdAbeQT-aNM/6YuP0N2G]&TO$d\\W@L,KYr
%<V47o(cn`_ZBG&lkY.Hp]96n9MOBJGOE2!1@&^\8?kO0^biHga['-VDe$Ei6b@7E=QEQQ6)3K(Pk`@`<.i<U\_[*aAgV:1Y;@C(q
%L=9$'$me_Tmfs)fG"X'B8g<-`Q/Tg9>W+odSoSN[X=RdI8`!&sL!*r8rBmGiHM4Z8DD^"4]7om=,W.UCQC_C"GkP[A8^eBFnW4Q,
%(XbEjP@ct9GfNjSiZjW,E?Q9($05PF2WM#%RT^"TkkG6(.8fG%3k0+J&hR@VQoYqsc7>X@Tl%e8296(CYun_N8RUaW`j0*QN'Q4K
%M.NdD0"Z!c/2_bmCks*j+_,[(f\f:rXq<=FlYhV*?rHRkZBA/eg`(KmTKYoU2!:!dm&NAkZ;>C!](H(X66IBP*<kPM,1M?\5<2>X
%pe3m].naPJ]D6GFU30kC=K!,m%8q8J?&?D=*WV+q7O0;er1JO[%4b)A8ZspaRR/ACnfm3&h`21bBW/J.`&L6i[o+41_LhJt/`Bg'
%f-PI=XBj&rf6:n#>"oAM)eLROOlU4kJoG8-/FdD=L__+1g3.NWbu?DG9+ko0&g;hO8]/oCqup/]))nsb&hdKZ`s\qAK2OM'TVN95
%)F)Mm7G\/FOOI-D[!?DlD^7UM?j"[_E%ur0Z`ZXl,1TThkaHC:>nT-V>h94r:b3FiBe?495iQSs^b1QVFV1EXAVgZ(.P_\s25$?h
%YA_K=9[0a6,R.Jo1<B-JM"EWM?ucG2a]%MaS#5]&,@8<9QlLc8-'81uk+lm<aAqC`fI3S+_6?0UF'EO;!)bh&8?1X\0;SdR3F&du
%XUm&r#8+B/+[/2I#TfpT*h/`Q()1s>`_]_YNWb,n%nMFYnPosuIiCu2.Y-sl,+H^f)g*..E+E'QkYC9,@u0_a#qM.u5qD[DIV`B^
%gpD&Nqnc4>]!t4-3Sc#7a:N2/68TkQnAde83!bOQ(o\<Rlg'7F\Q@[,p3d$%ILT7UKMYN;Q_1F:..r1Z)";W6/-ia^JS<`tW\S^^
%dc-Kbh[p!"/4a<o7GQUYXjME%Gf]qE*AH(WQcO:_(%*@eiMnR_,&Y,m]N8$PY<YTR?#(VE$OaTu9.(J8-nqt8Yk/C4'4gF>$9!_9
%:Sf^>^s<oK5"O%hMN!A=OXDY&Hl"0GdU:kUK6R-'T'mITJJTl_nPR(a&Za.$A5`XE[C't<8FZbY`&FZ9"$nm<QAes7WAk?mXJT$:
%"4ShD)]D-#f\/ks[V.cK-n-)9DbRMuJH35UTXWuSa_!hJ`Xtn3'*0`T"l`/6@p,s4rBSdV/K9OA=<q?@@NC"4Ll)Ze>2#F\EXa`g
%O?KAUp`/u<KY?BAV="]l6T-oW6"#S^Lt<E(,to+#UoL;H`-</3W15kTihu"C&p^`0Y#:.E8^ZE^DFhj9kq"ap&a+mBC!RD06(OQ#
%VFqbP3X^W4_JS'5gPuc!F&Mce`.nV:+7F_rH$8:B.#ijT6u[u_Z^.CITPR&.E,Yl>!,*ZJ.*lSb<Of@#":ZX?D"(l0K+"f]StgR=
%$).Lb.Zo%-9Nrc$+ttM8).Ee'U-+uNL*T:7mm^?8a2)WqV]8!T1?TPPU%k)_U>d16%BQmc+ObaJ-AXM78pUI#$gV%1A:Z@I4;sT3
%b0c<4*5E_^9(<e]<;?X+>Jk$Vj9=;,Njr(3IeB?6j;@uXki$plaJ;-_F>,_d=6:3-H2PU&%&'5>k\A4F5f+#ZR4sA0"fdh:8dO'a
%OGa3lB3?3-jV^%JO/rdtiG;)#Pk:3,,.q<4M*PmZ?PZH[c:K"-lk%ab,7##q6q<O@)+P[VYD7oRF:_g4nkqGs*>(p$dnCIS4[r>H
%-#):.Y=7je]5"WKSkArLW'l6\8Bo"o5T/2N6l_ICCEc3maWVW8WeQNRGKqo56T)!"CYLVZpdqoLmii`Uk6g//QL>Di,gV'm/\b(H
%=![#:kJNWVbQNt96X/$ga(p;NPY)mf#(j+_RZ(V@eHI*NE^2IqFb<3Q$8;1Ogu]cm+`lWA`>@RWn_u)<gpnQGj<-$'E7H[1Sq;mE
%X[$M8o0Y[LaHH_KGIl;NN\<t;1euD,j%^V4FbPRa[PI!M3g`Rep#L0B`7Pb@K'Nun,&<$o-clFS91d7B:P26mi]VesY=X[57nFq$
%LUr_,L?ejU+LX70@YJd<*/PO>U+3bclICM!CPLtZGL$mqAT@o$q`pH8mA.4EjRK=l=,/pr&MC_XQ\,J;L;!cMa-PtdVgDqN>[+t^
%+g*.PP9pKrd`Drn>)LQe4NB4r;fgHZ?X6^P_'']:8)eb89VlLuFnaRfAA%,bHg6kmJ-SF_[BtT%qd>4`f`Rcc33/q22bb2+0.6"c
%(=#jVVP3t,bDEsp`3>/E&)fNoK*!tK)0S2MP1KN(Y#tS&X$&s!na[?&jOr1GB1Y]H)%'If['CM=;e%4R,[802ZM:-s$6<^r5GaI>
%"0%k%\A6K&,8![FK1n#8UoVVj&U;#@0sG0q51S032O-]?#b+trjedAKL?7o745UV"ON-.ACV_0)9(<ar'1euA,a>Ddd#g'!-="VA
%&O]<D*6CH:p[oef>aEE+%d/obZ.]&/"_@/*7LUGf6;oY&;`u_R5!M_:OTOd$V#%)+QfWX`bX(fZAT+l7"EFOp@;H+P@N)u9>-\R<
%pHorUM:m`k3@GF6N>rj]2MsL+i&)hYN&M*0BDHS!^aB--EF9%:rWhCPgc<QCDgtjZo.5e)<6nXo+LpL.iOH);Mu]b@oo*O6qZ't8
%lX0b=R6XgQHBXA.Yt^j3aDjR=k%#BUQ(B[_8nkHf49o5ZkT`W*QPK=dF33%UE)Y1-8(;@T.nh3E'P'ldYJA("YF*t29TQuT]<W9,
%>B;bjI=6+EBY/_>NYG$f,h5sJ\L`e:e0MK6(/HM.!=`L"KWRQDd5^;!)5N)Kf(kGLaSU__'7;MGdLu@Z2$iEu_AYlr#N)ci8G;Pk
%/B>A5bP"p'$[Ei)OG#G,ZJ`bX&3tsnYJ_<s?3r;PE\n#7!m[gB]uQ%*:4D0f.?8c773#/nV:#(t[fYd82&<Jp&.$<D<0@+[dd+^c
%\BRCjLJb?cH^+?&/k7?.H+s+]4nVi55erf3^"c$X>oFbdJlC\k7X2'1$Qc1LCWY(:VlhXK=6H#k8IH1LfqD5*O<Y]2M?F!b@%%-M
%PQpW)!O<"5]L"go_QbD=gescbL;+m<4H]pi:Jm9JR=ltk_KAO3l]m\Lp5a]4&7=Xfj]O<b/IZb(8.Jh:"E;.4lo,>=oB-bXP$lK+
%a,2/r5Ff+!Pcu.<W2U<E4aC,JAMEnIrXrkgnpNUOPi.(L">`#=Pc9E,JM48]>@gs\]56*Kd1@q%^kl]4W#dLc7mMC%/b'\5'Zi($
%""gJeUIL@'RACt@ar6H-9P(Bs_T3g-=<MJXO[p"5(E6DJK.Y/@l6hQCGQ'toR$Q#g6k!&kN!4Z.Fa"6p$^/#R#Z&6X:':%7e;)+9
%O5PrC&0,PX_.W>NUl]T7,:So*)+Xfe1++\rk&$'p.r(q<0NjU%?G"FOR`(FPo)@_r^l-hUF_QqE/D')21tf48CTod1aF3d'l1DJb
%Nare?^1<JE/EYm3&m&]()d[(X>N4n8VEihi`Nr*d0mPl?O@Y&mm7D4ALtL\s)kI1dqd>^h<0?V>V?f;#./OrT7%En-$k7mZ`?`LZ
%+gU0'[;Loi#4<sU!uS>9NCi2*E$'LipZ)Ri@5KKA.X6b\*FeTt>#H>8K<+:,&/k*j7_!+$,#u8dSd7CmBpcfsBf#00EHLtlr0C-%
%Q64TL_/.4X6[(0tB:@>'Y<k?,P8'rN$jfGGMBkQA@CFE%&*`[.md@%AY"hKNR4S-&.@;V]KSSOcF%LbICqo[GEE(Ccn(!LhL,TU9
%]FoE6*sU(glHB7jX10L>gL6WRVL'Q5A;YZpF$1/0&,[VRoY.5VZO3HnEr"c;Gq.rd`ProI.2&O.N+C,(52NWUDQ#lp*(TRJV=5e&
%_?iK_*Abjn[VWGA-V2*J`%Lp,5a+.CKVGSH;QqF33!"?pj"B5AUTJ8_pnEh(d-]9;L&`?qG.mL#`E;Cj+=UJW\b:lW[V<5Ybg1F9
%7RN>8YnJ8f)Xt<?>DJ5AQLXD<;B8%]P&3pcDh/>q/<l&(q1paEVP[N:Gt,;8SJ)M<&7X.FUDek6\dXG"W28g!nQAr,"*JS!&TITO
%(&UBi"VY2#N'Y[;.X`s19\1=XT;;OBKIrF.e,cQW=IBVCM[*8hnB,(B3"i1ZHmF4M-b74;ok!.pQNRRZfb-/q,_J&e&>6@@@pS/i
%&dZ6$<JOCJi%mG"#UMP.W=nho^]h[;/qU2NdW>Kpb:G*4UspVbNOMJ7%H5)?bZKnJ$:Ntp:(IY-(e]EN"QObUH=J5JSp4uZ1D#e4
%j,SFC@;Zpu0&:(Xfc`iC?L&:/*6"0C/TTm5;2/pR`*"/L)]I*(733GZ0nHeE-Q`/Z"W(g'M3J(i.dJ%L[8@#90O"UR-mZ]uo]XT2
%^d;r]-44t+jJG8bA+M8a64%+!)>n$g^kt7bR#pa[+DP[kE]MUs1O\BmI5$MHHoX:tpRb(:9?tqmLIuZO-+.F)puX>WFTJf\-K_ds
%i#K\>kCpJsLOj[ujI=F^[;:l$Yi%5nF`;84^dI^A'f$C=>Fa%sG%-0rXTNcKKt!BC!DjW=KHkC/--sYS`Sg66:[81Kk[CMfkqnE5
%/Fh0sY)1-O:Be8u0%ZGda0(4mer1R6;h"5@`:[M?$T!nRe^Tc_pFsJ_r::%'DL.'2UH!-q(BSYo:i(H,Z3ReS8-k06EbI*Vfg[Qm
%?m"lB:Ecrpk@/u;Y4Baq_]#'TOaJ93#@Y/a..?JU5W6n>etW7N#75,l1aVj6-Fo.QDQ".1AZKcZMlkStrZ-;l`-UuM'%.4?0lgt+
%/9%gnGVANdb?]P@N!*DUe'O=d5kmVncb\.[UIpd?nUs/1LV?YX4r7j3=(QsP]oShSCan]]=.91<.i6?%P.X10<bU]`<\UFjf80[1
%WtRD<%(VN'8oiO9cC>C*,N@\dgA52-guh!-.ZrL^oenXnnWc*%qAJG]b;E&0)Fh2/2]JZaPhe2-&dmZPL;'s;Ofj;l_-:\>d!)N1
%>3)4c;8ZJ9a;".*Q;etf[F@]#de;_76'qf0c-DOr/YW:i.Eg))k(Z:/J@DtX<=XR%3;UR%':FrL,W(a&B1o%hHi#O%@36&?`POdU
%eJSf[SBt\hs&A8iEg3^i<#g)N+dD%j*]^='dc&s?AXS2bn<OMB#&"mSRoI9@6]QMoV`"a"'80g9MJS+)L!V&\?k:Ao[]*Wk8fWKP
%=Cbb=F!Wio6ahVL+Fq<PojIZtc5uNt9a9k:>(eNeQZ6XsNj]db"FE79@E<&#kpu*Hcg?PJ1]5l*nW8oAabr2I]r2#k*9\"P+7*EH
%]6(7HlBI=j2$4B!6'K=q7Mt'$?Xc@Cjq.21@,1JP^;P#F*:1m(9O^MJj-o7:PbE-HCoB[X4JLP5=/%B2[sBD(R-,n"R9H1;(u!"$
%%=Mi67)!1*<Fl?%gJEZV_3V)fVX!gCO<UViI2b9OnXiG199.H.LPjPdOF\["rO=gBbUS):8f[/rp^OA_8;mX_)^9]dMYnTg];q[E
%L(t)/]Ft`;;oR=(=9a"RUIm:pT"G6C9/mj9=!6U8i<_Dfpo:%u=-@_=&9JpM*)&GKW(1rs(L545;7kSDUK2>U>UbLM-rd]))Vu*]
%P*0=.Z"]!F;'FhJRtdp'^<=n?5oRR1B]*;Uqt]C\X!-nt+K?TgMsBSaP-$&ifM]\@4kI/"1"a6PR&Wa"7G3'r0`W/]5Se8]VZoco
%9bkIZga'8.(hP8gi[%'eTb'dJC/p.\K^nO^K2g)u9Pqqs21n%Za$Mdr_+g2A1/t2^(uCI+N4>g?V+MlM1(RgOO>#&b6Z`eVLAY/-
%Ml"8-jM%>%dc]+jO:)4]6FatDM!(E\h@*"*<eOnS@Ru;!1W3377&r?,N4@V_C^%dL6e02,+hi9(`#p\pN*/<Kh&.W%.t(E%^r>Ca
%B+P+LY2R4')SW3klR35+ElfP$jp9IP/XIso0X<BE^oA48oF"Dha=0$-8r0^!rRb,4b#]0R(\baD+-)tk\LrM.8T-o'CZqh4n9*tK
%IZiZb04(PqjY5,_/oD)B>.LSEOJ7Vh9S$"@&`[iPVR1_@ja(n,J3d)^"k0K`#_n(gX4E%7+<HP968B=RDriT\47T3P0>.+u!F,e]
%o/L\mE1_hhj/%hW4gmcS<AZ'*TkGCp#^6`RNgh&e?1X8"hbg",O?>?P+3o'e#$qUt5f#6OM<P#Y(*<=H$D5fX";JBd*o>h"^)E"V
%'b"ObK',SLNr,gr)1q\t)o?PHhc,<r3X6GH/)^u2bF?Le7]$LT.p8kb[:e/*K+BP,,)AT7oa<</=suVuVBq_+!:!I$6W"4f";ap!
%_[C]HVCd!U%-!@PL`0iBW:n,lg_-KB=PXh>'Uf5h@`@r]<X*Tt<0gDk9FQZ]V<oG!_\n:n)O*:84K\d)W^:UYf9HJ)=Wc'PGW>C<
%)%02Y]SQ!oT9t^)Jt[']<D"Y%`k\kK[1rgo!#[`\AfXrcm-#[Ha3ok"ORK:o_no8_1RV5m@kQiP-&X8fn:s=rl4@1^"L=ie-hm;`
%N@KhXiMeOYi;aKl@q<%TCQXOo0M)+j`l0]5=1/6/2+d)=i!TPOOTECSY]qI6:(Pe%3;3Z%Z%<r6)NkbO+N<(?llrtm^Ap[(4gI#M
%QRN$$\HFdV60AQZ.?8]W^]l>r!t"p/X)M?XZE')l`SYiH&19n#HLb+%m9J4+fO7f]Eqp,L$]lfj%_^Ld!Qr,dWO;5t1)`bU'g$%Q
%e:7jI/+okFhFp:O=YQ'rUTe8]RD=6]0$+Z@IkFGK]2ZK;=@p@<K"$;OUt+Md\q95Z[Ll+SQTqDkJrA[)*;Ljf&-oJb=N(n!/D28)
%C[t+\![b(_l%iidq&-UN=Mq&eM'+9,;-(Kt76]K@HaO&M:2j*h%X94X+O7I4UDo$r_D,U2M"bk_49<CTB%I_2CkVq.c@&c*8ss!j
%0*bg&a@e4(I=3_J\&0=IP`/]"WKYaTp\pW'B9k;qKIHb/Vllu#6e\Cd,+h)UTOZ]WTNrhW5ed,hY">hcU'^7GLERfQI,bVX3=^us
%-OOgB6Y-JL(9h'me2B^L#n>"Ej^]hkY!RencB@":@W"Y?IpLgj]O.b*'Oc"Q^d&V\jHN!to2$q7>\[W;_/RZ(;V>c8PR<^mI=Bin
%],.K+:k!&mH@jV.6;oLqO@'(bNAHXj6>22t._&oW2<F/i5Wj/Ha0eeib76?_i1qgO;,T\8-]DneWP.T<C#cK=SAN?+Z21R)[Oes@
%>iO?BS3A>!NVN="X`>*N/iHN:]9+*B+YO^5)?iK#r9<i(:An7>r%R`1@Y)B(%s0)_D?q,0a^IP_Xsk/9>Z4%%+WL>Kda1(n\"?RS
%cgg[\?k/F#H@;K9"(<ISAp,0.6t&hqMTV99<7[[oQj!jVe?dYC,:og;,U9h@K,6oCh;t54=(3mP0?HAf.[#Gm@O"W<1mEF+e$3I,
%(Z9kJ(T&ts0@F89Na%#Q"A*Ar2&-&\!cHJ,;k^4^TpQ1)rrRX:kep289b?fHF=GVR:Hm<W2P*gI@u4_:BVPRXY'`gA7!c/XfaGOL
%cn*;nqma6k:J-r&(D5lW^bb&Ng(IIs?o]/KZDLSsTZXO*Aarf!NI^=#"&Ga,"%UKUhue[n>!'V#]!n<1<0$,TIft#k-[C<Za$??S
%@?eBO_\)A`'Wp\t4*YA-J'3Ngjlm&d=q>#++d:!)0<fG7NN@4KOka=@T&a-2KtLrC4\7g<ePqhN.R^MG^hf\3=RiINeE#/(,_7C'
%e,aTRe-SN44jFT574G&u^@K:7m<E6m"+oG50&h_e:Kf_QDA_(lQb&M(Ve_?Yj:(RV?50$!Wdm-n7We/J?b%VU80XBcVQV7*kGCeL
%9_kuKn*&gFrQ5TBaE2VrZjphZ+eTk6Z(-9`(WM$u5_$pl8a7),@L-d;W^W\pJ\m0C^(R@Y$R_:_D*"*aI$qJi<@T//dFV7'WGnm=
%9/Ws4YLm#`po7F$VNsn"TIm]L2V7cP']SW)&>EIEeL2/K>)n*GK*:T18U^lH/o_Tjl+A@-FlWeRaSR^RJe_DJnJPLjP2F.fK=%_a
%"*sG\[#bsAqHVPr25O,%RJrqu"f<@^K5=EeRklEHNMZ7?QiZ\[(GIFM4]Pfep!jg9-fc-G:SY<4*g`A/>o1of\^\=Z+C0>q,\\Zg
%GG??mp^X2SBdLJKbQBZCh;k(9OmVMPpiu>i`MLYc*@I/?;M&^VPqMfn%[pq8L[#WqM6M^Y,i/O[8V9cQ0aq>;?(Q^j,#V=A1?8j7
%<THT[4'nS#Q;m,J,q]MBH3q-`.TmB7@O:(3ED@UV56Lts];=!B(f*OP33cAp)Sjfn3+'QoGPR9Z/$9rX`+u6VVNaVb$8^6Z]?(U5
%`$&hjd^fi5DG[N4<p@R>V>U*[XoOP=ji'Z4q0!M+5b&_!Url\WWj/Nem)$GA`sXb]oUuP<$$ua9WL@Kk9>N[nFLRMWLN%sLZ7Slo
%`-$1HVLVTHOaa00"u&ej)1qZ[VXS/PlM?,ZcBYL]Ko"ZrPRqB8[XV.L+Q/Uhr$Y'/0)cuHYMZ=HQ<"^2p7L!Pl6/(rWJ1)RE.fc<
%1>Pc?LEBQ;Q$lGgJ`jtNg77@F2o`=56Q"sA-7[,oa4J[`4G'D!^b\S_-%U+bj(bfaDN&d+l8^lQBCXuL4Tf&"JHCu(#dtbO&A"I/
%Rr^\<<"H"*&qbLI1J#Vpia8B!Z0giY:-*2A.Ac<h4`%,pTrQ'I2TulU`04pL14Uu*`$A`C>KG(Rj:'OVr7sV`_as+DG(hRk<n$KD
%8ql@[RbA`B_WuT7pZIEDbU?SnKI#/j%'=cde-cei6cC^%!=Vrq+%hO(*'P<.KILlC6I46Z(q9FWqXAgPqHE=En]`JX+QL;K854Ph
%"=l\.<?e\Y*>fD@_s;?he*g2ql(bGf+dVmt$XXq5JNVh5E?&*4Hbh#$A0W8cbK_)>OfWMTA6Jcfb*VG8aJV$uk_YEVq7\+RWLET3
%!e58nE\oa:lrdMRnG=,H6\[q<TjG1.,5,=_r&"11j#m!'MZ&F246JWXqD">9?8dL8$//:87nKL1amm3a"([-oYMs08X-28c:aa!a
%QuCqN:6LO-Z14lB_"9\u"9I%i4b$pCii<95W/*hPRYH:(MfctL<WT\hG@N+V'.[N.:pO;U%Ml4>Kci+-\,%<";\4Du9dU["i(qZS
%G@7U*Xr&g;!IPoARm"mD7Q^T9*H(T3@3U2O;Uog(SXmiCHrcErEg)ck*XC\na]B&9BXuJd'k@;E2cRk[Ks;G_;Njo4Y4+ahSi"u5
%5L(B<=/6^T6l/\nh1:4DC9+KC;9Ku"W,gn.X*1[ch8KQ/!KuM;@)bD*&3=+.]?'oD6[$/cHFO\!?-1+m7Bb8Gl3j!^8MoBf<ISe<
%X$"u'I.PMN4FhOT#?T\i)tFft&8C;XDP8/d$3NYRYHAoAW4Mh37p1(%(`Ib>VP`/GgZlY5:G>!*`E"prbQSQ'=u$'Zrkob7IN6DT
%<%\iF`bDhJYl1OH]sO0`22@'Ikll=_(tY^?6bsl.1/Xsd;%XmM)_tCp?@>!D("u4:a&*tE3lP+i>kNNK:^eG1)UoKsO`N,9Sl7=5
%_F.t7`u'F20rqg#TDHX7.?8UuEXaNljYpHF1N&(hTbDndMI.L%0Mg"Hl-c8_/kIWZ']W,WW_oc5=33hn[ZN2?LB>A%>[H$D&"'+e
%?sJ%XJPcq2FA6%8QF1-C9Kf""90'[&/5OO>,9l1aE9Y2LEXaNlM*G:j1iA2Ad%sCcLhT\#mPHn0AhmhIc:,r9L=C9q:fSTU$WMFh
%I/n)?8V0%(cnTWYO$?m$$UOT?Js<b;FTaq3jbG4YEkuMS!am"rKH).dl@a0Q@FZ514]JE%!**!'0:)lgP)-nZ/^9^]N@g_]R3Y`H
%Ge!g-+j24kbY?R0md#o!"@ZO%5$$<+$!5s]%3\o4l#?I`8e*/ub:,o'=e+U;K$_YZ:I(q=Hs^Mb*ZW92,-G<q$![TCq23VoX?I3<
%jESLpc?P6n`d'=8$5P9BeQjbs];I"H,pB1)4Yc:IhSWG*+*UVJ!_l076uZ/&jNAR@HH".Z_,Q7NdhW0T5('KhZ)^b6=<nsGaer>O
%6R;inU57*GUFdj\kP/r*qKNnE2-0*U=d7maM)$.?QuO3dB_.a".5%HjC@E+_.n%m$O>#'TU+s;.MiE(S4mXEiJS(coB%dm*kMAKe
%2<]V8.k][-+8odg9V>g9962+-0TlrL^dD%m&N1Y.f2U]!^aS$42@h'D$Qn$TNhc3[3S78rb#*/uZ_oE)mC70e8Bj)Cps?8EjLsNl
%<TZP`<G@`cE-Sguc`XoL5V=e+)s#<F)SRg/&XTW8?E#2YcH/=r"8+*B]h[%>>N0(i%q@^Pe=RX5nCCW?-3QA\PSRmc`sJtfo`5k6
%,sr%0,+UE:C[.nD8)5pnhOrnCW=a),0Qds%4r)WTp*"N;^P"8I[6K^J)@#_E[ePCTQ^+rur=G><[@7#Y\G3%;HoK<)VsG>e2rW:2
%=$MgcUuV8%?]^tPhH_aB+ZJG+R&MEFJtSoq`S'i;N9NEWE,!T"%P%50;'gDO;LhK,D!._08A(-qZ#Ttd!KT?QIe5)ei2B^P]J`j7
%=Mn#)j7u@7o!qZ:;:r+jg,qNm.0\;G_Y2,oiE\aK!j7]e^PSmQ_$ue2!fH$X"`nsuV!KngcM;?_W`FPI?9eB0LAEUL$]oUHaWhrZ
%\S[,(l`&4M>"V>=?Mo(Z=N;DCj763u:4Ig3M[T\ns.5Tb&h4I&ee0H/Xp>iL=5Tq7r+(YqZ:UrEHNk,;j1r&SO2@PT37S$Zc4^.5
%E8pGUr6[Alc(pq$ZdM]($4(4BqSnPe]Q">(pcS[[nQ3&Pr!o:B'Z\`8c:T'G\2<@L"^>FfE4d09]>rVq4sl2!E9[MFTV]/9TPBnt
%jN6#'JH:7'Zn/o4hU2+mFr>ea6G?A!8t1(fLS^tuK&<Ft-,]*=ClnqS'<X1sCucO;pjNj2aT-ArK>H%CjH2-7PqDItnS)*YRp`Yf
%_QTXVpCG.Q+2W4;Ig)3(c=:#J>T+^HG2ZbKU+N#D$sIn;UV9ODeM[Dh&,O*So)m)QZTONZS5ZJ[;Y(.)4^2Jke(.a%=_VnPKS!00
%Y_DP&EB.$H.@'L)/Q;`[j`@;r1plbtT'I5'I-nFHaAt00$;YP^/4^+$:l3^BN^>8EM^kc2LKFOVo3/SISbS5X/VOZ86:/R$3i0=p
%CZj^VR#<84?+rdH=F(/K-5iGX%r<kILSVQ^cec:7>-]\PU3a`ULD"M5F-.@/&=]Lkp!TsK"rqJH/,fL=B'(/n3Cd*j$>RE6E%%R*
%C1Ot41*5lGjtIOCO4RfMWp(QY!VEtd=?#Ii:XnI'_B'!,\18lja;<lAHY*ftY6;uC$?5gYqok:P]]u._%6p"L(Z(`&qtXig_X+jO
%e'Eb0]&$aS6o'2ZmF-ZAQ)b^Zn"@LSlP\gRbdp0*I:@:?PAX5'HkN,s))2\m\7cefIOm5ubJC>,o-B/[^D"n*3q[UlD^O:Khop3m
%@*jg`QLSZmC3Fi\n2h[h)b5S(f!]c5#h#]4VEJ(r.Z`\)+CQt7`B5a;`T;5=U/d,s2La/2SY$5Yp@1=CEW)=TK\4Y'cXAqXhdmI7
%BOp*7I0-q8CL*KS_.2QI.>7ntf?.h+UsM;l,YfS;hW%gj_mCn%<]A#R`t?7NBfXj<=2PEJrT)/%OsU<RG/^0I25B8N,uGaC3I'IW
%7`07__$&^'lFje?Esqg<PYXCo>"FN#[JR@F'aX(Gb'\$K<e7@FW8EoC6H<#^b8,,dl-s=gf(JgG5L?DHQE?<5[F/6eR*8E*YJ+fr
%$_VN$`FTFf+O<72Z;i%:7cj?OCm@EaMJpZRT!`lmfhtT#&so_UOU@9[D7>dK03]hn$C>P]@Wl+I0%R<38?"2YWeEslXDuc?bT355
%WeE?:TD>rrX+52`Qnr*Wn3S`&U+]`)N"RI.%a,XFN':NS[L2Rpl0\;Pp"nH$WJ(_RP_*l^Y#8*74Q8qs3<X'H/6$FW-F?qigY857
%?V^+t?HP#nj!6KkE<j>(U'mF<Z<Z>7"#HW[5)n!<DWO_iE7P49S"TY#?=G(!d\ULA[MiITOkUq5a=iao6aa5(_A`_@gS[1@-1,6k
%]'M9Y;`^uS*K=eEj7N)L%B.@u2h0.DME/Lo\MS&@iV_-U58lm*&:T4H4D1'GU]TtHOD?)A)O13:'uX`nqLI"P;_gs<.dW8B"DYX<
%$q6769K3o4,Uu8A@&Ds?g\W>\"OJ"AhM%S4n\U>6q;!Md3u#^L8JFCd)t0K0Irn52Bp8P@U/l(\mX9^p?MIce[CRk,eNXl2&scqm
%qHO#+(Q!86>`]P#q:5Ca6-=0d.fWa'dZG4Jc%OF)>$ju0@!sXb=[n;I\Pr_3nZ3`pQ^UsZSp`64e2<XNBmhT^9^_?<\Q$N/;*SoG
%0(lg,%N8R'kOL<%J,XN*W%\g*r*&B.9."LoIk;M8l[3sFY6CI67?`(J/aSoq^ciMJG-kSmf7M:CS[65c;ScV)PKgk.$>O%p.=<^t
%]!U50f)g%8AV@5j_cPq1nuq/gZiBS<952:AHOO34['q1,%%UkFF2sP`9WQ!Fo<l\C:=<'ua3KSlPk1[8EJOMS>5#aEVR'dj\B<nA
%9ZKG]AQ[KH:4Ys8.\d7PV!4F#nF/6U"i[Djo5C/1&jq'"GRDNBh3eleXb3MeLnqQ-!tp:VTPURjlH%ZE4=KGYjsfj[;?:-+`ie2n
%Cn;04oFL:>OC9F3Ls"39jPj/r$G-V?:)05!bin7AFSUG4AoWDZ1cb!T2.Y@*L,@qn$9@H/S,P8(lHrh4<1up,PqI'M9Va+8dst`&
%\6nW?dnbk6_Io(*G#:6C9A,''?.e!;SXh0G16E6g\0k`1+$09Ps/i(bJcq.b?"&Mu;W@a>GRK:6+1A(82`(+k:?-j+@d#EHJ6f92
%iRHJ%^bj_6<,s`1'<_W`]Hh*^RW_;Fo)`aq_iC'?U*Ue_VMlUV#,&oIA))GC#:RiM6lrQB`.oo'KP7W^8#%.f1%_@^ib@KeXR-6/
%3*=Q'BQ?\78VYU"Jj'Ul044)O>ThXopq9LXK`%^rDa%;bEXA=t7V=n;4s1pnZHmf<4RMj.\<qV.2<flSTLNBW`-et*Y9tl9S"(;E
%OJH35o=pDBd?n]4ZV(rXS1tAYa=($,Zf\<"FRbcc#[@G?U)\>2,E[Q[aAd8oeA24bhV17VUqc'?r+9*tHbm#*KNPmp8Rj#Sc!g`5
%?7')t82*:O9+%kC<+EOP]B-H]h:+j0J50][_H8,&BI+KiZGt&B1'uN>fe\_2F@`2h_')M,,>agr&p,"Z>SaZ"5>4n`BR7@+\W]p0
%Q:HoS%@k`W'@@N+ZI@[$Qq(>7WhJ&^523bW$j)EL#QW;h$P9B[mm@gAH!h9+I+^poi]*+[isifPK)T#aDjtdC:'*38P>h8g?@)6G
%o:LL"1mUlA('R)iU.KB"!ch0\#.O<_oIPV-nOC.8C@]+?a:3iH:n#_%Zt84'I,,)k.D<AmkN_fE52:o4DG6n=)kH_D#XBLL?-u/-
%@8^l#,W\BKoTaq9,OhW(of'B]W\THTo3O;!Ako,+<(6GeCh[EE(hUY6_+RMnfJ73JjK##fUP]U+KmS9$h8B@[@8*tS-J-L>ia;8,
%PD.WPG<MLa:]<UP`cs7b6oAP9WH]5SVr2+Ai$#Di:LFaLHlBIJbo085(,%[A_1KRn<m8B6#@^%Gph7tDi-[h7P:(W?AV9'bS.Z\:
%n>Ith@hOl^c%A0YdAijZl'AE%%sO/,mB%L)%'R3d1G.)_QrNS.*fm#VbGr[:2>FIRP>cpcl#f/^r+Y"R5Ln9;YapCTJcW`TALa?j
%f>16G_?h.^L%J1$[sl7hPLj[uC8$e_B%$abJ9YnS=QZ8GdO\_M0u!I`aPtrMa'TSoK`"DTA:R"c!OUXP.*dH/P3"re21)6.VSQa>
%GoU,ZWC"m@%a!a>+nn`]+1!riOsTi!TSb?Zg:k;;-D1j.(5YpCirf[7N?R_l7?!3F1@)oOSkGi#(E"s.h-S3TZN:SR7@L1HX`hTg
%&sHH->sAc=nff1Prb282.qp]mDg:)F1>r]<dM@f&jk$E-jhZ%X$d8[s\8,A4!M%U(U2&W8@'"?6ieXB,i^?R`I(V8Y]SoA:F2<G(
%NAZk'`:=pQ5/?qIW"dbt$Ej[-XZ;oo7kSV*3jp%#r7!lc$0i9[Ko/&5a5VO"U6un;)eC6?@1.uC7hp5?N@Iidi\b2@jb""=2ad=g
%qPE9CZR[;SXPis8#$&d5hO\U8>!CLn6r^cUB47Lqn`b,Vg>*JIbhMaGmmg.kDN(G-P*Gq+9CR(qQf'Udj+f`D4Y8BapY?7YpLn<M
%H$N:J?'%DF+KWc:e0M?.eh\R4NfR*ogJfYWqo9;WYbY%hEoQ-+GrBgfR$ii?_X^;3#4ufRnE#\E%a;<GY*L8DX96Y?\UOtP5g>nt
%a';EPkFle7ff3.Li3&G#L%jQ?6+Y:XW8Dh%'7TTAUOO+^C7ZsG\bgPf=I,QUmI@cPO[Q.p`rdqS?Qa7SQ9T\*OS1`]\&\*7ORAP=
%jt2IO>N<tpkr"S=:\r"IdDk&?r\SOBFibRUUO.ur#9*n^$ZIHXjWPh0nKeIba)ZQ*3V+q[/G3`)4pH#TDq:qBW`<RlUhc,)F<9AN
%QI@$A$Wm,^P),'!#;fL/9A1N+Zd?LY2J$X0be]Mu`,::5-,_Y=+QZqX2rHd=j5H*-g!8gILBr%]+c^7jR/h4#2qEn++[`lKA,qH3
%a4MIRQl^uBc;R,[2:",4@3+i:JP9bf+"p<E&[BECph9CUIR]:<2N4sc?P_Y?j>>O$l213&OVEn#]3RdSX;Un$CFu16'j-dZfSg!I
%p%4*e!`q8r/n?Kn*5VjhMaBMMP`9MgLkt&tA4$N\=5ut#7iZl2Ue0$S7N#G?e:k\TXboV8B^2%#g10[+:2Yh<hUo^H$qX\J$RWe?
%_NVqKeol[@#M(t]'i*i"`<GZX1_Wjs*60q?b9QD9[J3ohoBh=^k8ui"ZcCqBHGtC-XH87^_ha0o$emc34qE9n]0[b"%n@$j`1]_$
%)@q]c`i*5X&08sSK9eXpAO_X?L`(S=,amnP$d*Xa\j(OY]="99NfC,`lpn1kI!!tK)$OMC(A-20LImn0cWi]&Ju!HU16/`jWhn2m
%OlS\qL1">#];mm@-Irb"0qT`6dRRo3k8=K+1<ifmic)oW/aH2W'GTBSCef#@!6rD[L=4rl*\F8^b%_G['$d;Rf<il%hcD2Re\E2s
%Z,*"DYm/fH_p&*#dLU(R+*+E9^><VDU/T<f`JZ7dZ^glNRSjqa$uqYtq4uYL[BVVAS4pPM>[p4skm0.XG)O[i9fBEe'Am*YVd:*/
%MRhT:drPcOSopK8W+88r.Jqf*<+o_eQG515AO185I@?IH(ZR2@9\=;<-l'BT=g:^>=7EiD-k+esY/NA-.uTAB`tij@d,^?=rikn\
%N#@lt84j-g557s]A&`.)9hF7:@ED\.'q0m1LhVPKO5csWLm=2rc4Ce'aOc8`Y:2h+i2On>`j277Ela\cf(epU9%fK2i[>,IHQ0#f
%&DT3k2.I4P:<2:kKDkqeh>7c(=c(r'bB6*V0tmWY(pJ;hiEiR/5`0fZn]@Y%g[#?6jipK@9f&-$\pHdY"ruNmbtdk7Pm#04&tZKH
%o@[-c6*!ptL]Qs-I@?3nEM18[ShQbk^P#2s%8K[RJq,75*PP/N,@8Op=1AX;MlrAfaueeq9i;-[[%,n`K!*!*6DG/f"1MoiP?\9k
%!#ZBr;Mji]N?cIl4GfPm=`"b"V.a:L_Z^DU0l<*DK7fE35\A[6#RDM@$A_i&^[%3&"!0X\;X_?VC7TiW>$LL/nI=Cjml>F]dCtZ[
%S;gu=RPVKV$5um`UGJIX]HouPZ$GXi(__de`TTn=SoqU0'kQ3',6UoHdd4td%h!S]q>4O"!UDIYktBuc<^+g]Ls-4.f[*hUTBng[
%;fPP=daC9@/NfQ_[>h?X.4Hh7\eMH&ZW3`D&>,MkH/"8+JrhCIPbi!S(k]X&X5.fU`CE5M9hIJ'79]jNRkOP!]7rhtDq)V7+=H6W
%I0MUhiqWVc72\62R1.5iXMK&E!3gq)/03+0$tZ-9YuW7o(n)1I?'l_SW?cT+4Uc<e)*tRM#0[c?q#[!iF?6ehe/TWNC_+1Bodk7j
%9Dj_iEO4%A8$D27)h!6UYZ]"6J+adNT#!c?!Er3#c[)'`n#@Y&dk!=e6Z;pOR$M,RRE#`F6b@>>l@9koN96*=;!gALG<=o;=!^lh
%"S;!2>j61bfcE^JR/R-sE+\YP1rT5N7CnH(,53_s_FaK=d"P4TKL%ODk@[$4kIUCg)TEMhJ*O`W^5t)&LIoaB#';Ol`Icb%`P^Rt
%"H/N9%0R$n[s)Ip[Eq?6IeP4`$fj%*@!D]b3g'.[%b%^=Y,sbdg2>YY^s$sf-[0A/::U]B%_j`n0.Btt7.XjsU6>Xu!ed4XIQQLc
%35K0b=B,LF.;\n']PcK/MPMI_Crh4bHMZ(s.>L,3YjrYYUn%anajb`*Rd6=\!PK_4!Z]g-W)C@]N+A62_[%!GOdn%WO>'/q.XcY%
%H+l));\O<[S!0`g8EsB'(8`tL6eRtdDeMm+q4.@kDW3j.9%F!E.9Yj$LR=7B<Tufj$Jg]lE_[*+1+&)SD,TZ;GRf26Dkm4g-_&T5
%Z&5YD=j;@*8'$_si=^>1>NW7Ooi6^8g2ui5-!s\.\kRi;]CNFD3=BV`Pm#0tZCgeJYF2A]$mhta:"dltJ"L?8M5WS/_G2?^ig>6=
%6ls[i]S,+<,0;(YWsqN[?Z5n9c)(bdIGS`tA"b6Lb[$M0B8/X-cb7P:[+B<cga<7Dm\HQcGj#`YNG%Frdbp&(N'[[T*?F&T(!AX[
%1c$cnW1mODde1Ka$3WDPPQ["p&;Q:F+XAXk!Kc@D*_lH6*s&c8;BE!O=PF*9p30>1AO"pEp5KA4Y*/r13F2s=AQifW&cV[ZS?gSH
%62E`='#'9gCd8q;QLQh!2]7rD<K+qClL;XBJXSSIZ6]oQ=9KO^4HYe`#==(SjD,N2Ai8c)r%tfmN4Pb:!R^LR;a@JqNo!I]a<U!I
%cjsQ\SOBWeG1J@LUcV-&<en)M,^e*=W&]C2Bch]jm2m@s?deRqZ`&"C#2,`]=kQRr"]jScI,j2=[WfL2qh_,1kOJLA;EDdnE]B6?
%W-E`$B/l(4fQW2d*hR"%6Q5Oo:kH%)fbdiMLQ_.C3$$p.HX/n^E%'](T$f+SXAP@'M$nYiP^pV4`7<U,/:NQK6V6K[XLC-H?X:\b
%5co,-oOH"\360K'&qO4MW-p3_'?lbX#D.bVj@"67SM&9],h&Q]64+GAcQ"*ui"*-X_P>>698h`.,!a_>nDld#`%(*f&f\-L\%Y%3
%i$]tjV(S7n#pV4]>RBdtY*=TQR=J*dD\<5\@tno]A@\Pa3`sqsOVk&qP+t9`Kl<!mp"jrb5Ou8g@6e371rXaFL6h9']@]/45(mP\
%\RaQD==Y#OC65Ekr#7-QN?%5H6kCheX\N%H*4#:l5-]SsFT?#WF)6?"X.`R]<t&n#]G8";\^2LHauOo5$uh_u0G/!&&10UfO,*S8
%HQrp,r7qt%re!jTGd]&_Oki<X3./c.k%0FAlb7(Qn,^\/T5fAS1cJ")A4*CHqcR\jTA>bP;Vm4(=jUB&+!r9r8LKjP(j3E1O4!tg
%bUPqf7j(A=T54hSBdGs&8WJ/i$Tc+RdFJTP#,R3hai54H+E;/-C%8`L%7n^N#b)3=,$5Qi=]d]u=757KAZNjm_ZXZY4QkX'_RldS
%<S<aJ<?f1m+_kXA1uGF-<QPGM8E*cepFk#$B8_>,Eu:?SVd^d'@N"&n1e^6'PW1q(;2PsD1"HX:`P^mNO=@3pH4CuOf@gFU0c.6Z
%I0;]eRe[>B4fQ4G(*>q>30GIenH#mAlj(5#W,\(58LkcXG8h=g]n\iHdSiWnJ:,EUh"2pFM)/(N5J;_K+B4.uF"3'`<Gr@O,Ks.`
%8N!G;jlNLdUb5Gkq>MpNonTH@]QVccX"W$rb5U3<T/]2.DnSfXo^c>UH>2WZe_](g?[K`"_u@=IFF!5L+p1<qXlH,KXa&(NV[PVQ
%e)'b4C5;/r_m$nfm?8&FDGSGo^XP*FC#5L8gZ@g:atbNoI8_NO=Zi&:rYsFTI)pb=T))Y;!OAT@-`teNI=KuJUh)GBAn1:XIe)E\
%momJQn3QR2.=1IqPbA36o&,/j.na":_I&f&EQjmW5Io(_p>D,XTB`mucb:T6c%RhEFSueVq"rJ&8k2DYQ`KMjLRJ^,Cpmt?'dq?u
%(Ht.sUku=*Gb(8NBm*[jn99(d]pV"WRgU;CO"kN)r:a'K0)X3NG3S/+#JX3Ba3/ZJ+EOcB7tW$-@TTt,6WkIWkS5h3E.IlCH%-V"
%#9u;""0riN*t;!C:ksDa6VA3ef%W>@Pnh*QLRPkH?ad%n]=-YD4.M:*pN\FQ-ZCKp5N;7irCTGbl=s1e+MKB(JGF__dZ%f49]d;b
%7WGItdKWX%7+s%jm7#!r850K@Pha-qN&TdWiB'oR^t[o-2-HnjIg>,9BaOsR4Uk8>->U3@:n/F4@t:1FIa7@(Z@GP5'TCX]jHqef
%=#GF)<3#E98d+6,oK-(_Vk:lK\9:"gJYqf!j:A",=7:UZ+3_Pc9o0Ocd"93#<`2Bo(sIXQWVnY_`eNr\838/,,UfMZmBu*QEZ;$e
%KRA,->Kgo^-X`u<iUIVMBWIk<8M4J!(A?VRVn3b^9Fl,#EDWtVI,BRP#<8A#JNMkulnWa_iU'^(I['L^'kQ0llY5GD+[R^IJkf95
%N"CSpG`/psp>%.j0=d++'^pDAHYKq4]e#:I3^?:4]uCO`;rHs5YRF"kd#*ps9-07S%td/TR>bB[<<9h"dU;@X6>q`YEH)3cL$*1*
%DD&23D@R;<.96-hR"SKJd==\&*L0)H7iVe\L/6lH*o5dXX9p>ig4fkbjD@_pEUsgb\06#6Kg"bsp6(7udNj^>\TT!XG_uofW#8!^
%0IW@+/;aj>(72S=>'Zs=&'[OfUcF:rrRCAX.t@6&F>Pe\IMo4"%u0L]g4B0GlElBn+]&9VXk24M#98")?r4r?Osj\FM\^2f\Or9j
%G%H]LrOpgXg>g`#KlGL*Mj3p341/HMfhQsJE1g[g;J&upj#:S]-8$5Af^apX?CqT1(`9/5mi+;"1NL!mi>F+q2BYAT689B:%1[VX
%MkKP!p7KtXa7UMEmg6<:`WXiJkpD`XH>#?qpd2Lk!38.V@]Q0g#oLoSq^Rb;=mD3f'JK``p2\4Ca\Rl)rFstQI+jk<@)Fs@(Z\bV
%&.W)8mhT7icM)Qgo+XoC`Gj=*[CO+;8Ya@Gg6F@-q"K7;dF%p#de)uC[@AV3=B2(j77dWr$tZ#"=Pd_0YALf-3Xhck]i5-(.s3^]
%nl.k``@XP/'N!_>1/MhCS3b@ec`b+C$@0cHGc][@[CUd<oqDVC']4_.:Zqf<=lts1J^Q[TW.a8'>`7:g@1egF)=/)c(.leL2E/#o
%4&qe-NmeuO1t$=K\nK2[nmr>Ap#j)]8i_UjrO';9ls-A?]Gk4L&Aoo1*JKse)-=s;G;"4Wls"L!T76XKXC<FeTplCJO$&BDT.N8B
%#0YNk+iFRD"X2aZd1G_mGda0d6(J`"M`T:JXI,hM_p"3*KFm-#++!f;s2d+_@BG)N+"a)5aPC+%)>Ao'<^-`MZZJ[/:*mTnKj\*6
%++r;3C;@]+XaU\1PG>\AI`YDHV2E9//VaM[<TO<][AbQMqOgiN3d-=TCQ'46k'<=0,f3gQQDtm_a>TE!?6PdDBOHE'#01ltBXm2T
%lG_:Pq*jf4-K5^_:6i-N_]`jj@As2'(PBLgR`*]_MlB&+dQp>dN1L-F[-4]=K4(WK%"9aj7`=OS*>UQ'F\1,1e#P=OU7fs:M&BQs
%\-:>6`+Y"ELcQGt>scG/q"Vth=d'Ak:IqB/<-#jjV-"+%$.'@nOpaT?ZA7lIl[L[o0f&BbVJd#,^C4]94Ydo6#f"r#l);IX4e^;D
%*>tMS<.C9IM@hS?LI.-XLD+qRg^BR0iq/mCVOO2Y*8LgD(3KRD'MT7`-.H3YL!p7PlI\j7)[ht435JN))5_DNa@&tNd0rlU5!-Rb
%9mX0L-JQ\E/r,jeiDsUkeW)96qnkDl"$6q0n9O%oB14#<H`3=6RMiO?S]s-t<"6X<MHQ+[6LgHYrU*!JIucPs2,hF:8JNm6B2MR5
%@Lr6M=,%hu68<1@PjUe8aSN]YgE/\A"J;gaiu=^#=(ZYLNkb\ihV3PUY6?bG1)0W-o=jQfjIE%6QV3GXkB(uYL8Re<CPV-t.VYs@
%_4V`1ZcCuZ740\j3nU%[hE"ENf?pHWB()+)Y;02!#!,3CN`SCVM*V/(Ot-_NdrF<6hD1E_.2B3!ghu8Rcu7d+<O]nPfPs+j(5R`L
%L'7]30b/J,+@fp`;S2:0fPZ_lBqdjb/Rh!WJD2e@EgN6D\f$`Td>$!f)KBWQSr+\Zn23])33l1Nck'2"Pa[IG8]iV=:N+(g7KK`H
%brC63nK><>XC,+)fdbme,%IE'@0.6ef!aRM#j+Bb5>,uN$X1fHqYnF/8pO\[@4I"3p.JkA=thCj5)T`je^NU.%gdqj$Lu3H!]R4j
%;.X:Pf`mA;ADlpe!>@I"+IZFFK-@"#5$%*H$DdhBIK1JL,FoSN9%tEc3M]-p,,6(37]+jo5UL%aJUBY"0VC5D<35_734i5C2RP^u
%Ns(oII=VJeoqG(KJ`<!N"37F>Jc"Oao5RTNZI[o;\NqUeEY)elPC3a<O<V;cnsk/P$ZtL';kU<l$nF3ASauRLOs"3fdP?R^hN+u8
%+?ol;M1?)\+cI]87eUq*^)tMe6\Pr#M@(<\!0^H;Tp2a4)Z8CF3Ps%jGU:TF(GB+jXCJq"fO(5]rb"ar='A>5>uieDMI=9M@D0f[
%eU90+aqu/90TV5Den(+W/0G=1Jp=F=]F,NeP7OD+/F89%RR7jR">/[Eb/6'8VS`jBD7Qt_C;*?N:2*`UZP1b<=,d/F'r,b"ZY1(^
%#9$,Rb7p/TP%"cZ/40oE9a,]UnYL>`^]6&7"WD2sM92n@&&\#MHp/Bt*G/?GdeY7hdD;X<Yr,)9-l+<=ruBGInSZGALeG207)b+I
%Q;a!=j0dp1%VuVn^7`r3^U5R>7:ClDFD\@bpU$i1M2jptTFI%1N'Df8"_O/_[2g%IQ/ECTYb5ZDe>Ok[O,)Tk)gj>upEWn)$1j$l
%$Ab#8;aGk(k>":oOkSq>%lo0C^&$6?Y2!G5q,A-a7N!AfR3kAD,A@^JW/.P98SG[>`_4^KK=k8`P&]4%7sCM9]Q,Pt#ccG67dOfN
%3Z*:GkY5=;EBVNF?!-t"=914g[aH9lP/hkticN[YK>?LPR]NSKfA7`LaG6Jc#<nSM4Yi?g/1[;-fq"q&BXS::"3WKUq8NhSL]o^4
%HqZg6P<n-oBgId!SS'pdfS\>)&9S*=>k6eEUtE#k5*;hshb9lEX?iZs)2:q"6`rF$gWN831m,.cU(`;KQ)Sn4duT:@r]>KaLdn3r
%5OLM&6OVkdV3+Zsr+-a#Wn5=6]D1C6N$lZIISEag@<F6fTW]mq/G1K]6'k"],m8[gP8(o@jBTa3#S*UCFMMA,E:q)d`-f"M=2oJl
%l(u7ICC/T0(YjmR&F%(t'Q?je86eau#W\OKn6V[7ifRZCT/HbX4e^,@=Q(lg0T1]pqBnHD)uum)F(*kR)*0;([<g'XYD?(Wc4J\[
%ZAn,AUbhsWYC7pDG_g[+[#GLj7[,[WW\@<`T0?TopL=>WG-f$eX^'J&LI]?Sl<+p5+]:`:/\-lE_lO?uK(3ij("!VuPq['LCJ)F^
%2Zs?F6Z;u64rA7),SG,q*6?t4n2DAZUN252G4*k'6TdCnI@-)*8H[/7&uQ$b%>c6[09t^B=);C70-jl/>kWTDs#hMSDRXdJBq8'5
%.$d4RnVR`GP0DA-Ru/71I%&QVEJ@;!pIq)K5=O\Qe?Enc[6m%^@'27C>saED)_'Ib,)q>TEJn?6.%OAMV4)qPQbb!S"Ti`m$aAue
%CSn)#\]28;\g]uh+p\%KIN:&8LP#"CPtmWI?*qZ&as;mSj#YHO,VoPNnPu*^cK+[%-@rfZ+4YJX%XC54F>dPN_Rr@C4":&/V[9ZJ
%6dPK1)lL`"H:D;r0J1:Hf<L$YhU')dLRI?Yi>E(Nr.ghgZK7kH)RD)2A!lE>Jj8]X.BD&;IGPA-#oj;/9I@9>L/%Qr'L)IAf+tJ+
%J?)$-lh,s6U.<R,-k6=Y*Ws5R0S"OtW3rcGdqRrs-P.Zfi<Ci*FQ.ND.[URNf].CB8qmZ(dJJ#tV`LdIk'81^coK-KXtZ=N#jK,D
%J4nCubuPkA.V"]CpUS5si=!!1I-;.E(G!D+od,3_$h+)D\G^'@Bu5#mr(Ru;Fuo[nNOuR2T%Y_1D3lQM<[QA@L=+b+=!i&:l*m7$
%p].oi*9_)BR_jh\/J%9Kr+@E4(O\Gp$fJmkWJEtQ&Je0R$bP7`2b?PdF?OX1.6`IqnDa1Qaa<'GAe79b'a+3Wo05=P^YZ,BZ`G#'
%,#'GjZ044H;Y7t;N'5@q>%fWl?MZKAg&WNmnQ#.b09L41G;0qB6pm2bJ]rgPbGog<+KV*Pq0FYm=r?O8W=kBt*FRu/^^@2O<G[]S
%)L\ij<E&Tl/C*2l/4nQJL"/'t)ORb!!DA_u'O%qFl0\SqPK1+m7]S%[,DkXe%NO9X:BU?`^$f`(cM9Ct$o"HgREI.,ig2&D`Ct64
%BS7BB:(Fb@%5Yk2=6l12ZRM6S1P.`--n'Z"7bHTodb1>@aF!\a*#;Kb\M54+1VFKCM&H<uH!:c4"W>W*[b3.m4N8t<Q&([8<Z+/e
%<ut;9Dg:L>T,l`pInd[Z(@E?Y3M+=Tan4]I'(bV+`mN*O$4ekGrps1-1E&lAgEEa^6f&?2&M$<XPut%h_N8QT8=4Pb#b!?o4g<tr
%E<W>%r#1PdEU(&uNO4k2jiP.D0X=SVKdL6qOn^Dc7`sGSNd$SUPn$`9Q4u&[)2i8Co'ld*WEm#mRtdA&rkgmnAK-LZ.l\SocNEO\
%p&X4-@&.B]@dPN<PYJ_&j)OROoKIBU^rZdnOV6W,J3;JN^CkBPCg=j(9W@pq_Hb%kUa!eE!pLR+3FKWRWUPaL?#U;cZVr,U&[+q(
%J=HM?.Qs\8A,RG/iWBRrmNX_mW0[["<V=sIg)0,[D>+#9boe]rR$_H0e[i:UF?Q-REP+3U*lMr[ffC;AP]TB<q"#GP-rn(G[mGNF
%mm?#mB6pq"o.Wba_8MU3Or?Ha!_g`?O^V1Mc'I#e.P])!Msf$mKgc;kIhQ1Clib7=n-qnl)t\/saq0hN*_:_q'!=Q5]mM5FI.>uB
%^kU*j.ROeGV]AK#(),D1h(B:ai`a=NNG+B`?*:^b3G^OcA_dB4;_qo:oX/MHEt#)@O(I2"GKFOGLN/5)9ROuV=/H2^A,>c9l(h7J
%71%0jK_QHn.Dt2/Q.12*k:AAb/%tVdp0@fpC/Z:qN<\ekj]],ulKVQ1"%uub0tXo\XJ7gGjuDaPFbSO*bMUg[\fd8';F3ScgP+So
%HKt?umYNrQ7>ph7nOo9*%a.-(nE1fe`a/JS(\/5!'G@<j@[^-b;&Zq"Wiq_F*,nbALp^B0SS=M$_VK62aZa'.'V0^1@?PQ+oH;3,
%16FBcVWj4H6K*N%\=4OOpA<,9;)q></T=<Ufe),qf80Q,DMQeUBVrqRUX\'iMb=r<dnb?bCkd_5;,8Pt'DP42`7mS\ko6@iVYOK%
%!oi;>1i-U/ZaCRbJIeQ$SeHSmhCsTr\<F@)$=cJ#*eugf>I%KOi.?d[?&[JIb`!3S5UqBmbVr!&cPA#0P"t4DZMV,1MoDJ3ioCb_
%SmO<ZpKTiK"uV40g3lEsbD1aJ9putP3[t()^"[n*s&Xm%Imkda=+o#j6n"TgA02jo6.[97-Z:4FCeV&L!E0&*o(P_=_)\rp]&mI&
%*#;Zcd6?6/%[n*78HXMDR3390(oj"=5E+qQa&&2Aju3"2U0"%VZoZ1H@:.H3HfEE#2*8E=:?(8qCq<!b*8D>MX/Csj$aZ-X;4GEu
%gVUbaju3i4*\,L=Pn%@E?$:`Ig#Ic0[:B4+2!Ar!Al8oci'Zddn"bNDbUEU%G:3[PYUmCmI%8V8WI)sU4QE*+3oAfY7\tVU-8U.$
%qARq\":i&<LogmKa1^lAI+JM93tm/5#&WS;k7<b70i"'jU'"G//-oTT?SA[OleN$+(k>W6dLQ$SR&LIk9mpc<%7i5[,j]E(eg2RS
%lHEdoiQ_=]Pnb&J+(s:RfabNY\&$R=r_qG]E6jE&P8S^LHG!uq`\6!*r=_pk1*;&?4+Z>fWR3SZ/I.P=lmi#Y:<08UD.Xa-3FI%m
%<a9b;!h(N_!MjEKSjp2;)Xqta_5[E1"#049X9:@h)J;`P7r"E$n0)e=_W.k?S`3qK>JC$[ns9Q&Qm-U%RNLU/&&T=:FDt@T&C]7A
%g(PP%VXs=`&WHK=!QFbKm(MQm',GYES,MtY0%]T#Fim="D]ge;A;X%?,_`o`+@Fk\0?TRt3)/LQ(PTC%POYg'OV]<.Pe1T.Cq>S9
%(U]B%@fWW>]-qUqHQU-6)9GWW':(F.@DAc,0ht1[3CjlnZ:s2>`n(uf^<Z-IKNG1?+1iqKP-Dgl)BF*##GpOW`1Jn_Hb#$faK@7J
%f!&GE2u^LO:\u_UNX.4lahM>"B-pho\29FFc>41PVN"`o)>nClXAVt)7@iT*%s9r*;Z7GYWU#?7VFliED'W)l5]>@/C,Q%)T5fVg
%)4/B4-G;O\dpu>lP8cHFCtp@T(l4?_h4S87<!O+:,]N*;EF9p*rYOjBM#F%/XMl9u0Q(,\05a.^hLKnSGB(56DuG*Q)rqFNE-*,4
%_;rS6J>6Vo3^]#La/u!oM;`7eZ/GGg_+ep+Ysd%QO&[.;9n+_oTDoI,RcOl[j[C_"*T5Jj:ni0r^"78$,UAY<TuE';*0fffaT]TG
%CtDHh':9Uc@QOoG_?^^.CdorgJ`IAgNjUsga1JrX_G@(@dtgG1lrJI`=$q1o]0l%8J!r8I>FOU,[&J,#Y5:cA[TnaVK`is@]*S:L
%%OLsf#ZZXodtSL\mbd]dh)`0XLkV9"]Ge<goWGk$3DLIqDeG!U#a:"+#3ThcV1BmJs*>In$a2.tlOAUnf1ZIXa%6BL7e;`1T8mIj
%haMGL<dT?u6[+[)6goGQ3^U_ZILQ6Zn!;'4B$k,<#V/9I%.UR*F\C6N)"O8$'(-^o,VBgi"SDsomT@)24Rk]k_4l)MVpK4gj^AlA
%Yu#dt=$o?;]0l%8O/H.Mm)UWAP(U`$o11hl50.-%*c![i#*WH-@2?Z!U"M,pZ8Dtq,/U@">E"h/AsX/e&+#oT;VmSSH&2QZF[t)R
%)+r]?H11RXggTihLf6I(F'DsOD22&\H\Q^t)']jM(uZgq9Ipe2,Uts2arR67p_4qtrY-&eKiIC_,8P#)YdZEQ\@V:Yo/Lfe/`BY[
%3rM#lc)kgj:1.Tl)(mGMbRHY1b_!8,\5+o]L*@3IJJ1JRh(a*?n;HQ1.:T!q<O@Vl=KF[&hU#*[ma-=<+6F&"?`No.Z]oCB']n>e
%3JSK+<98NrN",>;71Au5b^">`X(a&:,)`;k%@*9Nm?cd9c!7[BQeQ_p8rQlN4M\"gTubcVpR[/>K.nJ?o&2nFdPo2Meoe5J*G1t+
%SPqfR/`33gcE*A,ZQ-uJ7nQi2&`s6$ZL5:EH7:DiZq%tdEA+9"!]Lgo%]Hci'Xt[EhW^peK7G%LjXGE[O0;-BlbpPHl:,"3fK'c8
%))3%4j__ND6g?#'8/su,B[DOg*IDKAHXQ+7.0KB66s)lI/CYa!e^..RlHhoUj/g)]hK"1U-:Y?G]H'E[Mo-9tULnRf+cVjJ/?c-2
%2u!MEVuDK@6;8*DUKG-<2XQ74f(Dsp/btCFMi:c:4i47n]?&g%pV&k/<dS16>iZ$'EWp;)o`uqDE@M=i_"J!P`XSE]A]r>5UYl6,
%#8Ts#Hoq+'Z#[mpU2NQTqWZj?G*)e5Pt0>n)+r]?H11QGZT@%PGKV)qQsUc8o9Aq(i<4%3QV8k(:tS;@7Xo$XD*5VYS;j45n=.7[
%MR>Oc^*-#$\Gm3;FR$QXLkWtR]\9nh>hs\hq8:F-CM$+a$!0LT3lC_XJ4/f/7hO<&HR\&6+Xsr5GTK7\%iF<^%d^^+-o_@60o%e1
%!p>7AiGnbR[)fga>_H.[!VFBcd_#eq?&^D0jEr&\VGC]V*>XX?d53G::[C.S[N]fEf3U^N&4#Nc?!>)lHEDsr>)13!\XH^Vm>"n\
%b"LJ[W&:=#]MP&@ih<hWbK<4dJo3X6>]TiNU1-TN1DC]n?0mV52Ko95p-I@cS5WN76[>(YEg4%KFpsp'&-JD?5=I8t1sL6$&IXl]
%@(%g+\GPjRlSqb%_bt00ldq$$jqF6tq1`3'#PWh3[g&IA`6o2#K#84/$X=2g-9H"_\fG:qOsL3i5D=</ge,4f]CH5S4(FE0T;S8F
%baLOt;2?,(<87?QS91IVfm/285,!@C$l;nhLP"7-'OB1I`^rK2&QVL:'-DnP"_,ZtQ,<\eo=%Q3R&6/[>%7Elbn<^\(k-\/^9G3"
%ZYl>RN(1G5C"@fU0k0B3-q94m]KdY&@[UGhU>haKi9t#M@W=j&Ac?"l))]$oBL6p7;d12L##FM"9sFe[WN8-o;.D,moU.=8iL^su
%XupR445uN!Lf#!L%"8_SrIH]?7F_f&:JAiO*:&&si-e>BA*>n4.k'UeW.mE2>r#^D%uk%u5f&\p@,pQ8rHUj455"o9Nq"c)a1kp0
%qD+.mml9(r0;BgBZ%W\jEV7F+ReC/d,B'sXhZ`YJBY+eI"[o%Rn+!0G;VNq[[r6jBG/_Zsp.:o$15+[(!H#?roCjotC-&3[_\W>'
%:9NjT76G\ic[QO?pRKg$og,\W1Z<]=:ptZ+^'FGr;h"Tb5Xai`B'S8@j,TRGha8pb!.F_c>*aP2r#T%h5f`<o[LTstDr1X*%VO)W
%Hf43MlAV@Q6eDA2^BW+0PE00Mc:8/IB=h/"(WUZMRO$uO(R1bS%SGYf2]/Fh$R'Ls.pQNgHL)p$X!7,6TKtb)5cfgcCQB!5eWNl4
%:_U<;I1E(:UIE`VLu"L8("uEF6Tr\8gWV!QX,?+=Hg(8in26H)L8eY=^:se0UNn*F(`Y)ej]VQRUkKk)ks"0`VCR"L4LN@]`k)VA
%>1-$;T9<"WN+kLV9>Q%2NuJb^g4Z`"Y2l<+:8^.QTjF+jAFW-&'@f-.kT6DU&oC_@6+I%>0(RNbJ,R^PYY0h4"86-805Tg#k-.kX
%3nl?Lb(mjp0]5d%95`4PM]WFW-pIIHRDh"W!88:er=;#<=N3NrE1`F!jZ;fDgWT,D+msL2.\DL:\<:S`EIsWP'q,/5G[!_3ekS0(
%*nW68^9Juf]mu^EeF?n[XUf(O>c"@UqB!X59dX*90h,N%9r<_$SZlo3UN2/Bg7rW.)<@hIFW-ee__Lm`%([uZ6W0>jkaTF^4:Y_h
%9:*RW:i^$IC0WTG;8kmE(_nmIFWk1JDS7*'RV1GD<Y^UtEnQ!7EZXX*U>!Uca8bN$r[L8#\'*LWLi+0sA2Ll@#K6O[XuH]iMGB+T
%J-3P0Se@G-%`9=GWjf4U@sSr]R<H7OHMOiB&.d,qhBsS.]1]eh]CpcYL5&#rGM[WdY+@TnkBX-S4sluF>?$rc_-n>0Vs!qKb*[Cj
%/.X)Rg^^*,B&)5hU-2I1hfUSC]s8B&_b)8O'ZaTg^i";PEGK281j8)rmnZ&sUE4k:30;-$HPiqT87J,YkBEFN$pGjh6M"Xu0Gpib
%K'nX8^"6JfaDooo/OC*jA-oZb/U@B$7=a6PNF6Qi^fPkMWOlXNUCas<M#?0k#SeV=+_[,0NQ_Ya,imID9c?4G0-UZRJE4%!ia<:h
%*7@h:<!F6g6th.(l=/U%h`n8mfaFWG0K(*4]=jojh6Vl6GVWqTr+"e&KT#NR:9&J3>4<dT2S3QBXdB^4k)e?<DfCno3u1trSQ%uD
%Nq"Z2l94[8V>Hg2(E'JSH[o0b6]nuJmsU6I'&6pooJdT6/NGZ*cZoo\O\f[O`ng97LCilTlkmEEk!?oq)G7r!&bho"\RXu0g.bm<
%"c7N]M[W^h4i5dq:u^cc6dHk+,:Gu%(>iNBkkrl%mWS4.1I2m'EQk5:Mr>[-$@C\fO8*h?f.Q`21R"'Z>2UM2JC:glIGr4fV*Wk4
%7PH_DiiBbdf\Nlh;7N_uq#$umk&dKOrNa8GXjg0ql7t"H:gR2<#`:(-+UYI8'>9Y;;Zp;@C)<c8't7b.T/&CtH]\=;eOOjA2&>J*
%HLLgM<9cHUNPj:eG_lO?)J#1UECuV"VDD;ml&)djR+7ml];Q+/b-oW*$*eX0KF+CE5g\>7b2dpji^&@Ql`rA2nMj(grUd]Vp]!F7
%l'gqP>`]'8Je)uY[PLp=ZC#"^Wan=U<ABIRFVsZGU#WmO^g??Z2%E.UXU@IN(9s>]lOrSO(R`jk9InbEJK93ERL8i-j)&<kB%+-0
%&VBPd\ljm(EJtGRCsAi1o3M[.H4I]/47N@s8(t7OY=9u]9t/o$M[mcYE#T%8pJ(F=milmeJL+##(q7-3=;dLteFu0h`4rl.r,u49
%;BF9OAnf<XL6sPLj_%oK+7gFpJqillbXIaB^ZO^%)3BBdLU=<#"Os39@>^$EXI&A9-L,X1BtK$SCQ\sbD9d!a`_F(=lCpC8_Kb]k
%n.E%lo:/9W4?gcr4HdX+Xcj2s>0U#1b[U1nnUKJ\BM`,%M^s'/Vnn^Bo#NFC:(\8#YKn=nXO1E<:(s(":?<4N;<+5D_dpoml.Ml)
%mheE[gJ$?f0p_#+7SYC.=OD\\"'A\q5P!Y"[/5.\"eBdhk.A^Pp">M*L.1,1UZM6LkPk`.7*!!X`f'p:+pI^WaqgHEoITW>QTo@'
%8cNm)Sn+Hobi"+L!lq()rB8R?e:W1Rka7C.LFtrae".1R?PmI%YQf5@IF$Bo;gK%&)J_JVLT[4n&ppHX[66H(0EsD6/QAfrlLdBH
%5p0u!Y;q^s+qFc9IJOY+ZbVgU65qWX]CYsel/$)(iojnn;)Rr2,feYC7b0"gY`>KEaf8aN[[^\A3+Ze>E>Wm)?kc%0H`.7'a3>cq
%Pm!OUT8MR9D$X-b:QKAI'gB4,IfC@7$a%a_$SX8;kG8@h1HUMFU&dbdKC?tVG`3\;(9Pih8`TCsUKp7Xhk>FM#hXm"\\\#M92[\F
%9nT%l=I_Z0NI6+ETCtX(+':rN%TJ5lrZD`8cKNj61??hDT2du!7+ntr[*%Af@-0`ZnQ'bq^$i^bA^G;+c@#Tbp'7CRC<$"<>,"$q
%Q78?Ad6Tp/Pgf%QF@6'D7QjaGI8$mu]mU:oeO%c/^)%3u@3,cU6st[jXML7SPhcnSG1r>D%Z-]=Yd[Z^9q"+)2OJ&7S^Z[Q)BEW<
%!Ybc"ouSO%App#!D>WkQks%8<^\Sq!]<#S_J7;m[i,\ZAEDs&00a%N3^T?`tO,.L",";tkoIu>"KT"-jYt,jIYU5(H*A[(<;`r!*
%[OOX</2:V-nc5k:L*ChkhKg5;(fbiO:j/.]OlOmGmBYYQRp#8Q22'")5SPq:AR#NiD"Q?,0:%AT'ogPOAqs\:$(-D1r[%>fdSa3O
%"t8!6dFH03hX8KiT:bIV$l5%\C7+E<L?@3@N?!!nqoa*hQk7itGna])go4]>]'^<5\1)R3q#L4#5"L0>FD9bsZAe(Yn/ugf;H\kE
%%1!S+-Q0oI2j#7Q?QR;TX!5u+;K6c8IRiVO*6$C+3j4,Q2K?N`kdn'tEPUZkId$WXi^(5[@FsB+HS/JSDb:ee4:eF4H3QuJpK9q/
%&-ha;M>6-ff.nlpe)*(82YM,_/dlVRp':/Qg%ZV/F/65OKZK6l0S#/GJL45G!=uAG<cdc-.2'^W'GPYa7uN7l%6uA8J54hc#>_[k
%:EBJ1_u!(3m;EcJ9mNQaU@!RG"M@EXR:h&^DSW+.,b*b<aRXAl/AVQ#70,nF%u@4(;GV8^'>4R]#n)-K4l<DAqmVZ4[aXh#21W._
%7,49D$4Yg;(k\;$%shrq5[IB+70b87:6UIeECh+;E<F_7+jWITC[drb4R38s0,Ak`M8b3-)#,lL`YbERllXi#=\*_@&WCR_phk%!
%G'E>%*1gtmdsU?ff&udZ)o_FOiC$@'=;%/KVT_1_/MC"ofb/O)PN"<DSu%ppl[_@$:WtGn_sgB1`OO4BT",F>Zg?XjfR<UK/3knZ
%#(3!(h_Pk25o-R*#):jUB<,#,ck2EN#+XP,$#U<WO$Xo!qs0GEj]9cYDcn)N11*1mW46V@Lk5)$2I,1;oJtKiAkEB(I3P&/_`;6U
%#C%3i&$[&Rl$>:DV9Hb(1T_$2'g.<X`^'O>am0fM(n>0?]oZm+(ZYrfI+5&?%fn``6]."5)]bTH-<%l+ebPoFIs+A4FVt)EZBeP4
%Ff-rT"Yqn^1G"N%n\H<5Tc&95#Z3=]*?F511Og<e#a8j>\7bW'L&c$>=Ob#/)7OCG[G:?.k`8em'8LL?&:,>;4)F<KLNrCb);3L]
%8mu"J/fF.)MD]?qM!!Fmq:)9_?orH1HKt8inHfn&;kW.][BMC"AW[ijE(DZH5R?t!T/)(Z@bNgaPUL:4Bl6abe3p@!\.@X7-;$'O
%UFJ>g#2T3j#jX<j*/9)@[L_NrcMAi/;S,.f48Yt3W(\&bC!<ieA<eRCLYirf)D?h'Q`!%I)ghuE=4'?!W*Its#&JS<LU!,+jOpL.
%V3>u.\6]$XT<?0tHmoZ4T3lThLItN5i+=huW`,LU7R>>b^KZbc@f0X[]Us-C2,#$e?FrCO!pQR_l?X:"BZjmjZJ/I-+4@\</;#/-
%1U.u\\.AQ;#<mfVAmaSskuk9_k,dM^*dGJ/"3%\lU;Vhr>c1!BfjUr.=,jjIAu'&l]kX`:-@Yl1R"FIb<MPZYWC&9ndjPEs;;G/G
%6&<Eb]*VdF.?=*hfG5BjS)oR3`tI<Fn3e5KUKVPUrm[5n>eOS%Hg:=>_7),h-M8G"ou+/$^p]N7jM7>T>3!YG.2hFsVI_."oeb+J
%=k(d5VdtguZc_&ZEa>coZeKL0@Y!._OANP[,(G[WTOYJ<:1AW5AZn1SH83RRK&X`43TUKVGKncbR/R=KZu#H<lV'WPq,>?6M/D4?
%p.iAUf$VumF6)JJ2%A?k`U#)TIgCAh=Aj>+ojT*,Cc>#"#B$sITfK$RZ(Pk@"$V\UHk[m3k0n`U8$=j5o[>6(3W6>&P(KglXf7)d
%Uht@?;6pe>WUm$.,p;S&$'YtVrn%)e+PM!r:5pJ\3e2F-e]0<8?-DX`dHf?(QJs9`Q"kkiZe'CUTaIIq$Sr;5S6Iu,UujcB/r#u!
%"i#aeh`tLIR@WG#`UIP:H0p3J*cS.=;EtH(ah=#B-.9B)apJ"a5k']rf_hO[g\"SH%%R5bV*#eabLZrrM_rQ$.FJkl;N0N9_IVt6
%A(p19@<>d\8+Fn*m\nTQk`d/#!Sso4Hmm`c4']?=r1RXbF6"nfq$bttYh`,WpFf1>15C\"T8tX/>.a:NfAb6Ac$agP(*XGY"/#/2
%]"dA]$I0YUL@G@1c!TmO4\O?+R%(aFBh%mqbD8tk=,'?7V\4D2Ktmt(iQr&?LT/*\,*@pq&p:":gel-jA(*jY7kq[WbUSL+hb`g8
%Bc?nK@LVLT$lJr.Pph1EOPTn7)*!kCi$Tr45@@c-A_du<JR-Otr=-_I_.X=%!b?F'o[P2naZGAa0.r*R8labB=4sF]3PpR<F5Ps=
%k@`H%@&Ndaj*Og*B\i0c4t8A%#2\)S@2K!-'[(h]K7Y'lj?`:)XNN&Yc(bf:Ie=Gl8mCqc:@]+kr<=Jtb$ZTfIZiaG=1luk#<g6m
%CrltL`"DU2`inp@;A!0q$rco5_ZuEj_uMbk$BhN-&ha(dQXr%.f82R17j)NkI=pFk:jomM`7aQWWcHN9-o3O&<(^r;?/+1])\K6N
%ljWG=0hLT,CchWu8!jl/3]hkK#_pa)]Xsd$U9"e+Zj=:-ShqcbpH-/%@9?HgRI*bYeL+]nRO.k1#$5:OI8H?)g/hG9eo'XQCAMni
%1oh<TbGlZ%3'rDI%>=@S[^9Za;4>64cFR3)O[E6]^p%CsPPV9NmK[e]V^WX?)[J)bdA3bG[#E[TS+W'CHGm<WGBCtD,PsPC#9:+b
%9^!([eNKR\s5FN\+Md#FoP([_@4<T7=cP\b;)=bap`k&es-1@h'Tr3e"BS>^VlOn_DK#^$=D-M?[[k,KpdXUsM)^/%Wp0+c>t$rL
%Vn-eRGm/0IfqsGSSS,XB7/0].X40nR-r\%\)[q1\n'$T/Eo1DjA&3=B@t<@n_u9H(+^qA3>6Z[RcgNQn3\s(FFRA!J>,PV$T@10A
%rSuTEROl-?&LG?u]eF9pAgJQ>NJ9QOE]!G7TSTr&MnG@EQ,`n4\5lhOMbK9tO79PQ(p+%/Og-g%Z=pcL^=juYW'!7\D%mq\(50g:
%36?t47`;"'J>JWmMKsj;,-eq)L?$+JY"g%M(?)i<\NJ*.^)^16;*V'5^C)rs&J?sr^RW7*o#r1s9g;n-%f)ro2T\s`+3:/)nMg5O
%VYWUhWTtf1KP&EtQNb#=m11])>p$sa]l[,d_:ORcrTJl*9W79tf!OOT\\X&*5>PnW:m\t8ndt2'Wl&(RMI*E&?4?YE_bcC8p4h9l
%p,XA0_^GL;jI=dCiOW.P0Sjon2(QU[lj+S>m&-.d%Yr)>-Rg<W*c6:[kpFcGffCoCIk$_QkrJ_Oc*S%eKXR$L";KieV?)<?]W&jX
%)&l<44//BYSL.'1p21*ud&c[__DqDHi]k=?B4m.XiN^%d0[WrB@KVQ<mlLeg=jAUrPtu*Naf;KJ%_MK-=m\&+<LCG.:Dp:&R-,FD
%qU5$Eo:7U:j>VP.EOITG'p<S5$16[rd.]8gC;uGF2JQje+Z82^MtTJW"7(drM[Q7HC3"MYbpO^))O&uuPJMFd;]['1eiZOQfte%;
%k:8<\;Y&sgq5ej4r.)jSZ%W9.C_0E&THaJTCf*PHc22pP[NLe(Jl!MYMKM<$jYd'!_'cM\RL;0#=:dUI:J``Uf*!@33KdM8TWfPD
%'M67`AH_dlY\BbIpqjUU%BQ'#EtLd:PA7(7,FnNU@u8Qp4b^#\*CJG@OHf\'Kmnp@,K_?DcZoWs>27nfQ[s&j61m9W!9%W-ECN,f
%%/O0B"YR5&r=n.Ba)Ok554n(>eNn`b10B@0BAO$Fm!V(sXbE9*MT'VSrQ$S+-Np.q&ab-$*bMp)S$7i&2uI%r4-(MZ<s,'@]ah?T
%7i5TnrVAd$a7LmPVXt<LdqiNX#A\`uFa/6$)[anbV_37XiU$h)<7nq5/bCtM/aUN<6`,[%Wl-p-VSYfUrHholnP+I)EDibh#/mm<
%r>+R^KKTbj*4F>`dgT'eV,,S(@q#f#\pXO]`>k\bA@Ef>dHSJ6*//33i^'R_Q<4`b#n'4^W2E+p:/o:ej6()9o`Bm<[M1^QbGIYn
%dirm.QJmj&KMOB-^2G]kq4U^>d6^`LGg\g0Hag2H=P"^=m)/_\%(0(N=t7tk@5-b=P*B8hj)`&/+sNYS>1>1Xp7GgK2n=m,NGfqV
%\T%2eTa!E2VpQDK`fFE;YN=P(l>sP5jk=jb-Xr5#h4EO]=VT5aG#]U3!6;_/9eAjK0t%rJ4KH&],A>VNG-88``O@n.9MXE`Qj1T,
%;$&n*e?VSn4qFCt0QlC9HGR=#`;[XXh"2s0r+R3GA_Ub"Z@2&OAr0YEAOj4hfd(M2gS%$/PHq.cI"R>Is%r+(DJG?c=OGNs57aks
%Ipe6pgNi-]YK813[g2C@L3P&diHCSO!=b\5c?E6&"3_5US,K7TQh9Eg@(W9%cOGSE_R2.5Fu7ICO"n4@h*C3*JPG<?BWtbfNt&^p
%fp%R_+F[/2aLkBs'q+i_SN)TP^`CEGY)$;D8,n=pD"a(fU'?5KVUu/5\17BQk($THkhRpgiF/.#5G)<2Vf,UI.EL#GA@ZCmE'ke_
%LHKEPb%A9\NZWLe3i\ZrP?mH(cB*$CqIho<A%fDpQR3\i9.N-_V_J%\VhXp#iW9]=do>a1KP"oscERQRL8X#H4#i8SnmlcuF+HG)
%SbI?`KbQ_8I+-jTO/&WSmU2=4'aq&[eeNWU<ITo-F1S0T+AoIZRDk_6g6?oJ_pUZKL$Sp!^ECU+)42Y-bHiM8U'="-G8TKeSNCUV
%KOFfd`]*9#dQ5M@oZPc9An"*h=<"sn$n\*j#OiG1*Kl4JhDj+'fk[noP-ZapeSR-m!q4OTEf6W4_Y:$ccS&QN9\GBC#-B*=)<hfp
%-q.jo,T12V=]K)%%WLU==#u[NE>q"?,fL1>K<^(MFm0Um2UQ40d"O9m9Qf5D3=[p\\8kTuqhf'`]OS4IN8(Z'7'6jecTpH\qAQPo
%CK=ag-c2Upg4i&lhGAN%QHY!KNA)1`]>"T8EUD#'SB9"P[.%LnirL3V.FHs9\Nr=IgD>`WVci.J947CH]tr0RZ"<,+_@q?$-Ai'R
%V6FJ3@@na!iq%H@pguJ90aKd(d9LMEkAh4epet-SZc0_B^k8?jM\G\,9[9sqLPP!(qNQ+khLHP;rsrJiFTM0c+4M9u_gdE<[F*HF
%c==["L&(\OD&^chZ)e.Y:5ps1XU+7lTYTs!o/`kB7Kn\=3OI=bm-+JqDe&VWG`O:S<5^1EFhdE8ntdX_%"XCYO(^-TW:*KfVninn
%P&&WDZg_8pJu.'td_7(OX>Z^.d<,W(`l'hS2]/,JH=60aXL$jRkVY9dVV%s<,D_!?H!4M>!lJs]flB!n.<B*BWP\da%+hgn+9MFf
%)L_>ij#UZA,$<Y5oYU.bMhKEpkbkPtAHu]b1/e9eVNfKB_h\mqbG+EO#pRD+7GjmM59F7An#YYEq]ORSR1@"(Gn!t?M^eOO.W/*1
%)lb/;CB[LY=dc>ZE+SYX*Q-i/Wh!#\oB5?:Ot%\IGi=J9(QO7$Fh$>Q16:m>NHThFho)t:aE;C"=t*h]Z=W?94RA.7WWn+L5L+A!
%S;1b(-+blXcX>ac!+hEQ?dK7;[8$BhLr7\PonFPN`-t>@a[eEc_jKPlm;C^lTlj39Bl\r8'RbRU_0#?fE,kjqo_[GKamIUMaTC6g
%\Q&e+Z'UVsIF]HkM<!GrlhV52X_H0@i0JMnKH#<@%>P"M@8Aaf`W3u]Y(Z-LB(esl4iqL/.5`^;pI:Oe*NjnnX`pi:L;S<q*/BGQ
%VeTm5\2fIp<KFc+iUFH[2CBNBli-^Dg#<YOVG5aK'8YdK[*u!R@OitEhN-:VikFAZ`OU_C;S9:(m,'FAk-P[>5c.&ec:**tE(l\%
%35Y=3R8[Us;^Q\Jo`@(RWMHh(PoQ0n3\E=<K+HQ:UY]Ul>@)ib7ceMp,a;-rY@%KoR0apmAWr/^o"8?qYB_L@OoQ`85hEcO2e>ht
%#3#X-r=`U@(6r)^qe9asi`\Srl#YqRq($iTVho/F@7E=)^126\Njd"HjB()fFN57B.iEjd.E'Qq\`L.-M(!J-`;c'9>!9AI(rZN)
%`8]W`cr?:e.)O$W?UnD'J/d>jZc=NHf$&j-R^$TM[?u%2L(5p1D=Qng+SKM%&M!t*[-]r,$.9Rih?mdcU_-`q#8*8hRSB+!p"/Xl
%^4XBj_(j!/0CW4BHZu]#l'oE)F,>a[=h`7tO1;q4hK1dJpcgGrl"(i-=<1V`l#qW.,HrWm,_/"GRB't+?ddK.9eX9?eF=6,oi-%W
%Vnri.??M%0q,>4kp#WY&dLjobmh;)L>#@WFAosf)<<%okI`LW/'*SVXGH#=+qi4%+ftM8UniP]%,F:BK%/)ipm`FWfL0ef[H>dE[
%_DG_f@hWl_G8L+$7uMb3TD&tid9XV=i,hoBI*^>pZ0fVoK+Q8>[.jo."P5"A!l9tL+U;-7\cRFr.B[p7AnII!i<V,!i,ql22?gdc
%ds12oY/t&;n4biMD:p=d1sg8-J#QDRg/_>ui'5LS#>Il`\:q)N&f1]h:YV$?Wsm=>KD)[NB"JX[=#%GnF()8:qUUH:nV&J\VfeUk
%S+c38NeX,nq6XZOW$j*IB,J2R6'dE8E=bmR4Sg7M[D`bcBOcp6fs6/p%%=F:/p>oLg1^a/fP)!d@)kkBG1cYId@,23"N5OBr'kYH
%"3(Wkb@@s`kBP_!J!glK$OeL?Ds&qhg:#)VJ;QqQTg'=U8.l&-e7__DY$=`8;_2]</Wj61609+80<GY\&b4FeJN\NX:BURV0b$S*
%aY=4[q]OY_#=;ec$>TDmTai='3Xh\l:G2^n41YF96V+OtG5SH]3Fr92FReBbX*L[E-hH`pqJX;$g]sf,!b6taaht5@/c)5G/u&r'
%M5X6J]3CL#0u5uR4W[LY,[-I>;eUr2i.-T3UIig_2GOb>0@Z&e#F`doA7lI6d`.HL_>EnMPW"gC3Sa]@oM#*BL$bR\+(^Er,<q6S
%dEckbJWmN1`QpslUC<^HAfW3[a#42CM*$>G"4gQIUDmJ"QA\1T48QtN*W,`j<eimSpmR18j"M]bD):dPDV/jV%CYuN,/'UE,@t@e
%bd-n-74it9?a`BA/_=Ea8%<kG<Id971FmT6jq7<*q'7N"N[j8TAOCQ/p\RJ.Pe^(3qklV"-moF%a\0h6GT*T1\fA7M$6FcZidTYp
%'_c&TF#O!E,cl-;1-ZLHBNor/_tD&M4aq\mcN>ja/CBauoUR-kMulR$>72+7,G:oMT'I<*LI&B-DhjqoH1",6&)Dbk?ca)].=Y^5
%BJtVXHt_@\aN3:[(nk_t4Zm7dUDElT/+8^Fk>o!!It)7t\I:bH__i_XfHhXtLQhSJVMKpa7G(fdMtBb.%$M.Ym/FG48NeB2%#:A+
%om*AsZst5d\D&D#)XRYCiG-MsT>i;ue*0]N*(ps2&BgM_K6O7)eU@BY^YrTjZVNTU4M:rQqonX3Vi:r`]_g>UEAG5MQ9d=d@Y>U<
%/=RJ-rQ^6FD/WO#db4^GI,:q4N"u<rKDKA4b_P/cUF.8VjVd31=;nO!\*3iKe[s-h>_hkP&AD0I]5b^Tj7iP+oEqq;_8k7HE"4_u
%6A4NF;,&`=jKdgF3U$U)SFfIjD(K&8FYR*';=Fdf/Ai&H/^7TWQpP\Gb0/@lA2l2])IYT=/CX@$"oD:J_Xije%B%//P)#RM7V@)e
%DgN.GnPf6JR).8eb0H,^&g&bS^t7_<+iX.h'J#*'^q&3.,a,L$`!D!D/4L<AcF2b&(d9C(:F"NhrT,Fkiu$T_T7hLC.?^H/99uTm
%qh9W8l1Ias[+&&]'*?QLG,Vpe9hOVm;mdJai=Tm%OSk5:&?fNi-QWKH?c0-sm1s='-+GjS(DtAl5dh(WLI5.g-.gQG<`Ab"4He@7
%!LX"%'>.>6Y-FqpkQaXB8_=a!%/X8TRYPiaTI>*d[5k#-AY!^O[oB\U)U^nQj#(?&'jP9pBYdTB8W;!d9;=p\A4?!=@D2a&gs!2N
%9_#3@H,)paN0[$A2S)V[SUFAC$Rs"+q`_NJF_<^[F='0]j"W7RVbThgF&I<j/(db9#,$OQ9uWB\mAI)KlJ,M$;q8/p\sZ,GnIDI7
%9U(N,M_4R2(oh`aPNMi0DVdO$mSsS*=N8)s-t,'NZ+l8-AfK:;5Db^A-F1cZ!0bHIS!(.7p=3&S<nSs"0YU_#!AW$Qi_1sE2^OB4
%<=T=DG+(Ii%ULVMY&qF;]_ME05#cVFcXTiGZnM<i]tImgr/-lGVJ/mZ`pClhhMO4B<:+jr66O8?()6[aRKn?Ts3c&CKRnW1f(2kJ
%54gGUP`FfJ!0edsh$BY+P#3VAd9LJ0B?c&=5;QP+'cP*rQMa]5'YIYl$a[(PDpFXPJ!s*&WaVS(ALRY<*abfCP8#Mf_]1+G<5p]_
%'ip2$mHP\?,TBLLFdRRrF!WeZk6e3<-YI>:QDN0WDq!_-W6^%<G'qC>'[-7UERHOU:aK/0OZC6I0d#&YP"9RN->BuAXMK^?9i2SR
%#BpZ<d`6R28[`d%,r%eOPH?SG/=]B!VsBP[(60u;_mA),4(qZCR:4oJ#gD:_+%t[th8bRQ[mRl9kUmNufdu&-Pdmu#G<f4[GDWpj
%DuG.L/%F[^^hVkFIqTjR\\Ra'a3)U/KCGW4D]Ho>XnZFe\-\6HlG8`$7>PTto-m2a@4;KXNV)1"%<s%dR4<VP;ojL^(!^OL5V.Bb
%biCb9o2am62[<K+g"V)<//`ndPQ0Bkcm'oE%-Yd&@1i,>X_Y3o]P3)0'fum/?JO8m+PR*UKBjTtY$PaPFST>:Usfhu^9X]Pi>0+"
%cifP@^ldb]?\Blj"k3.1Rm:'A8NIB-;n31(eS.A71rC!W0J*083\A4&<-^:2/F_ahBDIePO,M;e.[C8hD@f_\1phhs+-eNc'.>#[
%M9?)g>IF8)1KDlP>e[<C+lc9Un`;En+fC(q)QrETe$%n=3,dFu2m,R/(5s(`A[;YRif'e]1c3!6BuVINdL!Z?Z4btc%H+>l&RVZr
%V=%YQ%)H6crXVIjInp"=?iU.+GX;*WBk>6lb?oJC-Ptu&%*uI6-64$p`(hN%K$[]@KATM&+$O\AfqeknWo^t!:hWDXned7:-]QM)
%]3^9^ltYGSh<r32mCful!C9%r;n-Kf,P#tE].jp28AU7a\F(diCEsb$cPuLC,4o^KiVjuufGn/:=)f0o>7s&m8S=Pi>Vuhh:p362
%FuOC=0QbTuHge-BJs,E*=I]t=r48R]/RSdDXG$2Tj"S[qR11!I[h-1eF>WSpXl$t8.8:@,CEm.5*XueGBd/dr-(!BMWmq\D\f/&,
%(:rU]^%YJnOQ"+pcH>c1.fmVCWY]:<^?u"hKQnP>OPKd1;J1OL8eC*M;Z%Oj%l?_c>@AK@9)7O;MrI$H@FV'q3EGFl9*rS>FcOJ%
%=_SCpeK>QrPt?e'Pj15QCQ>@T9J''e8a@SF/\FoXloZM926#LhER&b).J6hcDY4VEA6%[KNC)h5Hg*0/Ls`h@"7Y)\TDrU!@28Fk
%=W<(\A*PkP]AFdBU^2St$0Pc+0O43c?DQkP;J^G6`[67KO_ukAft7%XX2og:mFJ$9TCSbr,"Z%QNlePLa7+=ekk]#[V\f0UG8h:P
%'oQ4Cm%!Y>%5nsElgt,!XBOG%]?5t4c5%S1$?8s2PaM,:d(kfaJ\8dS=l"IQ_miP$U_o#k7H]b/\O2lkX-N"+TeiabLOO#,.Pt+/
%=ZL0%er0mp!/M()dKAa$madK')MG+ocA9.JqUU]h%,,AD.kRr^%%,ZG'#W5X2AKaDMaX?TNbPbAa'R1bn:n*<L(:=0+8W-;!Njrf
%"CT3g%K>[RRcnrWMqrI=mGt.p8E,m:aYA#jR8_\"2lrWtYYZ`'@TN:T`YD?(N#nWojC-![=M&'f4>_0YFSBF5ptg#fEhF8GFf$gM
%Du`[&3FCBb0Sm`0*QqVoRnRIJ0QCO"n%%>)B\@GnE<3@[q<V?Y'1\4e_CeWuGchLVk)J?ie].)Wmn"qtXiL.S*,tM3V$dkM*3d3G
%BU2f/;J__5TjfH&&=-L[)t]<M5\m@<+!Qa;U_RMW(EfapcYaHh'FLAtifFrta`0Y\%_\YIAIVm/gtc)O^%^,R)iud2p'YoN)d2A/
%2gO.6,W([<Nug.0AOrKe<WdG$.H<%HEr6pue@jasMjW%RLBDq;@n(0e!hJBgCN^+^LGl<-L;'`%+1ghAdVObp,"3s'=ru'78\gjZ
%l*<!(N_0ZsU(_7r0FeAeRPiuO8l;TcDad.>.d)n0R&@q3%RhRRQSAlAp4[K[<^ZUWGCNYMmiAkL61fRe>d0+%"CH@4*>J.f%*^K[
%8<M^\,K!*d@qZPX(8ltFl_b<:/959IM#m1Yq/h,tV3d#b3k$V?mMHuUm9Dl8^%<KjHL<:4Je7#b\k_m#M3(BdjVh=\">98<iRSLF
%_@8;A-^M+>,B+</k#c*$["kpS]Mfsh,lB[B%E@D\>-#+V!u>[5YW"BQl2>nr\6WMlr6G+oE10^o9*%K</GMmP7(B8@<G@>9SKRrU
%j;Z,9#OFYJ\Gm9-!N.4up*'V$Q/hB?S!m8,dNc,/m>g]DZQ$K))LCWo^3AAH)j&'4ZXD\Gj9cF][%&!O8UdN\e17_4)2-a<<i.%-
%[1,SC3Q:>tTPc&QkIdl*H)5aBTI-EH8qWtIhJ76>cgKAd+,6A4EUTI+Gl]9ZFhStI\R.90Xs4e]''(5H*=1R*L*Ira.+O]ML>gC-
%gcOg2#.](k=_PLiLjA*lT.cSg;jbXMM&9H!_fsXkT]4MAoeZ'X0'^-fB%uP*:UGp*jY$&q%E;a`bJ5Hu[CB@O?oY["UL0'!bnLSL
%)n2HVTJ.rceOkeI\Mg;jj!k>,<%N$cjUIKq'Y^93l_gF<X2p'fgR+5d<0)YEQ)D_$&N8A$W@3$Dg=ZnonC"-p7RLMV/*d+J6;Gg1
%JK)^(@X`r;<kp^5$:D`L/N'6YL!f\*R^dhc]!@3@kd>gjYS_N3Khfd-o^rY7ief!L<M-^(-3_aDLo*$a1``>W07+9*r[Ef][Pb33
%,A+@DnGjYsQ805tE%.0>6LBf\'Y,0oIMt8SML=X"T?30/0R6WXhes_J!X:9P);7hQl#%YBMG#I[O!@lsi4A?c3,(G&AGm4/Yp:4S
%<FinXG!6u*6^Q2&,fI?7BoTM^`\ZRkkk]#[V\f0UG@+.ip;l2:lgX5#%Wg3O;JN,XA.5GShV8s7',^Mf%430U-J_L/`2n!^-Q@g9
%K9"JYjC-.NA*o:r4kU9M5Mc9@-,+TY7YEZ^q%\hPA:/fX]8S27U!;q-G>+&gL0M2u2!:H[F_@]L:D(p@/J"Ql))82jV=iYQ\GDVh
%4;=3IAB/3INcDDZ%:)1-*Eklqo\E!ua8bql3(mOiS8NY8Sn2el+>[F$L(])3R*_L<G&[Z.9=r@YS/2,sPr'W(4qd'WWJ7,KjAfM^
%#4uXkPepL)8371DmB4hKDS=m\#C#41T_C(]qm>j0.epTKVe)T.F\#+4k(;-L%>F4gE-H(6(U7AZ#U9?F.B'GO+b2reCeB$[*4ZN0
%K=f01dR.AK`lpP>]S:(-.[#0IRs6*P.nUat*[34ghBnQIJmP+/2%,Z&5:"FhBaQ=B5j-9A'[UaOXeE7Bfe5_+%_[fsW<TLImV],c
%hYV'jEEKe[[W*T.gupT'q/C'hI08O<%A[l.d)LgC6H:e5p[COJ`b1@OD92&)ZQ$<tK]3O]"F[(BY<stB?<@:MNLf[GH1.p@![:QB
%I,*!GMC?AVpf\82kINfH'+^@=G0.*NoMR"@94bedRFB;oZq=TUD'/q,H>%jG\6?X^^5_/fir36IT9o9.AK)#=iTrsuqcY3gllKAE
%dA?.(;g?V*clOsFL1=m1XLKlIi]l6B(q[_:jm=M-_+?BmZ,gHj%^C2tnG$naqIT#iQh\pKqbS-*2E_3P*LU9li9In@Vl-"RKI=aq
%6)h"6)<KLD!JdZ"&RhV[Gp66AnqJ1.[i/[CA6ii1=CSP>Ufb0;W'%G.rA=/e975s6c'(=:(\p@g&9I;fI=nF!XV$Vc9EPZe>&`ID
%KP8<gKqVGlOUVA>r+Xt^bZ/2lXS/"QN#cdO+W?8,cl#'Z:qL3j"jVH^f2"bh<fmo@IkC&Ig5JC5'E.5,f;//gOni].J%"T$gF`G(
%>A*9iOU:PZV(JCa<Ed2TLNeAHc'MP.cZ?-H9`*JTorH_,0C>IR2AShB)I>K87pk038Q%&q83#.P`O/XAg4G'g"h<%8IK(UV!=_]8
%@Kf4LYHqDcnHokQ*X[QR*d">_[::j=V0FNB:IAbqM%BR9L`g??.58]n&Rg0]d,sii\Gk?QmQ-7n)Q!eW.m9DDrR;"g@Z^[!Ds@P]
%98uC:bE'&dGnM(-IN&+J76^A"7O8QUcs/Zof,[%VEj%$SV9YCVa+Y;&7ADp9P(&Cg^0\RM13I?@&d&nmmi-Y127/9H>NVqIDPFb*
%qff<'?JIoWD*ZCDR2sl@YA\C?o%`1#0WqT4cg>Br3&iJBcnh].pBX]om]84/G_>^5&RhJ\#@f$F89J[YE-LE(EB&/(f2"bX<fmnU
%f9d]4c"nRRbPRXefFMq&F;iru7Q3<b:;kqj9WkLb$--A0=%E2PmAHLpS+Tfm`2n,G^0ruC&ORX44H)3=.sHrRK&+`Fe'K0inY,,(
%-HM1tm&U6<9A)HP$s*Wm^/,q)A*mBW21U)OFj9+^UDrk[([QkaP\Y?cZ,h`HmC3]splHtF/@&<1H,SDWHV#^?)nLJ:qrpO5o\Dt_
%'V$`3pt%I7Moo@eF1!N&FCB"#@kZ#h<7?-i.I7aC)+;0Z)n*)D7i6:e"Pd*)AK@pX9s!/*^6@ALLLZ+PaJZc,RKAHgM;WuSdCYG3
%&OsPu8JBGWnq_F%R3@G..1SN:NaXS4D0f6:oi&fqN"q;G+p6u8^Q_**_+!llYt3I[M7#G=Z;`("d.Pl?:G;:4ms`q]'(Pg+\2[Rf
%Y<.\r2]u@d9ugi[,pK`$A[s+[jVY0OD+-CeT0g=MQZ=T3?s``ROs]A2j'h.`/@(]9=015_QUDY'U$JV]T3gSGhtM7q$C;/siVEN>
%)r-ZP#<L'ETu?`]2T)Y=6ZsP0n\b;uAGRtlLfIp&XR_]U7libK<eV_`_.%B=Y'`Mga[LP!ebWk@c78@Xk;FYsGUAbJ[Ca7R#@U4K
%>6[[=oH?`e^+h2*-2f:)_sO(J]Q,N@!Lm]10SF(KY/HJg4GN5G<pH%i>.f:LVkG35aG2D&&mH2@l"`D"Y$^)E.Oj0\q11=!7],hu
%)3A$m&UR*m0b$e2lp&J#H:T]:'cF9)SW5B5YNL%s#t;!a:T-FHO((K.:IBn<OUlki=nDftbOtAs-R4"#&VX.#Z91gp$/Q$-ZPX`j
%k(LHcKO2f2GHJ"orp[M^N/kgJ.P=&7jp%&r$l?L5)p$fcF`H$FTU4+*WIYEdh=0DFqJ4$23BXVjo'h/6rcL`3dUs8Od485GTa8tb
%9t``+$.)=:"`(ZBi6GWkp_JbqOOa4@aj/7D6(+FVF=JaieE`40!,LNhiU4]8m_-@RM#ZrDq/>lFs81]'r3--Gs#\(_+T7'?o^UtW
%91daLcG5OV7S=:c<GY3XIaJ13+N4i1.8T/MY=iODM!.uuM\:V=-kqK4gQ]A&#*Ee3.*auH`?!Wf"uf!@_hnj>_E""O1rG1t7>28j
%Yk!PH#U4A68gt.9Ho$_D!NRJW?6:;aZ;/Np,oE(#Uluu.G9DONR#G1"FW9Dd;p#X>,G\Gk<3Xn\Z6LH4=2L(&/V!Pu(AJb5j9nTn
%?;)K)il6cJSh5F*E_4.]+#(3m^_VLOm*M6SU[\b%[B[Z?LZq>5%.X'Ig*'CT0SF504B;G`#7CU,o/A@F0Lk1OKi14O+5sWH-5;93
%0VXc#I-i4.Vk3B2%_*aebmBDIRrfM:.\AbB+A>MJI,/;9?QmdW=U0ZaTJsa#.rshWONF/FTVS`\!6PSYX)m?uJ=b7_$U6.tT;*K]
%b,JH(<sN5`&B2i:>!Q(q381QuUb^S9,'1GYN'?5g_hO7[-JM@%bEkPKH=B>e@@0UK+CCBgG@s=*4'<W+Kjg>@#UC.<]0]u*O]U_e
%b<C8,8]/l9%"#pe((r+PQoAfGj=UDg4a$]=abmpLAsUMXRfBf3>rNsI)#jY;!55qSV[J-i^+#7^,dQ<MLFJ.DOf"[3Y1kNu&=5L@
%5Ul.rJC4IhD9[`a@PqqdClI]J_a$bg7]dodld/;nZ?Fq\f+4"lI8JE!J\K``p^t(VlR`Z<O@IC.*ho!?*AeJWE)"ZCIQS$=S4ct&
%Wo>]EGFtmI'0c>E-"r%TiKTuoa`1Pse$^%h$9-*-YP_lFL:&mYE)rM>n]A<uZi#U"BR05S@0$_CDKIgU't69pf%6h!"f&*)_[9^#
%c]kDAgD;iU0UWRa`_omYeAA=K+f=Whm+JF:qVInnf@@,u_1Mk']Oa!S%<=o@lhOEMOTh!&3UeHibAFi_1Y-7G*phM$>;V'#B2CQf
%gcQnua@!S7YtD%/lK\Fmk.8)Nb-=^6;\RXHD2dJ=U1uQpF:<4lN-PJkO^\\+]j@rPY\_/+U_0:6&Jr>SE227_KO#S,m"s_&]ah;7
%a-*Cp+&X#%gklJ9W->#;J\/GJNOSmN9e3)>j9pKUj=*;.A+aNZ-4:o[0B<p5=W3ObOCA?R>1Ni)<,>_m?Q32N\h*Iid\KJ]?Jb/T
%!SM)mh+eHn5aBL[[<+7sC9M9TH]@V$m<Skl."3-H:gBPrA`<"][jonnh0g^XYpS0=^b"bQSn:jp_$Au4(h!%k<+1)a7"?Z!H._]B
%QjUmh-tG?@1K]C)V*#+Crc(4iTQh]*a!%ku16](gm2oB\*:Vr3AG,NHKefXhbWeF6TNRkF"'tR\`0":6F>S*WMgO[Ve+@,3bA503
%ZUp&.SA6+U\d67&B;DEFn"_@jF5/n*Z'J+2(ub;Bj_jpp7FeLNS;Bo$ZVV[fKKq&gQ(LFGfP_O9Mb(,df+1/lc;n1;@^l\tH8c2m
%=<+PI*;->Y3V$BA^#%Y5<h;)l-5>/WF^E+%FCWgQ5K(]fWk\;%MMkP+I[%sOP7jaF76iYL?"">]*K5um(8h38-TQ9_#)I-5$BLMn
%ITYtFg8+toWjQuq:h6s#i)oC+%S0>8[sB(#/O8]-^Y>;]V7lWs@;Zf:S-rROp.B:X5-nt_,tJ\U6i3Y:1.Pn#7%I,t)*FB;Vk$@(
%O>'6lEhIt.E'cUaIO7O=(=pm3mP>\dH.JDdKLZ\DB<`D0*tI&3''YG.pD]f&D*X;:]hr%t\M*JRMU:*`YBT`;GiS*rK5ZTuNNcKS
%Y#^,Vr%(FqrAIV`EZm\.V96V>N5CZ.,+oLE;[XN<SHLHFmqClm$?ll(.8Y.dGeNh^+kV1d=B[tk<^+)lI!l88%&MqFG2B8WkbZ@,
%Dr:EMmXuDNhV6))lS,"obh/3rhM(CAa_;7\d=uN3HFNT&5UGR2_LOb9bQ<kK3-0n,T+jh9JHO$ME2'56!,Tl8/>8dP^*AJi0?=V2
%,]nb_;HF$m5j#"cScO\5DQmf:7TmkBJ1b*)\/Hmj^=l36'5XQDB'6QETaQ%UmndTXZZ"lG4*+-L!'d]:P+MMm7jfQ2RuWF!*[C.Y
%(Cr,R]Z3)(dWWLoC#N\rN4)j>L9/gi2B>;gm!59]\gh\PfsNkOMl!h!s)@^@(&-;4LP_9>le.BC"jpo5*9P;-@2qPC(Q,TIO?j`G
%2#BO_=b/(3O?WAC)7Z^F)M-9Bb?M,LCIJHTZ3m$/m)W]AdSOK\SjXJ0?E,"sj@B_DfQ>2nd&o3ud*'-uLa_Wd%[sso(1O5lqoW*+
%>s*XX@mh,T\',*ZJ;!I135s@tUm[YrEUHZ@J7a]\SN*VYp)Bt]0-H1AmJpI5?HXr@+T<VLOmrdj$OY7k!t7+\_q9eQ<aj(,NA.;:
%V'2p]2/N5-[=4J8f$/t!L!]NRhubX:a;m%LJ<\D"Lc4?WACG-!r4r6H0%jW+6>j9u.\?^kFaS#L'*:5rp6UGZ*3rh?bcF6]J]rXf
%AEn\,BgI+^;'=M?p(*;AD3UpWaoO6l!/5_$HHO$Vi\Uf"@#"(`lh17_hJ=sq5]_QA3"uE#J>nVU!q:'&_PBLf4.RsC@]3:mjG5_8
%iJ9m"M@>cslL-*qo4?'McqC@S>%/0=%o;Ha`o8meobo-q;.uJ*,8?&g2rVF$CCm,o%9u-Qh,qY0p%N/JUlcSQ-M.bJ&u`][0d,%C
%&.u@X:/\b58W8><k_&?:G1dn\TLFn*#E9#A<']U-<<_W;Gk-W1#Yutt.d_;F";r3^k>sfWKk]V2!.e!&;+Umc.VreY9Q&El+;p'W
%.0>%^2H6Cu9>Zr/p'eITcSXF;H?=P,'qVg3'f,(WqqQt[HZ)8m1Pas"N?oUuE/NZ:@94rs+(ZtF-37%Q.`i6l=^[VcZl247Bj)o0
%Q-V1Pd(@S+k2>PXENR#9X-R3*Z5\b:=W1";0**\9=u#?"#2nAW2&Oo64]]UhKqe1K_T(rb:@Q&n!W>.Ri4Xb=LNM1g];]9"as1Jd
%!=;XQ2](;o$T<*J/pDqUBinE&IOJC/i-I&E3S64Ig*n%H-++hV]GK$;cRMO)._f9PCrd;>@i!R(Y4^kU[<YA/AtiskY!S"qn^4E4
%jpW%qPH]oSVbWYG7H+Cm;"L-"GVj'^,eh!R@atra>R,<n_C/8u3ehdl@@)BaVg(O@^0b%g&u<A9&Jc3cBN0[(A+,CP]5(3A#1We$
%k@lkL4F5g=[!bjoOa=jb[?t^l$d`Er^2US?q<YK<0iq^nhaJi/p:;$e`r=J'f/?7B2&*S!$ra7hZclKa@rWh%oHB[,d&D8Y%65qn
%rLp]]1[C,aj=98kacrDY&phnQ#S[t$:(HO?1'7fUVKLu&l$.L>kJSjQmu+dZ<p"ECpMqM1[DIoJG&!)^:9kJX9PI5D3]VG@FR"tM
%JatPQ:,@2/7]A/mKYl/->1:BjA'gA[@SW?Y<%;:8O'8-QJdYqj[ob3S!Fj68<GIgNoH,^)pMmc=/7^6g]<"PmUcc,2mqo'*=18^#
%`3g'pa]`siHo2RJ50c#JRLU9mk+3#qR=HYM81=V%+r(l-4F2Dfp])d3I,,$5mA7U4?9%mW5.q@H_X)Ft4D;/fIQU'dKf29Hk9PCo
%c+_!+FnOuMF`)sB//?,pK4qbGb88m*E--'d:M+EtA#V5`;^<#.0/#'GL8@Vl8lQ=U*]:&=f53i2JYF:56lnjA[\''fONh>V,`$k\
%>tm;j?QVk9%'14/3"!W"^]jOur\ufuCV^6tT'i>_7R-KAG97sfWQ[HUX)d`,fM[l4HXnG,`d-QYnbY;"BnbI1n4q"oQQB;+aq0Q9
%bcH.^X2]2E6D>KdSr3.ISH>7)2CY7'L0ML!eG(:XEirYj?&L*Ph59n7NV\5fr3`%+?UR706S6o@7^4Qf$&h+^QG?<F7M0cJCH^rr
%G2#>Vc91ac\)';Sr!oV3?s(Sq.1d>lP7\80bZ1l:T>o;o%Q1TM0F#.'@tBWNAlCC;dV,A7]%VC0mH/ZejIm/\Qg8g.-?#\<k7D1H
%qGs'.FX$od98;93H;4hrM'poCJ^AVIfh16[Uh?j:lEmGH)Mi#hG',>T%AKPET7^p1occ,fN<&Q[4Uflcd[otIc%X`H.1nk`RF^cD
%94b!&^D3mdJ5.)da?o."m9M*$k(\$eN']'O6UUrLm>m$u&,9tKKJleIGj4mH.TH0S,ZRD4[1J<AmZ>=Ea('35M!A[`YV%?&guhO$
%r-S80d+:Fgk\)j9-C0nF1]Xa\=aj!qhOcQQ2#":SL@GHlAaJdC;1Q$7P94Hm3%'?3ENO@g3WfRVk)!i7`4IE."qI-pmm1j'9B-lO
%JT4C^30[_G*VT4.]@79X?mcBhOPT/!`nqou,;#hS6cZr?31>?f3n&Ina:;fA44<eQM[WS3Y'I)F/]%Rq^42_BYP"o9^!&^FDD:P^
%ffroAK[.Vpo0IU,$/K93#3e$QD$*W1VTklU>/HU:\M.-LQ],m5m"/?i[?2\,r7K9KcQJ4gi9+ID(:SU\c$OdZK^]G%+0Ou3B<F!8
%V?([d:3lVFduOrg>(_'?IgZ!0](S'nk?smG/e^2;(>=K/hs%@u.H)-I'/Z\FW8J+eea"Z&+):A0))k8e<DV$%_"V16`8OiKQdU1P
%N02:;4uaRmF=Wp'=ANR:L%fUu\cd/&5U'>)*&dhS)[nPtlbol09j5qn_\J42$rBA1DIae]RC\e+j_?^i<^eS2J2e&g79IJ2#li(:
%LJ3ENNiL^V4LfVU]\&eIHcXUuo7P^^QERVFiuh=%E(ra@9]!EK^PI;d)l7I'0N7YL;:f)\MFI$kd`mJ.2>C.un(bMqGi9F9Dc%C1
%E,3_CpEKJU?qf`#2Q:P5X=KGW!\-$-n<f_O5.8#m(+a[b!P>Cgi:)-]MVJKY%j9BG]o%O?m+fZt&uu?+SMmS-,sZ5*]rOqQ&RI`5
%Y<[_g2S4o)>@ZS^]mA=V)3Ne_?;oZ=40msfY2dN``6$#uh5%YK^,i9Sp(B<>_7/r`L7FI_`%NO2IOjo0dDN]7!`Dt[&V+mX:_I09
%d:*R4#6rBX6TDC3I\Nl62])=iUG\e>aSm<?1>*6Z<#9hH$PgF%:FC]#8>d-bI@.`SEb4u)fm1?nK&jij&;dFFo#>7^&rN>6SVR+%
%`$XWj0N/!)r5i73($Ae[CJ!S^i#3!s1S@)l!Hu<ggb_49gCFr'D^4ZPVb[!.=!C]+fsQCbAY]iC%+*g2A7XmB0taBW/+0m\5$^X>
%5a"l2nIk]_Yr^KO;>!](jCMkH8)XVc?,ttn?NDt8S[/%^8tiIMg`6VqYM!tts'PL!*EdDgBu399;A6!=Hifsge2<.qp1lO8p%!/7
%!5V@#DXC&uCtm,`M&/H?,!7t)C-9=g8hRjGd.GKc8_kh3ZuJ,,mM("4]sdD>S7J@<mQ7?K`E"rI="[Zci(i'o*aLrRRLLS!,L5EF
%WM(3`WjfN;OW4^(&D`1qr\F%>P&rrmQ=!#P\<#Q-d3P_IJNM6eH`T/f`^[<mSaP6Y`lE>-1f]Nm_^KqLOWSc&,Pd).>%fOIm3[J_
%l;T7EO'J8mR%r@V6!VU+V,VqV4;p[-er0b9:_!lY=[YTP)DQBGVAq=NqZ0V:29-Qf@b%`Mm\Wo-68>BfIBg^`j5d^'r$o/=C`CD^
%;G3tO)<LR>FmHuSF_^S7A_)$"#VhTt??"\i"E8t5iGAm?Mf^`\Ad))+cJPs*3WFKr@jmRJ"%>OGmK#Z(?^r$QlY=MT*A24-5jt7=
%mbf1.&gG4j$#N40em7061O:'*c>&s,f2(#l3MsWrB"hSa;!dV6UtqY^[3?.CDN/F3[gqXZ9FT4\1f6feLU4Et$C>;D*_34P)j\%#
%,K]>cEH2f;?qZ69[=3Y,p?!!+jK"j!!A'28*j<!sqhDqmHHP`fj3.2MItJR)K*<F4jbsZhrK)ZdJ^]_#MbC_#P)Iq^#J.DEb`5se
%f?]:nT1I[nDJkm[8u'Pl8;kd\H@e[SSPGli[IJ*A[lLUB`Yu/g&+Shjq]6O`$?:D>f6'1,EL3jTUH]W]$30LZ_ikSnP?sq[ojd0n
%BHX4sq7][bMKUmqB9@P?4^JpKEMduO]D_@$4HUG6/RV"7!]rHuF>Vs^eOmK?dtqZ.GsD]7GqHBn&,:JJ\'q-pq8DmJD%34)MZUHu
%cb7?,QuQ@PbsSqMnE6X\W+J2FB$ZgVpKK99DhMheUcG=H[Z,QTqT/V#8ZR(S>a7#^/'Hb7qp;8"->#U-UkIR1c)eZ92U"[e_E58p
%gZ+d04a%.lfH^h[2Yo9HZ"6`o&r88='3K"*Z$[%C=fpHc5HggrM$4:?jGKHa\lA^Q/a_Jkq8Bg3$Uc4M]hFfp;@WN]*esh_Kl)^L
%0L<3cLZgM_Y"g@I,ZTjfcE]$KZ-oUGhOd/N5ZC]mk=sl9J)&<G7_VErR^e^<X=ASSb)7!A=K?YlkJ(ec<NrBd.h[rGOo$b`q\bi.
%UglF?HH#_P1*hK+BuDWJ/CA?S6*9#Sd3B:>ERStQ=4g\XjHnRnjFtl%bN5m/V0enr:ZUtr`e&6'Ab<%lF%i)Uq4]F(0E6&.e[^9j
%DT.I`a?:\@%aLtICl-!S=3Q=08V/`0cXbjK7$@")Rg7^/i=qndVgWm2Ks]UMF76#iTZbu3)e[poR1lp>;/A(<jBfImA-_`lDhrA$
%H6852c7R>AY9;TminU"?8'VD<kh&PiZW1unK10sNKhn`n/+p>3L.:Xhae/QA9#MR?(6Cl2$#3-se(e=,>l_XUl:'PW2k0?+?,]#D
%:38JFb3cq>j2YbB]-4hHir!(8D2e_lI^B$&LKpmu&,.,^hGH.tE(GrkId/oZ,nu!rlHh>IK403p#'oT+Y59qD+]%S\[l$Zp&_D*8
%!6-`5Mt\$m`C.^1l)b#hVDoB3gGa3<JX/L^MFT\Mq101EiWI)Um9Gu7V!jA>oVFFhr>ER1m.UUOYsc@p%JcU5ZiD.5bab$)*A_>n
%0""KHA-\![ZcU)*hCLF<f(*2i0V*CM3_$/)Y/,W#_jAdJf"K#tE/R^ti>J5H0D5(m0`8*]=tLN@KaH^Z@Rjos/6^K/%*#0fip"gk
%N,ipFK:06KeI)X$V$\s#i2,;55$t\7mme?p9b<+VrD8O\M(0]5N*UskC<m!D5Yfm*5$u1=U#ssE9?S`?%[pXVD4B_d1bA+Z*1$V'
%WlVETE.>bgK`]tG!T=@50uTDilBJ0)b@T#l$#O.-kP3c1@B!ZFmiFb/l7UDL>u#E'^0-SOHFP)3Th+*15"hA!ma\aY(7f;l"_ZS<
%kR6hZFQB`nkBUO0NroPLKt?XLF10Xo#3#93Os;jOk(D7c=h",ugVpGin<t/PBS*;'1&n;F5G=<_T/U!EO,mc90/9eRa:@\eJOg6+
%GP74AIg,H(s6#sC5+XJ/LnZ`Hf;<!@k]<uhBoD*PkZLV%.+](ZeUosrS\%[c4U(H[D;D!S7*E0]*WG8:E\gm`=J1H,/2<=+@9B`A
%_Fm%h'u3JYKpAom+#O=r:NXtb`?ga+N`YEt>'M`rhd[FS8[,@r/PqlOcCuD5)<c,qpVShT^-<?pi%n");Pgp1A`&QlZ^g<,q\`sG
%.<(!q_c?"V.[\]X5S7O'Q3P<L`79j`N:(-?YAmE&C[@s0"[D]u'&cc'+5f3T'p*VMa0;a'=t-6(6Pa0'4.Cj,\G<W10pWjY(s<<K
%/tWN9g/9LtW+'smB$&Me>BFZXa!BfMBmOO45E<qL]rW[NiBGCP;L=?.1(HGoKsGlBC<ka1f7$%EbfP&-.];4TK%E:6n*/a:q$N]V
%rZ>eb!r;J4*$+2UKN<Q$[@I.^;;f(cGScW69D;6kjs?0dNA(HE<-;PW4eE!->2?FiP!uX1-:,+G;h(jgBD_]6MU87s9XoJ1nd3a\
%o5Y'MJb]:;<9lFSeKB(F@LhCH=%cUUQlpVJq_28;"iM,+-dlSars-\mIt]<Wc_##()>tW)(i"-peCkoU8#6%EW*i!g5Uf'BB>,Ai
%(=qjZb2A'HJ5*F\L/X`HGmkm&p_DlG$kc>hs,$kXj'&^3%ZX"jpXc\EE-,E0^SR'F<_V'Q,'p-)[(2q'>5ni=RsUi(77:Yjq+sMY
%;P74W1SA9O`BAiYbu[]keYaqD^dV3h7BZ:Khr7nGO,@%0A9rY^8JGWK\n"+aSg`*O/M7L"IpD=m\jN-PI5TLlp%_pB-.$CbeHKN>
%9rF&28rgXX^m5n%(Q*b-DbI!MQ-c:nq6gu'(7V#8r\OC+$0UYSNaa_6bWU`4C;sWdIkmttbqR9Sm,n]tS=m_=QP,3b9]AcWNhnnT
%!^jun!&sX(XH+M]U^4Ejn2F-4K);;!"47Bs"6JfpW)u$(MgN'G=OG+kf4:%AmYY(UMD%u9g'DW7(;'8r9rr7Hr#-uEhl](g$DXfL
%S7S5=9#'E0aYfAY-H5)JE6%gI\;0PB<;3'>S?(6^r9oXqi0kkpj9%h;.@^YpB(qhQ+ggXqR4)C50E@[#TGWgW4DeSEgJOT9F%Z7\
%fp/7W&&):-N[T7@0*VullZmV0,gZft.c+OReRar&Nq$P*IMo+%_OX>5Ve,SN4UJH\V.K;^JZc$e3!p[8d`&j%[1*3$+djW2+<MH:
%O%5^m=qEZtm4KR.UV(+3.J`K2D<aj;-EpL^FWY#OR^Ye68>Kt-fmW))Ujcc73qc?+ooighG`46gLHQRbbAi1rMU3S;>Z*Z2MSALT
%^aa@J)TcCiR34o-/&%AI2!"frC:`@mj"kd"70;F.m"K[qRIA$&7;N*#<7n#6(geEW!YLe8>E1U7Z252*<c1!I6`d&8o%4W2f'f*l
%%<[dJEAi;Q#:W.27-\3;bFS??AVE5B/*uIq7PClK_N`;uqmdtXegInp.NB\:<b5%Z%Q+SNV'icuF!`?W[`"npBF,kh"OSi'T;-_p
%R+"pkH--tlYVPu"eZ#\n+Ol>_?euV-/9Q!,s1FB=:\YIr?6FgdQK5LOn8s3=?h//YIgcQp/O'R`41CT%=?ONuIA!f\`6;15^EqIL
%J`?E02BQ-<R-8eMA*LT/?ummbW]5U?Y91H!\@bub)@"?n)B0@[M'Z%N&,YVl+kQD?Mn#,u)dY3<7:Kl.)U+Bses!4?&3@mT<([a"
%c[IhnT6!VtNI-UZ2[:+N)K0W)*De+$EH*)a:*,DOrd4V5DG-Y`e`'JdbsbbR*pD4FNK45VL:2*=#cEQ5PDK1nQ1?)1B3g/[^j:GL
%Ymh5nWWPa"mI"3X?_X1hMEarj_>EXN!J-Smj_2S:Yq'pj)q9euMCso%Z?E\8*ZAF4A`Q#*B(:WSh'?(R?]@d^OHQY?\.cgMTigJ"
%a*PnDn9<Eta*KsHa1h;A_D@n?C:Tl5k(0hc[MEr]q[LKE@G8Mg<ktRbX:_tsj>%_=:IZ'\^%bempu[",4'B_K#>/f7[57cCF[5P.
%:7;4G;%u$&IE-:F+46kd?ecMmK'V(D'9j(R.\Ak(M"jj%'?r]=5JljAl.3D5KQr#F;PXc!A%AH+kR3WIU_7ruj)hgP^:qoj&gJ7L
%aiE%6=i]@I4jr$#*9geM!Ts5M:e-?*)ts"K0<3XI3Q`)eReF[%7$Ke&a-m2Jm?Ku2qIP+ua;lR=<@ZRWe%@n=;jCN_p\tk<h6"Mk
%W.AcO/.@^:!JLTk0DDN:83=`jCU5T5nP?Ck2F[=aB/l]%E0UrU_`+^p1b>1On-c@.^\=GaOJrb3,P$t.5&]g2L#BIik^a(6g-Veg
%@<q(U2-Jh0^GP*Dl2+ipeEI'D\l^p%SY%d#WT5U-0m@Q4U>ejoe/0?,m:l=<-q]r>"%"i'Fael-Y2'80')JL^RT@SMpYZ]SV24a?
%`Vft!+PpmDq]VV8bd!elf,jO7V"W?4fW\4fZ2D@QMJGNd#BI'h1ppEsbC4]J&>T@%0/f:W">Dg;f<A_S0KrP)-5\H\V4g"L+Cq_"
%a^UJXBJ_2V@%9pEjtjaV8Y-QtQ<,&0Tiu>k=F6\DmFa8A;4+'nm$/S+_]$m:Jjb],rlZ+jrl:U6m^eS/qD%8s([SXnVuC15S3QOu
%.c8&7J;WAS<+8A$#djPUJ<4>NmAc%Y[6u`7e.`c60qNGMTes+d%N3?t>Z_>TJ9b%:%*AVUP6:7cL<QO9Cl=oYi3EI"er*OA6-%?8
%=6*[@AcTNIs'!=siI/;>q#H\qeaak+Af(&UY_O7YbigU1h=L,\?*YqO(@_[jmK=,"h00eJpi%#T>MB,Fe+MgjZ4:qi7O<bT^f.Oj
%P"a;LGr'!24knTAXIOM*7"!pKLY?]r._<0KSCD_3PX%ZD6E.M'6-dj9e=HX4ZUT.AOR11E8(\32(V!4%M^@(0*Y)PddPMn(Ma-UB
%D904?EO48P=Y)@,\GU'hq[9Q%K:rk6oU132#QKd2#?rQ4ERkZf8]]g*EZF;(F$Q'bqijM4@um.Y;CMC7FeI)b8fYS[9)(fn7e7HM
%/0/L;pq.m[PJ\'3$U0%`CL#_^1UtTA4(=-Weh>Z%);LrC>pe%+A"MC-%g<Ju*"!YS("%q-</Y$26,XuRZ81c;V/(4pACXkX)s)R_
%?<)^<DuGj@'F_Ag5pu"8an:a`J-[[TY+;t3;#n7="u0Y.G?sa36QkO$<-2PZRd3bn\@d&'C9]&M*taZAI9Hc;`>\mp#%E+0[GJF:
%l76E,h%i_7:@Et5*=:iUVK[8Gn<$iFUS"Js?T[i9TLd7(G:N9cpV6`0:dNF3VKI1He`^3QBj,-5imn6Dg)EK2[:9rl=\QlNp4]&,
%_Hu7>LNkLT5MVOT/cBJr`mb)&-iUl0n;+E`j"GlZSQo@:fV18c2\&07HaYhqe#jc@nH7=;3\mA3+q`#)f0&d@b$h'`iVm"*W?)kZ
%DD0R?<k.T#h7?pI,V`IB/2jkgFG@=_mJ:FCM*%o2]>rT+3!\]:n6"9iW[%YXY7bIsh-m8BMH@.up03naY(!620mT7EFA\9*3>9A+
%WJRLp[c+/Pcu4i&[;Ho>\)@giA%Qh1jGlBhZbN&l<U;(GQRqYA.sURUc'V5qZE("#57\HN]b\d10jZn\0?X/4Va20SiZhuu6.<7o
%c@>>(&uqqth>C7-qV@4E+F1;8)N5tL[)87<GQ8O-Rgpn)-OL<aDW>[UQ=#GW_<]L2^gZX;9`m`_<Z'\#L+=lS[4<pr0Z1B?0OcPg
%!&^:)^.9MKrJeM(TI\h%ArgnlP-.:eat+7m&PD2D<Dh\R0+gdU<1N&k'II"@FWobOk\YN37Jsf@+?HCUWAsjZB3?XBpfp&1T*J!L
%bS'N3nQjOk7TdVWn8c=(4J1!^QWnPfpS"1t)OKIr"N;I\J$FM?K(YZCEK:nOU\7)Sj)o/lTC&IJ]ru2W]#,Jf,qe"YT,_iF)M\5C
%<+h8TSB2D`dY+&_hKmpE(&CRBoQ<V^=raFqLq2HT-R`?J@bX,HddS`j;D,)4P]*\bFg#fTPi8'"21ru,3SJ4.`]65V]C]r'!PUYq
%1GV-G::WeU%EHN9DWp[Ld%?9&<qK1UX-Y&&$;3g4Ej(Q.+eCWiEREda>+NKVmbZ!HP<l`q<@gsAa[1&6D=lga[!4Y_N+GK<rYL,U
%':^(0\8-qtqn&2CKtJsM9g$YR'1rrdlO]ggb$.(@'N+<LI//FVMPgL$YCE"ZF'6fSM:RdHP.o6(=YWd4WF6DfZ?3,IKlV)QK0;VX
%15M[r(@JJ16]-9e`6cdejDI^0:XRn1]F8h_%eZ+o@cVJ.W^PP<rD(_f#BfCIZ7<X\m31Sh`*)gfF9uUER`nM5KmQnQdc[$^%4G,V
%gD)nZ<P1U(?9!Pf/jiFmb?9uJSUB#P`R2$+U-_:8n-=hf2qG%kN7/ZgdEQHR&W&kMj9-qno\L!T(stK\&Y@j"YYi4U]\2^2$j^O,
%S^!=oe#IpnR,lPrj$2K*R@'MJ5oFq3qp.g2j03=Ej!@%dN]lGg3r"oS98nm^.H_rRD?XnV=OO>;=B`49T;iVP*uM79,slX@(PtK"
%0a_O)S0Z*nABUajja$O"0?X6F#pb(s2]@b;!Th&nT.^1[%hn;_\'muV7,LVr,S#*^AeIi/i-J1`B[\Ym("g)-8&>R>UA[UGnKb?5
%4b4GWRLKuA`dZLZCq-NfJ<7E<n_M'^=ZBJ/O@,cV;7C/:[g/kFJ*CdEcd'S(nE81cS>N?cOD=8KD.N8dUVui^e&i,`bhE%%.UhFV
%no?%\.\GWFcZAFV<SC^PS##pO]]LC=[nXm$mL(Q3f:q.LE42=!d654rmgf:ap9ccr3OC#5J@6X$,26B.Ikk^'oPQ?N6T<fd2Hc4W
%XWD#n]@Y`?6dKL*W<W:5eJr'PiS#mUVA,3_cfa3_W,m8BCl=i7S-O[(MX<F&oFmJi<.%N(4@Gioit:E%7TH1D$+c?Id#o7E,#c&%
%=Bo?f%3[&KN%V!MW)mWEV[Vu#S&CQHM>[H$gYDb-jF2H,r^q+SK_J2'0aX-UQVSi#AVd&jY]9lr[1[@to*MX+SPkV:7Gpe?Dj_[t
%r-nIZ&kF(fqbpp6n(5s2\cF:,,<,l\YONuF%qmWb+6TQ-N3,.32^XDD3l23G<[)-H]LX,R$dme26JrI^9iJ)U$:5?0;Xn03h,u)W
%PbEHQ3`:SPei:e:pmsdGW*$*G^RaRE_#3U1`s]RGXOND]Lj<rq,D>Jp;!?!.^+(T_JQ3LZlT!dW3.G"P=i6o)^k+Ir6MF>a/2]nV
%ge'?K,]LDSWoJ,JJfdKIN.O[VpO%%8W&RLiIWGV1;&^m*>&0DII2NVj<<@sS/)"J5G$D!9UKu_&aZd46.BcJTQ^QjoY[sp+/j&hF
%qU8>-D]%6VI4L6MYsm^V5n^oO1n(PBdhAc-FjgLeT3N=^RF9^iG%s>^[:QUXiQpgl`ZW1_:tYAf/R&\ias\(5#g47daWRM5dhWV*
%:.n<Y8R&SYMb0!q38F)JA)I`sVFEE%.L/fPM&O8!W3GH-H\-N2chQY[0MH*5d`,@!]+/ZQI7oJLQFdPT+%Kl()P7'SWCj1X^c?B,
%lCimgKBYZKNVL4:E"=RujnC6j0l4W-r5g&iMR_?$^&:-d=<O9cb%a!^Y2MXIf!`9&EC`'$NS[/tis0fYHu@CmFW\m/*s5-Vf=&D&
%Nl!GHbn\O/F,p1R'f+G8Li_TG+#enR!-n=FM3bD"GRb]]Q12Y=O(On6G)Qu;s-8_ek(ADVe[P3oOBNu5Wa-mTqjFUS5m2Vt,@<qP
%A&n.j+ERE7D?4`XP'c9QXbFIMHO+NLOgU1(O6A"NF:Ra"IA2Z[>tu<uCYL&8)#(0erDlI*%M`9h$&D#C0s(a,N0#8JWYKs.#qU9)
%T2U#$#T,1,XaL0k]njt-MPHp\6CCC#r,WWQ#MjOl-\7>)iorBQ5HN1Il!$M&]Dcl[qKfLr"#b_RE2$DbnKF<ecr4SuF(Se.(p0AG
%)7rp2Ruq`K%ru(1l;-1"ajKBanIX5[c0JL"-85)hQtRN;X+:#5cI_$p.%9gT5dKgtZ*<kiUbfrgDoA?Xj+2W>@_BcgAj3g#roK>j
%@(Ft\kR7$&*65:(C4DPLFH:!K4lD7rDsJ;7RXqV^g`:C+5Z?!kZ('4Jl.qZHU6S#D?R9:$@4,k<NLQOS^Ckc76tR>%_dZ+R9\m8q
%&H^iEK'$jEcK$L^'*\8DhbNWo<DnJ\&D*.)?AqnYlPX?c:mOYN&'(FAP52?R('[Cl>lS7M.*J/SpcKfI?=#n0RA2Rh8<4q%7D:B*
%A^9O<V?UOmqP+.FQ4^utcsn)\@I1>CA?M^kB1-<+<9gskl@;Fg@;F^W)Q3&tquh#!93`>5E#?KX6Wm*S"C;`$^Z&`PVOe;P^W0?k
%-H@V`_=H/YLC7mU1WL$DDaegH'!X-cgX>1T'[mtd#,MJ_b7g/h^X]1K&%?3IS1)%'rc&YInChD3q$FN+P]R>MeL`g(IukE+\CV&d
%JY(\G6%hhE?=Gq0Y@lCLVCas+.HG9lAM@5W]`dchQ[*)a&JO;RElG-7XuL0TfXXO[@/U^o0-TmH6&"lj*Z$mmFHbTTS2Q0R[Gk%Q
%M9mmc1;?;k5pJX84[22dYK:%m.^8SWI-nK$&phB.fW@G;:>b"kp6\G``Ej+/.@/.)U5#\1$23$KJje9+rbghJKTa&@LWNPVb;^DZ
%*;&*S;(U^.^H]2("nF7j3njt[$=dZM4JiC?Qmgj3(h*hb%L6dd>cglgf/r@mbfCf((CR8AMn,N]=t+7@[e>Pk=bFce7#"1B@8@TR
%RMr`8'\<1MOaW5VYAc=>SteG("@\M+)ZN&o3$L(`UAh_DeO67"'"\cOim#'"7+]@g']tCq2ku7@3'S\ip7ZMnd8Q4"ntp86b@$W8
%PFrS8Tg^Vo*eHE4p--8Sn$ZtlpD\i2aqc_GXnMX]"Od,I)-9;^5#DSe(@t*Y#o0]MHc%TG59NohO5\1oo?S%H)80+%:e@`3)#Z^V
%W'-1_`4AF"3H8kH\7d!WXmH4Ef4ek!=/;4p'@]<Umt]#e3JK9UJI43h5LJpKhN,cgkLN1>SRWo/8HY!8a8=:3:*X:Rp4>-:r6G#\
%/*n4p%<F\8G`SJ^8#)l:\;&d2QPaP%$p6<Ao0>l`iRR\>oNmrm-$%"<nBn?67JS!lDL]L`cV7T62XKV7TmcrS,C(FX!6Z^!D*2Cb
%O`45Y]-`D>X.5kDTsVgdBXFoS/Q2<aE;2\`)=@hb:_sd[jIT[H3QUDA['HrgCgi3i."&2UF>rb?=^;Wr=+jUZn,oLZR1H+rjOi\B
%oYP6K*jD`sqZG%e%WUPjh_EV],VfPEQ=R\3CTKr<9]t337"c`8,)Nt55I'lsXrMjT#.PI"YlFJV&aCW0Tj;(MkHoB?%hK)8PFR`(
%0VXTPBO'."'[[M*3^C;5BG_D:3)c0?p/T".&#?f'm"UjpeT\:dG7p==3r<`E&ScaiHHrXS?**?*F`1$o60lH6)'oeYk_QAd!ogrT
%pV<)Reh,[Cg:)]pc.lJ:YFa,LGpSrs;*ERT-]08rV@5?lq=?TqLIlcC@aobp]NR:0rgpq;b[@#JNK&"-a8S[O3@8!jK`lCmLd@CN
%dpZM3m`j#MAA76:,:?I2M.?#3Q"A2^q_.aKb6KBFg_pfn=*V+;U*IT(fId*hs%8angOTHc+6`H(nK_9SUr,T+ed$+cds\epe#g'8
%r]F")*KS9^/DZK9aloc%?/)\.j16^VC!FMS0+E`'Bo?*9dh&`5d>dTAo0P[hoQk-NYMb1%!;:sm[_q:$lL8M6,G(K_M*=Q""h]H_
%Gu_ltDW)bg&?b$X3,l5^Tg'ECPhZXk"nV>c%\&g/\<#JYeuc3,oWFsMP'[55i+MKoJqL]=&6okrll/F]9lh@f6oe]`5]p84orV35
%!@*`]qV'UoNc/L,=1D?klO<#p^V_*L,#O\_9jT+Tj_N$W9%Y-o4oI1h^d%:!]@IA@Lr82<c-[;iY?Kt`b(jrf)oiX^DmQ6X$)6cT
%0=9sbS)r?GT]BAVrEQS+`b9^%>o-C7.J42j`TH"Cri3+\`=m;3Z"Y_oh%BIG:an&c2Ms.?5'A4dG2Nu6If0Xl8$KE.H&5AF]=&Vg
%JHo@?pI=D`6EkB2H?L;[AGtS.Fl@-0L2_Q7ON=[i7M'RG)F;0pG5Cb>r,V4(8;%MHPI-+$0Is%-ecYlUM`bT[X%kGI@qTT<>Tl-X
%S.KM-2PBTp/dT?@j1ILf'3]1t52dCBCPjmjPaI[5[SH*Rfg<n740B)n;-S#i;fIQaV:?/1G+E.CaXFMl]a6E_6Cr:L=;/\E\+Wc,
%q_:<mV$>0K[W-uCh/Bu["]s3ROQ_c_Q'aWNeJo73$9h8(6$SFS]":TOIub52U[pLg%=uIZl=lJ(BK[Se'e2pfM1?XO7HtF#fE4TP
%/h)K@-JRNZ1-dff@FMft=S`*?Td4I1Qr5Jdog%bn3GOr7,DIS>YhVP\V-QG*:htlRkGn/e,P=FJ`g<)4a$+(jPI50dm4\BMF$a)A
%NP:^PeUX&3A@NN+OHLb=J`bts7C8>rf!;#tk&PPAYUA/Y:r72;S7dX:G5\cE26oj(-[J&\deR\o;9QXD.,OJt@R=Eb+b8u]IM6to
%b4`X)*pJ,VFlLD(6"OEU@g,blN5PLH\Ec:jG4Vr0kbS[oWt'DZgaY,s:!h#G-?e*PInRP@XlN]q'CqO<D_(9dWH8O(f/;^c67*l/
%VB.-O\'C+W3jGN.EV8Co'>7SFTTkKiZpc@@>cf_J@4UbIjKRq8.$rZDkO&YZ_bA#&*:0&G8nKE'-^S`15e++,<iWIN/Y=GGV@X3h
%a8R31TE>XiIHU^G9^gVHbL.&*@,Zs4T\$orX^Ied%huIqAc'T'@D&-Qi7M^c@LZ'.M:NQIIIAa\cd"Th'06gDL"9fHp3s7YX0WVo
%eVe?oU9'<cogG,94:@q)>e59U*%O$4aWY2kj[D0g\)RS(:]JS#ak>qf*Roeq(<#Yt3k&6/#2qn?+?SlJqngN,k\$P7<1qmgG!<Zj
%2W[r:==!_mU_g2oN$PE.^H9Ks_GhqsV[&+Nc>6R6mDJ$@;5G78@OFG,<ql'qmk"%JI"JJ5=&X#3I^ENF;dKmN\:Skf:Rt,o.s>_^
%qTs@A6;]^u&h>^ThTV,u)$8`i!M[s*=;2O`E`/-MCh@/0nY%?&\s2pL0_$lLf-cBY<sr<j$P@)UOHP7]3_K0R+6`G<o;c[E1e#hr
%V#V&2_Y**qA!n"J[n97n;ri`tY2/H!XKd/G&%#R),]ju<c\10"kX"2E*ZMLHfs.\X6;]k?pIDjg4@+nRHdiRnnIIpWH[o>=.)>9<
%H>.E<l>7lPon:sTnh9kT\+fqZW[XZ]:>T`D'=]BG6tH_KGO)/A<62UU-t4W#i!ZVQ,!qkLmNjG$QulfsTO4Q!^);SEV3f<Bmb2gt
%Q.C@;0sG6AP`RG"QZAtT:NY5X=6[8um/ns'n/$'G2iWgOUJa6hJe3+7PY^peML"WH+O+%\?Gg?`Arin?NiY[!-,^HIPrhndkOLT0
%hT$P_^!mRWW;QVlORAseiR2tD;AS#''Kc3D1-c0EFM$c5T.NsDmbru5LfpuY,,+bCW$>p>EjhJc9H[b8moZShA@6;`O1o6o\+;g\
%Q9a7^3<42!F:NK&gcnXKd4c"'Tm;HVC7a]?_gS12>AVEI7H[3=qlQ#t:Kk1JW+)*n\"tYX@d\%.)Y0I1PithEH!;6SVhCcnelAt-
%[P61'+`2pQ:H?n5ncTKO;/)XNX4+D(TT/MJ.aHYMDbbFe]O$_`25BIk'goPCnWJcOP\'5;qE9+6<l59Oas7"sY]H2^Hna,.<J//q
%b`u?-I%:&"c5S(ae(QuN3='JPa"1V_Y;<<u)(f&@0D`,&L%aZ["ecTU^C7EV3JHiY@L<a,hGNP'/?)XV.d'NIiQ1fq6.L0A!AoA6
%NbRWB+6^:h@ujI5.kEA6f\1Xr8\_G>rV1J&-d^c^/JMIu/+`asEgr.<<]bDZfe3W;4'=s@f4$bM^Ii)tNoD'J3jWl7YBk<R@^6I-
%8E6dT)&7QsS!sHs3d6`'Uk#8"Y)3>i+m!Umi;QaC%*e#1/;pj&4rC3=X#:7`1MQ_An"ldD:\5JF!NgDM8'.^rE(W::E@fO0BoORM
%1q]T>Y==t=71i5KN"Z!8gc1[?U"Hc[6hXcTcOGK]l*uI`qHr2^*KfCm/Nd8-mn)qH\J)U0Yk<D13\cl0H/!045N+C9g[9d8=ZeI`
%h0#t[kh>nG\s:_84D+)`CXM<k7A:k$LJ%Cc;I`,&F!k>?LqFk7oDFPck3hD+71$W]>C,;mV%"Z<5.elHr]af%+7V=7+iJpl(Y",K
%@l_1URh;*p&'Bd$dI5p\[ukCQZ%:)\1@kCMod'0J(.n*#l"u@E"In88Z=W9/HO3]AV,-$qGPQ]irsPF,[(?n92*G0j0X3>E_ppgX
%B=NS;D<2X`l!Jh=>dYkR)Y20KKcmslErdh%dtG*g<0DW7I906$@\bAt^HS0O$JS7=e,3t\(He[b2q#&4A=-p\7#WG_)YP!LkC)HA
%TO7YUNoLsQck1TuOs'Z=B&36-)[U,Z]`e]K*a4Cc3po1l2U1IAjs0HlU6lMiX%*EP@@1dq6NZLt_%Y$Yg9YdY8:MX?Q8mS^d-oi1
%7#.=56\,1D4TS[Fk3m/C7Rop1c2^m&O?1=k%<K#o&0C&_`>#;TL@jq7Y)n$,i8(pZ_&]CeS`eU$r"$;>1rtAU?0``OSDQX6H/k,#
%=$G'n.[8tEmR)/f&k[D38R(!*l&:(Og.qkBTR%irjD1$dks)f+(QWup5Ho=6=KnX*h\j*@`Shb]$_UY)e[2R&Y;m?iq10-0jOToY
%n:mHe<^_e`_.ek4<UQ@e*6e=8B;GDM8<V-2T0ES,aCUI[#!I2A@KGX^Q,(d(!c`E443&"E:G8"TT9=$o.)cI&<;168^c8tp2?jXH
%TaR8cakp<-jW$i9YM+&oB2f\&<]k5`=Rc2DI"s^A>`fb95u6"^\--ju$OJ\d?V2<P:_At"i.5@/XJ%`.*?gCN#eRgfN%UYDP;W@/
%\VD#*7_bh\cUXRL:&nmmEi2+7]CTOEo:U`D5H*[J!0DrVDo%(rQ4MdqSB^j8o+gP]i]!(Z=c,bI7q:dRjg_A$#P8tgVdn]i.cl+D
%HP\&q9nl-F)<B;-Lc:Q<%h_VT-sEV(hUP/pI6&'K+]teoBntjH*[95i_t6Kt]gZOAL.?R&s.8F_?`C>D=3Ysu[6t0jmChk!Jg)eT
%6aG/Oc^9$R\-tg>^D<p<ki,8NWAs6_fTK1H*R[K=#'MhI,Dpj4mouN0^+@5qC).g*Zs^/ecKN1k:iQ3'I<]_/@1/bZJ)C'RGqE[d
%Drb6pH9k;'Ni8Gk5>"n*OW(,LZFQ+BVaEQS9?8E>+6(ZAZ\X0?8]sr12k`32)F*#o\OS;r8DpK(hHdP"6ulW<*cUnK)k?4&aY!NJ
%<,$YM"jcOWUqi95aFk>pkTGm)Bpcgt^\0nY,'S<&JpnrRNO`EfLO52kMW,rsou:5"k[m9F>hidSQX"GoH?M3Ns"JSj(\cbCQg%N$
%LbIL*gXRmsnm+3FXCb$9^h,/a/4?uU31]nE0!Rbfh7*%lU_J_OP(:EdO*@A\c,58]U@(9qU$q]/Tn@=NbdN).$N314Zc3<Cbb4j!
%>1]@Mifp!C:Gqi0daU(oF_%<K,;Fh@HN8A[hd_kI'*Qc_f92j8G8iLH\3#/,kq"2GDcbV;8p@9GK[q,k2N49%fd7d<-u'r'UVmcM
%8-Y6(o:/7?O\9WDfF]/E%I7D:Hkc80a0uq>$Vp4C@dNud6Pr(2OO&qJhq^W(+3/E"D+J<09*/Zpj::s-CrriaB0Ihk[GetaI3LG_
%P1VBJ;7D43FC^nf`p]kMO")8s],jeK2PJ&-0l\VeHN9::1`^29d95#2pCC?)H;L,;6CV&%QnN[V3D+!<ENE@gJnhd4l/*.;I=3[S
%9D1;MI8hcWEGTuRIN:OIMXpt1+(D"M"Qh+M6;d3Taf?Ff/JaP.>>/MKo`h4)B*60bB/`;"?i>D@=JosZ[6,cOZ<;1,Lj;ECPPpt\
%?L_R)i9(p#Y3_E^bc:n#]sB`lq6D,$VA)aM@O\l\-&s'V;Y@A+@O3GQS'X@(@"CAffpGmJhDDPuIp"P=cRc.MiuY%rofZ&qC+V$M
%B90$Wcor6WQk2o%cBtFa`#_img%mWcJ%0[La'%2NdaUm&T*qX.5%@L(BkjIKNZZPaN8hSJqmpCu!oAQuT\I@KF1JE/KqdZ8XahK_
%"tHH?3J7O;(n%`o#)..,U9,$MUlu[35V.J%BQ<=,0rr#U^])M1ANPBdF<:_+M$]9;<:<3k3N;XfXhb=\c!#.i]sFt1fOQLZ(8_X(
%dC*rflCIkjVoQ)C\oD0oNN,WlG7YXND7(XueN[,4IonC+=b[$7<Q@+)qi?Q(Za4TbPTX'&li!a)oj65%87a71rK1k(6rf7jNLu3M
%ca#_rq(eT3M-e>mUYP?o.DVcMD.Ba2]IVTJg$G>#Qr)aJipN$kd@o[F*2W:(pVna6X]F=W/A$jRb63NZn/U9fOeKe@g)f%7h:@ht
%V!:!1BJU&&b41l/EJM0[=^1?c>'\'>*BjZfmqB2D]4X\/Hk/l=4j_f_P)P?'M1iJCKV26-BaqWTk;+m&Ld<TgDF`1p1dCejk0LJt
%SK&quT\$+)#08*be3C:8q\XR]-Fq!RkeZ,Yq6SJ@;:K4hhsP[o:Tc0:)47pt@-DL!;M(Zr+)SM)6rP7D&B$+=Nb1rS'oNXOH3PsX
%>Z?*ZNfli6PjmR)_O=^C47_\OKSle"59gZa&"Z\M9gG^tJ4sYC-BtmZ;L!qNrN*5I;(\p/]"R:Z$1e/sTaf/K[eVmH7jd-T:iFfO
%"/FZek*?>I].%O(^95@WpFMJ>j`Nt..1s'FIs+6Xr$Z8';.0mB_)%7jbbE&UCe(M1,JQtb\itR#RQa@?lJ]qA\b'ba6<&=cN6_I6
%%h,1nP.lj"LfVtO`kmRXXJ+=V3\lm(PmHMie_`fY7ZL="/Aq'\`'-9N&*j4+W0uDY_\:#SE,n9rKX]JMEdS7:O'-Hm=GQ?7L%8N"
%;J:40lIEo8eC@^$[,",a-'otcUXiFnFUuVm*tQ@.V0U#V[clL0b"?$V4@85=VoKRo)^tFAT?Z/g$l,g_h[R^VfbFJ1Z<.-i24dfk
%6mHYXI[;X;<CX?<'U8TgeKlo<2%/\ds6en$,'8Na75G'Ab<KRp^:+.uM0)q7HZK<C@^WqsrM=>dh0G'aE_,_(Y*#9ECYQPpT!lcs
%LZIQe5W-`MV`KQD!G`hs%G%T#Ld5kT=^+C,%<3Z4r)F[[b0!V=.<9NKf!fc`-6p1@j[WR"Me7nFofXjO%GHq6168@K;aEnD`rRAl
%+W@QID/1"tnI03n":qD@:IT-_Xj.7Ui&RM>Q]chuc"%aSoY4=9*U55FL%JDqp?cG:i/3Um.#/XZOHbXd5=u/n&>&+5DcfWQLmd\p
%mLDGT)@#9_L`-ZSN:0OaR368TOGOXM15r$r$kD$</UhSo7*0g:g.3nU91BL][X:IMSS3TQo^pE^s.>Y"bAua$hDr;K8`T9#OF)E"
%UelaD<DM8kMbYFJnNFg7NQsP^:>[Z%*h$p-/n#%DK2e;PIlYW_>'&!mWS,;K$UQfuU(=-8,+Iip4gm)k,qtADcUkB7A9jEA3BFB]
%hKptle1F).,n\AWdN^8;_`d&%WtS&BTeZ=#$Hm>]Eiu2hIr:o=-3<YbCY)C1FRF#.-m-cIM*_YeUt;t;12d@!-@(<8SoLf3r?eqB
%P9lbD])OgH@u)dGR\iepjA&sL'r7+V:?G5!qWo+]<@>];\m'&ahq+Rk/3YBuJ:'7[MplJ@3gJp&ljYp2mllg6B[q'>Ru.!RV4_BX
%_hI%6Q3aP^Wlj,N_G\5n^k)>'Q98qrSLlO[F?+[n=j]q6$2&#DAJZ^kf'66A-(ung'`L-8@b=4SA[YlS*SH>\qeCA[k\<G[dc)b]
%`UBO78`d;JD=-.[$osa%k\dAR`-@AGZ08s_h$uL`"XqORDM"&#I/!,IUY:>EL?DbNe:/!*g*,,(K0V'01eA+beh,A*Bf-C6b[<nX
%>:BB*5h=I,.edX0k9@.l#EO*qWpr>*@j8,\3'lk205!!`7Bn_qntEi2qRj#G4c)\&I;_#$4c$nRD/s0G720k;)U0(_M7s3B:S=Hj
%3l-J#LU3%FBO&XkF?c6#ij\Z5@Qqg(B&3'gR7#0eMK(7SH;0]cn.@MSBBOmS:iUMT(I*K-K)&ZYdqa)j%V]k3\(Ot>OO*p>?.2jo
%mqQ\8;"4L5_"GE->oY+Mn*Z_pgbE@Yp$*k-J6tGK[nlO"/B$>?='!Du7*gI(4GP%r,-fASa165-_(FGbO\X9kP=U.i^s);+ja%3Z
%BAh;]-iJe0I)ljQ>Q/l9J:Sju,P&`^/9\AhhhE^ijQX,596CRJq#[s@gH-ia)q+m>-6>;k7hXYG_NdDbfXY==6C8H$]oN7ra%B\A
%+-1IrO/(s<.:Ju?l1&H"+.kEmU=haL1n_%D^J-e#d4T4?gtb18Llp(Pac$0I`7tAN6m.Ys765R3hC,sN[3&Ee+-%s8Fct+?#4,7*
%<$WLi@6,:rchU^t^UV52C'B@#+HKf]V>Ak0dM1A1VccYm&4"A%NeTse;`<8)4%p+/O$_cJDIBD'-o0o`Y=d@E1/<+`E<`llL1DM=
%h0*q[OC\R^L2G!%P9@iUgl4qPSt>.\eCE5[CuXZ18da8a0,$CaM"Q/hpePmuK2G3lH;i7ud:PO'.Nq@cWJ"/J#5$a/\%0JPYOGNb
%O2uj7_:?b6Q/Udk"LN4*=h=q\2N$hil'=7IC2K>OLl['JhBbofd="djKg+-XQ_/ssigh0g+P\\;EeMPpIBP`s;6o:9-!%iZa!MUR
%<haIrk<Qg#Gd]Rr8dMUE6W&#j<AXCLoJ,BQS/s0t+[TUSf3uVo'VQBo)PX)qJs>5N2.\mB,#OuUiLX3fSAD@s$#=\3W!kOoa6Vop
%=.HQp*>9>CREn?dp$AU[Oh4>'pLq^&5(!/bYBD1Ojj5+i(h3N[-Q6MX(81Pf-#V4\pr<WFlFa8u"=0GRpN22hlHi+Q14i/&D%o%G
%8NF,V?TP:N#FUaEgd+P>]kBXB+[qlYe@hF5aW7/3E^l>-I*rmJhkCj>3V$6nVhGXu2#$esO[dLK!;!\*X,l-+MscJqcc\$(H%ket
%:TBiW/`H3NM'(^'3Ie;1e:\Z?Z-)79oQh`uiR_H1>tjbol0-'cFKHW]%4_;Ig#g)/>Y0]K;u3hqc$Hg","`[gT@oG3IJ*>Wagr[K
%jf6g,k(IB3]t)N"DP:-&>'de-4cSp'h".\D^ZGgJ&/jc5qV3'rK]IX%W6:N8@Jp$Ol]1^]Li?Vi15(3HZh!<]B%3/L7cJ3A3mQPY
%B6oW@T-^^GV?Z3R0j<i8A(t178%nrHnuM\6)5tTM7CGIP#W_$a/^CXZEg'C[o##,(n>.?o]8sQUj(KSD;ST].KC7\`_HHMYmd)]t
%UOiXAB$<c?\\IZg6k,LOiMdP4q<mLJ&$CWrm0_7bIh-M)ob3OJCP68USH0go=X]FShg@>J:5p;_?`!>".q[h\?!31C=S-tAq8%6-
%d1A/\DYb#\G1!H;[%8Dd1UaPc4N]:0,LHW5L"^E+fkfp5_'R=-9ei]hT@rI`a==7If@W2*E>[i&IZh<\Zh'?9%]-"?ObdiuE+"O?
%SI]%Rnm7V9!><f``t_BY%,=+VLk^4<\GD(<M[s4(TKh!H)LfaE[j%ToCqp$7qtF])f[-)9,u.n*Vd0<0Ku47!;A[gu+bS2l6/ZhW
%b0n/h`*F1g]@ADLFEVM`BH?;,<b:(0@dmO_.6i0$IiS,r0f5]9Nu!&#ITG>p`DZ(0QmtDe"lX3b&r+5+9a+4-cHftjZF?V]:2uAN
%5Rb3sk@L_9G&[p\\e5P^]q8`.WQsQ%(Orc/p_c,pA<riVN7tgI$(_EFd"ZQ%rfi5$=KJkbTs`d7*m]!b=fQ"!UFGffBX=;$Pq;,n
%*.N!-#5$I'fD1-*fE![]m6(E?-tBi+C5VE1MNfj&F^?S!]s)l6f^t![Yl\ki9'a8*m!9M*TgUmg^uJ9Y_gTVH[#+h/:oA.YONGhk
%&/Cp^Wccgr.+@@U!Jgh;q3$jF:+abP,4qre#XQ>+;s""RP'#%LQ[sHVXqk`P`.BG`%3Q/Q)C@<9<>.?_(H4Q[-\6KFToc&Qkuc+(
%<2+jU_C)hDcY'^hG>]_#)@`+\7XJWZk`phrF`,?P^A@[]Z0Ka]\M(-_Grbja!K$9\S+8Dk/Kji&36^G[<oW-Ml#'+U[-Ve$U4P2l
%MThekQt:Ipf.j5BND9>p&?<-rDh&]O4WGFnG"W3kT*1M9D`q+TTjL;q+,^H8j+g%WY//mn&52;+WY[Ld6&s.C[=f=A1V!I=RK#$A
%BkgZ3#1\Z?W%I.@<6iGmqs,Xk@TMig$.=[Qct`"8Y6DrJ4YD!];JD$TBXDh[gS%uTP1btfITUpCj="jfWRd"to29;9'/.%IRp<n)
%g[^6;l4me1ajZ-c\/Y(;pu%uK#p^[[\jmqY#CH^"]1:Qe%R`W>dauFKK?&o&RKTnY`Bp0DWc2/LM[2HId9q:H3]louq"ug[bhn]4
%f&!uc?Ku:.<G]5k8;A#9A5ru\4^o"f:A\Uio#-]'h@]+qh>35?FHM]oK2qj5)Pl#?e4k\KSe4/=BK4N8-P`LLU\i/9B-?K`*\-.?
%B4oNj3Qml<X>>F@D6pJ'JZjO:q>T=&.Hg!Q0'=T\OAGTQm"C86jPVZ)94E6<\;LGDQV'cXnEe`+(K6%GEhM<TP(\J8FkV;YF6\N3
%P)s,ng0]X1"F0U,WYTC2!P_7pXAS54IN9qMrIOUYHb&"<X&*'3O)f_JB2c42pL:4M@EmR`F'k8ipnA;24EB<]Q+]1_\WpQ;f4qu7
%%jQ,W/gaE_oh+DA-7BWW6\hL"IiYlFdEOW4>hj)"FfmYG4aT6I62FjndrR!U6Fkg,NqSI\7OPorqf]nm9,pV!U-l6tSlH8C5Ya<5
%UBDdobRC:qGXL.fGtYalaKNKtFO.SHaprHaonZ&aM0m#;nK_=+Jgs7UCBQ22ZoE=g`DmjXUqOXH*7]4#5-c(BKClc+68;IYL<nB&
%>]!\3pi8k8M_OZ1=W-bPl%NsH0*@K#=D2?Kc=;0(#Q(,<^[?N^-?On/ko!+aJ9Gf@BGI(.*?&<-d8X:Hp@:GIej/k<M5\;eZQ94=
%ar4*ZF+U0(UTiF(YHGUa/'`@iYujS*&nJnT)c`!Q,W]9;2d>qcliNZtJ$&N:pRKujl>q]K'J>TT+1mo#@H^$"#%=\<D+^fIcV>0Y
%?PUE+N;?NgF?M["m1>?8B?1^Hp)d`_(;Ym8+1ab^Y3&nZ:4:6hJL)4qOhB'/.j)u`_#GIP4Jrb,Zd''S0Y:U:CLH,t!(FM\b4#:X
%9`Xe](j&J\ieJ->2p9#]#JVY:f:cOb6n\p;Nuqg=5:osdMjmPG25.^'ZaeE^cYh%mPR?'D`I\%P#,\.[cf(lf7fPT?n;=(UrpSh=
%^1%u#<cVOV_b`>?cmGDuiP;IUr)lL9h8UQn%gNjcF&-4a`><@NCFB^7$^PbSMCqf3Gp5D`/%b=do7V!.L.&#@X)4Y]epJhTd>jG^
%PsA<K\:9?336`);raBP_IMPSO8F.2;MYnT<"?&&9?A@`Rc6l34j^q,+nXnQXDuFGKmS>/sB@n'aUW&1rDNM>X&Bbdn;[gR[<L_?s
%7sd?kE5:-JF\JaC,X!)@%dS2>A?hk!DT[JnHi(*,P*b&%M^,^N^BY\!)N_-3NWdqsHf8uPPp8E3h3gbsb[=^)a7Of,,`AUf`n_]S
%!p="ZMpHckl%D>R*I&,/Zk4X1n$M=^&iWdZ]g`a2hJf);4ksh<kesg@q+4Q`>L+Kkh6AscKQXKMT9iDIe#JWbg+>#p^*[Dj/_q-(
%9ZV\rK"`k]_t<.B>peIG#s;'M&VDZjD,KlCja'0r-d(O`$%FAhROae&DomC6[oe]O3jru0Um=^<X1'bRWlZ5-0f%TochcH`7,SVl
%6XW>l-&QrX:YZBc4:+b==E,Q4&%2T-8N];i\qUEg7(S`rotJD,6<ETer*[2tK3o3RJ_>DpQ'`g3eK;_>&<-<c^*J-qdhclR6A(FC
%c%bB$=N_FJ`p.X1B4Do>$dF-]9U\RjKR4i#NMYp4)fpnWLqYHqWep5UZ":9^-dp7=AF5CjM.2[urL^]/(f^dGMXu9[+-`C&Bqp"M
%!uYqm&,)m#`a1hAX-\RM[p^JQI=+,_m6(jhMU$6&'==J:]r$@t3RLjWN+H[$].E?GT-jmpL^7i8_hp?Bpa)_<a,Y?296^fGBHR<g
%=m=mT_:&cRUViG[%;Ttf**llR!kt2SZ([[Xp_0"JT1.GE-ao0NrFYKY+&Se7/t2^:B>;$t\%F/)>#t#W8t9a`rApn!5keFHcc]-J
%%'DHsc_sNo>Q9CGh?/$5,PBHJC+2Y"a4gK2G'J#k_?;.=kN*6]*+W(Cj16`M'Tt7RELY*[Tm\a</3\(G9]UL%Yb@m=&_(r[ZQFcW
%CV(72KN)JEg[r%E,^*/?LmPq2>=bprdb2+?`?\Gk!gh<j;)]K4<\ZZZ7UX6qM!U'=]%Fm"QQrq@GOaDH,tSW*\UdJM`$)cn(5iA%
%*nLTCH0stc(h'0ZHdAjQlSjYt@Ti'n@aGh/W>'d4@PK]&f,;1:)2agrfOLu9FdfeX4eo)NF'A3rijhuX13L5)\1TuQ!;uHWOa5^_
%6GFD=b8':]9@qOck"@)rDJ=\JJmeYTm@74[8CeQC!:0KjbCRF>"_`*rG<Pikei:P`Si(]k\-"RE38Y8#Ysrj"jl0jpe4iLj)7c2!
%S/5rgQ(`p\[fA=U;E[Lm[JAhTki&"tROBGlij=:uAl^WM)Ht>hOHZ&]eeotNP(jI$8.uF[4sjaD="/9rgmhBQ3X</oa):<81C8$>
%(e7i%FLQ_DV)t47GI'CI/(gTN0bS1hgbm_#&_gB&on1<L?jX]ubjZh#>*Fu>!:l1<!]U]\%ecq>cT/poDKAo+4-H[V!,*L(O%_``
%.iZUh^qDn*D+m-p;0Bk.%^XIWc&nerA.#<l'H''b:7q/2/tH\)msO(TWsr07G>sa8OWJ?p-d$gb7c]>,P1sUEn0X_E9:ZpLKL@@'
%/$$W\_4!Hh[@*e7=VnRlUA3Q\\'oL\L,-b_ir2.apH/b88kab@<h[<Ls$.n[3^A?A>?6M=m<O7j&\a^ZW_4_^mGoFO,?m-kd"-uY
%=H:fA=TF5JZkc(LLcg'n\_kBbb@u<Z'=?<K!+^Qg#:.\Fpr:K[L+d<5@BO;-YG#>;-e,J$:=WX5:DAMYStVCrlJ9^OTm@]hpFlV?
%.qsk8J*>Wk8-asCbmi[bf?aX4Ta<-!jJ?#?onZ,IXXdTrED)/H!]b!k\*7pIpl#^gU%?B5:)\t5EV6=1C0/L92$d2I&O1lr5>4YA
%2U"_F%'Fd$7p!=!IQ;f=q<72"_M#Xt34C4@XM2hK!8*83(+DOaD]tTT:Bu\Ie2i1EOTJmV:'oa5#1XTefo^DeW"puta*/\mX_O0]
%pcl+gIE>b/2t#$5rX[R0!go>Gf1AIRg(e>"(5J,[U=e\gqpUVelsr3,I2KXs)ZdM-4&B2QVaUo`Y_5t[IjGRCEf,bIL=Khj9UeDL
%,HTeB/MC@N_'1q_pstHhX?FR-%3`kf4khO_N6Rkm)(5PYlS?b[HJ7$okch3?b-;\lYmQnC@IDQ%.F9gE\qg(FdZpZ>f.bhqs/,1;
%MA0&@/<[VaiBngK2eGIr7Ff:2#3]f>CEGl3ftMV,boa=c0T/YFhr2Z/3)s..Bm4sK50h!S279V!rY5/BNsL<QUTd8:qFu=%!l.8`
%`aa-p/>BR>o'hHN'TYRXZQ9]8LPn];dQWH<F`V6oNYMKDKle$2c*Nr#c7N#h[/KG18ThKZrn3hVS)Qfq]ahI]O35-IA"[Sqpc/<C
%mYg5N87dPf:"Mso\rLOV%BZgsZW7GnK^Or$_sqsn3&)c]q*Uk?\dnc:=l3%%l@Sne8pjZN6'c"ta2/P0*KCI$Fd1[X>YaFHW;1;/
%0ZI[P=,bZA[">a+4/eik/!3P[b&+'&<HLReD_Jg&s5qo42n/ed34I2eoC"s+CJ1U)e[&of]iO=b3"bVgDYN.WGd[d-Vatt6i7^1%
%g4GTu=ha"!rHtXS!;C)FNb%7=LV'kOanBnt7O@rOWSA5#kUe.KSXc^NQDa-La'Yn!H5])1437\Jl2\D<7Nup4<"Q9ZMi1#iok]J"
%)$)"#mgl>:&HTG]?fRA_(+m::;6V[9``BIER,+0/Rs7)s3oi(L>4T7Q!hIJA6.7d]g45OGEhn-"pj*R*D5%!<3B[J(.U2(6p&cn!
%)h%m0G,,#Yq^g./_l$$J$_6_[l=/KNcT5*p-JpKE*]2)>U;bM=S7XFfI5<N)peNOM]i`-3_Z.2O?rs$7gi&Ts2>F#l,!;CS$Ye.j
%El+I81TZgiaPt"!2A@i.(0!G9dRMrB3fg[L:L7PBaVE'"0U9$(j]JU0)9Jo5@<8%^h;Z-u$7fF"F9O<>dmWGck2dN?.8#E4/NTI4
%Hb!#T*-SZlLXXjl^7`1K<&QZL-*rUBD^AKP5>-/h)Cf&#0'N2<f&HhiSk/iG)/410L%`.2^('A?$u:duga6A#'m&[R*T.i@@-n]H
%"n'/GI=*fTE(Y<M9>3M@L&@r2%qM`Y?-J3=BhacqiIC-s.PG(+6DBh'^7OlBDjAT5<6jtX;?V2cQR,O"FQ1]t0f$(S7:)3rkX="`
%d]V]l4at]R\uRsIf3.-U:Q>_aC^?Jk0_qGJZ&_E$:@fUq6U+#n0;Z#=]&cH0H>3=ghlHN&WuKG"1aJ$4Rt!C:r-T3*&T>NhaH&Qb
%qc.qZkF\)\H5u0(0$'V:(2F=&pHg1+6SBu[X@)(&J42@<j`4JW]H^S4DH/)"D*f/Y4e,?.p#Ppb$O*D,7u'u8qQmlWI^W<u8`N,*
%]f.6'+2*)Ff-#@h[O4kT.7\p`QCTCZ+(0#690>K[!P:*@-DKG3,Xkbb_%`-.\]l+b.@?dHfup=^Js9<]\g7PgW\mWW8WL5?o?[>C
%M*Tub'hl<ceT1Rc*lpV^Pg[;[mrk_hb=H4ENA<&$f7PQ/;e4$""3R<K<S^EjbKupLAME=rWNb:\VE-)):nFVYGkRai+F'2/J6Cc[
%HE1X4^$/leI$majSQi#=&@^Le&/eV>+i%QX-SOFrQO-t4N]5R5#&BZ?cdRaf,fsk,Q\!T@R]IHjqub+jRp^t;[K"kC3<GJtkW[j#
%SC;*bP#C*,1f`9R<BI"<`Xe>.X"1`:qNea_Wnk9$]c97U,0@)+=)&r+3OcX0<LQ]"T)Q<Tb)M@*b3!q:@a9P]bAtp+.mq*8nM>7s
%af15n*<.B&[[B[VCCNg1[bs-B+'q+<Ft[Y5\^$%l`m)@i(V]bB[Sl(nh:?OClPQ]c4Er0ULcec.I,i-opPl[F7%KM2a5=$Dp.pko
%>M4<8-fPle]Bhuh[(%OR^-*VlS#^I?)85dYo3T/#P/B;.Ai#u8e_;7tb;E0&KCM=g_]7Bk:^^/,WP?"#](_s.iCq>92/G;#hdVl)
%Qa+\K'k\UKU<+o`,O^&edJl`c3K]bC4:Xs.2&TSf')C/$P60R/8HPm$Xk<N=lKqE,7];T3+*-k;9m.:2Tj2M&7fu8$ZQ!9MI9jEV
%-U!S6E\U.AoJ_fELTJ]Oo2:mcqsV^rC+m7*k<30?T@:_C]9=('81_as1.N\4/A#Eg1/s%H.\V+@$0\(mpf%hgihDg?mEi%XGq.Gu
%r=G$n'.>FBT[#\peOhGo1ooa%92t9jF(?19:@_t\nuB)NOWP1?!;WbsH2Xu#[tB(uQ`4oe[rQT3OEE(']aAqEe+_PpUr##mRrb-)
%[m)DCW@t"+B-arl+%7Jh<ggb[ZrC/r^ir<+9FW`lMeC*?'ojK)A;nLaK5fgXANGlC]cfqjUD(P%R0WDP"p:A59&bH5[W4o'G9-.h
%LnJ/<"EDs"mE1AsT"0mp-g)N)Z3eNTNa-EDWqH>uc^'$6&Z52YUFa?_YIRC2q0#3_+fS'R3`(#ckS!YG9%hRA29e)?n09W?pG!sF
%jrHSq7BjCM.K3&;?In@=<sI=DZUn_.(pPH"of>1/-Ync"SA2\Ifma\oOBcE'B@B=QZi-NpI%*t!iK5j>l@tn_o0Q'Q$\r28Pb?&n
%%R$L-M3!js6VjHNerl:c:UgB?F6Ui@)4Db@$15m/'GmIL>nJpDS!699ERZg"`XbLCf$110LZ\T5HF;3DU"-.6e]CR9a9'lQ6XRh_
%:TH>uRiVX*-Y2[%KD.(Ue(-XH;!Q9O<:nD5F?aD@>o>KLR1r%,$-S=Q+$s>CW@#b[5cQT5UMZd1fn6K"^<NaV3*JmL&^>OAYDR$M
%?KZmWkeJZ?fLHBF!mq3_gT7]@.;R/8G2)/a)\'nLCj__=3G1j/5T&u$]?)g3/E%mRl*5oAf;^bllg9f!KaMS:L]0Xr3nq*ai=s"F
%l>NgA4/4_sGQk#g!eh34&JC!TA+d'b(2;_'oBDFtZupM[mZ,GU3@&NS^<.#$dMaITJ]_2C\Ed!35#<(*WSS-Lfbuo7o69Cs[V':V
%H;luRdCrr@m)2tD?T1<aQ!:b4jLP*LXDI:jZ'PX!5G7[iL`BXD4kPi#m#?eOinOHXFq&Bf0./Io-OO;F'#Xq7LgX`'m)Qk7$'2dD
%,H$c?aI9F,7]HI,19a@WMMsaX-eG][P+@@0Hhi(^30/&V2t*QB>*H7VC?_rWpH4KB8]O]7mqOUbVFU^b,DO.'JU6[:=?]rV8'^U/
%**;>8aK#ApO;@3K),pYDs.4G2Ob`$0.6&6"_R.@'GN@L-(NX5"Ct4%QA^i15b[9PdM]A)(A_J,X/P_JKnR/n4CLhtU8mc'Fca@gq
%5`a1eAuTZ=Lad^qp17]i#,;GMkq^W7J*(qC<h[OW8iR&?[%tGn#+uRn=]6&T&X:QK?fN0]9MXFh[/M(7UO?I*GmZ1A3-=h`*uMc;
%NW;JU*th<$YHZVO*48>u:]>lfoE]eperN15"SO:@R5eXj$?8X0GLj[1>9Y.cBd90#WLD.-/>?pj_WT:5CbI%+hb:(2ifZPZ`m'rL
%!hHs8m3Weg-"!s+4gJ'RAZ8%/6@*C]%L4CgTKphHW_rc(l+!l:JkXp8k>3B:\dc:NWClUK)(le@5#^ouYNe<>3,m<]:tB==%8f&(
%?.!UCrqZ!KbKQtYQO?mjEnXbbIrPmQ6$0m!L=.WfZ3u75`s#&\M-;ImKrMjf0>EnS0%QDQN,NqLa;m_q6l#_g4>M_WG*uCT)s1WT
%Faa"mi]NE[US)[Qmu0R]WJ:1*cXBCGITB]J-m;HNF!35m+Ylui1MbJXCf[7?bP'6Hc]Lt>Qf8UnLTIC\6^&ipeWkm8LIda.<2sru
%s&UqrG;>ml@S3)FL6og0.Ln/oOo]9$[&$2$'-[YVS7mf`%QI\N(o["W?*:@%bQQ)cb)jJ_V^1H"-6^CC'NJh%2k`65M[GLVZL.K=
%lAeab0N`u?I.crXckk7G2[,%(b3QbFWKgIO1b1Sfb7XJ*<QLqt,Zrbd>BnG?JiT^4?@k<!B!ktcdOa8p^;3'`Xk9]pAEd_aplY,I
%0o?i@PpVa&@`W&sI6[S6fD)pTXhD'UVJ:>de7ArY3.9HHB]\MOPi_X!AaTWr`0TiN,<M2&:7`l`oZ\s9>Bfm7h-.sEB1l'?#b3k+
%rG^Od7VN0dC4j+E;&j36T2\u/;=[S$LOMVjGrtTc;BMX;n%QN,U96J>.*p+G-#"?6cCGFN966p"'6T8QL=G?H<5?-#b7Rs=-_W/2
%&i%@-BfR.N2c&P;ZY,]-]%7[bTFe>b"5ehA+&N-J)j^.k5gOF$"kT%!q*_[Gen'-MH#HfTcf,EoDSZq-/qroQX/DJGRUPQ)55CBs
%Y]j9[gTRm(kGC"6dS]<l0;$=<:@@8G.O,G4=&:Y$g`4=FmS6tWAMS.dgQBhZ$s19]ko#e`K2oG28$7fIO02$a3]k4pM#bU+F24aX
%bI\k/<`<lqUH,SBGnPMQl;hIicE)?L4aas'70FXLr3IIea#S&%1m0)ZG%&@2bnbS.#L#&cCV"o5_RQ_a:?)5T(+cI\Zj%aHmS&:o
%H5$Gr.Spe(C!j8+[akujk<)_@o$0+J>nWEX98@0!L,`^0Sa(5+Y)<Sb6!2!gTNeACCb89<ek&j5(l-c<^uV8Qi_MnE;iW=RZb$HO
%m>X+g,OP/'PTE=u(obfBI[Vae)al+L8e4m3R%rhU`ViLP#h_'4S(1)]F;^"#hpsY5c7=:]&o*$Pb*QhYF&\S\bE(Zcp2M,Y/flJR
%o?*//6Cme]Mf5('5$luB,ZrlVm,=oJ[\'GS3T6nf:Y0K4pe/.of,h<g)oD/9[qUYD_#eq!rT`hLE$RMDIYjWt@dj,>`'YjSH7(,>
%a_k==[]7It:opV!/dD[l>('\oBV9V'*CWB:;3=]i_DfdFMZS7R(?@F&f9sdUMbBio0U3!/Sos_@`p'b/>p4-Z&?r[KYgq;Y?X<B2
%,1u?T5='[>oK%rG`,;]*S)-1<llJYWk(.:7qV?iF>!0D*T5"%I;b:XGYSK<e61(.qY0TY^PN':+YY]2QdT6>OI=O'dOsE\^,IPiM
%bQ$DU\%*g-U_a2sAj!Q,3B?aO.!=o&cB.r,EqSVL,&N#)Tdi)aK^R5"F6!G8Z8,[X-Q3:.M2rd-#0]ka*-Zh6I>4ic*:,uAgEjnS
%KIDm/NRHt=OA]i%VXDN^Ra.ku$7EUC,1'kr45Z<e7dbG['k&6;,pXMZr/*>fO!15ds&nMl"tED$RMfN@X3Yc(`nL#mX&4!%5ZBiG
%fH'ekS-O30Gu6/F5GHFS?I4C^\@(;8jhAWrLXQYGL\A_!`_^Sd+$qq(c60o2QI@*/Xesk4q("T]#cB'Wo5;j]-U`_C`D>'0+4#t]
%m<>qSJXWX]M#ZfA\7uIa<-&47mMWU@d)S'?7GL[tIb3h+TI93b;5<;`L)<+>Lq[N.gR=c%&XLC.1Z<QA=TCc&#UdDgqA1bi88K=_
%j)W#+Y\9V4\6kV0"f!>B#i/m"VSiIp!Q?r(XK>Q?dYtDUC#\)\]Hk+3Qt=lWX+$&W_rapRgL,)uh`lI!9Fr,QHLR\_:P/be68NVi
%PT"Xq4g&pJ3aFePSe;%tR"_.CcEF<_I-K3tPiZon$f'UZ>=!-F`j>+;$NJX*&ioKY><S<Vqd>5BW(Q?XnL!9qQh\PGr6jDfR<9&j
%)Yl<Yc^Y\A<sb4p:fr>T;RI;1hB^4Mh[glg5P0B"=ZJ*+23e(lgeBsTLMf//iGC^GZNSU?[DW]TU&/uGEU_X-j`5QT=o,C@Nt:_*
%HF0*h'cB^+_nh>2A1(nOAn_F+UD=4e+]1A6XBoE2+ddThI6,sBm3qW$$HatgE$/$W10/[Hd82,Qgm#_+nUVAf[/&RYqh/UmE'nG.
%a432a4=e.P7cOcB?j%q;!9u.P<KqN06JLU77<iFTNJ+)9A1/L>']i(T9,pSRBZ56e2IbkHh0)Bc`)uf?9GIn9"EGD;)KN'm^@_,9
%2oLq$Gu;nMFb7<GU/jV8;73kalP<"`HSaEa/O^$1Q!nE;9oY\3CSV/C#sE-dk/>F*]'G+5"6</FmX"c'lthj^)2B7V`%14I1[f.l
%f?g;JFb/=8Xn4Y6LN$C:jM\&(`_4YSS48]R#$836[p^q`/%V?Y%U10.P0_<Jjo(9aC.V;i*ji"+O<o(bd3sUK2TrHCqhK@65j`Q=
%0-QCl#k^R`iFH8HHo,f&!BkbDg#E"\)P_P!p7B\\BG=*(Y61J96%e4]!El1WOZ<*<-@1/rpHB!"[imB_SD1dT3iA8\r(RPRdRTX&
%QXM%#/;")7OLsCG7%#^`L9B"IZ%"<QFoUB_KXO"G5Hgo4#T1ZFAH*g5iF^e!c7<N7&rMen(KZ:LWV(ko*kFW/r=ML%m)hM`D@CE9
%9Up8l@6B_m<+1DL#VPe'4n/=&C;m<uiB9..6i2CD,#\h]@95Xlc6Osei#X72M\Oug*m^JgUM:.('GLmPXEdaT+\kOrZ5$#+CfA#d
%@m'h9Xd=Tb\.i.+`+)3B4].5AW?l?mFi1_8)N4C14c:qJ@PU_sSr=$DE+gW2;V<)WiHPC_R,C!pW8m\NRF+n+2o6jV*EpPA6tiG9
%iogamNFCr(Z,NIi\0.&`C3:7t%RCRN'nqrF=M]2_hn2-D%6-$C0pZS_9,P\Z\TgBMrtjqML=BEM9:RVKCd37s&\F8fV'DfZ&@S_&
%#dkVJZ/sZa(Z`YULBD(iI1$oO-^0<F[!)<"\RC[HDla%3P`NYI'_9G&D@#!sN"`-)SFIYBGi[8SalY'>F+c,<2qLua49`?t>p[t7
%Xu;Z\N75\K;8_PAkZ;e!r,]/el05b9kfsq+'TZk[_1[!/VZG-3On4#B9`@jj&9RT5Yd,,2d8M]h8@W.9X.iS*C+K?XjL%5=_ue@@
%0!uYUGkUFqNiTq3m:=VSHLq4UeMo_,FSBWe.I5hs5Gj`WT69]H;emJ;/n8e`mNfPIRTj<d%shi[>9lC>4_=K>iYl;]q)#JjIlD(d
%9J,=*,S)T,QL;M:'kqF!C9%+Ya4-7^rUQ=[gj^?0QKK#OEC[!e\YWh_a-J+)pIODf7K!$t"i)t*#dH=8DbMeIM.XYbagH2TEpfba
%\HqNN%Q#Qb^@f0I9J.Bo/NQZ[344pNR$.p"4l?(TjH;X0*4'p2ELi"fV,&^]LK/6E0tG$1q_ktl8gd:WjQea389*q_o$@B"Z<@S@
%gA+qBa\:],3fT63+:'k<4cm/<>-0J)fefNG6-U@fHlhpoHJpG-h*l'-CFG_,3TT.Br7SB/q\dp@OWI*M_qA@f=cNVY;mQ=?6,qIC
%1VhfPRHJfkp>E\;?:q_LrMjhM?n7C:Rk@?URtJoYkiDP-ndiZ.rosit\#u?CBu.?s$7JUQM.;1ZnLnhGDHWF7/']/D&\0S([]1M&
%62FcrIRKNkD)9j+V-C0k-p>"fH=;R4aE`%ZSH.Yu:n(m8h^gk3B0Xmr=Q!h5._"jf^3QQa'%=:Ci6jgtCg.ke&1)!@lh[JL@)Cf:
%Ls$FXGM8lnQ*!Ja7HASY=a[#p^32/:4D6>^$&[;qHfr&88E[&LIT;YlBXN/JEoN`?D'%E-K?[5t^<[+t'nS,PJQPdW3S=DYm>?%'
%>Wl:^GqXST*-UsQTlUkl=ilNqHXO-X)Ke=2"SM,&8<AV$dr'Sf\k,61'1J+ZEkP[:o3IKC6+u0m=:DS?ko(^C*E/8eV>3D/F!NM$
%S:Qsr/\Qp!'OE?E?u]]g%3)cCH%1)nLo5?EPo(^p&E]>kM-]/jAbpiKn7Ckr-=@UWkbt1/=1=:i#@uM&[0tf_>9NLN?WJLW:L!(P
%A19LbS4Z*&bd&T"f3cMN&;>Wf?g$fC_C6.RW6o5jeia9a%;3::%S/HfiFiA"C/H.W+?1&Ef"oI56*Z,dZLOqPbbkMR2a(h(Z(sOW
%_A:$:QW7!uXe?t=7_ctjboV=OncjQZei[j&0Y+f<IiEqV415bF=GZ5+U<J.#A7>L\`.A:?gt-N@$IMHGea^@Mpd(>I\X1;j6@g4V
%?Tc5-8fLIV#9i%D/bK>qooL4Ld^O,)=Z1_`?PnD;Nj!O(o@:afl%;PM/piV6;Oh.\)8TBP[pBEQo;[DPZ4R]gMk6`_c"b_=7g`i&
%Wo[-#@9AZjV=Bd=_%c&#Z+KI(V9+f>R<ff$Li&Ws+]:UdSu7q&d5e3mPuqjFZ)>3r2;%Z@bDm:.MZ[($^oneibdGiV,OPnUJ6Q([
%l[FmfSiXr1*knP!Z!bqg/N.68FBj5uLFn6JjmHNo/aR/"mCs6uC"D>(UgcY#;s/!SCeAQA]B44.;gtu7oQ2Q#g>Gp983VCYHA3mj
%m';p2Xi%89Nc,uo,G?[C#@^ZiI=.MI#dRGPgun%_aP[cBIJ/K'A\N.S[,rBig!`QSYD_)OqPakFQp.X+Q=-.F=8+NFfu"uQes8LH
%Y\p,6Sn?:pF.]R?0mcG.kh*(&H^$!K-e:,$Y0sM3IJ-q;nf5"!CL$Gs\^$UWHd&(>'<XK+0maJ5#\QfS*k!CiM`c?NN'QOH5'oOg
%*:1#P;<cEKF03>-&X2C0V.!hP+#g]Fc<id`c\46l/<-#Z=,@mmQon_]I$m)I(RsE[p2fr/8dt!3Q06<$3[oBEdq=pY\7=pGr)pT1
%GcQ].[/'h9alkU7oOPY"fl9\/eTluJegJip*U??&^mIQk6I_P*B1sP)5.jR;*j#RIRE"#0Orb(taI#N!dKuLk"Yl3?CVS;B._Ud=
%RS.t"l1UGjdn7^;\S1nN2Q\kbM%('GBsfD0B$W3(<nhGTk;"BK+VVFLTep0#^@%%2jZ8WXUsCL!Unn6/FmA#QH;#fJ76"si<Z/2;
%3Mt>"DdVZBZl'hUYka!g([c)OO4VA@l`2uFQD<:A["]KM&t67Ra2FPS:X9WiX%;rBPMq8-\s#r@J/qtdbinHT&R4>5<[R/0XWN.t
%jbgFq6/Dkf=$=_]an'AU?.8&LK<Q-NN]cV]U_C_(W:`@/M&7\V5`&[^H+)@Fr\@60R<>qZ5/6rEiDJqTP^XjqTd8LNT7=Ti9c07,
%X*HMj4Si/rSPaQ;&s%54'hCtLPj%b4l&Q!WHd=Wt`i0X]E]j87LVtZuE;(3@O]PMCNfb`\8]iIa#DSpMHqJBf_sb=Rc7@D%&$<oa
%6n5AcaUW4ulr*M.O?>t9C_iHO@f#R8(/_7Uh12bOYp\Qi3rAW3a=CP0*(l<5(`mZ`p9U)kqh4Yn)(rdu(.)!aRqHH?i3/)2TqeMn
%ID0<P:7$I]K/%&[lG?.aR`L04iXHM^d):sSb[";PpK=r'qiWmc)5kNf,-S&mc\VImVX%*4+R)il-7*>5&(.Wr:9A=4H["63OUU#4
%;*upO-O]+FHb<)5gq1A"SlLPBMsf'SY/=!O&lmo);+jUW8)>ACnHe83caH`k?oYFf^0BUMOJ5EmC#g=b?Fp"p[H__<jf(\qZi.aN
%C*=Rkh58LLd5tLL*]"2HU9+96Ar2Jg'kPZAfQT+75@t[Q9PjcNC.V[$gYJB'\u'FMHH[ts5t]7_Mss^i@r=RHep64/[hRXA!K]%F
%:jp_GC<irbJU5NlB\]YpbbVe'R7?i23O_K9_44`@qDt<FRTnF!UlR:o(>AIC/BkY)FR)"Q-5TE/>sIN56;_FVZ^m:Q&KE8Q:G-?g
%m9?/e5dL@6an=3A[mN2b),'$O:o)i1?b7OoW:)qE.?QlGE-WE(<Qk\p81AXY6R.u6#u.nPOVV1Z*PSb$&loZ!>)*.?UC8022M,,k
%D.*q8g`L]gTW1q>FTRif\CW^D7ZIn3S[DfPs7PS^^7qo:9Fi4-8t;%6g?n<q"Q['roR%:P.08>DPgA]`Cenmm45$S"]5LUI5!sld
%p/T,?G*rEbJ*Ct*k93NRh4)6@M#MgB=MCH73s!i4R6i)V6a[XP9I@JfE]0-oQ^1n-g&S,keD36#BB@nF5a9W[BGRT\jHG1[:&hkJ
%okdUKZ7:.#%BHoj0i6.I#_R@=4qS*9SA%t)ej=83O7TP5^CH^Pc>Puc%&GBL2V=CZS_%NIN*Lu>0i;K0`H7h2oa4uFa[+3U#:+ZJ
%)Es;Z6h-/tk?g-:h,7laX])+`.S`WIE=@&7pTaL?SFWaB>Gjk6`3;9<U5:M*!6:*X`Sel*Es71S6UXk,I)uL9n7n8t._k]U`^d-O
%;/_cIJJp`d`HnMoX9?d/'A2%t$;3PWlK[\5KpIkF2&@US)HODglE;,Y?DmnP^Jf%*X+d2SOZQms/nGr\[j;!ghWCOZ2eA4hI_@Lu
%-RA9PkeRbgj#pr[]ttO:N_>RIY1G\,=<A>d;TA1.#^dC(VO[1aX/h:bgCW^VG+4@l""Z\e+8:p?*M`82CEEM\V2Xc@f2B4Hpe\Kl
%5VZ*hTqesq8(]@S7%gVA:`4t#)Q(_bghQ+QWcfDo(2O?g]M?4o;1:V7)b@,RJ>7+jXO2aJY.iVgY-&R1#0Tj<D^7_)TaDDP+fs<\
%*$Y\6)aQj3Yf`h5!h$W;h;km.+sA0b+rN7)%^k(YCPmgg5jN0/X.GmG&aEr0/+:BOPIP&$[mOSLg#H*jI`Pf8$0IBplr&=S]bn64
%&JLi-rF#`5bJOo*lL3>,4UbEdU?^O7lTS4Pb>'@SnU[u#L\U_WL035a(4lY3YhaH/rl7L,;&YAsk_uLp%fP+=G)hhLITV6C5>.J:
%Y'$DDH)%b"M6GdMbcXU*bn3C^lpVft1\]RLMf.FE90-j8?NR\5I:(@-etY%D+ud>,3h=t0:RNdeEWbX`@AqiMhfT24:Cu)(gp'Kt
%:f0%m%Zqn^<S8N:-#8]<@cMYdRZmttlSnUodo7h]FY?P_R?7A_XeVdK]J$%Ek1'VaDMu:Q;90Wl"hb.b1=/ZfR-Fl(&1/R:&_92U
%&B=\I.H[oAqd=5PSUm^qRqp0]6RM6BKhWiC3PjRZ<*!r;=$PRh'UAe,ietU/5+(uB=>i2Ln:EQXI*i_b7QGN%0+-`!hL\cqX0%k,
%`R?,"(s+bp/I:9t\3ku\Wt"u1>HX_h7T\n9L%1$>%'aWJh@BKfE(ObEo+/feE,#!VD[WPN\QVND[0K5NREVLP*;ADOf'CZ*0]a/u
%J+G/MI^(!iT4R<uj[1!N-"E`;^:<d-`LERG!Nd8tM>A3S8qU?g%6.ABTbn)CU='PYhd(;;#t_NOZo;oh2ELBagUDT-L)N]MSIT+;
%ofbDkXmKG2RVqOp(G^Nbdms`ZdJR48Q;h\$o1Kk>)`M:.*>$dGN$L]F(n@J5AG!5`o'T@&2PJ3h4(YV'"$DE7aMF/%B3:0\!TA,/
%?0Z1-'haMZ8uWj"G]&OOoX-YAcc\$(/J,OW28cT<DoEh3AJD]aJ[YMJQQ0Y*92OhgBcOIjG9q<3.ZU`PcAeg[%d@+Q66%6+Is?'i
%`[l!o\_`""#*.\T2no.cl9qd"EqS]cegWM8FTc97WAVlF%P,#3eQ3/@CY+L3>-j7ch6PV5`RTtr<34L>S$ci7_C!KLC<]q"qoi6M
%"8^8GZg!6NCK@b.Vjt>nYIWA\2(L2:L_E-kG%<]1*iD-.L(LCBe_3r92R"VQX5#%2#:,+8h"IEubCGFnPRH6W'7\RN:j:r8X\1mc
%OR+N7!3+7poqnR;h#,J^^.bCjfMZFW4J3Y158,+`b,7_O[B^Iu/`W'Pk<rWmOo.MUCh'GrE#IZ([#B>5`([dSUor!(Os&9:_d8U*
%!jG(]4F2NZ_u-pM>]5CBp)*/Bn\_,#Lb)SVY;</m\R$i/QJQ-nZWI8$r`8X(?H+J>W3UX=Z'VamdFi:_d<?9KAb!EL]@VWCX_&IK
%RW03Y]pook'iuW+2:YoD5\j4V?9.Qe;0f2=UUUWlH5#!O3/a9^q!.=kr2SBkig[sICR=;anbu%I<NN"#^PMHKGmf_""g[`0'gjE`
%>j,bQM9D/!lKc,>RI%B5L^#O,i`V;5HKVAl/W*(Q`HhnlaEFUI?NjA.ggJWKClcIHYkn1u)RO-NJ#!=D\6@4`)dKQ?#_E"f=\mRP
%3pde#A@o=#HJq8#MB3pDjNBOE\V99chn)!I#WN/C>u*gpH4d3NJ+2MT_j]X^!25h2-_2H6dM7'Has($!N4(SNdqN'Kc+AtqFf6jB
%g("NGnk^X:>M#5LMQ`a\T;;[-0ojkMS35j)D36W:dNnMWdb369qpqmcR%kn?Mo1r/YQhKSXj_DK(]SMZ=cV#U,9^o8mmrV#FnTV3
%=RMCPI>>=Yg'LMJkOsR"%N/?Z!HM`)FC<q9;N$-RFmL4#G3IQ@jA:XM5K"7@Xe<-_67R+:<P&oM+pOE88VD3[,:&DU0I+p71/Rf5
%^7h!h:LK4sbWdWH7f5SC\XeBkI#l`PL/-JViYp:nh3@V<*9<:#=+O[r5VX$?TcQGRQQD5DMG$dG2kd!tZaeDBYPuhh7=*ujg*VI^
%%=8j@(67]Qi6MM\c!LEq56$Yg!cirqL%/sS*u$<RnG=$cegje.)qgNOhLfUM@q"=%k+rdg92NhmL%VqbN?W#>Es+#HH%W[">iNl%
%#"'#0K?%Wle5F9R\K.0I+?<Y49mPfcCZIUO&dA0hBX.;oL7ESu+^dl,csZIqOPC*f]XCKLgZgJ1\pmb9Men7^I2So0U*H&GCCABl
%/WZ:QUfX;.<6lZ!#%O%,R_?^/S1Plj8+,JJ&SrI?FYH!(C)+fb,N=%1,hKAb_PJhOi._9_GQTND<2Co$a0WU(;1@%I?="FZ6#=,p
%Um7g1MPU"m>T^\lqm&g8dKr)^g@Ga4m/[;t[F6GK"51Rl15ZEr,3F,:CYSu?H$5q46#NY]KbIA>XLCPZX.[irrsmr*H9Fkn:o\]5
%UOAoEd>@>KV?q;$o2;UZ@7t&\P[R^Tn;\Oq'-'Np[']:5BNhVq]%AQuMF5j]BTZ84L\0pN;$#p:2(6GC\-_8C-TW/*MOWGslL3I9
%iJ;,)@<!,>K;'V^>>==4#+f?s,b>,0,se9TH&p9bo-H:08#YKD,l4IJ,<X--CO)S+oS<5'-nR`ag51j`c/M2G^3Z7r#kDP!f#</r
%^rTV#->"RPNZN')$6BcGi'h0iQ^^DAR35@TpTYj+[Y-VXWjY9@2TS;NG=*[!Q8YF9lNB`DH==,f?[[?j*69cd=09g%EO%.7<!`,\
%+6FtcoFmHq;b#eqVW.GV:\CUL+^J^CMB+pGr7+tlE=#81:38=3(,rhph;:%R&E/X[^1i%dld/)aW:[mC,84u<6fUmP0]$ImXhXU0
%D42Q&P:n-r5(7aq]dFORTiCC^8+T2aZP-]ZI@DAmHT@.J)5;NM-%BQ`]S)>U]RU=M2jMbh8nW/(`Qrl%$mG2;f\t8.G]n)S=^6PV
%]b;CqSAgJ*I.oSG&G/qD4akNce?U?h3sQQXW`'^p=-0*NWY3rkkq$\apfVI*+fHjqZXNe$l7&QBE>(sp:2i%.PVtVne_@PN;L?^"
%`sa,5YD<9AL:4HsgWgThU&:c#g0a(qDS5aIDk8,HrEPC$K#s_QNu=+R<:<4F"(uVK)rLV=1ITVZolGl;1D8cn_'N(&=g5ps8C2`a
%$1+j;Q8W(IX>\B9W#jM"+$[D"jC%+Q>_6Rq#oq2/V9Mb_p%JE2L.DV#e,e__m:^h9fV:-4A-gJmZ\iDfK"69k)1j7rl340D%R"IG
%pu-VjUUUH'H5#!O3/\a3q!RVJ$osd$&C26BdIcRp%nl^\6&5+AT2Pm$/Q,HFZo.JG;mcWhB?9l,I.P%YKVVcb3gr!#)kHchm@29$
%+W3^PnH-Y4P;hkaI=.dV35^-abIdM.o)TTebO+ti.'fXZ!D^TG40EAjXLCPZHe(sR(dCtTZh>eb6Fks+p'/h%7Q8'YRr>k`#riV`
%6`Au&Mlqr,&2ZNtY2;boM'XQ;jZf:<Q,!s&SOIB.%`n<[>tUb]>HL&;<[0\E.VV5K`X.Zkc,+eu5Pt42/QR[WG'd^pP^]S[a<W^P
%H<c5,\K&Kp750KV^(V_r)3<4L*hRDZI45m[@b;mAoVd1GH5s5S_b8!F7EE'cRZ#BlW]e2)Tqf]YU$o^n3O7Y9%5Acqa-S=/fi0hR
%P_)tPfuoq@"WNH.#I]U[2\1/<`c<[EWYQA3>^ONh3"ah%'[ND/+TG="`#c<^GW'XXR6'ujp]!*t,'j!13hrE^:Q#4j!O!DNKm8O-
%6/L)o,n@`n%b]uLU4V+%G^WG7a5"Z%i0cf@)C\a'.PbM5p&pG"c4Xc6^3fjL4%FtoTYi,2TBFKXiqid`p!._rBc^Tq+4rL,k7;fW
%;M\T=g2*;)[<J^u*FIsX0<6>l+!j\K;>GlX4*ug`4't.#T/kqER)93%kj(uZ:&u:&C;.\*H_+?^)4M$!"!p1Z[f4ApQ;GcKQ$9<Z
%*)aM<^LSdMgVYEoA$bTVc;or,B4nsUrOM'lOgO5W0<VK=_;"@](6WDaB&q+(i[YYMN?fq`G_nu?=X#>[X+L"VjW3Y?ISk&dqILTp
%mRMgAH;m&dfudW/lHE>Eh[V@DF]_3"^)3r)lhkgG]+m++$CAT&A[8IG,'+/`.1*mYSPY,]pD/jJlZ0J6h@B',!=7WdlTa1&3P$#n
%TN(AJ7g!CDUDr+hc%d-X4$p##I.J891Y/a\+tDN/kGkp^nadEG9A,"'-Fu5\3Yf\pX^OhoolfQN*3$i\kMq?mcU%f7(RLdoDaHqr
%7rbjS?i>EEC+?WpD#\bRbTXJm)R^/8^^F^jX_&j0K]kW4C$GCB1I3l7B&>/>=QD<h(^LXE\C&t2ib-]65&sL&aYaQI1i*pb)ZSL2
%m#U4c1]o#1Zo%h8;T<hJ6D%=FLh&GOmOrZ+9mHn:"rs;qU<c'1,[Z(^5I84eW#Nf4i+JNDgO!h'-tr[l^&a7+NKQc[^O#\T3"P`+
%aX/)#TS$r"+BH3g+L6,SV?+9*75)?@F@KHX=lD@SA^5KYIQ$'O-u-Kd<9"+V?)+4KoZnSmc3!+8Y0TZNfR17+Q^2:'0nVS$#jpY9
%$`9(X9=NtRd#l?oQp9o?G8)os<9"+._e)cnp<O5_c%0ngl2jWnP"IJ:W0:qjmbidTW3K,c+?_UF#/YfC/;&LZTm8an\r(Q%bmHPL
%K1-%<Q@;:_b#NL["%a5&X>apZ1n+Eo_`S1FhU*I-ZN#,X!dV_LgnTK<)8;=aJER1lZNgObFpVcs"H*>aAk@XjMJ4aom"h6cB#H#S
%Is/$_Hd*iG+P55]frSN.D#.cThp.YuqVI*h6A)6f"5GCZ$Z)Bt%J<CNk]n<^Q_DkOc+eRJTGM;jpHPXeCNjBp<,[Qa/E-Zmj(J)u
%l$O7)Tj6nO8+WIZfnHWDk2YR?=/63lQ]olhn0ppsU8)pNpcl4E<_Y'h&EZ#HfO^;?';Q+9E=ks.lOCr63Lok!s6tt`F/cYMja&:8
%)E<Woh>$:(lhj#7gT&".khGB,m".d")'9l*QW?Fg>hMH"_bO$(CoR[dpi'b^0!SAG7HDTQVT1?1*BWL]s!cX)6aCeJRB]_<Jk%n8
%M6f;$4b$.lCC!rVjU+4^@.k/6)t8h1q;se7X-8l\N"hb.aFn*6=rf=6M'5MXr2KCMq=,A;o?o:SSLYd.:@(jRJ5\OVM5`RD4b)3n
%>)OdI1#s=JE"SJq@+('A(ih35Z`h3E9@2$Oal)8;%]Qf[no`5]42RcV2d4IAr,1fJO4"XtCJA2Th(3F:iNo_5Va80k_%iH)@3#IR
%Xj\'FNa?Ra/-q&?$>8QB8t?j]V@!bc'ut`g33?.u5jH]7`iJpQCNHf'<*Y#Q]a='89Z<!/I.d5V@3LF[`+S38\`#?O6O%pJ>PC__
%Qghef<_c-E[H8,!gWu._H#bPHk-q309%R>!jB5m-;Ul'oNU5c'Y'fp=Z)Ea!C+J[3=7k#%g]/Aos0Zu$4dm?Zn8?AJ@4j(H_,e=O
%lY)@j80\-J#iF"m@k^HTf@i))r]Lu6)4B1,UV6$6<bGH6pX`]3b_Ui/+PZTAF>GOOhR3gY2u$k1T7`'rHt!;mW6_=)2I<?ZeRZLr
%pB!iTMoc7g*rA%Fc-gr0T,lQ"Yn:190(C$W$`\n/%rBJcA*%#>Cc@m^S5b_6Z,PEPZhU]5'f7OKVq'Ir"'qf?*<3BHOn;gRFg"oj
%+E#Sma(<3j^nMeUcb<U[9/UX7JkMGdNGZ^F$bSga7\;[P$-l510#k,8@I]%I7kC#r)d1Ps3`pI2<MAnb618#4joO8tI-8=r<Z.mX
%0iVfGqntlGkCTg*U:,Cagk%)n$5jZKK1_fR:?I[nWF_b_C[ih:6/AkWC>5TDpcQdL`E7].B>N**1_p,Ij/e<[3_'79f8\K4F:u%d
%#k:]e"RK*OW_d:R<-09XE3V=+G.;jhU7<'XR6&9IL/%eUX;.\D/ZAMIbUJEr[-p-q.*+ANaU+QhP7f+uE^&ZmTI\*68G*/?(i1X%
%BFhuMJqEa,6ROb9XfceKr!L<K%2*;9Sl`gNEH[m0QVd?Z:j"J:72YcDlP"mH.OH?jaV_,N2B&Xg]7d?6qj:MpMoiq?8QKL0PqMNH
%6!'6I<c^'r%'&2FoRg5l&%-Rc)KlGn(MeS$Y5q,]dT4;*$T9(<LqPB(FP(ckXo?d)@?!92d,uoOJ[XaBJTnrCrpLO%j?*R(rYt+L
%!H-u<kZknd;t>u)`2G@TpReGP3!Vqide06iZUnN+X'QJ9n2T5XC$]H#cm[0C2\q8U:`tEs#,C842AR!s^6aHSSDJF@D[kQ\%!Ff6
%UHrCdHg?jZ"0Xcf!Fg_TTYNu>$*N$,>R-rAkBL_a+f0q`(g#'>>IsfJKdR*3c]IYaKgLe^=IJ*SVpVT(]lj!YMEm'>"F&n#S1PVn
%>=gfcJB6066@?$8_MMlAgDpkH/g-&$LBaW/qr#u!$F"RgS&Z@i92kUf6$s$T0+IBQ&j9.nF?Ii4@1qSuO\-)!n^RF%:Snbe8%VUU
%6"^/("Bd"7Kr.3\&(Vr/?eJ,$G>%Z9hcgYZPcZ#BCtDV3SYtk,T7%;Io)AkmSXki@GRJYjG=(96pf\,:>5%BKmC\shOq@=k`*51Z
%k@j[r-:)E(U6q7kLLX(r3UJ"i(<4N.=Y3@;;EKnq)k%<hEY9Yh^+k8Uc5jqng$7_8(tTX?)41ejqHHSE#bLQ-+uqfdIHQ@H9#2"e
%eo=Sp;)!cWFgG3":qq3UIVZ]G5EeMK,#a=P[]#J"Rl9]EF+t%1EFb1CN\R#7/ehtDk8f=4iC3Bi`?HSmN<ZdMGDql@hVkuQlqVM+
%/LGX\SoAd-$t_3&\0$)A?5L/lPK6lONS/=^g&UHd&fo<STt**!'2dOf1%5N,m^#l;F3R!to&m/jJ?;]8k*`"YSf_'3qaPQm`).5r
%)$_Yrc-@@<EdTro!M,ln@f:DRFEhh4E@H_"`jFT7$%f;6$U+j(nUR&DA.U%PI_rn9A'#hJ!rc<Ugd6H%[5']L0q1^LSs0M*F?J=1
%Q)7S8nc_adp4?FQU\?TRNVi;^c<IZ!dG;j6]\W-Kra%kg179IT]HBDDf[QrJKQ\RQjPu7e2&p<Fk[5V)K6<#;_/Y-fs"nAl`\@oQ
%IK_mUc/MrBfs&1Th-<:sDkbXq0UH5'ioOimR!_]HA5Q/&C#C+Fh@"-aQ[S7mWb\\M(X09,+9'Frm+Jc_PEQZ8=79)OL("ne`9Vef
%g0HDCRS<)-4lPa@R`p;"Z00<jhfr,qB=:#h]V$MX]<kA!"$7Y'36.T-.4ckFclt9Z7nCG&">FOJ[IPUuE3U=D\BH5VY-9W'%.k*u
%qh:FUDkc2IHjLWk7>HPqa0P7o-r(,:jabH+hUHoHXLS<M<CEs6dHZaQKj7BZmIObQ5R@+u>[1'45FbPWQ4e.dG/!++C")&L&p?1S
%Jb<@)$/sLRHPOf"k@*Wk+9TZc^Y*rSRm,(umK);LBWGVoHM?[rA.hS_ChJ>fif;[.I27frRNXJ?;bEGj,*2GR#i!E@OG<VM+\[AP
%*o)$K\"["0,ZD/`rLVd>+JtT0YN_V`GYWX]K$?;N]6MZBYD^$t6?!T7hep<Bd0tt8<ZrN]!g-!B'Es:UQLS6P;da2qk2,SU";aPJ
%U00r2;n!T,G0ig**O'B[o)psK;b%[3/*K1$+r?dAjok3OA4$nhe%/I?Aj]c,YB-t7LqMH<M,*-j/(Q'E;68<M+C(E7MhWN7RCbu4
%@6c<t.>"7Y,,C'HW<Q:Z9mKO:Z./a%A1\?D8QH0e-YTfOHQ%ck]/*[k#[4bLR9%<4cA:c7R1N!k;4duW:u'PP36$md_D/DeHk.t*
%M&Ws]RT.+jMV2%996imk[0+j36pPuqA#Ffj'fB`$(RC2oK]MmdU9[0Q7unq?@Lh9Um";3?7rW$_:X(YLY]UK-8&80hQFEWNBQP3j
%(]>9-#p'?.Otm@eYU7mi1`X[^PFkB]J^cC[0Y3g`'O1Db6]c^pZO@smh':INJ!);C$FOImA6#uk6#&8$D#:/KcoYHUHTaIfKckl'
%)\Hh!L^aC5ItbE7\R2s,:s?jT>#WXR@sm-[odf7BrH@X;1s@Yjgc\sc#cM$GQq0JiG@N@7K'1#44-Z0],rgFZ&k^j4KQ$os_0l24
%fS\qH@NQ<;#t44J6PeTHJuQ,1_QS)U<RRM$#PFkFX([gXaODe,I0#h<qUf/BNKkV!&<O[1%[Vl#<4c(#Qp/K7Jc$J><oX^JL0t=+
%I':Ur6?6k6_*f*B"cGCPCXoU2q[u@'ULAm(CU[]"&<7mU!3;10*>c(mBo:])YuYsl&006Rf#QWMK,t;EK:fp'GbWmBea"oTOM"a>
%M2qDr3rGn`L/`KgrJ+;p\2$,^m7LbAG)oX!6C&-8Ysb\WR&"-W$*aT<>qD6+"G=t39*O/pT@EKqV6Yg`A-h>"(b<[jqcSbNNNB\0
%)Q8t,F&h!&Z3O4^Mfot)=M)VR8^YIK'IsUYA7)?E_m]b)+A[0h($l-5:%ER8+Ih%(/eOQ^)cYd!5q$dXU0G5d5iY<P:J;\EpAI&O
%<kJdVV:iOqQpJgI/QNqqm,5.qC\TtP).s;&c9*;W,cK6]Sg6ce+,foS"kh3&>^f=7U!Z6h`AEpCr7\Q8C&l`<T`Ij%K'X9c*K5_!
%\@<WiGW?>[fM%:j$DcZkXE^2]I1%s[At#Q\aG!O.104aW5"mc6@)n:CIk'#G^]RWUi`6VnD5T&aZ6>UY:T:5?>_1=?K$h9=(.$`N
%]e'r&+h)bE?D>f,1+f`#M'"g;5g,Btcul/r%<D[ajq<j7lV_03qV?$sR+i+.<u8W'Y"OI^=FuaIHb:>S%G<&.&Q#UeH4`N\S5aaN
%*96+Z,bLqCjVlnt?/iEO:tilE6Z87TR'MstW[cK9N1>8T%R\l,"#!E\'8#PE=4&RF*gY[&k<FU4kuiS)BHn%.7:"-I+WK:<]'sbt
%T"]sEB53S;_?7>#c6JqjOa=?=X<lk4EFj[T8]'V!$ac;A[T05WE,#"u)J0CdmN/Hj![MldfJn=TI:_D]6,s3GRiQA1U:C>d+A/N#
%rEq8iqL^7FAqNQ?qor;YOfTiQYBFWQ:^=jLBs@kbC?PX5[t8R9p+I=r&7OuJ/Va@#N"cF*0nt`joUm2X@9'Mja1$/Tj+Q"6;P==d
%-ugZO>"LRSPCQ;UaBX9o)Br#m4W7IFRPWZ0P7nJA!BiuDl$#0,7Mok-*j<<nOn(GCVUQ#;TbRFpK!(DqO0hV\K=ab*phDZZE]ggg
%4IDJGG9#.&1Ls^ZrahH(6nTQTD09g*db(o0qF2-4#_t`c?1^ct%>gt=$'N^)?qE3cf-"]*GXW/2JF2!02DlR<1r<k[N`-?Yr<[e#
%aU!bY-Gc,[_<,R0@puN*8J>H-.rQFe[@"9]^nXoEJoGRM0H+O?@I>2?*WtVqnT\=#mN:?%:oW9\Gu#)E1n2(Kfs#!70\\ZqPS?r_
%ik0$g!^[)!<%@8C$mO?[mVGu^mb;W)pu+=h*@<%k03`$BC%37Rp<gq\E(:<!Qs1sY$3aE49Drjp1Y\AsfU;;JdY5p##gB`d(N9RT
%JN0*Mc(6sqBehD'kN*";`RY[re)Zl)+?eZB?'noh*R1H!AQZSKmMemQ`7RUQ2MQUOBBK(:g._n)PV,(fl%G?ahL=O;EklkA0Kl]d
%I%aTPCV#V5<"\k<e"8mfF^c5dBas7\89#!7!c4XVHPVUHo3po*V=1O:fkG0t79i#BeDT^%G=a2hN;^u"1II3<dR#!K.AU]T1kXTJ
%>R^GCjioDu#\h\PE[W/?X7+-g$=?,I7tt<,Af6M#h4jM5_:*TmKAR8pmc,U/Zn*J/%1I@_VT1F&igDm$2M>a4nj3\/OB[hrOjOSY
%<\4'qPRoj&OO)<.Eff]b@;+MCHku,Qi$rk!)gT39bhM%sSc^lg`/G!bP"E3;%W&I'#:u8iWj..JjP7b^XFYsAPW=<IdKR8C@lB_!
%R\qur,lr%!QO-$B(D\s8K8%`UJu(C,&!GgRT;#1N+u=.)e"JPHGb?UU&I51^>!7Dt-:TNgR](R:@n,_'R$)7lG2rAcBe+_^O2S];
%@7T:P]+T4//"7t+2foFg;?(q:I/;BsT76RYp$[A]It.IBf3`t$mW\P8^]3P:cS,<FrVXo!"8MA@QQKT7o_IU@s*FYAoiFA,H25eP
%e&tNOIJW'eQe.kMIm*c*q=VoaT0C"RIJLp]rrU#*EP[D@huA0'_Yt&R>S]p~>
%AI9_PrivateDataEnd
