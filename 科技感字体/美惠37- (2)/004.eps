%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: plata_52.eps
%%Creator: Adobe Illustrator(R) 19.1
%%For: user
%%CreationDate: 4/12/2016
%%BoundingBox: 0 0 1200 1200
%%HiResBoundingBox: 0 0 1200 1200
%%CropBox: 0 0 1200 1200
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 19.1.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 19.1.0 x29 R agm 4.7731 ct 5.3840%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c067 79.157747, 2015/03/30-23:40:42        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">plata_52</rdf:li>
            </rdf:Alt>
         </dc:title>
         <dc:creator>
            <rdf:Seq>
               <rdf:li>Iryna</rdf:li>
            </rdf:Seq>
         </dc:creator>
         <dc:description>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Abstract vector background with high tech circuit board</rdf:li>
            </rdf:Alt>
         </dc:description>
         <dc:subject>
            <rdf:Bag>
               <rdf:li>circuit</rdf:li>
               <rdf:li>vector</rdf:li>
               <rdf:li>backgrounds</rdf:li>
               <rdf:li>pattern</rdf:li>
               <rdf:li>tech</rdf:li>
               <rdf:li>processor</rdf:li>
               <rdf:li>abstract</rdf:li>
               <rdf:li>abstraction</rdf:li>
               <rdf:li>chip</rdf:li>
               <rdf:li>card</rdf:li>
               <rdf:li>high</rdf:li>
               <rdf:li>design</rdf:li>
               <rdf:li>electrical equipment</rdf:li>
               <rdf:li>integrated</rdf:li>
               <rdf:li>technical</rdf:li>
               <rdf:li>computer part</rdf:li>
               <rdf:li>hardware</rdf:li>
               <rdf:li>engineering</rdf:li>
               <rdf:li>line</rdf:li>
               <rdf:li>cyberspace</rdf:li>
               <rdf:li>computer equipment</rdf:li>
               <rdf:li>graphic</rdf:li>
               <rdf:li>electronics industry</rdf:li>
               <rdf:li>digital</rdf:li>
               <rdf:li>technology</rdf:li>
               <rdf:li>computer</rdf:li>
               <rdf:li>circuit board</rdf:li>
               <rdf:li>illustration</rdf:li>
               <rdf:li>creativity</rdf:li>
               <rdf:li>connection</rdf:li>
               <rdf:li>computing</rdf:li>
               <rdf:li>backdrop</rdf:li>
               <rdf:li>science</rdf:li>
               <rdf:li>cover</rdf:li>
               <rdf:li>internal</rdf:li>
               <rdf:li>connect</rdf:li>
               <rdf:li>art</rdf:li>
               <rdf:li>industry</rdf:li>
               <rdf:li>conceptual</rdf:li>
               <rdf:li>construction</rdf:li>
               <rdf:li>textured</rdf:li>
               <rdf:li>computer chip</rdf:li>
               <rdf:li>mother board</rdf:li>
            </rdf:Bag>
         </dc:subject>
         <xmp:MetadataDate>2016-04-12T14:17:38+03:00</xmp:MetadataDate>
         <xmp:ModifyDate>2016-04-12T14:17:38+03:00</xmp:ModifyDate>
         <xmp:CreateDate>2016-04-12T14:17:37+03:00</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CC 2015 (Windows)</xmp:CreatorTool>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEBLAEsAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABABLAAAAAEA&#xA;AQEsAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A8qYq7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FU20/yxrF/b&#xA;C5giAhavBnYKWCmhYA78eW3LpXbscuhp5SFhws/aGLHLhkd/x9vkiP8ABWu/yR/8GMn+Vm1fyth7&#xA;z8nf4K13+SP/AIMY/lZr/K2HvPycPJOvE0EaEnoOYx/KTX+VsHefklV/p91YzLFcKAXUSROrB0dG&#xA;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&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq//9k=</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:InstanceID>xmp.iid:7915d91c-9be0-7144-b7ff-b9073c5feaa4</xmpMM:InstanceID>
         <xmpMM:DocumentID>xmp.did:7915d91c-9be0-7144-b7ff-b9073c5feaa4</xmpMM:DocumentID>
         <xmpMM:OriginalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</xmpMM:OriginalDocumentID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:cd47b843-0315-4c41-9688-50e242d3afd8</stRef:instanceID>
            <stRef:documentID>xmp.did:115A99264D6BE51194FFADFDE0B012D7</stRef:documentID>
            <stRef:originalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F07763D45588E411BF89F345A28D8C9F</stEvt:instanceID>
                  <stEvt:when>2014-12-20T17:10:37+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:24845C695A88E411BF89F345A28D8C9F</stEvt:instanceID>
                  <stEvt:when>2014-12-20T17:11:02+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:28845C695A88E411BF89F345A28D8C9F</stEvt:instanceID>
                  <stEvt:when>2014-12-20T17:18:19+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:4465C60ACE89E4119A65C8F5B8A1FEA0</stEvt:instanceID>
                  <stEvt:when>2014-12-22T13:47:05+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:115A99264D6BE51194FFADFDE0B012D7</stEvt:instanceID>
                  <stEvt:when>2015-10-05T13:50:07+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:7915d91c-9be0-7144-b7ff-b9073c5feaa4</stEvt:instanceID>
                  <stEvt:when>2016-04-12T14:17:38+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2015 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Print</illustrator:StartupProfile>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>1200.000000</stDim:w>
            <stDim:h>1200.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>35</xmpG:red>
                           <xmpG:green>31</xmpG:green>
                           <xmpG:blue>32</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>35</xmpG:red>
                           <xmpG:green>31</xmpG:green>
                           <xmpG:blue>32</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 10.01</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -1200 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 1200 li
1200 1200 li
1200 0 li
cp
clp
1200 1200 mo
0 1200 li
0 0 li
1200 0 li
1200 1200 li
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
0 0 0 rgb
f
71.1348 1124.79 mo
71.1348 1126.44 71.6372 1128 72.4893 1129.3 cv
76.9478 1129.3 li
75.3374 1128.42 74.228 1126.74 74.228 1124.79 cv
74.228 1121.94 76.5444 1119.63 79.3838 1119.63 cv
82.2266 1119.63 84.5396 1121.94 84.5396 1124.79 cv
84.5396 1126.74 83.4336 1128.42 81.8193 1129.3 cv
86.2798 1129.3 li
87.1318 1128 87.6323 1126.44 87.6323 1124.79 cv
87.6323 1120.24 83.9302 1116.54 79.3838 1116.54 cv
74.8369 1116.54 71.1348 1120.24 71.1348 1124.79 cv
cp
.376471 .788235 .901961 rgb
f
195.864 1112.58 mo
195.864 1111.59 196.674 1110.78 197.668 1110.78 cv
198.666 1110.78 199.473 1111.59 199.473 1112.58 cv
199.473 1113.58 198.666 1114.38 197.668 1114.38 cv
196.674 1114.38 195.864 1113.58 195.864 1112.58 cv
cp
197.668 1108.2 mo
195.251 1108.2 193.288 1110.17 193.288 1112.58 cv
193.288 1115 195.251 1116.97 197.668 1116.97 cv
199.092 1116.97 200.348 1116.27 201.148 1115.22 cv
201.148 1116.37 li
215.239 1116.37 li
215.239 1108.8 li
201.148 1108.8 li
201.148 1109.95 li
200.348 1108.89 199.092 1108.2 197.668 1108.2 cv
cp
f
195.864 1100.73 mo
195.864 1099.74 196.674 1098.92 197.668 1098.92 cv
198.666 1098.92 199.473 1099.74 199.473 1100.73 cv
199.473 1101.72 198.666 1102.53 197.668 1102.53 cv
196.674 1102.53 195.864 1101.72 195.864 1100.73 cv
cp
197.668 1096.35 mo
195.251 1096.35 193.288 1098.31 193.288 1100.73 cv
193.288 1103.14 195.251 1105.1 197.668 1105.1 cv
199.092 1105.1 200.348 1104.41 201.148 1103.36 cv
201.148 1104.68 li
215.239 1104.68 li
215.239 1097.12 li
201.148 1097.12 li
201.148 1098.1 li
200.348 1097.04 199.092 1096.35 197.668 1096.35 cv
cp
f
195.864 1089.38 mo
195.864 1088.39 196.674 1087.58 197.668 1087.58 cv
198.666 1087.58 199.473 1088.39 199.473 1089.38 cv
199.473 1090.38 198.666 1091.19 197.668 1091.19 cv
196.674 1091.19 195.864 1090.38 195.864 1089.38 cv
cp
197.668 1085.01 mo
195.251 1085.01 193.288 1086.96 193.288 1089.38 cv
193.288 1091.8 195.251 1093.77 197.668 1093.77 cv
199.092 1093.77 200.348 1093.07 201.148 1092.02 cv
201.148 1092.82 li
215.239 1092.82 li
215.239 1085.26 li
201.148 1085.26 li
201.148 1086.75 li
200.348 1085.7 199.092 1085.01 197.668 1085.01 cv
cp
f
192.513 1003.3 mo
191.521 1003.3 190.71 1002.49 190.71 1001.49 cv
190.71 1000.5 191.521 999.685 192.513 999.685 cv
193.51 999.685 194.321 1000.5 194.321 1001.49 cv
194.321 1002.49 193.51 1003.3 192.513 1003.3 cv
cp
192.513 997.111 mo
190.098 997.111 188.132 999.074 188.132 1001.49 cv
188.132 1003.91 190.098 1005.88 192.513 1005.88 cv
194.93 1005.88 196.895 1003.91 196.895 1001.49 cv
196.895 999.074 194.93 997.111 192.513 997.111 cv
cp
f
213.907 919.008 mo
213.907 920.004 213.096 920.82 212.106 920.82 cv
211.109 920.82 210.298 920.004 210.298 919.008 cv
210.298 918.018 211.109 917.211 212.106 917.211 cv
213.096 917.211 213.907 918.018 213.907 919.008 cv
cp
213.907 942.471 mo
213.907 943.465 213.096 944.273 212.106 944.273 cv
211.109 944.273 210.298 943.465 210.298 942.471 cv
210.298 941.479 211.109 940.664 212.106 940.664 cv
213.096 940.664 213.907 941.479 213.907 942.471 cv
cp
180.915 1042.99 mo
180.915 1043.99 180.107 1044.79 179.11 1044.79 cv
178.116 1044.79 177.304 1043.99 177.304 1042.99 cv
177.304 1042 178.116 1041.19 179.11 1041.19 cv
180.107 1041.19 180.915 1042 180.915 1042.99 cv
cp
180.915 1071.86 mo
180.915 1072.86 180.107 1073.66 179.11 1073.66 cv
178.116 1073.66 177.304 1072.86 177.304 1071.86 cv
177.304 1070.86 178.116 1070.05 179.11 1070.05 cv
180.107 1070.05 180.915 1070.86 180.915 1071.86 cv
cp
212.106 914.635 mo
209.685 914.635 207.722 916.598 207.722 919.008 cv
207.722 921.268 209.444 923.117 211.641 923.352 cv
211.641 938.133 li
209.79 938.328 208.279 939.672 207.853 941.453 cv
204.255 941.453 li
204.255 950.717 li
202.182 950.717 li
202.182 958.279 li
215.582 958.279 li
215.582 950.717 li
206.289 950.717 li
206.289 948.906 206.289 944.732 206.289 943.486 cv
206.762 943.486 207.345 943.486 207.853 943.486 cv
208.316 945.41 210.038 946.856 212.106 946.856 cv
214.04 946.856 215.668 945.58 216.246 943.832 cv
216.629 943.832 217.079 943.832 217.486 943.832 cv
217.486 945.795 217.486 1027.12 217.486 1029.08 cv
216.858 1029.08 215.962 1029.08 215.239 1029.08 cv
215.239 1027.01 li
201.148 1027.01 li
201.148 1029.17 li
191.019 1029.17 li
181.088 1039.11 li
180.492 1038.8 179.825 1038.61 179.11 1038.61 cv
176.695 1038.61 174.726 1040.57 174.726 1042.99 cv
174.726 1045.19 176.364 1047 178.479 1047.31 cv
178.479 1067.54 li
176.364 1067.85 174.726 1069.65 174.726 1071.86 cv
174.726 1074.28 176.695 1076.24 179.11 1076.24 cv
181.527 1076.24 183.494 1074.28 183.494 1071.86 cv
183.494 1069.94 182.241 1068.32 180.513 1067.73 cv
180.513 1047.12 li
182.241 1046.53 183.494 1044.91 183.494 1042.99 cv
183.494 1042.03 183.171 1041.15 182.645 1040.42 cv
184.596 1038.47 191.383 1031.69 191.863 1031.21 cv
192.458 1031.21 198.406 1031.21 201.148 1031.21 cv
201.148 1034.57 li
215.239 1034.57 li
215.239 1031.13 li
219.52 1031.13 li
219.52 941.793 li
216.415 941.793 li
216.173 940.234 215.112 938.947 213.681 938.391 cv
213.681 923.092 li
215.315 922.455 216.483 920.877 216.483 919.008 cv
216.483 916.598 214.52 914.635 212.106 914.635 cv
cp
f
256.822 1120.06 mo
255.827 1120.06 255.016 1119.25 255.016 1118.25 cv
255.016 1117.26 255.827 1116.45 256.822 1116.45 cv
257.816 1116.45 258.63 1117.26 258.63 1118.25 cv
258.63 1119.25 257.816 1120.06 256.822 1120.06 cv
cp
255.016 1048.15 mo
255.016 1047.15 255.827 1046.34 256.822 1046.34 cv
257.816 1046.34 258.63 1047.15 258.63 1048.15 cv
258.63 1049.14 257.816 1049.95 256.822 1049.95 cv
255.827 1049.95 255.016 1049.14 255.016 1048.15 cv
cp
257.838 1114 mo
257.838 1052.4 li
259.762 1051.93 261.205 1050.21 261.205 1048.15 cv
261.205 1045.73 259.239 1043.77 256.822 1043.77 cv
254.407 1043.77 252.442 1045.73 252.442 1048.15 cv
252.442 1050.21 253.88 1051.93 255.806 1052.4 cv
255.806 1114 li
253.88 1114.47 252.442 1116.19 252.442 1118.25 cv
252.442 1120.67 254.407 1122.63 256.822 1122.63 cv
259.239 1122.63 261.205 1120.67 261.205 1118.25 cv
261.205 1116.19 259.762 1114.47 257.838 1114 cv
cp
f
322.159 1084.75 mo
321.165 1084.75 320.358 1083.94 320.358 1082.94 cv
320.358 1081.95 321.165 1081.13 322.159 1081.13 cv
323.157 1081.13 323.965 1081.95 323.965 1082.94 cv
323.965 1083.94 323.157 1084.75 322.159 1084.75 cv
cp
322.159 1078.56 mo
319.746 1078.56 317.78 1080.53 317.78 1082.94 cv
317.78 1085.36 319.746 1087.32 322.159 1087.32 cv
324.58 1087.32 326.543 1085.36 326.543 1082.94 cv
326.543 1080.53 324.58 1078.56 322.159 1078.56 cv
cp
f
347.418 1093.25 mo
348.415 1093.25 349.223 1094.06 349.223 1095.06 cv
349.223 1096.05 348.415 1096.86 347.418 1096.86 cv
346.424 1096.86 345.617 1096.05 345.617 1095.06 cv
345.617 1094.06 346.424 1093.25 347.418 1093.25 cv
cp
347.418 1099.44 mo
349.839 1099.44 351.8 1097.47 351.8 1095.06 cv
351.8 1092.64 349.839 1090.68 347.418 1090.68 cv
345.004 1090.68 343.041 1092.64 343.041 1095.06 cv
343.041 1097.47 345.004 1099.44 347.418 1099.44 cv
cp
f
375.516 1118.25 mo
375.516 1119.25 374.706 1120.06 373.711 1120.06 cv
372.714 1120.06 371.909 1119.25 371.909 1118.25 cv
371.909 1117.26 372.714 1116.45 373.711 1116.45 cv
374.706 1116.45 375.516 1117.26 375.516 1118.25 cv
cp
371.909 1024.69 mo
371.909 1023.7 372.714 1022.89 373.711 1022.89 cv
374.706 1022.89 375.516 1023.7 375.516 1024.69 cv
375.516 1025.69 374.706 1026.49 373.711 1026.49 cv
372.714 1026.49 371.909 1025.69 371.909 1024.69 cv
cp
378.09 1024.69 mo
378.09 1022.27 376.129 1020.3 373.711 1020.3 cv
371.298 1020.3 369.331 1022.27 369.331 1024.69 cv
369.331 1026.8 370.833 1028.57 372.825 1028.98 cv
372.825 1113.96 li
370.833 1114.38 369.331 1116.14 369.331 1118.25 cv
369.331 1120.67 371.298 1122.63 373.711 1122.63 cv
376.129 1122.63 378.09 1120.67 378.09 1118.25 cv
378.09 1116.23 376.719 1114.55 374.86 1114.04 cv
374.86 1028.9 li
376.719 1028.39 378.09 1026.71 378.09 1024.69 cv
cp
f
471.658 1094.8 mo
471.658 1095.8 470.847 1096.61 469.853 1096.61 cv
468.856 1096.61 468.047 1095.8 468.047 1094.8 cv
468.047 1093.8 468.856 1093 469.853 1093 cv
470.847 1093 471.658 1093.8 471.658 1094.8 cv
cp
465.469 1094.8 mo
465.469 1096.88 466.93 1098.62 468.878 1099.06 cv
468.878 1129.3 li
470.913 1129.3 li
470.913 1099.03 li
472.816 1098.56 474.236 1096.85 474.236 1094.8 cv
474.236 1092.38 472.27 1090.42 469.853 1090.42 cv
467.436 1090.42 465.469 1092.38 465.469 1094.8 cv
cp
f
484.031 1071.09 mo
484.031 1072.08 483.221 1072.88 482.224 1072.88 cv
481.231 1072.88 480.421 1072.08 480.421 1071.09 cv
480.421 1070.09 481.231 1069.28 482.224 1069.28 cv
483.221 1069.28 484.031 1070.09 484.031 1071.09 cv
cp
482.224 1066.7 mo
479.81 1066.7 477.843 1068.67 477.843 1071.09 cv
477.843 1073.29 479.481 1075.1 481.596 1075.4 cv
481.596 1129.3 li
483.63 1129.3 li
483.63 1075.22 li
484.019 1075.08 484.379 1074.89 484.709 1074.67 cv
484.709 1067.48 li
484.001 1067 483.146 1066.7 482.224 1066.7 cv
cp
f
379.813 965.58 mo
379.813 964.582 380.62 963.775 381.617 963.775 cv
382.611 963.775 383.418 964.582 383.418 965.58 cv
383.418 966.57 382.611 967.385 381.617 967.385 cv
380.62 967.385 379.813 966.57 379.813 965.58 cv
cp
385.996 965.58 mo
385.996 963.162 384.031 961.201 381.617 961.201 cv
379.2 961.201 377.233 963.162 377.233 965.58 cv
377.233 967.664 378.693 969.398 380.644 969.848 cv
380.644 984.387 li
380.644 984.387 390.818 994.563 391.383 995.125 cv
391.383 995.396 391.383 995.914 391.383 996.426 cv
389.304 996.426 li
389.304 1015.33 li
395.319 1015.33 li
395.319 996.426 li
393.419 996.426 li
393.419 994.283 li
393.419 994.283 383.242 984.111 382.676 983.549 cv
382.676 982.842 382.676 972.334 382.676 969.815 cv
384.58 969.336 385.996 967.625 385.996 965.58 cv
cp
f
366.667 942.557 mo
366.667 941.559 367.477 940.752 368.47 940.752 cv
369.464 940.752 370.274 941.559 370.274 942.557 cv
370.274 943.547 369.464 944.356 368.47 944.356 cv
367.477 944.356 366.667 943.547 366.667 942.557 cv
cp
372.852 942.557 mo
372.852 940.139 370.887 938.17 368.47 938.17 cv
366.053 938.17 364.089 940.139 364.089 942.557 cv
364.089 944.664 365.591 946.438 367.583 946.848 cv
367.583 982.836 li
367.583 982.836 379.129 994.385 379.697 994.953 cv
379.697 995.264 379.697 995.875 379.697 996.426 cv
377.791 996.426 li
377.791 1015.33 li
383.806 1015.33 li
383.806 996.426 li
381.729 996.426 li
381.729 994.113 li
381.729 994.113 370.187 982.565 369.619 981.996 cv
369.619 981.244 369.619 951.613 369.619 946.766 cv
371.477 946.254 372.852 944.568 372.852 942.557 cv
cp
f
153.08 1126.24 mo
152.085 1126.24 151.273 1125.44 151.273 1124.44 cv
151.273 1123.44 152.085 1122.63 153.08 1122.63 cv
154.073 1122.63 154.884 1123.44 154.884 1124.44 cv
154.884 1125.44 154.073 1126.24 153.08 1126.24 cv
cp
153.08 1120.06 mo
150.663 1120.06 148.695 1122.03 148.695 1124.44 cv
148.695 1126.86 150.663 1128.82 153.08 1128.82 cv
155.497 1128.82 157.462 1126.86 157.462 1124.44 cv
157.462 1122.03 155.497 1120.06 153.08 1120.06 cv
cp
f
328.35 964.123 mo
329.343 964.123 330.154 964.93 330.154 965.92 cv
330.154 966.918 329.343 967.727 328.35 967.727 cv
327.356 967.727 326.543 966.918 326.543 965.92 cv
326.543 964.93 327.356 964.123 328.35 964.123 cv
cp
315.72 1026.24 mo
314.723 1026.24 313.914 1025.42 313.914 1024.43 cv
313.914 1023.44 314.723 1022.63 315.72 1022.63 cv
316.713 1022.63 317.52 1023.44 317.52 1024.43 cv
317.52 1025.42 316.713 1026.24 315.72 1026.24 cv
cp
317.52 1059.75 mo
317.52 1060.74 316.713 1061.55 315.72 1061.55 cv
314.723 1061.55 313.914 1060.74 313.914 1059.75 cv
313.914 1058.75 314.723 1057.94 315.72 1057.94 cv
316.713 1057.94 317.52 1058.75 317.52 1059.75 cv
cp
320.614 901.488 mo
320.614 900.492 321.425 899.684 322.418 899.684 cv
323.416 899.684 324.225 900.492 324.225 901.488 cv
324.225 902.486 323.416 903.293 322.418 903.293 cv
321.425 903.293 320.614 902.486 320.614 901.488 cv
cp
326.803 901.488 mo
326.803 899.072 324.835 897.102 322.418 897.102 cv
320.001 897.102 318.035 899.072 318.035 901.488 cv
318.035 903.742 319.762 905.592 321.961 905.818 cv
321.961 917.879 321.961 1021.36 321.961 1023.24 cv
321.348 1023.24 320.534 1023.24 319.914 1023.24 cv
319.396 1021.41 317.721 1020.05 315.72 1020.05 cv
313.301 1020.05 311.335 1022.02 311.335 1024.43 cv
311.335 1026.57 312.886 1028.35 314.915 1028.73 cv
314.915 1055.45 li
312.886 1055.82 311.335 1057.6 311.335 1059.75 cv
311.335 1062.16 313.301 1064.13 315.72 1064.13 cv
318.137 1064.13 320.097 1062.16 320.097 1059.75 cv
320.097 1057.76 318.767 1056.1 316.951 1055.56 cv
316.951 1028.62 li
318.499 1028.16 319.699 1026.88 320.014 1025.27 cv
323.994 1025.27 li
323.994 966.211 li
324.145 968.49 326.029 970.307 328.35 970.307 cv
330.763 970.307 332.732 968.338 332.732 965.92 cv
332.732 963.51 330.763 961.543 328.35 961.543 cv
326.029 961.543 324.145 963.357 323.994 965.637 cv
323.994 905.566 li
325.633 904.928 326.803 903.344 326.803 901.488 cv
cp
f
252.311 1112.07 mo
252.311 1113.06 251.504 1113.87 250.506 1113.87 cv
249.513 1113.87 248.702 1113.06 248.702 1112.07 cv
248.702 1111.07 249.513 1110.26 250.506 1110.26 cv
251.504 1110.26 252.311 1111.07 252.311 1112.07 cv
cp
260.947 996.426 mo
260.947 1015.33 li
263.407 1015.33 li
263.407 1016.02 263.407 1016.95 263.407 1017.62 cv
261.666 1017.62 249.746 1017.62 249.746 1017.62 cv
249.746 1107.76 li
247.695 1108.12 246.124 1109.91 246.124 1112.07 cv
246.124 1114.48 248.089 1116.45 250.506 1116.45 cv
252.924 1116.45 254.887 1114.48 254.887 1112.07 cv
254.887 1110.1 253.574 1108.45 251.782 1107.9 cv
251.782 1099.12 251.782 1021.52 251.782 1019.65 cv
253.525 1019.65 265.443 1019.65 265.443 1019.65 cv
265.443 1015.33 li
266.96 1015.33 li
266.96 996.426 li
260.947 996.426 li
cp
f
274.352 1015.33 mo
276.3 1015.33 li
276.3 1113.17 li
276.3 1113.17 281.863 1118.05 282.483 1118.59 cv
282.483 1119.22 282.483 1125.89 282.483 1129.3 cv
284.515 1129.3 li
284.515 1117.66 li
284.515 1117.66 278.949 1112.79 278.332 1112.25 cv
278.332 1111.38 278.332 1025.26 278.332 1015.33 cv
280.366 1015.33 li
280.366 996.426 li
274.352 996.426 li
274.352 1015.33 li
cp
f
287.366 971.588 mo
287.366 970.598 288.177 969.791 289.17 969.791 cv
290.164 969.791 290.975 970.598 290.975 971.588 cv
290.975 972.586 290.164 973.4 289.17 973.4 cv
288.177 973.4 287.366 972.586 287.366 971.588 cv
cp
286.163 1015.33 mo
292.178 1015.33 li
292.178 996.426 li
290.186 996.426 li
290.186 975.844 li
292.112 975.381 293.55 973.66 293.55 971.588 cv
293.55 969.178 291.587 967.215 289.17 967.215 cv
286.753 967.215 284.792 969.178 284.792 971.588 cv
284.792 973.66 286.23 975.381 288.15 975.844 cv
288.15 996.426 li
286.163 996.426 li
286.163 1015.33 li
cp
f
307.471 918.238 mo
307.471 917.248 308.278 916.434 309.273 916.434 cv
310.27 916.434 311.078 917.248 311.078 918.238 cv
311.078 919.234 310.27 920.045 309.273 920.045 cv
308.278 920.045 307.471 919.234 307.471 918.238 cv
cp
312.498 1015.33 mo
318.509 1015.33 li
318.509 996.426 li
316.607 996.426 li
316.607 994.455 li
316.607 994.455 311.728 989.576 311.193 989.045 cv
311.193 988.25 311.193 928.129 311.193 922.156 cv
312.645 921.445 313.656 919.961 313.656 918.238 cv
313.656 915.82 311.69 913.859 309.273 913.859 cv
306.858 913.859 304.891 915.82 304.891 918.238 cv
304.891 920.617 306.798 922.549 309.162 922.606 cv
309.162 989.887 li
309.162 989.887 314.04 994.769 314.575 995.301 cv
314.575 995.56 314.575 996.002 314.575 996.426 cv
312.498 996.426 li
312.498 1015.33 li
cp
f
331.056 996.426 mo
325.045 996.426 li
325.045 1015.33 li
331.056 1015.33 li
331.056 996.426 li
cp
f
346.39 919.008 mo
346.39 918.018 347.201 917.211 348.195 917.211 cv
349.192 917.211 349.999 918.018 349.999 919.008 cv
349.999 920.004 349.192 920.82 348.195 920.82 cv
347.201 920.82 346.39 920.004 346.39 919.008 cv
cp
339.301 1015.33 mo
345.314 1015.33 li
345.314 996.426 li
342.897 996.426 li
342.897 986.006 342.897 926.121 342.897 925.365 cv
343.247 925.018 344.762 923.502 345.677 922.586 cv
346.39 923.092 347.253 923.396 348.195 923.396 cv
350.612 923.396 352.577 921.432 352.577 919.008 cv
352.577 916.598 350.612 914.635 348.195 914.635 cv
345.778 914.635 343.81 916.598 343.81 919.008 cv
343.81 919.754 344.014 920.434 344.339 921.047 cv
340.867 924.518 li
340.867 996.426 li
339.301 996.426 li
339.301 1015.33 li
cp
f
351.8 982.678 mo
351.8 981.68 352.613 980.871 353.608 980.871 cv
354.604 980.871 355.411 981.68 355.411 982.678 cv
355.411 983.67 354.604 984.482 353.608 984.482 cv
352.613 984.482 351.8 983.67 351.8 982.678 cv
cp
357.69 1015.33 mo
357.69 996.426 li
355.269 996.426 li
355.269 986.731 li
356.862 986.068 357.991 984.508 357.991 982.678 cv
357.991 980.26 356.023 978.299 353.608 978.299 cv
351.191 978.299 349.223 980.26 349.223 982.678 cv
349.223 984.963 350.997 986.824 353.231 987.021 cv
353.231 996.426 li
351.675 996.426 li
351.675 1015.33 li
357.69 1015.33 li
cp
f
352.063 959.996 mo
352.063 959.006 352.873 958.191 353.866 958.191 cv
354.86 958.191 355.67 959.006 355.67 959.996 cv
355.67 960.992 354.86 961.799 353.866 961.799 cv
352.873 961.799 352.063 960.992 352.063 959.996 cv
cp
370.405 1015.33 mo
370.405 996.426 li
368.672 996.426 li
368.672 994.971 li
368.672 994.971 362.685 988.982 362.142 988.44 cv
362.142 987.633 362.142 965.756 362.142 965.756 cv
357.946 961.56 li
358.133 961.074 358.245 960.551 358.245 959.996 cv
358.245 957.578 356.283 955.615 353.866 955.615 cv
351.451 955.615 349.482 957.578 349.482 959.996 cv
349.482 962.412 351.451 964.373 353.866 964.373 cv
354.983 964.373 355.988 963.945 356.765 963.256 cv
357.64 964.129 359.709 966.199 360.111 966.604 cv
360.111 967.418 360.111 989.285 360.111 989.285 cv
360.111 989.285 366.094 995.269 366.636 995.813 cv
366.636 995.969 366.636 996.19 366.636 996.426 cv
364.39 996.426 li
364.39 1015.33 li
370.405 1015.33 li
cp
f
327.793 1104.7 mo
308.56 1104.7 li
308.56 1129.3 li
310.594 1129.3 li
310.594 1122.83 310.594 1108.19 310.594 1106.73 cv
312.083 1106.73 323.575 1106.73 327.793 1106.73 cv
327.793 1112.07 li
341.366 1112.07 li
341.366 1099.35 li
327.793 1099.35 li
327.793 1104.7 li
cp
f
341.366 1090.24 mo
341.366 1077.53 li
327.793 1077.53 li
327.793 1090.24 li
341.366 1090.24 li
cp
f
421.782 954.824 mo
429.938 954.824 467.653 954.824 469.394 954.824 cv
469.394 956.631 469.394 1010.48 469.394 1019.8 cv
463.024 1019.8 li
463.024 1042.48 li
475.911 1042.48 li
475.911 1019.8 li
471.426 1019.8 li
471.426 952.795 li
421.782 952.795 li
421.782 950.377 li
400.818 950.377 li
400.818 957.25 li
421.782 957.25 li
421.782 954.824 li
cp
f
145.346 1013.09 mo
145.346 1012.1 146.155 1011.29 147.149 1011.29 cv
148.146 1011.29 148.955 1012.1 148.955 1013.09 cv
148.955 1014.09 148.146 1014.9 147.149 1014.9 cv
146.155 1014.9 145.346 1014.09 145.346 1013.09 cv
cp
143.413 1034.74 mo
157.503 1034.74 li
157.503 1027.18 li
148.553 1027.18 li
148.553 1017.22 li
149.964 1016.74 151.049 1015.57 151.402 1014.11 cv
161.627 1014.11 li
161.627 1019.45 li
175.204 1019.45 li
175.204 1006.04 li
161.627 1006.04 li
161.627 1012.08 li
151.402 1012.08 li
150.939 1010.15 149.213 1008.71 147.149 1008.71 cv
144.735 1008.71 142.769 1010.68 142.769 1013.09 cv
142.769 1015.29 144.404 1017.1 146.52 1017.41 cv
146.52 1027.18 li
143.413 1027.18 li
143.413 1034.74 li
cp
f
157.503 1038.87 mo
143.413 1038.87 li
143.413 1046.42 li
157.503 1046.42 li
157.503 1038.87 li
cp
f
158.493 1054.12 mo
158.493 1053.13 159.302 1052.31 160.296 1052.31 cv
161.289 1052.31 162.098 1053.13 162.098 1054.12 cv
162.098 1055.11 161.289 1055.92 160.296 1055.92 cv
159.302 1055.92 158.493 1055.11 158.493 1054.12 cv
cp
164.676 1054.12 mo
164.676 1051.7 162.711 1049.74 160.296 1049.74 cv
159.229 1049.74 158.263 1050.13 157.503 1050.76 cv
157.503 1050.33 li
143.413 1050.33 li
143.413 1057.9 li
157.503 1057.9 li
157.503 1057.47 li
158.263 1058.1 159.229 1058.5 160.296 1058.5 cv
162.711 1058.5 164.676 1056.53 164.676 1054.12 cv
cp
f
157.503 1061.72 mo
143.413 1061.72 li
143.413 1069.28 li
157.503 1069.28 li
157.503 1061.72 li
cp
f
157.503 1073.06 mo
143.413 1073.06 li
143.413 1080.62 li
157.503 1080.62 li
157.503 1073.06 li
cp
f
158.493 1089.17 mo
158.493 1088.18 159.302 1087.37 160.296 1087.37 cv
161.289 1087.37 162.098 1088.18 162.098 1089.17 cv
162.098 1090.17 161.289 1090.97 160.296 1090.97 cv
159.302 1090.97 158.493 1090.17 158.493 1089.17 cv
cp
164.676 1089.17 mo
164.676 1086.75 162.711 1084.79 160.296 1084.79 cv
159.229 1084.79 158.263 1085.19 157.503 1085.82 cv
157.503 1085.39 li
143.413 1085.39 li
143.413 1092.95 li
157.503 1092.95 li
157.503 1092.52 li
158.263 1093.15 159.229 1093.56 160.296 1093.56 cv
162.711 1093.56 164.676 1091.59 164.676 1089.17 cv
cp
f
162.098 1112.5 mo
162.098 1113.49 161.289 1114.3 160.296 1114.3 cv
159.302 1114.3 158.493 1113.49 158.493 1112.5 cv
158.493 1111.5 159.302 1110.69 160.296 1110.69 cv
161.289 1110.69 162.098 1111.5 162.098 1112.5 cv
cp
157.503 1108.72 mo
143.413 1108.72 li
143.413 1116.28 li
157.503 1116.28 li
157.503 1115.85 li
158.263 1116.48 159.229 1116.88 160.296 1116.88 cv
162.711 1116.88 164.676 1114.91 164.676 1112.5 cv
164.676 1110.08 162.711 1108.11 160.296 1108.11 cv
159.229 1108.11 158.263 1108.52 157.503 1109.15 cv
157.503 1108.72 li
cp
f
201.148 1076.34 mo
190.079 1076.34 li
190.079 1114.98 li
199.354 1124.25 li
199.354 1124.25 215.498 1124.25 217.313 1124.25 cv
217.313 1125.19 217.313 1127.56 217.313 1129.3 cv
219.348 1129.3 li
219.348 1122.22 li
219.348 1122.22 201.001 1122.22 200.194 1122.22 cv
199.66 1121.68 192.651 1114.67 192.113 1114.14 cv
192.113 1113.33 192.113 1080.28 192.113 1078.38 cv
193.406 1078.38 198.737 1078.38 201.148 1078.38 cv
201.148 1080.79 li
215.239 1080.79 li
215.239 1073.23 li
201.148 1073.23 li
201.148 1076.34 li
cp
f
219.578 1065.41 mo
219.578 1066.41 218.767 1067.22 217.774 1067.22 cv
216.778 1067.22 215.967 1066.41 215.967 1065.41 cv
215.967 1064.42 216.778 1063.61 217.774 1063.61 cv
218.767 1063.61 219.578 1064.42 219.578 1065.41 cv
cp
201.148 1061.38 mo
201.148 1068.94 li
215.194 1068.94 li
215.919 1069.47 216.804 1069.79 217.774 1069.79 cv
220.191 1069.79 222.154 1067.83 222.154 1065.41 cv
222.154 1063 220.191 1061.04 217.774 1061.04 cv
216.827 1061.04 215.956 1061.34 215.239 1061.85 cv
215.239 1061.38 li
201.148 1061.38 li
cp
f
184.824 1006.04 mo
184.824 1019.45 li
198.401 1019.45 li
198.401 1006.04 li
184.824 1006.04 li
cp
f
213.39 1012.83 mo
213.39 1013.83 212.582 1014.64 211.589 1014.64 cv
210.595 1014.64 209.784 1013.83 209.784 1012.83 cv
209.784 1011.84 210.595 1011.03 211.589 1011.03 cv
212.582 1011.03 213.39 1011.84 213.39 1012.83 cv
cp
215.582 985.254 mo
202.182 985.254 li
202.182 992.815 li
205.286 992.815 li
205.286 995.473 li
205.286 995.473 210.591 1000.78 211.129 1001.31 cv
211.129 1001.86 211.129 1006.16 211.129 1008.5 cv
208.931 1008.73 207.205 1010.57 207.205 1012.83 cv
207.205 1015.25 209.172 1017.21 211.589 1017.21 cv
214.002 1017.21 215.967 1015.25 215.967 1012.83 cv
215.967 1010.98 214.802 1009.39 213.162 1008.76 cv
213.162 1000.47 li
213.162 1000.47 207.858 995.17 207.322 994.631 cv
207.322 994.291 207.322 993.504 207.322 992.815 cv
215.582 992.815 li
215.582 985.254 li
cp
f
106.901 1042.22 mo
106.901 1043.21 106.088 1044.03 105.096 1044.03 cv
104.099 1044.03 103.29 1043.21 103.29 1042.22 cv
103.29 1041.22 104.099 1040.41 105.096 1040.41 cv
106.088 1040.41 106.901 1041.22 106.901 1042.22 cv
cp
100.712 1042.22 mo
100.712 1044.28 102.153 1046 104.076 1046.47 cv
104.076 1129.3 li
106.113 1129.3 li
106.113 1046.47 li
108.038 1046 109.477 1044.28 109.477 1042.22 cv
109.477 1039.8 107.51 1037.83 105.096 1037.83 cv
102.679 1037.83 100.712 1039.8 100.712 1042.22 cv
cp
f
84.5396 1077.19 mo
84.5396 1080.03 82.2266 1082.34 79.3838 1082.34 cv
76.5444 1082.34 74.228 1080.03 74.228 1077.19 cv
74.228 1074.35 76.5444 1072.03 79.3838 1072.03 cv
82.2266 1072.03 84.5396 1074.35 84.5396 1077.19 cv
cp
71.1348 1077.19 mo
71.1348 1081.74 74.8369 1085.43 79.3838 1085.43 cv
83.6909 1085.43 87.2329 1082.11 87.5952 1077.9 cv
88.8882 1077.9 90.748 1077.9 91.6411 1077.9 cv
91.6411 1079.77 91.6411 1109.57 91.6411 1111.44 cv
89.7661 1111.44 65.9937 1111.44 65.9937 1111.44 cv
65.9937 1129.3 li
68.0264 1129.3 li
68.0264 1124.62 68.0264 1114.85 68.0264 1113.47 cv
69.9053 1113.47 93.6758 1113.47 93.6758 1113.47 cv
93.6758 1075.87 li
87.5166 1075.87 li
86.8813 1071.95 83.4819 1068.94 79.3838 1068.94 cv
74.8369 1068.94 71.1348 1072.64 71.1348 1077.19 cv
cp
f
84.5396 1030.96 mo
84.5396 1033.81 82.2266 1036.12 79.3838 1036.12 cv
76.5444 1036.12 74.228 1033.81 74.228 1030.96 cv
74.228 1028.12 76.5444 1025.8 79.3838 1025.8 cv
82.2266 1025.8 84.5396 1028.12 84.5396 1030.96 cv
cp
79.3838 1095.68 mo
82.2266 1095.68 84.5396 1097.99 84.5396 1100.83 cv
84.5396 1103.67 82.2266 1105.99 79.3838 1105.99 cv
76.5444 1105.99 74.228 1103.67 74.228 1100.83 cv
74.228 1097.99 76.5444 1095.68 79.3838 1095.68 cv
cp
71.1348 1030.96 mo
71.1348 1035.25 74.4336 1038.79 78.623 1039.17 cv
78.623 1042.81 78.623 1051.52 78.623 1052.93 cv
76.793 1052.93 58.7778 1052.93 58.7778 1052.93 cv
58.7778 1099.82 li
56.9229 1099.82 li
56.9229 1101.85 li
58.7778 1101.85 li
58.7778 1129.3 li
60.812 1129.3 li
60.812 1124.15 60.812 1113.51 60.812 1101.85 cv
71.2056 1101.85 li
71.71 1105.92 75.1807 1109.08 79.3838 1109.08 cv
83.9302 1109.08 87.6323 1105.38 87.6323 1100.83 cv
87.6323 1096.29 83.9302 1092.59 79.3838 1092.59 cv
75.1807 1092.59 71.71 1095.75 71.2056 1099.82 cv
60.812 1099.82 li
60.812 1079.12 60.812 1056.05 60.812 1054.96 cv
62.6426 1054.96 80.6577 1054.96 80.6577 1054.96 cv
80.6577 1039.1 li
84.603 1038.48 87.6323 1035.07 87.6323 1030.96 cv
87.6323 1026.42 83.9302 1022.71 79.3838 1022.71 cv
74.8369 1022.71 71.1348 1026.42 71.1348 1030.96 cv
cp
f
79.3838 978.898 mo
82.2266 978.898 84.5396 981.213 84.5396 984.055 cv
84.5396 986.894 82.2266 989.203 79.3838 989.203 cv
76.5444 989.203 74.228 986.894 74.228 984.055 cv
74.228 981.213 76.5444 978.898 79.3838 978.898 cv
cp
56.9229 1043.49 mo
67.5146 1043.49 li
67.5146 1043.49 67.5146 986.82 67.5146 984.854 cv
68.3193 984.854 69.9238 984.854 71.1758 984.854 cv
71.583 989.027 75.1079 992.305 79.3838 992.305 cv
83.9302 992.305 87.6323 988.598 87.6323 984.055 cv
87.6323 979.504 83.9302 975.807 79.3838 975.807 cv
75.2534 975.807 71.835 978.856 71.2393 982.818 cv
65.48 982.818 li
65.48 982.818 65.48 1039.49 65.48 1041.45 cv
64.3853 1041.45 59.9785 1041.45 56.9229 1041.45 cv
56.9229 1043.49 li
cp
f
235.514 945.043 mo
256.477 945.043 li
256.477 943.486 li
256.992 943.486 257.538 943.486 257.818 943.486 cv
258.367 944.033 267.95 953.613 268.501 954.162 cv
268.501 954.951 268.501 966.084 268.501 966.084 cv
268.501 966.084 281.556 979.144 282.128 979.711 cv
282.128 980.551 282.128 1107.59 282.128 1107.59 cv
282.128 1107.59 289.038 1114.5 289.586 1115.05 cv
289.586 1115.65 289.586 1124.79 289.586 1129.3 cv
291.619 1129.3 li
291.619 1114.21 li
291.619 1114.21 284.711 1107.3 284.162 1106.75 cv
284.162 1105.91 284.162 978.873 284.162 978.873 cv
284.162 978.873 271.105 965.815 270.533 965.246 cv
270.533 964.463 270.533 953.322 270.533 953.322 cv
258.662 941.453 li
256.477 941.453 li
256.477 939.029 li
235.514 939.029 li
235.514 945.043 li
cp
f
265.974 1065.16 mo
265.974 1066.15 265.163 1066.96 264.169 1066.96 cv
263.175 1066.96 262.363 1066.15 262.363 1065.16 cv
262.363 1064.17 263.175 1063.36 264.169 1063.36 cv
265.163 1063.36 265.974 1064.17 265.974 1065.16 cv
cp
259.785 1065.16 mo
259.785 1067.22 261.227 1068.94 263.153 1069.41 cv
263.153 1129.3 li
265.185 1129.3 li
265.185 1069.41 li
267.109 1068.95 268.547 1067.22 268.547 1065.16 cv
268.547 1062.75 266.582 1060.77 264.169 1060.77 cv
261.752 1060.77 259.785 1062.75 259.785 1065.16 cv
cp
f
482.453 948.81 mo
482.45 950.793 482.287 1050.31 482.283 1052.29 cv
480.55 1052.29 453.718 1052.29 448.581 1052.29 cv
448.173 1050.73 446.943 1049.51 445.373 1049.14 cv
445.373 1048.22 445.373 1045.73 445.373 1042.48 cv
450.65 1042.48 li
450.65 1019.8 li
445.373 1019.8 li
445.373 1016.36 445.373 1013.9 445.373 1013.42 cv
447.094 1013.42 458.025 1013.42 458.025 1013.42 cv
458.025 958.461 li
394.79 958.461 li
394.79 953.924 394.79 949.631 394.79 948.81 cv
396.757 948.81 480.484 948.81 482.453 948.81 cv
cp
444.357 1055.19 mo
443.362 1055.19 442.553 1054.38 442.553 1053.39 cv
442.553 1052.39 443.362 1051.58 444.357 1051.58 cv
445.353 1051.58 446.164 1052.39 446.164 1053.39 cv
446.164 1054.38 445.353 1055.19 444.357 1055.19 cv
cp
406.818 1052.29 mo
406.818 1050.37 406.818 1004.17 406.818 1002.25 cv
408.748 1002.25 445.999 1002.25 445.999 1002.25 cv
445.999 970.322 li
445.999 970.322 396.744 970.322 394.79 970.322 cv
394.79 969.488 394.79 965.102 394.79 960.494 cv
401.38 960.494 454.147 960.494 455.993 960.494 cv
455.993 962.412 455.993 1009.47 455.993 1011.39 cv
454.272 1011.39 443.341 1011.39 443.341 1011.39 cv
443.341 1019.8 li
437.765 1019.8 li
437.765 1042.48 li
443.341 1042.48 li
443.341 1049.14 li
441.774 1049.51 440.543 1050.73 440.135 1052.29 cv
434.186 1052.29 408.512 1052.29 406.818 1052.29 cv
cp
392.756 972.354 mo
392.756 972.354 442.009 972.354 443.963 972.354 cv
443.963 974.182 443.963 998.385 443.963 1000.22 cv
442.036 1000.22 404.782 1000.22 404.782 1000.22 cv
404.782 1054.32 li
440.081 1054.32 li
440.438 1055.96 441.714 1057.25 443.341 1057.64 cv
443.341 1129.3 li
445.373 1129.3 li
445.373 1057.64 li
447.002 1057.25 448.28 1055.96 448.637 1054.32 cv
484.315 1054.32 li
484.487 946.779 li
392.756 946.779 li
392.756 972.354 li
cp
f
418.188 1005.54 mo
418.188 1019.8 li
412.335 1019.8 li
412.335 1042.48 li
425.22 1042.48 li
425.22 1019.8 li
420.221 1019.8 li
420.221 1016.94 420.221 1009.01 420.221 1007.58 cv
422.13 1007.58 452.698 1007.58 452.698 1007.58 cv
452.698 964.135 li
421.782 964.135 li
421.782 961.711 li
400.818 961.711 li
400.818 968.584 li
421.782 968.584 li
421.782 966.166 li
428.636 966.166 449.078 966.166 450.665 966.166 cv
450.665 968.053 450.665 1003.66 450.665 1005.54 cv
448.756 1005.54 418.188 1005.54 418.188 1005.54 cv
cp
f
356.188 1036.54 mo
356.188 1037.54 355.377 1038.35 354.38 1038.35 cv
353.386 1038.35 352.577 1037.54 352.577 1036.54 cv
352.577 1035.55 353.386 1034.74 354.38 1034.74 cv
355.377 1034.74 356.188 1035.55 356.188 1036.54 cv
cp
349.999 1036.54 mo
349.999 1038.96 351.964 1040.93 354.38 1040.93 cv
355.301 1040.93 356.149 1040.64 356.855 1040.15 cv
357.813 1041.12 359.415 1042.72 359.763 1043.07 cv
359.763 1043.82 359.763 1115.32 359.763 1129.3 cv
361.798 1129.3 li
361.798 1042.22 li
358.207 1038.63 li
358.551 1038.01 358.761 1037.31 358.761 1036.54 cv
358.761 1034.13 356.797 1032.17 354.38 1032.17 cv
351.964 1032.17 349.999 1034.13 349.999 1036.54 cv
cp
f
366.281 1124.44 mo
366.281 1129.3 li
381.404 1129.3 li
381.404 1124.44 li
366.281 1124.44 li
cp
f
340.336 1124.61 mo
340.336 1129.3 li
354.77 1129.3 li
354.77 1124.61 li
340.336 1124.61 li
cp
f
349.57 1118.08 mo
349.57 1119.08 348.759 1119.89 347.765 1119.89 cv
346.771 1119.89 345.961 1119.08 345.961 1118.08 cv
345.961 1117.09 346.771 1116.28 347.765 1116.28 cv
348.759 1116.28 349.57 1117.09 349.57 1118.08 cv
cp
343.568 1116.89 mo
321.273 1116.89 li
321.273 1124.61 li
314.044 1124.61 li
314.044 1129.3 li
328.478 1129.3 li
328.478 1124.61 li
323.31 1124.61 li
323.31 1122.71 323.31 1119.93 323.31 1118.93 cv
324.931 1118.93 339.796 1118.93 343.467 1118.93 cv
343.865 1120.94 345.64 1122.46 347.765 1122.46 cv
350.183 1122.46 352.145 1120.5 352.145 1118.08 cv
352.145 1115.67 350.183 1113.7 347.765 1113.7 cv
345.761 1113.7 344.089 1115.06 343.568 1116.89 cv
cp
f
292.004 1081.99 mo
292.004 1082.99 291.197 1083.8 290.201 1083.8 cv
289.206 1083.8 288.397 1082.99 288.397 1081.99 cv
288.397 1081 289.206 1080.2 290.201 1080.2 cv
291.197 1080.2 292.004 1081 292.004 1081.99 cv
cp
285.819 1081.99 mo
285.819 1084.14 287.366 1085.91 289.398 1086.3 cv
289.398 1100.55 li
289.398 1100.55 295.301 1106.45 295.843 1106.99 cv
295.843 1107.64 295.843 1122.96 295.843 1129.3 cv
297.876 1129.3 li
297.876 1106.15 li
297.876 1106.15 291.976 1100.25 291.434 1099.7 cv
291.434 1098.99 291.434 1088.38 291.434 1086.18 cv
293.248 1085.64 294.585 1083.98 294.585 1081.99 cv
294.585 1079.58 292.617 1077.62 290.201 1077.62 cv
287.784 1077.62 285.819 1079.58 285.819 1081.99 cv
cp
f
297.675 977.521 mo
297.675 978.518 296.866 979.328 295.871 979.328 cv
294.875 979.328 294.068 978.518 294.068 977.521 cv
294.068 976.531 294.875 975.717 295.871 975.717 cv
296.866 975.717 297.675 976.531 297.675 977.521 cv
cp
291.49 977.521 mo
291.49 979.445 292.742 981.063 294.468 981.648 cv
294.468 1018.15 li
294.468 1018.15 300.458 1024.14 300.999 1024.68 cv
300.999 1025.45 300.999 1114.71 300.999 1129.3 cv
303.034 1129.3 li
303.034 1023.84 li
303.034 1023.84 297.048 1017.85 296.504 1017.31 cv
296.504 1016.56 296.504 986.775 296.504 981.84 cv
298.618 981.529 300.251 979.717 300.251 977.521 cv
300.251 975.104 298.288 973.143 295.871 973.143 cv
293.456 973.143 291.49 975.104 291.49 977.521 cv
cp
f
129.622 1030.62 mo
129.622 1031.62 128.814 1032.42 127.817 1032.42 cv
126.823 1032.42 126.016 1031.62 126.016 1030.62 cv
126.016 1029.63 126.823 1028.82 127.817 1028.82 cv
128.814 1028.82 129.622 1029.63 129.622 1030.62 cv
cp
123.438 1030.62 mo
123.438 1032.85 125.12 1034.68 127.275 1034.94 cv
127.275 1094.99 li
127.275 1094.99 139.01 1105.59 139.645 1106.16 cv
139.645 1106.85 139.645 1122.54 139.645 1129.3 cv
141.681 1129.3 li
141.681 1105.26 li
141.681 1105.26 129.941 1094.66 129.308 1094.09 cv
129.308 1093.27 129.308 1042.54 129.308 1034.72 cv
130.989 1034.11 132.201 1032.51 132.201 1030.62 cv
132.201 1028.2 130.234 1026.24 127.817 1026.24 cv
125.404 1026.24 123.438 1028.2 123.438 1030.62 cv
cp
f
130.141 953.81 mo
130.141 954.805 129.33 955.615 128.335 955.615 cv
127.34 955.615 126.53 954.805 126.53 953.81 cv
126.53 952.813 127.34 952.004 128.335 952.004 cv
129.33 952.004 130.141 952.813 130.141 953.81 cv
cp
123.954 953.81 mo
123.954 956.227 125.917 958.191 128.335 958.191 cv
129.14 958.191 129.885 957.955 130.535 957.578 cv
131.579 958.625 133.359 960.398 133.72 960.758 cv
133.72 961.588 133.72 1010.9 133.72 1011.73 cv
133.148 1012.3 119.543 1025.9 119.543 1025.9 cv
119.543 1100.29 li
119.543 1100.29 126.722 1107.47 127.275 1108.02 cv
127.275 1108.66 127.275 1123.3 127.275 1129.3 cv
129.308 1129.3 li
129.308 1107.18 li
129.308 1107.18 122.127 1100 121.576 1099.45 cv
121.576 1098.62 121.576 1027.57 121.576 1026.74 cv
122.146 1026.17 135.754 1012.57 135.754 1012.57 cv
135.754 959.92 li
132.012 956.176 li
132.453 955.494 132.718 954.68 132.718 953.81 cv
132.718 951.391 130.749 949.43 128.335 949.43 cv
125.917 949.43 123.954 951.391 123.954 953.81 cv
cp
f
168.545 1030.88 mo
168.545 1031.87 167.734 1032.68 166.738 1032.68 cv
165.744 1032.68 164.934 1031.87 164.934 1030.88 cv
164.934 1029.88 165.744 1029.07 166.738 1029.07 cv
167.734 1029.07 168.545 1029.88 168.545 1030.88 cv
cp
183.752 919.273 mo
183.752 918.275 184.559 917.469 185.553 917.469 cv
186.55 917.469 187.359 918.275 187.359 919.273 cv
187.359 920.264 186.55 921.074 185.553 921.074 cv
184.559 921.074 183.752 920.264 183.752 919.273 cv
cp
180.513 1001.31 mo
181.06 1000.77 187.473 994.356 187.473 994.356 cv
187.473 976.238 li
187.473 976.238 182.549 971.318 182.019 970.787 cv
182.019 969.981 182.019 943.699 182.019 942.893 cv
182.553 942.354 187.624 937.279 187.624 937.279 cv
187.624 923.106 li
188.994 922.367 189.937 920.934 189.937 919.273 cv
189.937 916.856 187.97 914.887 185.553 914.887 cv
183.139 914.887 181.174 916.856 181.174 919.273 cv
181.174 921.684 183.139 923.656 185.553 923.656 cv
185.566 923.656 185.579 923.656 185.592 923.656 cv
185.592 926.998 185.592 935.797 185.592 936.44 cv
185.058 936.977 179.984 942.051 179.984 942.051 cv
179.984 971.627 li
179.984 971.627 184.906 976.557 185.44 977.088 cv
185.44 977.869 185.44 992.732 185.44 993.508 cv
184.895 994.057 178.479 1000.47 178.479 1000.47 cv
178.479 1000.47 178.479 1021.72 178.479 1023.59 cv
176.747 1023.59 165.248 1023.59 165.248 1023.59 cv
165.248 1026.78 li
163.57 1027.39 162.36 1028.98 162.36 1030.88 cv
162.36 1033.29 164.321 1035.26 166.738 1035.26 cv
169.154 1035.26 171.121 1033.29 171.121 1030.88 cv
171.121 1028.64 169.441 1026.82 167.286 1026.55 cv
167.286 1026.24 167.286 1025.92 167.286 1025.62 cv
169.018 1025.62 180.513 1025.62 180.513 1025.62 cv
180.513 1025.62 180.513 1002.12 180.513 1001.31 cv
cp
f
166.955 1116.19 mo
178.802 1116.19 li
178.79 1117.02 178.785 1118.23 178.779 1118.65 cv
178.35 1119.07 171.429 1125.88 167.958 1129.3 cv
170.857 1129.3 li
180.808 1119.51 li
180.832 1116.19 li
181.044 1116.19 li
181.044 1108.63 li
166.955 1108.63 li
166.955 1116.19 li
cp
f
201.148 1052.97 mo
185.612 1052.97 li
185.612 1052.97 185.612 1123.96 185.612 1124.79 cv
185.269 1125.14 182.85 1127.55 181.107 1129.3 cv
183.981 1129.3 li
187.645 1125.64 li
187.645 1125.64 187.645 1056.98 187.645 1055 cv
189.072 1055 197.743 1055 201.148 1055 cv
201.148 1057.42 li
215.239 1057.42 li
215.239 1049.87 li
201.148 1049.87 li
201.148 1052.97 li
cp
f
232.721 1089.38 mo
232.721 1090.38 231.914 1091.19 230.917 1091.19 cv
229.923 1091.19 229.114 1090.38 229.114 1089.38 cv
229.114 1088.39 229.923 1087.58 230.917 1087.58 cv
231.914 1087.58 232.721 1088.39 232.721 1089.38 cv
cp
224.618 1007.92 mo
224.618 1007.92 229.383 1007.92 230.803 1007.92 cv
230.803 1009.76 230.803 1075.52 230.803 1085.02 cv
228.442 1085.08 226.537 1087.01 226.537 1089.38 cv
226.537 1091.8 228.501 1093.77 230.917 1093.77 cv
233.336 1093.77 235.301 1091.8 235.301 1089.38 cv
235.301 1087.66 234.29 1086.18 232.839 1085.46 cv
232.839 1005.89 li
232.839 1005.89 228.074 1005.89 226.652 1005.89 cv
226.652 1003.97 226.652 956.617 226.652 954.699 cv
227.873 954.699 232.848 954.699 235.514 954.699 cv
235.514 956.379 li
256.477 956.379 li
256.477 950.371 li
235.514 950.371 li
235.514 952.662 li
224.618 952.662 li
224.618 1007.92 li
cp
f
226.537 1041.96 mo
226.537 1042.96 225.726 1043.77 224.736 1043.77 cv
223.74 1043.77 222.927 1042.96 222.927 1041.96 cv
222.927 1040.96 223.74 1040.15 224.736 1040.15 cv
225.726 1040.15 226.537 1040.96 226.537 1041.96 cv
cp
220.439 1041.07 mo
215.239 1041.07 li
215.239 1038.87 li
201.148 1038.87 li
201.148 1046.42 li
215.239 1046.42 li
215.239 1043.11 li
220.521 1043.11 li
220.955 1044.68 222.229 1045.91 223.843 1046.25 cv
223.843 1129.3 li
225.881 1129.3 li
225.881 1046.17 li
227.735 1045.66 229.114 1043.98 229.114 1041.96 cv
229.114 1039.54 227.149 1037.57 224.736 1037.57 cv
222.622 1037.57 220.854 1039.08 220.439 1041.07 cv
cp
f
239.166 1100.47 mo
239.166 1101.46 238.357 1102.27 237.363 1102.27 cv
236.366 1102.27 235.559 1101.46 235.559 1100.47 cv
235.559 1099.48 236.366 1098.66 237.363 1098.66 cv
238.357 1098.66 239.166 1099.48 239.166 1100.47 cv
cp
230.934 1002.64 mo
230.934 1002.64 234.894 1002.64 236.218 1002.64 cv
236.218 1004.53 236.218 1087.65 236.218 1096.26 cv
234.36 1096.77 232.981 1098.46 232.981 1100.47 cv
232.981 1102.88 234.946 1104.85 237.363 1104.85 cv
239.777 1104.85 241.744 1102.88 241.744 1100.47 cv
241.744 1098.36 240.242 1096.59 238.25 1096.18 cv
238.25 1000.61 li
238.25 1000.61 234.292 1000.61 232.964 1000.61 cv
232.964 998.815 232.964 980.197 232.964 978.412 cv
233.612 978.412 234.634 978.412 235.514 978.412 cv
235.514 980.266 li
256.477 980.266 li
256.477 974.252 li
235.514 974.252 li
235.514 976.373 li
230.934 976.373 li
230.934 1002.64 li
cp
f
235.514 991.779 mo
243.819 991.779 li
243.819 1129.3 li
245.855 1129.3 li
245.855 991.779 li
256.477 991.779 li
256.477 985.764 li
235.514 985.764 li
235.514 991.779 li
cp
f
694.661 86.9512 mo
692.994 86.9512 691.448 87.4502 690.148 88.3027 cv
690.148 92.7578 li
691.022 91.1523 692.707 90.0449 694.661 90.0449 cv
697.505 90.0449 699.817 92.3545 699.817 95.2002 cv
699.817 98.0405 697.505 100.354 694.661 100.354 cv
692.707 100.354 691.022 99.2466 690.148 97.6372 cv
690.148 102.092 li
691.448 102.945 692.994 103.444 694.661 103.444 cv
699.208 103.444 702.91 99.7451 702.91 95.2002 cv
702.91 90.6499 699.208 86.9512 694.661 86.9512 cv
cp
f
777.227 122.712 mo
776.232 122.712 775.424 121.904 775.424 120.907 cv
775.424 119.913 776.232 119.102 777.227 119.102 cv
778.225 119.102 779.035 119.913 779.035 120.907 cv
779.035 121.904 778.225 122.712 777.227 122.712 cv
cp
777.227 116.527 mo
775.162 116.527 773.436 117.965 772.975 119.891 cv
690.148 119.891 li
690.148 121.926 li
772.975 121.926 li
773.436 123.848 775.162 125.287 777.227 125.287 cv
779.644 125.287 781.608 123.324 781.608 120.907 cv
781.608 118.493 779.644 116.527 777.227 116.527 cv
cp
f
953.098 135.965 mo
952.104 135.965 951.293 135.155 951.293 134.161 cv
951.293 133.167 952.104 132.355 953.098 132.355 cv
954.092 132.355 954.902 133.167 954.902 134.161 cv
954.902 135.155 954.092 135.965 953.098 135.965 cv
cp
812.023 135.423 mo
811.029 135.423 810.219 134.609 810.219 133.619 cv
810.219 132.621 811.029 131.813 812.023 131.813 cv
813.018 131.813 813.828 132.621 813.828 133.619 cv
813.828 134.609 813.018 135.423 812.023 135.423 cv
cp
723.873 135.423 mo
722.879 135.423 722.068 134.609 722.068 133.619 cv
722.068 132.621 722.879 131.813 723.873 131.813 cv
724.87 131.813 725.678 132.621 725.678 133.619 cv
725.678 134.609 724.87 135.423 723.873 135.423 cv
cp
1061.7 144.944 mo
1061.7 146.847 li
1061.14 146.847 1060.55 146.847 1060.23 146.847 cv
1059.69 146.194 1053.92 139.374 1053.92 139.374 cv
1053.92 139.374 1001.86 139.374 1001.03 139.374 cv
1000.49 138.835 994.76 133.1 994.76 133.1 cv
957.336 133.1 li
956.941 131.523 955.698 130.286 954.114 129.911 cv
954.114 126.663 li
840.391 126.663 li
840.391 126.663 834.994 132.06 834.458 132.602 cv
833.763 132.602 820.08 132.602 816.274 132.602 cv
815.811 130.676 814.088 129.231 812.023 129.231 cv
809.961 129.231 808.233 130.676 807.771 132.602 cv
728.124 132.602 li
727.662 130.676 725.938 129.231 723.873 129.231 cv
721.809 129.231 720.082 130.676 719.621 132.602 cv
690.148 132.602 li
690.148 134.635 li
719.621 134.635 li
720.082 136.56 721.809 137.998 723.873 137.998 cv
725.938 137.998 727.662 136.56 728.124 134.635 cv
807.771 134.635 li
808.233 136.56 809.961 137.998 812.023 137.998 cv
814.088 137.998 815.811 136.56 816.274 134.635 cv
835.3 134.635 li
835.3 134.635 840.697 129.231 841.233 128.695 cv
842.063 128.695 950.09 128.695 952.082 128.695 cv
952.082 129.112 952.082 129.566 952.082 129.911 cv
950.157 130.374 948.719 132.097 948.719 134.161 cv
948.719 136.578 950.685 138.54 953.098 138.54 cv
955.179 138.54 956.916 137.083 957.364 135.136 cv
962.202 135.136 993.158 135.136 993.917 135.136 cv
994.457 135.676 1000.19 141.406 1000.19 141.406 cv
1000.19 141.406 1052.05 141.406 1052.98 141.406 cv
1053.53 142.06 1059.29 148.879 1059.29 148.879 cv
1061.7 148.879 li
1061.7 150.785 li
1074.59 150.785 li
1074.59 144.944 li
1061.7 144.944 li
cp
f
859.365 100.354 mo
856.522 100.354 854.21 98.0405 854.21 95.2002 cv
854.21 92.3545 856.522 90.0449 859.365 90.0449 cv
862.209 90.0449 864.518 92.3545 864.518 95.2002 cv
864.518 98.0405 862.209 100.354 859.365 100.354 cv
cp
867.611 95.2002 mo
867.611 90.6499 863.912 86.9512 859.365 86.9512 cv
854.815 86.9512 851.116 90.6499 851.116 95.2002 cv
851.116 99.3701 854.234 102.822 858.26 103.362 cv
858.26 122.763 li
858.26 122.763 994.627 122.763 995.464 122.763 cv
995.957 123.255 1005.64 132.933 1008.26 135.555 cv
1008.26 137.727 li
1021.49 137.727 li
1021.49 131.886 li
1008.26 131.886 li
1008.26 132.681 li
996.307 120.728 li
996.307 120.728 862.3 120.728 860.296 120.728 cv
860.296 119.184 860.296 107.072 860.296 103.39 cv
864.405 102.926 867.611 99.4297 867.611 95.2002 cv
cp
f
882.563 100.354 mo
879.719 100.354 877.406 98.0405 877.406 95.2002 cv
877.406 92.3545 879.719 90.0449 882.563 90.0449 cv
885.402 90.0449 887.716 92.3545 887.716 95.2002 cv
887.716 98.0405 885.402 100.354 882.563 100.354 cv
cp
890.808 95.2002 mo
890.808 90.6499 887.108 86.9512 882.563 86.9512 cv
878.016 86.9512 874.313 90.6499 874.313 95.2002 cv
874.313 99.4297 877.519 102.926 881.632 103.39 cv
881.632 114.58 li
881.632 114.58 998.989 114.58 999.824 114.58 cv
1000.38 115.132 1008.23 122.98 1008.23 122.98 cv
1008.26 122.948 li
1008.26 124.498 li
1021.49 124.498 li
1021.49 118.654 li
1008.26 118.654 li
1008.26 120.137 li
1000.67 112.545 li
1000.67 112.545 885.662 112.545 883.665 112.545 cv
883.665 111.263 883.665 105.892 883.665 103.362 cv
887.691 102.822 890.808 99.3701 890.808 95.2002 cv
cp
f
958.447 95.2002 mo
958.447 98.0405 956.136 100.354 953.292 100.354 cv
950.45 100.354 948.138 98.0405 948.138 95.2002 cv
948.138 92.3545 950.45 90.0449 953.292 90.0449 cv
956.136 90.0449 958.447 92.3545 958.447 95.2002 cv
cp
950.063 72.7388 mo
940.396 82.4043 li
940.396 109.489 li
1008.26 109.489 li
1008.26 111.093 li
1021.49 111.093 li
1021.49 105.251 li
1008.26 105.251 li
1008.26 107.455 li
1001.35 107.455 944.285 107.455 942.432 107.455 cv
942.432 105.611 942.432 84.0298 942.432 83.2471 cv
942.88 82.7988 949.56 76.1152 952.276 73.4009 cv
952.276 87.021 li
948.203 87.5229 945.043 90.9971 945.043 95.2002 cv
945.043 99.7451 948.743 103.444 953.292 103.444 cv
957.842 103.444 961.541 99.7451 961.541 95.2002 cv
961.541 90.9971 958.376 87.5229 954.31 87.021 cv
954.31 72.7388 li
950.063 72.7388 li
cp
f
981.708 95.2002 mo
981.708 98.0405 979.395 100.354 976.556 100.354 cv
973.712 100.354 971.398 98.0405 971.398 95.2002 cv
971.398 92.3545 973.712 90.0449 976.556 90.0449 cv
979.395 90.0449 981.708 92.3545 981.708 95.2002 cv
cp
975.536 72.7388 mo
975.536 87.021 li
971.468 87.5229 968.307 90.9971 968.307 95.2002 cv
968.307 99.7451 972.008 103.444 976.556 103.444 cv
981.102 103.444 984.803 99.7451 984.803 95.2002 cv
984.803 90.9971 981.641 87.5229 977.57 87.021 cv
977.57 72.7388 li
975.536 72.7388 li
cp
f
742.258 100.354 mo
739.414 100.354 737.102 98.0405 737.102 95.2002 cv
737.102 92.3545 739.414 90.0449 742.258 90.0449 cv
745.097 90.0449 747.413 92.3545 747.413 95.2002 cv
747.413 98.0405 745.097 100.354 742.258 100.354 cv
cp
742.258 86.9512 mo
737.711 86.9512 734.009 90.6499 734.009 95.2002 cv
734.009 99.5054 737.329 103.046 741.54 103.409 cv
741.54 104.703 741.54 106.564 741.54 107.455 cv
739.68 107.455 709.866 107.455 708.01 107.455 cv
708.01 105.577 708.01 81.8081 708.01 81.8081 cv
690.148 81.8081 li
690.148 83.8428 li
694.825 83.8428 704.595 83.8428 705.974 83.8428 cv
705.974 85.7148 705.974 109.489 705.974 109.489 cv
743.577 109.489 li
743.577 103.33 li
747.499 102.696 750.507 99.2969 750.507 95.2002 cv
750.507 90.6499 746.808 86.9512 742.258 86.9512 cv
cp
f
788.483 100.354 mo
785.642 100.354 783.329 98.0405 783.329 95.2002 cv
783.329 92.3545 785.642 90.0449 788.483 90.0449 cv
791.326 90.0449 793.639 92.3545 793.639 95.2002 cv
793.639 98.0405 791.326 100.354 788.483 100.354 cv
cp
723.765 95.2002 mo
723.765 98.0405 721.452 100.354 718.612 100.354 cv
715.769 100.354 713.457 98.0405 713.457 95.2002 cv
713.457 92.3545 715.769 90.0449 718.612 90.0449 cv
721.452 90.0449 723.765 92.3545 723.765 95.2002 cv
cp
788.483 86.9512 mo
784.19 86.9512 780.659 90.2466 780.275 94.4375 cv
776.64 94.4375 767.926 94.4375 766.519 94.4375 cv
766.519 92.6064 766.519 74.5908 766.519 74.5908 cv
719.628 74.5908 li
719.628 72.7388 li
717.597 72.7388 li
717.597 74.5908 li
690.148 74.5908 li
690.148 76.626 li
695.298 76.626 705.933 76.626 717.597 76.626 cv
717.597 87.021 li
713.524 87.5229 710.363 90.9971 710.363 95.2002 cv
710.363 99.7451 714.066 103.444 718.612 103.444 cv
723.159 103.444 726.861 99.7451 726.861 95.2002 cv
726.861 90.9971 723.697 87.5229 719.628 87.021 cv
719.628 76.626 li
740.33 76.626 763.399 76.626 764.482 76.626 cv
764.482 78.4565 764.482 96.4722 764.482 96.4722 cv
780.344 96.4722 li
780.958 100.414 784.366 103.444 788.483 103.444 cv
793.029 103.444 796.732 99.7451 796.732 95.2002 cv
796.732 90.6499 793.029 86.9512 788.483 86.9512 cv
cp
f
840.548 95.2002 mo
840.548 98.0405 838.235 100.354 835.392 100.354 cv
832.553 100.354 830.238 98.0405 830.238 95.2002 cv
830.238 92.3545 832.553 90.0449 835.392 90.0449 cv
838.235 90.0449 840.548 92.3545 840.548 95.2002 cv
cp
775.95 72.7388 mo
775.95 83.3291 li
775.95 83.3291 832.628 83.3291 834.588 83.3291 cv
834.588 84.1333 834.588 85.7334 834.588 86.9893 cv
830.42 87.3965 827.143 90.9214 827.143 95.2002 cv
827.143 99.7451 830.848 103.444 835.392 103.444 cv
839.942 103.444 843.641 99.7451 843.641 95.2002 cv
843.641 91.0664 840.589 87.6528 836.625 87.0527 cv
836.625 81.2905 li
836.625 81.2905 779.953 81.2905 777.987 81.2905 cv
777.987 80.1987 777.987 75.793 777.987 72.7388 cv
775.95 72.7388 li
cp
f
929.969 100.354 mo
927.125 100.354 924.809 98.0405 924.809 95.2002 cv
924.809 92.3545 927.125 90.0449 929.969 90.0449 cv
932.808 90.0449 935.12 92.3545 935.12 95.2002 cv
935.12 98.0405 932.808 100.354 929.969 100.354 cv
cp
807.039 95.2002 mo
807.039 92.3545 809.353 90.0449 812.197 90.0449 cv
815.039 90.0449 817.351 92.3545 817.351 95.2002 cv
817.351 98.0405 815.039 100.354 812.197 100.354 cv
809.353 100.354 807.039 98.0405 807.039 95.2002 cv
cp
930.984 87.021 mo
930.984 72.7388 li
928.952 72.7388 li
928.952 87.021 li
924.88 87.5229 921.719 90.9971 921.719 95.2002 cv
921.719 99.4009 924.88 102.87 928.952 103.374 cv
928.952 104.916 928.952 107.148 928.952 108.092 cv
927.086 108.092 897.385 108.092 895.519 108.092 cv
895.519 106.214 895.519 82.1924 895.519 82.1924 cv
845.677 82.1924 li
845.677 82.1924 845.677 111.478 845.677 113.382 cv
845.098 113.382 831.817 113.382 813.171 113.382 cv
813.171 103.383 li
817.259 102.9 820.444 99.4165 820.444 95.2002 cv
820.444 90.6499 816.745 86.9512 812.197 86.9512 cv
807.646 86.9512 803.946 90.6499 803.946 95.2002 cv
803.946 99.3857 807.088 102.847 811.134 103.367 cv
811.134 113.382 li
769.938 113.382 704.803 113.382 690.148 113.382 cv
690.148 115.416 li
847.708 115.416 li
847.708 115.416 847.708 86.1313 847.708 84.2314 cv
849.615 84.2314 891.581 84.2314 893.486 84.2314 cv
893.486 86.1064 893.486 110.127 893.486 110.127 cv
930.984 110.127 li
930.984 103.374 li
935.051 102.87 938.214 99.4009 938.214 95.2002 cv
938.214 90.9971 935.051 87.5229 930.984 87.021 cv
cp
f
870.663 91.8491 mo
870.663 97.5166 li
872.595 97.5166 li
872.595 91.8491 li
870.663 91.8491 li
cp
f
911.214 95.2002 mo
911.214 98.0405 908.903 100.354 906.058 100.354 cv
903.217 100.354 900.906 98.0405 900.906 95.2002 cv
900.906 92.3545 903.217 90.0449 906.058 90.0449 cv
908.903 90.0449 911.214 92.3545 911.214 95.2002 cv
cp
905.041 72.7388 mo
905.041 87.021 li
900.974 87.5229 897.81 90.9971 897.81 95.2002 cv
897.81 99.7451 901.51 103.444 906.058 103.444 cv
910.608 103.444 914.305 99.7451 914.305 95.2002 cv
914.305 90.9971 911.143 87.5229 907.076 87.021 cv
907.076 72.7388 li
905.041 72.7388 li
cp
f
121.442 252.997 mo
121.442 251.999 122.249 251.192 123.243 251.192 cv
124.241 251.192 125.051 251.999 125.051 252.997 cv
125.051 253.988 124.241 254.802 123.243 254.802 cv
122.249 254.802 121.442 253.988 121.442 252.997 cv
cp
310.887 284.184 mo
311.88 284.184 312.689 284.993 312.689 285.987 cv
312.689 286.984 311.88 287.793 310.887 287.793 cv
309.893 287.793 309.082 286.984 309.082 285.987 cv
309.082 284.993 309.893 284.184 310.887 284.184 cv
cp
127.627 252.997 mo
127.627 250.58 125.66 248.617 123.243 248.617 cv
120.83 248.617 118.864 250.58 118.864 252.997 cv
118.864 254.966 120.18 256.617 121.969 257.165 cv
121.969 267.46 li
121.969 267.46 224.398 267.46 225.235 267.46 cv
225.814 268.037 245.081 287.306 245.081 287.306 cv
306.728 287.306 li
307.293 289.076 308.933 290.37 310.887 290.37 cv
313.304 290.37 315.271 288.404 315.271 285.987 cv
315.271 283.569 313.304 281.606 310.887 281.606 cv
308.716 281.606 306.923 283.197 306.579 285.273 cv
298.265 285.273 246.691 285.273 245.927 285.273 cv
245.346 284.693 226.078 265.424 226.078 265.424 cv
226.078 265.424 125.998 265.424 124.005 265.424 cv
124.005 264.109 124.005 259.182 124.005 257.302 cv
126.06 256.939 127.627 255.149 127.627 252.997 cv
cp
f
112.678 321.172 mo
112.678 327.358 li
131.234 327.358 li
131.234 325.54 li
147.897 325.54 li
147.897 325.54 171.799 301.633 172.38 301.052 cv
173.186 301.052 198.674 301.052 199.412 301.052 cv
199.898 301.479 203.815 304.953 204.385 305.454 cv
204.385 305.95 204.385 307.329 204.385 308.111 cv
202.378 308.111 li
202.378 329.075 li
208.39 329.075 li
208.39 308.111 li
206.421 308.111 li
206.421 304.543 li
200.182 299.02 li
171.538 299.02 li
171.538 299.02 147.635 322.921 147.053 323.501 cv
146.382 323.501 134.948 323.501 131.234 323.501 cv
131.234 321.172 li
112.678 321.172 li
cp
f
108.9 306.208 mo
153.467 306.208 li
153.467 306.208 163.975 294.719 164.548 294.094 cv
165.413 294.094 203.328 294.094 204.146 294.094 cv
204.699 294.646 215.369 305.319 215.919 305.868 cv
215.919 306.262 215.919 307.319 215.919 308.111 cv
214.061 308.111 li
214.061 329.075 li
220.076 329.075 li
220.076 308.111 li
217.956 308.111 li
217.956 305.028 li
204.986 292.059 li
163.649 292.059 li
163.649 292.059 153.142 303.545 152.567 304.172 cv
151.771 304.172 115.748 304.172 108.9 304.172 cv
108.9 295.741 li
102.886 295.741 li
102.886 316.704 li
108.9 316.704 li
108.9 306.208 li
cp
f
69.3887 290.979 mo
69.3887 295.741 li
67.4893 295.741 li
67.4893 316.704 li
73.502 316.704 li
73.502 295.741 li
71.4248 295.741 li
71.4248 294.248 71.4248 292.267 71.4248 291.825 cv
71.9932 291.256 88.6216 274.62 89.1934 274.052 cv
90.0264 274.052 221.626 274.052 222.448 274.052 cv
223.028 274.62 251.514 302.62 252.102 303.197 cv
252.102 303.766 252.102 306.745 252.102 308.111 cv
250.15 308.111 li
250.15 329.075 li
256.158 329.075 li
256.158 308.111 li
254.135 308.111 li
254.135 302.346 li
223.282 272.02 li
88.3525 272.02 li
69.3887 290.979 li
cp
f
94.1548 280.754 mo
94.9878 280.754 214.588 280.754 215.417 280.754 cv
215.996 281.329 239.189 304.523 239.761 305.097 cv
239.761 305.559 239.761 307.129 239.761 308.111 cv
238.117 308.111 li
238.117 329.075 li
244.132 329.075 li
244.132 308.111 li
241.797 308.111 li
241.797 304.255 li
216.262 278.722 li
93.312 278.722 li
81.1499 290.885 li
81.1499 295.741 li
78.8296 295.741 li
78.8296 316.704 li
84.8447 316.704 li
84.8447 295.741 li
83.1821 295.741 li
83.1821 294.217 83.1821 292.175 83.1821 291.724 cv
83.7349 291.175 93.6055 281.304 94.1548 280.754 cv
cp
f
100.21 287.779 mo
101.047 287.779 210.013 287.779 210.846 287.779 cv
211.41 288.344 227.341 304.274 227.906 304.838 cv
227.906 305.29 227.906 306.978 227.906 308.111 cv
226.261 308.111 li
226.261 329.075 li
232.275 329.075 li
232.275 308.111 li
229.941 308.111 li
229.941 303.996 li
211.688 285.747 li
99.3701 285.747 li
93.105 292.011 li
93.105 295.741 li
91.0278 295.741 li
91.0278 316.704 li
97.0464 316.704 li
97.0464 295.741 li
95.1392 295.741 li
95.1392 294.598 95.1392 293.245 95.1392 292.853 cv
95.6416 292.348 99.7065 288.284 100.21 287.779 cv
cp
f
162.303 156.101 mo
162.303 155.104 163.113 154.296 164.107 154.296 cv
165.101 154.296 165.914 155.104 165.914 156.101 cv
165.914 157.098 165.101 157.906 164.107 157.906 cv
163.113 157.906 162.303 157.098 162.303 156.101 cv
cp
168.49 156.101 mo
168.49 153.684 166.522 151.717 164.107 151.717 cv
161.69 151.717 159.725 153.684 159.725 156.101 cv
159.725 158.518 161.69 160.481 164.107 160.481 cv
166.522 160.481 168.49 158.518 168.49 156.101 cv
cp
f
205.091 141.793 mo
206.084 141.793 206.894 142.603 206.894 143.598 cv
206.894 144.592 206.084 145.403 205.091 145.403 cv
204.097 145.403 203.287 144.592 203.287 143.598 cv
203.287 142.603 204.097 141.793 205.091 141.793 cv
cp
258.187 141.793 mo
259.18 141.793 259.987 142.603 259.987 143.598 cv
259.987 144.592 259.18 145.403 258.187 145.403 cv
257.195 145.403 256.38 144.592 256.38 143.598 cv
256.38 142.603 257.195 141.793 258.187 141.793 cv
cp
205.091 147.984 mo
207.155 147.984 208.879 146.539 209.339 144.617 cv
253.936 144.617 li
254.395 146.539 256.121 147.984 258.187 147.984 cv
260.604 147.984 262.565 146.016 262.565 143.598 cv
262.565 141.181 260.604 139.218 258.187 139.218 cv
256.121 139.218 254.395 140.657 253.936 142.581 cv
209.339 142.581 li
208.879 140.657 207.155 139.218 205.091 139.218 cv
202.67 139.218 200.709 141.181 200.709 143.598 cv
200.709 146.016 202.67 147.984 205.091 147.984 cv
cp
f
270.814 128.52 mo
271.812 128.52 272.619 129.331 272.619 130.325 cv
272.619 131.319 271.812 132.13 270.814 132.13 cv
269.821 132.13 269.01 131.319 269.01 130.325 cv
269.01 129.331 269.821 128.52 270.814 128.52 cv
cp
270.814 134.711 mo
273.231 134.711 275.197 132.742 275.197 130.325 cv
275.197 127.908 273.231 125.944 270.814 125.944 cv
268.397 125.944 266.436 127.908 266.436 130.325 cv
266.436 132.742 268.397 134.711 270.814 134.711 cv
cp
f
293.757 128.52 mo
294.75 128.52 295.558 129.331 295.558 130.325 cv
295.558 131.319 294.75 132.13 293.757 132.13 cv
292.76 132.13 291.953 131.319 291.953 130.325 cv
291.953 129.331 292.76 128.52 293.757 128.52 cv
cp
293.757 134.711 mo
296.17 134.711 298.136 132.742 298.136 130.325 cv
298.136 127.908 296.17 125.944 293.757 125.944 cv
291.336 125.944 289.371 127.908 289.371 130.325 cv
289.371 132.742 291.336 134.711 293.757 134.711 cv
cp
f
118.487 113.96 mo
118.487 120.144 li
137.042 120.144 li
137.042 118.327 li
153.704 118.327 li
153.704 118.327 177.609 94.4194 178.188 93.8394 cv
178.995 93.8394 204.482 93.8394 205.218 93.8394 cv
205.707 94.2681 209.623 97.7402 210.19 98.2441 cv
210.19 98.7363 210.19 100.119 210.19 100.898 cv
208.185 100.898 li
208.185 121.861 li
214.203 121.861 li
214.203 100.898 li
212.23 100.898 li
212.23 97.3232 li
205.991 91.8071 li
177.348 91.8071 li
177.348 91.8071 153.441 115.708 152.862 116.291 cv
152.189 116.291 140.757 116.291 137.042 116.291 cv
137.042 113.96 li
118.487 113.96 li
cp
f
191.38 127.361 mo
172.821 127.361 li
172.821 129.501 li
164.115 129.501 li
164.115 129.501 152.126 142.351 151.551 142.966 cv
150.841 142.966 140.23 142.966 137.042 142.966 cv
137.042 140.506 li
118.487 140.506 li
118.487 146.693 li
137.042 146.693 li
137.042 145.002 li
152.436 145.002 li
152.436 145.002 164.429 132.149 165 131.534 cv
165.621 131.534 170.597 131.534 172.821 131.534 cv
172.821 133.547 li
191.38 133.547 li
191.38 127.361 li
cp
f
191.38 140.506 mo
172.821 140.506 li
172.821 142.452 li
161.991 142.452 li
161.991 142.452 150.964 154.214 150.393 154.826 cv
149.718 154.826 140.492 154.826 137.042 154.826 cv
137.042 152.882 li
118.487 152.882 li
118.487 159.066 li
137.042 159.066 li
137.042 156.861 li
151.274 156.861 li
151.274 156.861 162.299 145.097 162.871 144.488 cv
163.532 144.488 170.29 144.488 172.821 144.488 cv
172.821 146.693 li
191.38 146.693 li
191.38 140.506 li
cp
f
191.38 153.134 mo
172.821 153.134 li
172.821 159.319 li
191.38 159.319 li
191.38 153.134 li
cp
f
158.697 168.755 mo
157.7 168.755 156.892 167.948 156.892 166.953 cv
156.892 165.959 157.7 165.148 158.697 165.148 cv
159.688 165.148 160.498 165.959 160.498 166.953 cv
160.498 167.948 159.688 168.755 158.697 168.755 cv
cp
191.38 169.657 mo
191.38 163.473 li
172.821 163.473 li
172.821 165.89 li
162.93 165.89 li
162.456 163.99 160.745 162.569 158.697 162.569 cv
156.28 162.569 154.313 164.539 154.313 166.953 cv
154.313 169.367 156.28 171.333 158.697 171.333 cv
160.775 171.333 162.516 169.872 162.96 167.929 cv
172.821 167.929 li
172.821 169.657 li
191.38 169.657 li
cp
f
313.517 100.898 mo
313.517 121.861 li
321.25 121.861 li
321.25 100.898 li
313.517 100.898 li
cp
f
296.331 100.898 mo
290.316 100.898 li
290.316 121.861 li
296.331 121.861 li
296.331 100.898 li
cp
f
305.871 128.52 mo
306.863 128.52 307.673 129.331 307.673 130.325 cv
307.673 131.319 306.863 132.13 305.871 132.13 cv
304.875 132.13 304.066 131.319 304.066 130.325 cv
304.066 129.331 304.875 128.52 305.871 128.52 cv
cp
284.823 121.861 mo
284.823 100.898 li
278.81 100.898 li
278.81 121.861 li
281.054 121.861 li
281.054 138.264 li
287.062 144.273 li
300.304 144.273 li
306.586 139.142 li
306.586 134.635 li
308.66 134.289 310.251 132.497 310.251 130.325 cv
310.251 127.908 308.286 125.944 305.871 125.944 cv
303.454 125.944 301.485 127.908 301.485 130.325 cv
301.485 132.278 302.783 133.923 304.552 134.484 cv
304.552 135.601 304.552 137.618 304.552 138.176 cv
303.938 138.681 300.052 141.856 299.578 142.241 cv
298.92 142.241 288.667 142.241 287.907 142.241 cv
287.404 141.74 283.586 137.924 283.087 137.423 cv
283.087 136.744 283.087 125.38 283.087 121.861 cv
284.823 121.861 li
cp
f
273.482 100.898 mo
267.467 100.898 li
267.467 121.861 li
273.482 121.861 li
273.482 100.898 li
cp
f
202.86 121.861 mo
202.86 100.898 li
196.842 100.898 li
196.842 110.233 li
168.714 110.233 li
168.714 110.233 150.28 128.665 149.701 129.245 cv
149.04 129.245 139.965 129.245 137.042 129.245 cv
137.042 127.361 li
118.487 127.361 li
118.487 133.547 li
137.042 133.547 li
137.042 131.278 li
150.542 131.278 li
150.542 131.278 168.979 112.842 169.554 112.268 cv
170.272 112.268 191.604 112.268 196.842 112.268 cv
196.842 121.861 li
202.86 121.861 li
cp
f
114.71 98.9951 mo
159.271 98.9951 li
159.271 98.9951 169.782 87.5088 170.354 86.8813 cv
171.22 86.8813 209.137 86.8813 209.952 86.8813 cv
210.506 87.4331 221.174 98.1021 221.727 98.6606 cv
221.727 99.0493 221.727 100.106 221.727 100.898 cv
219.87 100.898 li
219.87 121.861 li
225.882 121.861 li
225.882 100.898 li
223.763 100.898 li
223.763 97.8159 li
210.795 84.8447 li
169.457 84.8447 li
169.457 84.8447 158.948 96.3325 158.374 96.9629 cv
157.582 96.9629 121.56 96.9629 114.71 96.9629 cv
114.71 88.5278 li
108.691 88.5278 li
108.691 109.491 li
114.71 109.491 li
114.71 98.9951 li
cp
f
305.871 99.6519 mo
304.875 99.6519 304.066 98.8438 304.066 97.8501 cv
304.066 96.8525 304.875 96.0444 305.871 96.0444 cv
306.863 96.0444 307.673 96.8525 307.673 97.8501 cv
307.673 98.8438 306.863 99.6519 305.871 99.6519 cv
cp
305.871 93.4668 mo
303.454 93.4668 301.485 95.4292 301.485 97.8501 cv
301.485 98.7241 301.75 99.5254 302.193 100.214 cv
302.002 100.214 li
302.002 121.861 li
309.736 121.861 li
309.736 100.214 li
309.549 100.214 li
309.99 99.5254 310.251 98.7241 310.251 97.8501 cv
310.251 95.4292 308.286 93.4668 305.871 93.4668 cv
cp
f
75.1982 83.7666 mo
75.1982 88.5278 li
73.293 88.5278 li
73.293 109.491 li
79.3115 109.491 li
79.3115 88.5278 li
77.2329 88.5278 li
77.2329 87.0381 77.2329 85.0532 77.2329 84.6118 cv
77.7988 84.0439 94.4351 67.4072 95.0029 66.8428 cv
95.8354 66.8428 227.432 66.8428 228.257 66.8428 cv
228.835 67.4072 257.32 95.4106 257.907 95.9849 cv
257.907 96.5527 257.907 99.5376 257.907 100.898 cv
255.955 100.898 li
255.955 121.861 li
261.968 121.861 li
261.968 100.898 li
259.942 100.898 li
259.942 95.1357 li
229.091 64.8071 li
94.1587 64.8071 li
75.1982 83.7666 li
cp
f
99.9639 73.542 mo
100.797 73.542 220.397 73.542 221.23 73.542 cv
221.802 74.1162 244.999 97.3076 245.572 97.8848 cv
245.572 98.3447 245.572 99.917 245.572 100.898 cv
243.927 100.898 li
243.927 121.861 li
249.939 121.861 li
249.939 100.898 li
247.604 100.898 li
247.604 97.0425 li
222.069 71.5063 li
99.1201 71.5063 li
86.9551 83.6685 li
86.9551 88.5278 li
84.6392 88.5278 li
84.6392 109.491 li
90.6543 109.491 li
90.6543 88.5278 li
88.9917 88.5278 li
88.9917 87.0073 88.9917 84.9614 88.9917 84.5107 cv
89.5425 83.9619 99.415 74.0913 99.9639 73.542 cv
cp
f
106.022 80.5664 mo
106.852 80.5664 215.821 80.5664 216.654 80.5664 cv
217.218 81.1313 233.148 97.0601 233.712 97.626 cv
233.712 98.0806 233.712 99.7656 233.712 100.898 cv
232.069 100.898 li
232.069 121.861 li
238.083 121.861 li
238.083 100.898 li
235.745 100.898 li
235.745 96.7837 li
217.497 78.5342 li
105.176 78.5342 li
98.9106 84.7983 li
98.9106 88.5278 li
96.835 88.5278 li
96.835 109.491 li
102.852 109.491 li
102.852 88.5278 li
100.943 88.5278 li
100.943 87.3892 100.943 86.0283 100.943 85.6406 cv
101.449 85.1353 105.514 81.0708 106.022 80.5664 cv
cp
f
522.634 322.145 mo
521.641 322.145 520.83 321.33 520.83 320.339 cv
520.83 319.343 521.641 318.535 522.634 318.535 cv
523.632 318.535 524.442 319.343 524.442 320.339 cv
524.442 321.33 523.632 322.145 522.634 322.145 cv
cp
551.502 320.009 mo
526.981 320.009 li
526.813 317.752 524.943 315.952 522.634 315.952 cv
520.271 315.952 518.353 317.84 518.267 320.181 cv
510.063 320.181 458.562 320.181 457.774 320.181 cv
457.195 319.576 435.702 297.126 435.16 296.559 cv
435.16 296.091 435.16 293.217 435.16 291.212 cv
436.804 291.212 li
436.804 270.594 li
431.133 270.594 li
431.133 291.212 li
433.124 291.212 li
433.124 297.376 li
456.906 322.213 li
518.693 322.213 li
519.399 323.694 520.894 324.719 522.634 324.719 cv
524.446 324.719 526.008 323.616 526.671 322.043 cv
551.502 322.043 li
551.502 327.557 li
565.165 327.557 li
565.165 312.608 li
551.502 312.608 li
551.502 320.009 li
cp
f
522.892 277.296 mo
521.9 277.296 521.089 276.485 521.089 275.491 cv
521.089 274.494 521.9 273.686 522.892 273.686 cv
523.888 273.686 524.7 274.494 524.7 275.491 cv
524.7 276.485 523.888 277.296 522.892 277.296 cv
cp
551.502 274.128 mo
527.038 274.128 li
526.46 272.379 524.831 271.111 522.892 271.111 cv
520.826 271.111 519.104 272.546 518.644 274.475 cv
511.477 274.475 li
511.477 279.612 li
508.202 279.612 li
508.202 288.092 li
498.201 288.092 li
498.201 288.092 487.21 299.083 486.645 299.645 cv
485.835 299.645 454.533 299.645 453.72 299.645 cv
453.205 299.127 448.051 293.977 447.53 293.453 cv
447.53 293.094 447.53 292.089 447.53 291.212 cv
449.177 291.212 li
449.177 270.594 li
443.506 270.594 li
443.506 291.212 li
445.494 291.212 li
445.494 294.298 li
452.882 301.68 li
487.484 301.68 li
487.484 301.68 498.476 290.692 499.041 290.127 cv
499.628 290.127 505.378 290.127 508.202 290.127 cv
508.202 292.503 li
517.737 292.503 li
517.737 279.612 li
513.511 279.612 li
513.511 278.603 513.511 277.271 513.511 276.507 cv
514.563 276.507 517.163 276.507 518.644 276.507 cv
519.104 278.432 520.826 279.871 522.892 279.871 cv
525.078 279.871 526.882 278.254 527.206 276.163 cv
551.502 276.163 li
551.502 282.193 li
565.165 282.193 li
565.165 267.243 li
551.502 267.243 li
551.502 274.128 li
cp
f
522.892 231.93 mo
521.9 231.93 521.089 231.122 521.089 230.124 cv
521.089 229.133 521.9 228.32 522.892 228.32 cv
523.888 228.32 524.7 229.133 524.7 230.124 cv
524.7 231.122 523.888 231.93 522.892 231.93 cv
cp
551.502 230.655 mo
527.221 230.655 li
527.243 230.479 527.274 230.308 527.274 230.124 cv
527.274 227.708 525.311 225.745 522.892 225.745 cv
520.48 225.745 518.51 227.708 518.51 230.124 cv
518.51 230.188 518.531 230.251 518.531 230.314 cv
511.135 230.314 li
511.135 235.54 li
508.202 235.54 li
508.202 247.396 li
510.886 247.396 li
503.835 254.449 li
503.835 254.449 503.835 274.345 503.835 275.156 cv
503.329 275.662 499.35 279.64 498.844 280.146 cv
498.111 280.146 468.08 280.146 461.29 280.146 cv
461.29 270.594 li
455.622 270.594 li
455.622 291.212 li
461.29 291.212 li
461.29 282.175 li
499.688 282.175 li
505.868 275.999 li
505.868 275.999 505.868 256.099 505.868 255.29 cv
506.342 254.815 512.125 249.037 513.762 247.396 cv
517.225 247.396 li
517.225 235.54 li
513.171 235.54 li
513.171 234.649 513.171 233.198 513.171 232.347 cv
514.419 232.347 517.946 232.347 519.136 232.347 cv
519.899 233.633 521.288 234.511 522.892 234.511 cv
524.349 234.511 525.634 233.786 526.432 232.69 cv
551.502 232.69 li
551.502 238.118 li
565.165 238.118 li
565.165 223.167 li
551.502 223.167 li
551.502 230.655 li
cp
f
522.892 187.857 mo
521.9 187.857 521.089 187.043 521.089 186.046 cv
521.089 185.055 521.9 184.248 522.892 184.248 cv
523.888 184.248 524.7 185.055 524.7 186.046 cv
524.7 187.043 523.888 187.857 522.892 187.857 cv
cp
551.502 185.122 mo
527.17 185.122 li
526.74 183.149 524.992 181.669 522.892 181.669 cv
520.985 181.669 519.377 182.904 518.775 184.607 cv
511.654 184.607 li
511.654 190.433 li
508.202 190.433 li
508.202 197.492 li
504.179 197.492 li
504.179 197.492 504.179 243.227 504.179 244.051 cv
503.613 244.622 487.727 260.504 487.16 261.069 cv
486.747 261.069 485.428 261.069 484.441 261.069 cv
484.441 258.994 li
465.881 258.994 li
465.881 265.178 li
484.441 265.178 li
484.441 263.102 li
488.002 263.102 li
506.211 244.894 li
506.211 244.894 506.211 201.468 506.211 199.524 cv
506.762 199.524 507.522 199.524 508.202 199.524 cv
508.202 202.291 li
517.225 202.291 li
517.225 190.433 li
513.687 190.433 li
513.687 189.258 513.687 187.52 513.687 186.64 cv
514.751 186.64 517.277 186.64 518.57 186.64 cv
518.865 188.779 520.677 190.433 522.892 190.433 cv
524.924 190.433 526.621 189.038 527.118 187.157 cv
551.502 187.157 li
551.502 193.266 li
565.165 193.266 li
565.165 178.318 li
551.502 178.318 li
551.502 185.122 li
cp
f
522.892 141.977 mo
521.9 141.977 521.089 141.168 521.089 140.172 cv
521.089 139.178 521.9 138.364 522.892 138.364 cv
523.888 138.364 524.7 139.178 524.7 140.172 cv
524.7 141.168 523.888 141.977 522.892 141.977 cv
cp
551.502 139.241 mo
527.17 139.241 li
526.74 137.272 524.99 135.789 522.892 135.789 cv
520.921 135.789 519.272 137.108 518.723 138.898 cv
509.59 138.898 li
509.59 145.066 li
508.202 145.066 li
508.202 152.129 li
498.937 152.129 li
498.937 152.129 498.937 236.089 498.937 236.922 cv
498.38 237.477 487.027 248.831 486.474 249.384 cv
486.124 249.384 485.226 249.384 484.441 249.384 cv
484.441 247.396 li
465.881 247.396 li
465.881 253.581 li
484.441 253.581 li
484.441 251.419 li
487.318 251.419 li
500.97 237.762 li
500.97 237.762 500.97 156.146 500.97 154.161 cv
502.12 154.161 506.006 154.161 508.202 154.161 cv
508.202 156.925 li
517.225 156.925 li
517.225 145.066 li
511.624 145.066 li
511.624 143.918 511.624 141.901 511.624 140.929 cv
512.837 140.929 516.761 140.929 518.586 140.929 cv
518.951 142.984 520.736 144.556 522.892 144.556 cv
524.924 144.556 526.628 143.157 527.118 141.273 cv
551.502 141.273 li
551.502 147.642 li
565.165 147.642 li
565.165 132.696 li
551.502 132.696 li
551.502 139.241 li
cp
f
522.376 96.0967 mo
521.383 96.0967 520.572 95.2856 520.572 94.2915 cv
520.572 93.2979 521.383 92.4897 522.376 92.4897 cv
523.375 92.4897 524.181 93.2979 524.181 94.2915 cv
524.181 95.2856 523.375 96.0967 522.376 96.0967 cv
cp
551.502 94.0449 mo
526.735 94.0449 li
526.606 91.748 524.707 89.9111 522.376 89.9111 cv
519.963 89.9111 517.996 91.874 517.996 94.2915 cv
517.996 94.3862 518.019 94.4712 518.024 94.5625 cv
510.104 94.5625 li
510.104 99.1895 li
508.202 99.1895 li
508.202 110.467 li
492.922 125.748 li
492.922 125.748 492.922 229.9 492.922 230.737 cv
492.414 231.242 488.181 235.474 487.677 235.981 cv
487.244 235.981 485.629 235.981 484.441 235.981 cv
484.441 233.735 li
465.881 233.735 li
465.881 239.92 li
484.441 239.92 li
484.441 238.014 li
488.52 238.014 li
494.955 231.577 li
494.955 231.577 494.955 127.426 494.955 126.586 cv
495.47 126.076 507.892 113.655 510.497 111.044 cv
517.225 111.044 li
517.225 99.1895 li
512.136 99.1895 li
512.136 98.29 512.136 97.2446 512.136 96.5986 cv
513.446 96.5986 517.456 96.5986 518.669 96.5986 cv
519.438 97.8389 520.808 98.6748 522.376 98.6748 cv
524.153 98.6748 525.681 97.6055 526.367 96.0835 cv
551.502 96.0835 li
551.502 103.317 li
565.165 103.317 li
565.165 88.3652 li
551.502 88.3652 li
551.502 94.0449 li
cp
f
1093.94 248.387 mo
1092.94 248.387 1092.13 247.576 1092.13 246.582 cv
1092.13 245.587 1092.94 244.78 1093.94 244.78 cv
1094.93 244.78 1095.74 245.587 1095.74 246.582 cv
1095.74 247.576 1094.93 248.387 1093.94 248.387 cv
cp
928.463 228.796 mo
927.469 228.796 926.658 227.988 926.658 226.992 cv
926.658 226.001 927.469 225.189 928.463 225.189 cv
929.457 225.189 930.266 226.001 930.266 226.992 cv
930.266 227.988 929.457 228.796 928.463 228.796 cv
cp
783.607 278.543 mo
783.607 279.54 782.797 280.351 781.803 280.351 cv
780.809 280.351 779.998 279.54 779.998 278.543 cv
779.998 277.549 780.809 276.741 781.803 276.741 cv
782.797 276.741 783.607 277.549 783.607 278.543 cv
cp
1140.85 244.78 mo
1141.84 244.78 1142.65 245.587 1142.65 246.582 cv
1142.65 247.576 1141.84 248.387 1140.85 248.387 cv
1139.85 248.387 1139.04 247.576 1139.04 246.582 cv
1139.04 245.587 1139.85 244.78 1140.85 244.78 cv
cp
1140.85 250.965 mo
1143.26 250.965 1145.23 248.999 1145.23 246.582 cv
1145.23 244.168 1143.26 242.202 1140.85 242.202 cv
1138.71 242.202 1136.92 243.745 1136.55 245.783 cv
1098.24 245.783 li
1097.86 243.745 1096.08 242.202 1093.94 242.202 cv
1091.52 242.202 1089.55 244.168 1089.55 246.582 cv
1089.55 247.436 1089.81 248.223 1090.23 248.895 cv
1088.18 250.949 1081.2 257.933 1080.71 258.409 cv
1079.88 258.409 998.666 258.409 998.666 258.409 cv
998.666 258.409 992.549 264.525 992.006 265.071 cv
991.19 265.071 953.586 265.071 952.766 265.071 cv
952.231 264.534 947.162 259.463 947.162 259.463 cv
947.162 259.463 941.135 259.463 940.395 259.463 cv
940.007 259.075 937.5 256.569 936.194 255.263 cv
936.194 238.033 li
929.994 238.033 li
929.994 231.085 li
931.656 230.46 932.843 228.869 932.843 226.992 cv
932.843 224.577 930.876 222.614 928.463 222.614 cv
926.32 222.614 924.54 224.161 924.158 226.193 cv
911.795 226.193 li
911.795 222.223 li
905.938 222.223 li
905.938 212.961 li
869.707 212.961 li
869.707 212.961 869.707 236.174 869.707 238.049 cv
867.742 238.049 796.36 238.049 795.542 238.049 cv
794.999 237.502 788.924 231.432 788.924 231.432 cv
717.203 231.432 li
711.233 237.395 li
711.233 242.331 li
708.345 242.331 li
708.345 256.421 li
710.765 256.421 li
710.765 265.873 li
706.624 265.873 li
706.624 279.96 li
714.189 279.96 li
714.189 272.215 li
723.656 272.215 779.236 272.215 781.04 272.215 cv
781.04 272.802 781.04 273.598 781.04 274.242 cv
778.99 274.601 777.421 276.387 777.421 278.543 cv
777.421 280.96 779.39 282.926 781.803 282.926 cv
784.22 282.926 786.182 280.96 786.182 278.543 cv
786.182 276.576 784.87 274.923 783.073 274.374 cv
783.073 270.183 li
714.189 270.183 li
714.189 265.873 li
712.798 265.873 li
712.798 256.421 li
715.902 256.421 li
715.902 242.331 li
713.267 242.331 li
713.267 240.924 713.267 238.725 713.267 238.242 cv
713.769 237.743 717.545 233.966 718.045 233.463 cv
718.868 233.463 787.256 233.463 788.084 233.463 cv
788.625 234.01 794.7 240.081 794.7 240.081 cv
871.743 240.081 li
871.743 240.081 871.743 216.868 871.743 214.993 cv
873.598 214.993 902.046 214.993 903.905 214.993 cv
903.905 216.167 903.905 220.109 903.905 222.223 cv
900.11 222.223 li
900.11 235.969 li
911.795 235.969 li
911.795 228.225 li
924.278 228.225 li
924.768 229.882 926.2 231.122 927.962 231.325 cv
927.962 238.033 li
921.242 238.033 li
921.242 256.765 li
934.821 256.765 li
939.555 261.499 li
939.555 261.499 945.577 261.499 946.321 261.499 cv
946.855 262.032 951.925 267.103 951.925 267.103 cv
992.849 267.103 li
992.849 267.103 998.965 260.987 999.505 260.444 cv
1000.34 260.444 1081.56 260.444 1081.56 260.444 cv
1091.68 250.321 li
1092.34 250.719 1093.11 250.965 1093.94 250.965 cv
1095.92 250.965 1097.58 249.626 1098.12 247.816 cv
1136.66 247.816 li
1137.2 249.626 1138.86 250.965 1140.85 250.965 cv
cp
f
700.096 294.782 mo
701.091 294.782 701.901 295.593 701.901 296.586 cv
701.901 297.581 701.091 298.389 700.096 298.389 cv
699.102 298.389 698.293 297.581 698.293 296.586 cv
698.293 295.593 699.102 294.782 700.096 294.782 cv
cp
704.479 296.586 mo
704.479 294.169 702.512 292.203 700.096 292.203 cv
697.678 292.203 695.713 294.169 695.713 296.586 cv
695.713 298.009 696.41 299.266 697.463 300.067 cv
696.316 300.067 li
696.316 314.155 li
703.876 314.155 li
703.876 300.067 li
702.73 300.067 li
703.784 299.266 704.479 298.009 704.479 296.586 cv
cp
f
711.951 294.782 mo
712.945 294.782 713.756 295.593 713.756 296.586 cv
713.756 297.581 712.945 298.389 711.951 298.389 cv
710.957 298.389 710.146 297.581 710.146 296.586 cv
710.146 295.593 710.957 294.782 711.951 294.782 cv
cp
716.332 296.586 mo
716.332 294.169 714.368 292.203 711.951 292.203 cv
709.537 292.203 707.573 294.169 707.573 296.586 cv
707.573 298.009 708.263 299.266 709.318 300.067 cv
708.001 300.067 li
708.001 314.155 li
715.563 314.155 li
715.563 300.067 li
714.583 300.067 li
715.641 299.266 716.332 298.009 716.332 296.586 cv
cp
f
723.294 294.782 mo
724.288 294.782 725.099 295.593 725.099 296.586 cv
725.099 297.581 724.288 298.389 723.294 298.389 cv
722.296 298.389 721.489 297.581 721.489 296.586 cv
721.489 295.593 722.296 294.782 723.294 294.782 cv
cp
727.672 296.586 mo
727.672 294.169 725.711 292.203 723.294 292.203 cv
720.876 292.203 718.913 294.169 718.913 296.586 cv
718.913 298.009 719.604 299.266 720.659 300.067 cv
719.86 300.067 li
719.86 314.155 li
727.418 314.155 li
727.418 300.067 li
725.924 300.067 li
726.98 299.266 727.672 298.009 727.672 296.586 cv
cp
f
809.38 291.427 mo
809.38 290.436 810.19 289.625 811.188 289.625 cv
812.183 289.625 812.991 290.436 812.991 291.427 cv
812.991 292.425 812.183 293.232 811.188 293.232 cv
810.19 293.232 809.38 292.425 809.38 291.427 cv
cp
815.568 291.427 mo
815.568 289.017 813.603 287.047 811.188 287.047 cv
808.768 287.047 806.804 289.017 806.804 291.427 cv
806.804 293.848 808.768 295.814 811.188 295.814 cv
813.603 295.814 815.568 293.848 815.568 291.427 cv
cp
f
893.666 312.823 mo
892.672 312.823 891.861 312.015 891.861 311.022 cv
891.861 310.027 892.672 309.216 893.666 309.216 cv
894.66 309.216 895.47 310.027 895.47 311.022 cv
895.47 312.015 894.66 312.823 893.666 312.823 cv
cp
870.209 312.823 mo
869.213 312.823 868.406 312.015 868.406 311.022 cv
868.406 310.027 869.213 309.216 870.209 309.216 cv
871.205 309.216 872.014 310.027 872.014 311.022 cv
872.014 312.015 871.205 312.823 870.209 312.823 cv
cp
769.691 279.833 mo
768.693 279.833 767.883 279.025 767.883 278.028 cv
767.883 277.031 768.693 276.223 769.691 276.223 cv
770.685 276.223 771.491 277.031 771.491 278.028 cv
771.491 279.025 770.685 279.833 769.691 279.833 cv
cp
740.819 279.833 mo
739.825 279.833 739.015 279.025 739.015 278.028 cv
739.015 277.031 739.825 276.223 740.819 276.223 cv
741.813 276.223 742.624 277.031 742.624 278.028 cv
742.624 279.025 741.813 279.833 740.819 279.833 cv
cp
898.048 311.022 mo
898.048 308.603 896.083 306.644 893.666 306.644 cv
891.405 306.644 889.563 308.36 889.328 310.563 cv
874.545 310.563 li
874.349 308.705 873.006 307.192 871.226 306.77 cv
871.226 303.173 li
861.96 303.173 li
861.96 301.097 li
854.398 301.097 li
854.398 314.501 li
861.96 314.501 li
861.96 305.205 li
863.771 305.205 867.947 305.205 869.192 305.205 cv
869.192 305.678 869.192 306.259 869.192 306.77 cv
867.268 307.231 865.829 308.957 865.829 311.022 cv
865.829 312.958 867.102 314.583 868.849 315.165 cv
868.849 315.543 868.849 315.998 868.849 316.405 cv
866.887 316.405 785.554 316.405 783.593 316.405 cv
783.593 315.776 783.593 314.881 783.593 314.155 cv
785.668 314.155 li
785.668 300.067 li
783.507 300.067 li
783.507 289.937 li
773.576 280.003 li
773.883 279.41 774.071 278.744 774.071 278.028 cv
774.071 275.615 772.104 273.645 769.691 273.645 cv
767.488 273.645 765.681 275.283 765.372 277.397 cv
745.136 277.397 li
744.832 275.283 743.021 273.645 740.819 273.645 cv
738.401 273.645 736.44 275.615 736.44 278.028 cv
736.44 280.442 738.401 282.408 740.819 282.408 cv
742.741 282.408 744.365 281.159 744.951 279.433 cv
765.56 279.433 li
766.147 281.159 767.767 282.408 769.691 282.408 cv
770.651 282.408 771.53 282.086 772.253 281.559 cv
774.21 283.516 780.992 290.298 781.47 290.777 cv
781.47 291.376 781.47 297.322 781.47 300.067 cv
778.108 300.067 li
778.108 314.155 li
781.556 314.155 li
781.556 318.44 li
870.884 318.44 li
870.884 315.335 li
872.445 315.089 873.73 314.028 874.287 312.596 cv
889.588 312.596 li
890.221 314.233 891.808 315.405 893.666 315.405 cv
896.083 315.405 898.048 313.435 898.048 311.022 cv
cp
f
686.435 251.994 mo
686.435 251.002 687.241 250.192 688.239 250.192 cv
689.233 250.192 690.042 251.002 690.042 251.994 cv
690.042 252.991 689.233 253.799 688.239 253.799 cv
687.241 253.799 686.435 252.991 686.435 251.994 cv
cp
692.623 251.994 mo
692.623 249.576 690.656 247.613 688.239 247.613 cv
685.821 247.613 683.86 249.576 683.86 251.994 cv
683.86 254.411 685.821 256.377 688.239 256.377 cv
690.656 256.377 692.623 254.411 692.623 251.994 cv
cp
f
877.425 258.652 mo
881.222 258.652 li
881.222 268.107 li
879.315 268.107 li
879.315 281.85 li
888.768 281.85 li
888.768 268.107 li
883.254 268.107 li
883.254 258.652 li
889.111 258.652 li
889.111 244.907 li
877.425 244.907 li
877.425 258.652 li
cp
f
799.588 244.262 mo
800.582 244.262 801.391 245.07 801.391 246.067 cv
801.391 247.061 800.582 247.872 799.588 247.872 cv
798.594 247.872 797.781 247.061 797.781 246.067 cv
797.781 245.07 798.594 244.262 799.588 244.262 cv
cp
777.936 242.331 mo
777.936 256.421 li
785.494 256.421 li
785.494 247.471 li
795.458 247.471 li
795.94 248.883 797.106 249.968 798.569 250.318 cv
798.569 260.545 li
793.229 260.545 li
793.229 274.121 li
806.633 274.121 li
806.633 260.545 li
800.604 260.545 li
800.604 250.318 li
802.53 249.857 803.969 248.132 803.969 246.067 cv
803.969 243.65 802.004 241.687 799.588 241.687 cv
797.386 241.687 795.578 243.322 795.268 245.436 cv
785.494 245.436 li
785.494 242.331 li
777.936 242.331 li
cp
f
773.811 256.421 mo
773.811 242.331 li
766.25 242.331 li
766.25 256.421 li
773.811 256.421 li
cp
f
758.561 257.409 mo
759.56 257.409 760.366 258.217 760.366 259.21 cv
760.366 260.205 759.56 261.019 758.561 261.019 cv
757.567 261.019 756.757 260.205 756.757 259.21 cv
756.757 258.217 757.567 257.409 758.561 257.409 cv
cp
758.561 263.594 mo
760.978 263.594 762.943 261.627 762.943 259.21 cv
762.943 258.148 762.547 257.182 761.909 256.421 cv
762.342 256.421 li
762.342 242.331 li
754.78 242.331 li
754.78 256.421 li
755.214 256.421 li
754.578 257.182 754.181 258.148 754.181 259.21 cv
754.181 261.627 756.147 263.594 758.561 263.594 cv
cp
f
750.959 256.421 mo
750.959 242.331 li
743.397 242.331 li
743.397 256.421 li
750.959 256.421 li
cp
f
739.616 256.421 mo
739.616 242.331 li
732.057 242.331 li
732.057 256.421 li
739.616 256.421 li
cp
f
723.507 257.409 mo
724.501 257.409 725.313 258.217 725.313 259.21 cv
725.313 260.205 724.501 261.019 723.507 261.019 cv
722.513 261.019 721.706 260.205 721.706 259.21 cv
721.706 258.217 722.513 257.409 723.507 257.409 cv
cp
723.507 263.594 mo
725.924 263.594 727.889 261.627 727.889 259.21 cv
727.889 258.148 727.492 257.182 726.857 256.421 cv
727.287 256.421 li
727.287 242.331 li
719.726 242.331 li
719.726 256.421 li
720.159 256.421 li
719.523 257.182 719.128 258.148 719.128 259.21 cv
719.128 261.627 721.093 263.594 723.507 263.594 cv
cp
f
700.182 261.019 mo
699.185 261.019 698.375 260.205 698.375 259.21 cv
698.375 258.217 699.185 257.409 700.182 257.409 cv
701.175 257.409 701.985 258.217 701.985 259.21 cv
701.985 260.205 701.175 261.019 700.182 261.019 cv
cp
703.96 256.421 mo
703.96 242.331 li
696.4 242.331 li
696.4 256.421 li
696.832 256.421 li
696.198 257.182 695.801 258.148 695.801 259.21 cv
695.801 261.627 697.766 263.594 700.182 263.594 cv
702.598 263.594 704.565 261.627 704.565 259.21 cv
704.565 258.148 704.163 257.182 703.532 256.421 cv
703.96 256.421 li
cp
f
736.339 300.067 mo
736.339 288.998 li
697.699 288.998 li
688.426 298.268 li
688.426 298.268 688.426 314.414 688.426 316.231 cv
687.488 316.231 685.119 316.231 683.38 316.231 cv
683.38 318.266 li
690.459 318.266 li
690.459 318.266 690.459 299.916 690.459 299.111 cv
690.993 298.578 698.007 291.566 698.539 291.03 cv
699.343 291.03 732.4 291.03 734.304 291.03 cv
734.304 292.324 734.304 297.653 734.304 300.067 cv
731.887 300.067 li
731.887 314.155 li
739.448 314.155 li
739.448 300.067 li
736.339 300.067 li
cp
f
747.264 318.497 mo
746.269 318.497 745.459 317.689 745.459 316.691 cv
745.459 315.694 746.269 314.886 747.264 314.886 cv
748.258 314.886 749.068 315.694 749.068 316.691 cv
749.068 317.689 748.258 318.497 747.264 318.497 cv
cp
751.303 300.067 mo
743.741 300.067 li
743.741 314.11 li
743.209 314.836 742.884 315.723 742.884 316.691 cv
742.884 319.106 744.846 321.072 747.264 321.072 cv
749.681 321.072 751.646 319.106 751.646 316.691 cv
751.646 315.745 751.338 314.874 750.824 314.155 cv
751.303 314.155 li
751.303 300.067 li
cp
f
806.633 283.74 mo
793.229 283.74 li
793.229 297.316 li
806.633 297.316 li
806.633 283.74 li
cp
f
854.398 243.36 mo
854.398 256.765 li
861.96 256.765 li
861.96 243.36 li
854.398 243.36 li
cp
f
799.844 312.305 mo
798.85 312.305 798.041 311.5 798.041 310.507 cv
798.041 309.509 798.85 308.701 799.844 308.701 cv
800.838 308.701 801.648 309.509 801.648 310.507 cv
801.648 311.5 800.838 312.305 799.844 312.305 cv
cp
827.423 314.501 mo
827.423 301.097 li
819.863 301.097 li
819.863 304.201 li
817.209 304.201 li
817.209 304.201 811.902 309.509 811.37 310.046 cv
810.81 310.046 806.514 310.046 804.182 310.046 cv
803.95 307.847 802.104 306.124 799.844 306.124 cv
797.43 306.124 795.464 308.089 795.464 310.507 cv
795.464 312.917 797.43 314.886 799.844 314.886 cv
801.703 314.886 803.283 313.719 803.92 312.081 cv
812.206 312.081 li
812.206 312.081 817.512 306.773 818.049 306.24 cv
818.386 306.24 819.172 306.24 819.863 306.24 cv
819.863 314.501 li
827.423 314.501 li
cp
f
782.057 228.541 mo
781.066 228.541 780.256 227.733 780.256 226.736 cv
780.256 225.745 781.066 224.93 782.057 224.93 cv
783.055 224.93 783.865 225.745 783.865 226.736 cv
783.865 227.733 783.055 228.541 782.057 228.541 cv
cp
782.057 222.355 mo
779.83 222.355 778.008 224.034 777.731 226.193 cv
717.686 226.193 li
717.686 226.193 707.091 237.929 706.518 238.563 cv
705.832 238.563 690.138 238.563 683.38 238.563 cv
683.38 240.595 li
707.42 240.595 li
707.42 240.595 718.018 228.859 718.588 228.225 cv
719.412 228.225 770.136 228.225 777.955 228.225 cv
778.568 229.907 780.166 231.116 782.057 231.116 cv
784.475 231.116 786.441 229.153 786.441 226.736 cv
786.441 224.318 784.475 222.355 782.057 222.355 cv
cp
f
823.814 267.715 mo
822.82 267.715 822.01 266.908 822.01 265.91 cv
822.01 264.919 822.82 264.111 823.814 264.111 cv
824.808 264.111 825.618 264.919 825.618 265.91 cv
825.618 266.908 824.808 267.715 823.814 267.715 cv
cp
823.814 279.057 mo
822.82 279.057 822.01 278.249 822.01 277.255 cv
822.01 276.261 822.82 275.447 823.814 275.447 cv
824.808 275.447 825.618 276.261 825.618 277.255 cv
825.618 278.249 824.808 279.057 823.814 279.057 cv
cp
826.181 273.578 mo
825.499 273.136 824.688 272.872 823.814 272.872 cv
821.4 272.872 819.434 274.837 819.434 277.255 cv
819.434 279.669 821.4 281.635 823.814 281.635 cv
826.231 281.635 828.196 279.669 828.196 277.255 cv
828.196 276.447 827.965 275.706 827.582 275.056 cv
829.389 273.25 li
829.389 273.25 829.389 266.526 829.389 265.778 cv
829.921 265.242 835.015 260.148 835.015 260.148 cv
835.015 256.765 li
839.109 256.765 li
839.109 243.36 li
831.548 243.36 li
831.548 256.765 li
832.982 256.765 li
832.982 257.782 832.982 258.936 832.982 259.306 cv
832.557 259.732 829.248 263.038 827.912 264.37 cv
827.386 262.973 826.158 261.912 824.66 261.619 cv
824.66 256.765 li
827.423 256.765 li
827.423 243.36 li
819.863 243.36 li
819.863 256.765 li
822.628 256.765 li
822.628 261.717 li
820.792 262.241 819.434 263.91 819.434 265.91 cv
819.434 268.327 821.4 270.297 823.814 270.297 cv
825.271 270.297 826.553 269.574 827.352 268.478 cv
827.352 270.227 827.352 272.039 827.352 272.408 cv
827.128 272.632 826.629 273.131 826.181 273.578 cv
cp
f
834.896 273.39 mo
833.902 273.39 833.092 272.578 833.092 271.585 cv
833.092 270.587 833.902 269.779 834.896 269.779 cv
835.894 269.779 836.703 270.587 836.703 271.585 cv
836.703 272.578 835.894 273.39 834.896 273.39 cv
cp
837.607 268.167 mo
836.86 267.573 835.926 267.204 834.896 267.204 cv
832.482 267.204 830.517 269.17 830.517 271.585 cv
830.517 274.001 832.482 275.964 834.896 275.964 cv
837.314 275.964 839.281 274.001 839.281 271.585 cv
839.281 270.935 839.132 270.328 838.878 269.773 cv
848.719 259.934 li
848.719 256.765 li
850.791 256.765 li
850.791 243.36 li
843.233 243.36 li
843.233 256.765 li
846.684 256.765 li
846.684 257.629 846.684 258.709 846.684 259.094 cv
846.219 259.554 839.83 265.945 837.607 268.167 cv
cp
f
781.803 267.462 mo
780.809 267.462 779.998 266.648 779.998 265.658 cv
779.998 264.661 780.809 263.853 781.803 263.853 cv
782.797 263.853 783.607 264.661 783.607 265.658 cv
783.607 266.648 782.797 267.462 781.803 267.462 cv
cp
893.406 282.667 mo
894.404 282.667 895.212 283.475 895.212 284.473 cv
895.212 285.466 894.404 286.277 893.406 286.277 cv
892.412 286.277 891.602 285.466 891.602 284.473 cv
891.602 283.475 892.412 282.667 893.406 282.667 cv
cp
811.37 279.433 mo
811.911 279.978 818.326 286.391 818.326 286.391 cv
836.438 286.391 li
836.438 286.391 841.36 281.468 841.893 280.934 cv
842.697 280.934 868.985 280.934 869.789 280.934 cv
870.323 281.468 875.394 286.542 875.394 286.542 cv
889.571 286.542 li
890.31 287.912 891.744 288.856 893.406 288.856 cv
895.821 288.856 897.79 286.89 897.79 284.473 cv
897.79 282.054 895.821 280.085 893.406 280.085 cv
890.993 280.085 889.025 282.054 889.025 284.473 cv
889.025 284.485 889.029 284.498 889.029 284.507 cv
885.683 284.507 876.881 284.507 876.238 284.507 cv
875.7 283.974 870.631 278.899 870.631 278.899 cv
841.051 278.899 li
841.051 278.899 836.128 283.825 835.594 284.359 cv
834.813 284.359 819.947 284.359 819.17 284.359 cv
818.621 283.812 812.206 277.397 812.206 277.397 cv
812.206 277.397 790.954 277.397 789.088 277.397 cv
789.088 275.665 789.088 264.168 789.088 264.168 cv
785.905 264.168 li
785.293 262.486 783.693 261.275 781.803 261.275 cv
779.39 261.275 777.421 263.241 777.421 265.658 cv
777.421 268.072 779.39 270.038 781.803 270.038 cv
784.033 270.038 785.856 268.359 786.13 266.201 cv
786.439 266.201 786.765 266.201 787.056 266.201 cv
787.056 267.936 787.056 279.433 787.056 279.433 cv
787.056 279.433 810.552 279.433 811.37 279.433 cv
cp
f
696.488 265.873 mo
696.488 277.716 li
695.662 277.712 694.45 277.7 694.025 277.697 cv
693.607 277.271 686.801 270.348 683.38 266.876 cv
683.38 269.773 li
693.168 279.723 li
696.488 279.751 li
696.488 279.96 li
704.05 279.96 li
704.05 265.873 li
696.488 265.873 li
cp
f
759.709 300.067 mo
759.709 284.529 li
759.709 284.529 688.723 284.529 687.886 284.529 cv
687.544 284.188 685.125 281.768 683.38 280.023 cv
683.38 282.9 li
687.044 286.56 li
687.044 286.56 755.695 286.56 757.674 286.56 cv
757.674 287.987 757.674 296.662 757.674 300.067 cv
755.255 300.067 li
755.255 314.155 li
762.814 314.155 li
762.814 300.067 li
759.709 300.067 li
cp
f
893.406 242.202 mo
892.412 242.202 891.602 241.394 891.602 240.396 cv
891.602 239.402 892.412 238.588 893.406 238.588 cv
894.404 238.588 895.212 239.402 895.212 240.396 cv
895.212 241.394 894.404 242.202 893.406 242.202 cv
cp
1117.13 257.927 mo
1118.13 257.927 1118.94 258.734 1118.94 259.728 cv
1118.94 260.723 1118.13 261.534 1117.13 261.534 cv
1116.14 261.534 1115.33 260.723 1115.33 259.728 cv
1115.33 258.734 1116.14 257.927 1117.13 257.927 cv
cp
945.566 274.535 mo
1078.98 274.535 li
1078.98 274.535 1092.24 261.271 1092.81 260.703 cv
1093.53 260.703 1109.45 260.703 1112.87 260.703 cv
1113.32 262.651 1115.05 264.111 1117.13 264.111 cv
1119.55 264.111 1121.52 262.143 1121.52 259.728 cv
1121.52 257.311 1119.55 255.345 1117.13 255.345 cv
1115.08 255.345 1113.37 256.765 1112.89 258.665 cv
1091.97 258.665 li
1091.97 258.665 1078.71 271.932 1078.14 272.5 cv
1077.76 272.5 1050.3 272.5 1020.55 272.5 cv
1020.55 264.339 li
1014.72 264.339 li
1014.72 262.607 li
1001.49 262.607 li
1001.49 268.448 li
1014.72 268.448 li
1014.72 266.371 li
1015.9 266.371 1017.64 266.371 1018.52 266.371 cv
1018.52 267.5 1018.52 270.776 1018.52 272.5 cv
983.849 272.5 946.855 272.5 946.411 272.5 cv
945.869 271.957 940.01 266.1 940.01 266.1 cv
940.01 266.1 919.31 266.1 917.453 266.1 cv
917.453 264.222 917.453 240.11 917.453 240.11 cv
897.761 240.11 li
897.61 237.831 895.726 236.013 893.406 236.013 cv
891.327 236.013 889.588 237.471 889.144 239.421 cv
887.656 239.421 884.569 239.421 883.43 239.421 cv
883.43 238.702 883.43 237.263 883.43 235.969 cv
889.111 235.969 li
889.111 222.223 li
877.425 222.223 li
877.425 235.969 li
881.394 235.969 li
881.394 241.46 li
889.171 241.46 li
889.647 243.36 891.359 244.78 893.406 244.78 cv
895.201 244.78 896.744 243.694 897.42 242.145 cv
900.984 242.145 913.844 242.145 915.417 242.145 cv
915.417 244.022 915.417 268.132 915.417 268.132 cv
915.417 268.132 938.352 268.132 939.166 268.132 cv
939.709 268.678 945.566 274.535 945.566 274.535 cv
cp
f
893.406 267.715 mo
892.412 267.715 891.602 266.908 891.602 265.91 cv
891.602 264.919 892.412 264.111 893.406 264.111 cv
894.404 264.111 895.212 264.919 895.212 265.91 cv
895.212 266.908 894.404 267.715 893.406 267.715 cv
cp
897.592 264.679 mo
897.054 262.868 895.392 261.534 893.406 261.534 cv
890.993 261.534 889.025 263.5 889.025 265.91 cv
889.025 268.327 890.993 270.297 893.406 270.297 cv
895.548 270.297 897.329 268.75 897.708 266.718 cv
904.418 266.718 li
904.418 268.107 li
898.563 268.107 li
898.563 281.85 li
908.014 281.85 li
908.014 268.107 li
906.454 268.107 li
906.454 258.652 li
911.795 258.652 li
911.795 244.907 li
900.11 244.907 li
900.11 258.652 li
904.418 258.652 li
904.418 264.679 li
897.592 264.679 li
cp
f
882.069 300.193 mo
881.073 300.193 880.263 299.385 880.263 298.389 cv
880.263 297.398 881.073 296.586 882.069 296.586 cv
883.063 296.586 883.87 297.398 883.87 298.389 cv
883.87 299.385 883.063 300.193 882.069 300.193 cv
cp
905.519 296.586 mo
906.516 296.586 907.326 297.398 907.326 298.389 cv
907.326 299.385 906.516 300.193 905.519 300.193 cv
904.525 300.193 903.719 299.385 903.719 298.389 cv
903.719 297.398 904.525 296.586 905.519 296.586 cv
cp
898.048 299.707 mo
901.366 299.707 li
901.93 301.477 903.568 302.772 905.519 302.772 cv
907.537 302.772 909.227 301.393 909.73 299.537 cv
918.744 299.537 li
921.309 296.975 li
936.194 296.975 li
936.194 275.838 li
921.072 275.838 li
921.072 294.331 li
919.862 295.542 918.227 297.177 917.905 297.502 cv
917.292 297.502 911.991 297.502 909.81 297.502 cv
909.4 295.51 907.633 294.011 905.519 294.011 cv
903.35 294.011 901.559 295.599 901.213 297.673 cv
898.048 297.673 li
898.048 291.301 li
888.941 291.301 li
888.941 297.673 li
886.376 297.673 li
886.031 295.599 884.24 294.011 882.069 294.011 cv
880.019 294.011 878.307 295.428 877.828 297.328 cv
846.854 297.328 li
846.854 301.097 li
843.233 301.097 li
843.233 303.686 li
839.105 303.686 li
839.105 301.097 li
831.546 301.097 li
831.546 314.501 li
839.105 314.501 li
839.105 305.719 li
843.233 305.719 li
843.233 314.501 li
850.791 314.501 li
850.791 301.097 li
848.891 301.097 li
848.891 300.534 848.891 299.878 848.891 299.367 cv
850.668 299.367 874.778 299.367 877.803 299.367 cv
878.251 301.31 879.988 302.772 882.069 302.772 cv
884.021 302.772 885.66 301.477 886.225 299.707 cv
888.941 299.707 li
888.941 304.707 li
898.048 304.707 li
898.048 299.707 li
cp
f
770.721 325.451 mo
769.723 325.451 768.918 324.644 768.918 323.65 cv
768.918 322.656 769.723 321.848 770.721 321.848 cv
771.714 321.848 772.522 322.656 772.522 323.65 cv
772.522 324.644 771.714 325.451 770.721 325.451 cv
cp
771.607 319.355 mo
771.607 314.155 li
773.811 314.155 li
773.811 300.067 li
766.25 300.067 li
766.25 314.155 li
769.571 314.155 li
769.571 319.436 li
767.997 319.869 766.766 321.144 766.43 322.759 cv
683.38 322.759 li
683.38 324.795 li
766.508 324.795 li
767.016 326.651 768.705 328.03 770.721 328.03 cv
773.134 328.03 775.101 326.064 775.101 323.65 cv
775.101 321.539 773.599 319.772 771.607 319.355 cv
cp
f
781.706 415.617 mo
781.706 414.626 782.514 413.815 783.507 413.815 cv
784.505 413.815 785.311 414.626 785.311 415.617 cv
785.311 416.614 784.505 417.422 783.507 417.422 cv
782.514 417.422 781.706 416.614 781.706 415.617 cv
cp
1073.77 446.808 mo
1074.76 446.808 1075.57 447.616 1075.57 448.61 cv
1075.57 449.607 1074.76 450.415 1073.77 450.415 cv
1072.77 450.415 1071.96 449.607 1071.96 448.61 cv
1071.96 447.616 1072.77 446.808 1073.77 446.808 cv
cp
787.889 415.617 mo
787.889 413.204 785.925 411.238 783.507 411.238 cv
781.094 411.238 779.126 413.204 779.126 415.617 cv
779.126 417.587 780.439 419.24 782.233 419.79 cv
782.233 430.082 li
782.233 430.082 987.282 430.082 988.116 430.082 cv
988.695 430.66 1007.96 449.926 1007.96 449.926 cv
1069.61 449.926 li
1070.18 451.699 1071.81 452.994 1073.77 452.994 cv
1076.19 452.994 1078.15 451.031 1078.15 448.61 cv
1078.15 446.196 1076.19 444.23 1073.77 444.23 cv
1071.6 444.23 1069.8 445.821 1069.46 447.894 cv
1061.14 447.894 1009.57 447.894 1008.81 447.894 cv
1008.23 447.316 988.958 428.048 988.958 428.048 cv
988.958 428.048 786.261 428.048 784.268 428.048 cv
784.268 426.731 784.268 421.809 784.268 419.922 cv
786.317 419.563 787.889 417.775 787.889 415.617 cv
cp
f
660.306 495.52 mo
659.308 495.52 658.501 494.712 658.501 493.718 cv
658.501 492.723 659.308 491.912 660.306 491.912 cv
661.3 491.912 662.106 492.723 662.106 493.718 cv
662.106 494.712 661.3 495.52 660.306 495.52 cv
cp
660.306 489.335 mo
657.889 489.335 655.923 491.297 655.923 493.718 cv
655.923 496.131 657.889 498.101 660.306 498.101 cv
662.72 498.101 664.685 496.131 664.685 493.718 cv
664.685 492.496 664.18 491.397 663.376 490.603 cv
673.657 479.328 li
674.655 479.328 li
674.655 478.232 li
674.715 478.163 li
674.655 478.106 li
674.655 458.361 li
668.641 458.361 li
668.641 479.328 li
670.905 479.328 li
661.584 489.548 li
661.177 489.422 660.754 489.335 660.306 489.335 cv
cp
f
415.64 479.668 mo
415.64 478.674 416.447 477.863 417.441 477.863 cv
418.434 477.863 419.245 478.674 419.245 479.668 cv
419.245 480.663 418.434 481.477 417.441 481.477 cv
416.447 481.477 415.64 480.663 415.64 479.668 cv
cp
589.423 477.863 mo
590.417 477.863 591.227 478.674 591.227 479.668 cv
591.227 480.663 590.417 481.477 589.423 481.477 cv
588.429 481.477 587.618 480.663 587.618 479.668 cv
587.618 478.674 588.429 477.863 589.423 477.863 cv
cp
421.692 480.688 mo
585.171 480.688 li
585.633 482.612 587.358 484.052 589.423 484.052 cv
591.836 484.052 593.806 482.086 593.806 479.668 cv
593.806 477.254 591.836 475.291 589.423 475.291 cv
587.358 475.291 585.633 476.727 585.171 478.652 cv
421.692 478.652 li
421.231 476.727 419.504 475.291 417.441 475.291 cv
415.023 475.291 413.059 477.254 413.059 479.668 cv
413.059 482.086 415.023 484.052 417.441 484.052 cv
419.504 484.052 421.231 482.612 421.692 480.688 cv
cp
f
765.466 504.286 mo
766.46 504.286 767.267 505.094 767.267 506.09 cv
767.267 507.082 766.46 507.89 765.466 507.89 cv
764.469 507.89 763.657 507.082 763.657 506.09 cv
763.657 505.094 764.469 504.286 765.466 504.286 cv
cp
718.557 501.193 mo
717.559 501.193 716.752 500.386 716.752 499.388 cv
716.752 498.391 717.559 497.583 718.557 497.583 cv
719.551 497.583 720.357 498.391 720.357 499.388 cv
720.357 500.386 719.551 501.193 718.557 501.193 cv
cp
684.018 501.193 mo
683.023 501.193 682.213 500.386 682.213 499.388 cv
682.213 498.391 683.023 497.583 684.018 497.583 cv
685.012 497.583 685.818 498.391 685.818 499.388 cv
685.818 500.386 685.012 501.193 684.018 501.193 cv
cp
719.442 495.097 mo
719.442 479.328 li
721.393 479.328 li
721.393 458.361 li
715.378 458.361 li
715.378 479.328 li
717.408 479.328 li
717.408 495.179 li
715.628 495.665 714.306 497.236 714.199 499.146 cv
688.376 499.146 li
688.247 496.845 686.35 495.005 684.018 495.005 cv
681.601 495.005 679.636 496.971 679.636 499.388 cv
679.636 501.802 681.601 503.769 684.018 503.769 cv
685.794 503.769 687.32 502.702 688.006 501.178 cv
714.567 501.178 li
715.253 502.702 716.776 503.769 718.557 503.769 cv
720.357 503.769 721.908 502.673 722.581 501.111 cv
727.497 501.111 758.551 501.111 759.31 501.111 cv
759.644 501.446 760.984 502.789 761.834 503.643 cv
761.359 504.336 761.085 505.182 761.085 506.09 cv
761.085 508.509 763.049 510.471 765.466 510.471 cv
767.884 510.471 769.848 508.509 769.848 506.09 cv
769.848 503.673 767.884 501.711 765.466 501.711 cv
764.692 501.711 763.978 501.926 763.352 502.279 cv
760.151 499.079 li
722.906 499.079 li
722.768 497.11 721.333 495.488 719.442 495.097 cv
cp
f
772.938 483.793 mo
772.938 489.981 li
791.498 489.981 li
791.498 488.161 li
808.159 488.161 li
808.159 488.161 832.063 464.26 832.643 463.675 cv
833.449 463.675 961.553 463.675 962.293 463.675 cv
962.778 464.107 966.693 467.573 967.265 468.078 cv
967.265 468.57 967.265 469.952 967.265 470.735 cv
965.259 470.735 li
965.259 491.697 li
971.27 491.697 li
971.27 470.735 li
969.302 470.735 li
969.302 467.163 li
963.061 461.644 li
831.802 461.644 li
831.802 461.644 807.897 485.547 807.316 486.128 cv
806.644 486.128 795.212 486.128 791.498 486.128 cv
791.498 483.793 li
772.938 483.793 li
cp
f
1062.94 498.353 mo
1063.94 498.353 1064.75 499.168 1064.75 500.158 cv
1064.75 501.155 1063.94 501.963 1062.94 501.963 cv
1061.95 501.963 1061.14 501.155 1061.14 500.158 cv
1061.14 499.168 1061.95 498.353 1062.94 498.353 cv
cp
1041.9 491.697 mo
1041.9 470.735 li
1035.88 470.735 li
1035.88 491.697 li
1038.13 491.697 li
1038.13 508.098 li
1044.13 514.106 li
1057.38 514.106 li
1063.66 508.978 li
1063.66 504.469 li
1065.73 504.125 1067.32 502.329 1067.32 500.158 cv
1067.32 497.741 1065.36 495.778 1062.94 495.778 cv
1060.53 495.778 1058.56 497.741 1058.56 500.158 cv
1058.56 502.114 1059.86 503.756 1061.63 504.318 cv
1061.63 505.435 1061.63 507.454 1061.63 508.013 cv
1061.01 508.518 1057.12 511.689 1056.65 512.074 cv
1055.99 512.074 1045.74 512.074 1044.98 512.074 cv
1044.48 511.576 1040.66 507.757 1040.16 507.259 cv
1040.16 506.577 1040.16 495.217 1040.16 491.697 cv
1041.9 491.697 li
cp
f
1030.56 470.735 mo
1024.54 470.735 li
1024.54 491.697 li
1030.56 491.697 li
1030.56 470.735 li
cp
f
959.928 491.697 mo
959.928 470.735 li
953.917 470.735 li
953.917 480.069 li
823.168 480.069 li
823.168 480.069 804.734 498.502 804.157 499.079 cv
803.495 499.079 794.42 499.079 791.498 499.079 cv
791.498 497.198 li
772.938 497.198 li
772.938 503.384 li
791.498 503.384 li
791.498 501.111 li
805 501.111 li
805 501.111 823.434 482.682 824.009 482.102 cv
824.726 482.102 948.679 482.102 953.917 482.102 cv
953.917 491.697 li
959.928 491.697 li
cp
f
769.164 468.832 mo
813.725 468.832 li
813.725 468.832 824.236 457.341 824.809 456.716 cv
825.675 456.716 966.208 456.716 967.022 456.716 cv
967.579 457.272 978.247 467.939 978.8 468.495 cv
978.8 468.886 978.8 469.946 978.8 470.735 cv
976.941 470.735 li
976.941 491.697 li
982.956 491.697 li
982.956 470.735 li
980.834 470.735 li
980.834 467.648 li
967.868 454.685 li
823.911 454.685 li
823.911 454.685 813.4 466.171 812.831 466.796 cv
812.039 466.796 776.013 466.796 769.164 466.796 cv
769.164 458.361 li
763.146 458.361 li
763.146 479.328 li
769.164 479.328 li
769.164 468.832 li
cp
f
704.037 458.361 mo
704.037 479.328 li
710.052 479.328 li
710.052 458.361 li
704.037 458.361 li
cp
f
423.627 475.159 mo
422.633 475.159 421.821 474.351 421.821 473.354 cv
421.821 472.363 422.633 471.548 423.627 471.548 cv
424.621 471.548 425.428 472.363 425.428 473.354 cv
425.428 474.351 424.621 475.159 423.627 475.159 cv
cp
641.147 483.793 mo
622.241 483.793 li
622.241 486.254 li
621.545 486.254 620.614 486.254 619.951 486.254 cv
619.951 484.512 619.951 472.597 619.951 472.597 cv
427.931 472.597 li
427.568 470.543 425.781 468.974 423.627 468.974 cv
421.212 468.974 419.245 470.936 419.245 473.354 cv
419.245 475.77 421.212 477.734 423.627 477.734 cv
425.596 477.734 427.245 476.421 427.798 474.629 cv
436.574 474.629 616.042 474.629 617.919 474.629 cv
617.919 476.371 617.919 488.287 617.919 488.287 cv
622.241 488.287 li
622.241 489.807 li
641.147 489.807 li
641.147 483.793 li
cp
f
729.653 453.605 mo
729.653 458.361 li
727.751 458.361 li
727.751 479.328 li
733.762 479.328 li
733.762 458.361 li
731.688 458.361 li
731.688 456.875 731.688 454.887 731.688 454.445 cv
732.253 453.877 748.886 437.244 749.454 436.672 cv
750.291 436.672 984.505 436.672 985.332 436.672 cv
985.906 437.244 1014.39 465.244 1014.98 465.824 cv
1014.98 466.389 1014.98 469.371 1014.98 470.735 cv
1013.03 470.735 li
1013.03 491.697 li
1019.04 491.697 li
1019.04 470.735 li
1017.01 470.735 li
1017.01 464.973 li
986.165 434.64 li
748.611 434.64 li
729.653 453.605 li
cp
f
754.418 443.378 mo
755.252 443.378 977.468 443.378 978.302 443.378 cv
978.877 443.953 1002.07 467.144 1002.64 467.721 cv
1002.64 468.182 1002.64 469.753 1002.64 470.735 cv
1001 470.735 li
1001 491.697 li
1007.01 491.697 li
1007.01 470.735 li
1004.68 470.735 li
1004.68 466.878 li
979.144 441.341 li
753.574 441.341 li
741.41 453.504 li
741.41 458.361 li
739.094 458.361 li
739.094 479.328 li
745.108 479.328 li
745.108 458.361 li
743.449 458.361 li
743.449 456.844 743.449 454.795 743.449 454.347 cv
743.999 453.798 753.869 443.93 754.418 443.378 cv
cp
f
760.476 450.399 mo
761.31 450.399 972.894 450.399 973.727 450.399 cv
974.292 450.967 990.222 466.895 990.784 467.46 cv
990.784 467.914 990.784 469.598 990.784 470.735 cv
989.144 470.735 li
989.144 491.697 li
995.158 491.697 li
995.158 470.735 li
992.819 470.735 li
992.819 466.62 li
974.568 448.367 li
759.63 448.367 li
753.367 454.635 li
753.367 458.361 li
751.291 458.361 li
751.291 479.328 li
757.309 479.328 li
757.309 458.361 li
755.399 458.361 li
755.399 457.222 755.399 455.865 755.399 455.478 cv
755.903 454.968 759.968 450.904 760.476 450.399 cv
cp
f
692.524 458.361 mo
692.524 479.328 li
694.084 479.328 li
694.084 479.842 694.084 480.385 694.084 480.665 cv
693.531 481.218 683.95 490.798 683.401 491.348 cv
682.616 491.348 671.483 491.348 671.483 491.348 cv
671.483 491.348 658.427 504.406 657.854 504.977 cv
657.014 504.977 428.101 504.977 428.101 504.977 cv
428.101 504.977 421.189 511.885 420.646 512.434 cv
420.04 512.434 410.91 512.434 406.397 512.434 cv
406.397 514.466 li
421.487 514.466 li
421.487 514.466 428.398 507.559 428.947 507.01 cv
429.784 507.01 658.693 507.01 658.693 507.01 cv
658.693 507.01 671.754 493.951 672.322 493.38 cv
673.108 493.38 684.245 493.38 684.245 493.38 cv
696.117 481.508 li
696.117 479.328 li
698.539 479.328 li
698.539 458.361 li
692.524 458.361 li
cp
f
572.411 488.823 mo
571.415 488.823 570.604 488.009 570.604 487.019 cv
570.604 486.021 571.415 485.213 572.411 485.213 cv
573.405 485.213 574.215 486.021 574.215 487.019 cv
574.215 488.009 573.405 488.823 572.411 488.823 cv
cp
572.411 482.635 mo
570.347 482.635 568.624 484.077 568.159 485.999 cv
406.397 485.999 li
406.397 488.031 li
568.159 488.031 li
568.621 489.96 570.347 491.397 572.411 491.397 cv
574.828 491.397 576.791 489.432 576.791 487.019 cv
576.791 484.601 574.828 482.635 572.411 482.635 cv
cp
f
446.309 455.572 mo
445.31 455.572 444.504 454.761 444.504 453.763 cv
444.504 452.772 445.31 451.957 446.309 451.957 cv
447.302 451.957 448.115 452.772 448.115 453.763 cv
448.115 454.761 447.302 455.572 446.309 455.572 cv
cp
629.644 447.464 mo
629.644 447.464 629.644 452.229 629.644 453.649 cv
627.806 453.649 460.173 453.649 450.676 453.649 cv
450.612 451.29 448.683 449.383 446.309 449.383 cv
443.892 449.383 441.926 451.349 441.926 453.763 cv
441.926 456.181 443.892 458.149 446.309 458.149 cv
448.033 458.149 449.516 457.14 450.227 455.685 cv
631.681 455.685 li
631.681 455.685 631.681 450.917 631.681 449.497 cv
633.599 449.497 680.954 449.497 682.869 449.497 cv
682.869 450.722 682.869 455.695 682.869 458.361 cv
681.185 458.361 li
681.185 479.328 li
687.197 479.328 li
687.197 458.361 li
684.903 458.361 li
684.903 447.464 li
629.644 447.464 li
cp
f
595.607 449.383 mo
594.614 449.383 593.806 448.575 593.806 447.578 cv
593.806 446.588 594.614 445.777 595.607 445.777 cv
596.604 445.777 597.414 446.588 597.414 447.578 cv
597.414 448.575 596.604 449.383 595.607 449.383 cv
cp
596.499 443.287 mo
596.499 438.086 li
598.699 438.086 li
598.699 423.999 li
591.141 423.999 li
591.141 438.086 li
594.463 438.086 li
594.463 443.369 li
592.884 443.797 591.653 445.073 591.32 446.689 cv
406.397 446.689 li
406.397 448.727 li
591.399 448.727 li
591.907 450.582 593.593 451.957 595.607 451.957 cv
598.024 451.957 599.991 449.996 599.991 447.578 cv
599.991 445.471 598.49 443.697 596.499 443.287 cv
cp
f
435.224 462.012 mo
434.23 462.012 433.421 461.205 433.421 460.211 cv
433.421 459.216 434.23 458.405 435.224 458.405 cv
436.221 458.405 437.028 459.216 437.028 460.211 cv
437.028 461.205 436.221 462.012 435.224 462.012 cv
cp
634.928 453.779 mo
634.928 453.779 634.928 457.739 634.928 459.065 cv
633.044 459.065 448.046 459.065 439.436 459.065 cv
438.928 457.21 437.243 455.828 435.224 455.828 cv
432.81 455.828 430.844 457.796 430.844 460.211 cv
430.844 462.624 432.81 464.59 435.224 464.59 cv
437.338 464.59 439.102 463.091 439.519 461.097 cv
636.963 461.097 li
636.963 461.097 636.963 457.14 636.963 455.815 cv
638.749 455.815 657.373 455.815 659.157 455.815 cv
659.157 456.458 659.157 457.48 659.157 458.361 cv
657.302 458.361 li
657.302 479.328 li
663.316 479.328 li
663.316 458.361 li
661.193 458.361 li
661.193 453.779 li
634.928 453.779 li
cp
f
645.787 458.361 mo
645.787 466.667 li
406.397 466.667 li
406.397 468.703 li
645.787 468.703 li
645.787 479.328 li
651.803 479.328 li
651.803 458.361 li
645.787 458.361 li
cp
f
188.69 766.584 mo
189.686 766.584 190.495 767.398 190.495 768.391 cv
190.495 769.385 189.686 770.195 188.69 770.195 cv
187.694 770.195 186.884 769.385 186.884 768.391 cv
186.884 767.398 187.694 766.584 188.69 766.584 cv
cp
188.69 772.771 mo
191.104 772.771 193.074 770.807 193.074 768.391 cv
193.074 765.973 191.104 764.01 188.69 764.01 cv
187.421 764.01 186.286 764.559 185.482 765.424 cv
179.572 759.516 li
179.572 759.516 119.146 759.516 118.313 759.516 cv
117.764 758.965 108.377 749.576 107.826 749.023 cv
107.826 748.559 107.826 746.619 107.826 745.322 cv
110.079 745.322 li
110.079 724.361 li
103.201 724.361 li
103.201 745.322 li
105.794 745.322 li
105.794 749.865 li
117.473 761.547 li
117.473 761.547 177.9 761.547 178.731 761.547 cv
179.198 762.012 183.349 766.168 184.466 767.281 cv
184.373 767.635 184.309 768.006 184.309 768.391 cv
184.309 770.807 186.273 772.771 188.69 772.771 cv
cp
f
192.811 754.984 mo
192.811 753.994 193.625 753.184 194.617 753.184 cv
195.615 753.184 196.421 753.994 196.421 754.984 cv
196.421 755.981 195.615 756.789 194.617 756.789 cv
193.625 756.789 192.811 755.981 192.811 754.984 cv
cp
198.999 754.984 mo
198.999 752.566 197.034 750.606 194.617 750.606 cv
192.327 750.606 190.466 752.371 190.27 754.611 cv
183.123 754.611 126.226 754.611 125.445 754.611 cv
124.926 754.094 119.692 748.856 119.167 748.338 cv
119.167 747.865 119.167 746.256 119.167 745.322 cv
121.586 745.322 li
121.586 724.361 li
114.717 724.361 li
114.717 745.322 li
117.134 745.322 li
117.134 749.178 li
124.605 756.644 li
190.567 756.644 li
191.221 758.24 192.79 759.369 194.617 759.369 cv
197.034 759.369 198.999 757.4 198.999 754.984 cv
cp
f
217.817 740.809 mo
218.811 740.809 219.618 741.619 219.618 742.613 cv
219.618 743.611 218.811 744.418 217.817 744.418 cv
216.82 744.418 216.009 743.611 216.009 742.613 cv
216.009 741.619 216.82 740.809 217.817 740.809 cv
cp
217.817 746.994 mo
220.234 746.994 222.196 745.031 222.196 742.613 cv
222.196 740.195 220.234 738.234 217.817 738.234 cv
215.706 738.234 213.936 739.736 213.525 741.725 cv
209.314 741.725 195.379 741.725 194.695 741.725 cv
194.154 741.185 188.68 735.717 188.68 735.717 cv
145.302 735.717 li
145.302 724.361 li
138.428 724.361 li
138.428 745.322 li
145.302 745.322 li
145.302 737.75 li
152.247 737.75 187.093 737.75 187.836 737.75 cv
188.374 738.283 193.851 743.76 193.851 743.76 cv
213.604 743.76 li
214.111 745.617 215.796 746.994 217.817 746.994 cv
cp
f
129.406 692.609 mo
128.412 692.609 127.601 691.801 127.601 690.805 cv
127.601 689.813 128.412 689.006 129.406 689.006 cv
130.403 689.006 131.211 689.813 131.211 690.805 cv
131.211 691.801 130.403 692.609 129.406 692.609 cv
cp
82.7539 680.498 mo
81.7603 680.498 80.9482 679.684 80.9482 678.693 cv
80.9482 677.699 81.7603 676.887 82.7539 676.887 cv
83.7515 676.887 84.5586 677.699 84.5586 678.693 cv
84.5586 679.684 83.7515 680.498 82.7539 680.498 cv
cp
129.406 686.428 mo
127.392 686.428 125.703 687.807 125.197 689.662 cv
120.708 689.662 95.4341 689.662 94.6865 689.662 cv
94.2314 689.201 88.3882 683.363 86.2881 681.262 cv
86.8149 680.535 87.1362 679.652 87.1362 678.693 cv
87.1362 676.279 85.1714 674.313 82.7539 674.313 cv
80.3389 674.313 78.3716 676.279 78.3716 678.693 cv
78.3716 681.109 80.3389 683.072 82.7539 683.072 cv
83.4697 683.072 84.1367 682.887 84.7305 682.58 cv
93.8467 691.693 li
125.119 691.693 li
125.527 693.688 127.294 695.188 129.406 695.188 cv
131.821 695.188 133.792 693.221 133.792 690.805 cv
133.792 688.393 131.821 686.428 129.406 686.428 cv
cp
f
324.263 796.834 mo
323.27 796.834 322.462 796.027 322.462 795.029 cv
322.462 794.031 323.27 793.225 324.263 793.225 cv
325.26 793.225 326.071 794.031 326.071 795.029 cv
326.071 796.027 325.26 796.834 324.263 796.834 cv
cp
71.1558 778.361 mo
70.1621 778.361 69.3511 777.553 69.3511 776.557 cv
69.3511 775.559 70.1621 774.754 71.1558 774.754 cv
72.1519 774.754 72.9619 775.559 72.9619 776.557 cv
72.9619 777.553 72.1519 778.361 71.1558 778.361 cv
cp
324.263 790.65 mo
322.216 790.65 320.504 792.07 320.03 793.969 cv
306.056 793.969 90.519 793.969 89.7051 793.969 cv
89.21 793.471 77.8037 782.068 74.7705 779.031 cv
75.2524 778.326 75.5361 777.479 75.5361 776.557 cv
75.5361 774.139 73.5728 772.176 71.1558 772.176 cv
68.7383 772.176 66.7715 774.139 66.7715 776.557 cv
66.7715 778.975 68.7383 780.938 71.1558 780.938 cv
71.916 780.938 72.6201 780.729 73.2461 780.385 cv
88.8662 796 li
320 796 li
320.445 797.951 322.186 799.41 324.263 799.41 cv
326.68 799.41 328.647 797.447 328.647 795.029 cv
328.647 792.615 326.68 790.65 324.263 790.65 cv
cp
f
203.075 676.26 mo
177.699 676.26 li
177.699 676.26 170.863 683.102 170.311 683.646 cv
169.492 683.646 141.02 683.646 141.02 683.646 cv
141.02 683.646 141.02 714.9 141.02 716.813 cv
139.324 716.813 129.335 716.813 129.335 716.813 cv
129.335 724.361 li
126.743 724.361 li
126.743 745.322 li
133.616 745.322 li
133.616 724.361 li
131.367 724.361 li
131.367 722.732 131.367 719.912 131.367 718.846 cv
133.063 718.846 143.053 718.846 143.053 718.846 cv
143.053 718.846 143.053 687.592 143.053 685.685 cv
144.945 685.685 171.153 685.685 171.153 685.685 cv
171.153 685.685 177.992 678.844 178.54 678.295 cv
179.254 678.295 198.163 678.295 203.075 678.295 cv
203.075 680.625 li
221.636 680.625 li
221.636 674.438 li
203.075 674.438 li
203.075 676.26 li
cp
f
148.739 677.119 mo
135.005 677.119 li
135.005 677.119 135.005 706.828 135.005 708.734 cv
133.313 708.734 123.493 708.734 123.493 708.734 cv
123.493 708.734 123.493 715.26 123.493 716.813 cv
121.567 716.813 86.3311 716.813 86.3311 716.813 cv
86.3311 724.361 li
79.4888 724.361 li
79.4888 745.322 li
86.3311 745.322 li
86.3311 762.967 li
112.234 788.869 li
281.901 788.869 li
289.798 780.967 li
289.798 758.469 li
291.79 758.469 li
291.79 737.848 li
286.119 737.848 li
286.119 758.469 li
287.766 758.469 li
287.766 762.658 287.766 779.416 287.766 780.129 cv
287.241 780.654 281.583 786.307 281.06 786.834 cv
280.219 786.834 113.908 786.834 113.075 786.834 cv
112.5 786.258 88.9448 762.703 88.3677 762.129 cv
88.3677 761.32 88.3677 720.769 88.3677 718.846 cv
90.293 718.846 125.525 718.846 125.525 718.846 cv
125.525 718.846 125.525 712.322 125.525 710.768 cv
127.216 710.768 137.038 710.768 137.038 710.768 cv
137.038 710.768 137.038 681.057 137.038 679.152 cv
138.129 679.152 144.129 679.152 148.739 679.152 cv
148.739 680.625 li
167.296 680.625 li
167.296 674.438 li
148.739 674.438 li
148.739 677.119 li
cp
f
228.123 691.063 mo
228.123 690.068 228.934 689.258 229.931 689.258 cv
230.925 689.258 231.734 690.068 231.734 691.063 cv
231.734 692.06 230.925 692.867 229.931 692.867 cv
228.934 692.867 228.123 692.06 228.123 691.063 cv
cp
148.739 701.246 mo
148.739 707.432 li
167.296 707.432 li
167.296 705.613 li
189.194 705.613 li
189.194 705.613 196.04 698.775 196.585 698.227 cv
197.342 698.227 224.768 698.227 229.085 698.227 cv
229.085 702.912 229.085 710.584 229.085 711.133 cv
228.584 711.635 224.768 715.449 224.266 715.949 cv
223.84 715.949 222.532 715.949 221.636 715.949 cv
221.636 713.619 li
203.075 713.619 li
203.075 719.805 li
221.636 719.805 li
221.636 717.986 li
225.106 717.986 li
231.118 711.979 li
231.118 695.264 li
232.956 694.736 234.308 693.066 234.308 691.063 cv
234.308 688.644 232.343 686.684 229.931 686.684 cv
227.88 686.684 226.169 688.104 225.693 690.006 cv
221.636 690.006 li
221.636 687.844 li
203.075 687.844 li
203.075 694.029 li
221.636 694.029 li
221.636 692.041 li
225.667 692.041 li
226.05 693.713 227.389 695.027 229.085 695.361 cv
229.085 695.588 229.085 695.873 229.085 696.191 cv
195.742 696.191 li
195.742 696.191 188.901 703.031 188.352 703.578 cv
187.668 703.578 172.063 703.578 167.296 703.578 cv
167.296 701.246 li
148.739 701.246 li
cp
f
148.739 720.578 mo
167.296 720.578 li
167.296 718.502 li
188.508 718.502 li
188.508 718.502 200.57 706.441 201.14 705.875 cv
201.526 705.875 202.444 705.875 203.075 705.875 cv
203.075 707.176 li
221.636 707.176 li
221.636 700.99 li
203.075 700.99 li
203.075 703.836 li
200.296 703.836 li
200.296 703.836 188.232 715.898 187.668 716.469 cv
186.973 716.469 171.721 716.469 167.296 716.469 cv
167.296 714.391 li
148.739 714.391 li
148.739 720.578 li
cp
f
111.88 702.146 mo
112.873 702.146 113.681 702.959 113.681 703.951 cv
113.681 704.947 112.873 705.756 111.88 705.756 cv
110.882 705.756 110.075 704.947 110.075 703.951 cv
110.075 702.959 110.882 702.146 111.88 702.146 cv
cp
81.9956 704.758 mo
82.7783 704.758 103.735 704.758 107.58 704.758 cv
107.96 706.791 109.739 708.334 111.88 708.334 cv
114.297 708.334 116.261 706.367 116.261 703.951 cv
116.261 701.533 114.297 699.574 111.88 699.574 cv
109.896 699.574 108.233 700.908 107.696 702.719 cv
81.1069 702.719 li
70.3096 714.424 li
70.3096 724.361 li
67.8066 724.361 li
67.8066 745.322 li
74.6768 745.322 li
74.6768 724.361 li
72.3457 724.361 li
72.3457 721.537 72.3457 715.777 72.3457 715.217 cv
72.8389 714.68 81.439 705.354 81.9956 704.758 cv
cp
f
164.718 766.33 mo
165.715 766.33 166.524 767.137 166.524 768.131 cv
166.524 769.127 165.715 769.935 164.718 769.935 cv
163.72 769.935 162.914 769.127 162.914 768.131 cv
162.914 767.137 163.72 766.33 164.718 766.33 cv
cp
112.06 769.535 mo
160.588 769.535 li
161.178 771.262 162.794 772.512 164.718 772.512 cv
167.135 772.512 169.101 770.547 169.101 768.131 cv
169.101 765.713 167.135 763.752 164.718 763.752 cv
162.519 763.752 160.711 765.385 160.399 767.498 cv
153.399 767.498 113.658 767.498 112.903 767.498 cv
112.337 766.934 96.8799 751.482 96.312 750.914 cv
96.312 750.367 96.312 747.043 96.312 745.322 cv
99.0801 745.322 li
99.0801 724.361 li
92.2061 724.361 li
92.2061 745.322 li
94.2798 745.322 li
94.2798 751.756 li
112.06 769.535 li
cp
f
177.013 689.492 mo
176.376 689.492 169.698 689.492 167.296 689.492 cv
167.296 687.586 li
148.739 687.586 li
148.739 693.769 li
167.296 693.769 li
167.296 691.523 li
177.857 691.523 li
177.857 691.523 182.651 686.727 183.181 686.201 cv
183.996 686.201 238.56 686.201 240.513 686.201 cv
240.513 688.045 240.513 710.092 240.513 710.881 cv
239.944 711.445 223.201 728.185 222.633 728.754 cv
222.416 728.754 222.036 728.754 221.636 728.754 cv
221.636 726.248 li
203.075 726.248 li
203.075 732.434 li
221.636 732.434 li
221.636 730.789 li
223.474 730.789 li
242.542 711.719 li
242.542 684.164 li
182.337 684.164 li
182.337 684.164 177.544 688.961 177.013 689.492 cv
cp
f
71.4546 526.835 mo
72.4526 526.835 73.2593 527.644 73.2593 528.641 cv
73.2593 529.637 72.4526 530.445 71.4546 530.445 cv
70.4614 530.445 69.6543 529.637 69.6543 528.641 cv
69.6543 527.644 70.4614 526.835 71.4546 526.835 cv
cp
71.4546 533.024 mo
71.7427 533.024 72.019 532.992 72.2954 532.939 cv
88.6479 549.292 li
283.748 549.292 li
283.748 549.292 288.46 544.583 288.986 544.05 cv
289.808 544.05 324.306 544.05 324.306 544.05 cv
324.306 542.015 li
288.146 542.015 li
288.146 542.015 283.435 546.729 282.904 547.256 cv
282.067 547.256 90.3252 547.256 89.4883 547.256 cv
88.9917 546.76 77.2866 535.052 74.231 531.998 cv
75.2036 531.197 75.8369 529.998 75.8369 528.641 cv
75.8369 526.224 73.8721 524.26 71.4546 524.26 cv
69.0376 524.26 67.0723 526.224 67.0723 528.641 cv
67.0723 531.055 69.0376 533.024 71.4546 533.024 cv
cp
f
177.65 521.167 mo
178.644 521.167 179.451 521.976 179.451 522.973 cv
179.451 523.97 178.644 524.775 177.65 524.775 cv
176.652 524.775 175.846 523.97 175.846 522.973 cv
175.846 521.976 176.652 521.167 177.65 521.167 cv
cp
177.65 527.352 mo
180.064 527.352 182.029 525.39 182.029 522.973 cv
182.029 520.553 180.064 518.59 177.65 518.59 cv
176.378 518.59 175.243 519.139 174.445 520.007 cv
168.531 514.093 li
168.531 514.093 108.105 514.093 107.275 514.093 cv
106.726 513.544 97.334 504.156 96.7852 503.607 cv
96.7852 503.143 96.7852 501.199 96.7852 499.903 cv
99.0376 499.903 li
99.0376 478.938 li
92.1636 478.938 li
92.1636 499.903 li
94.7524 499.903 li
94.7524 504.445 li
106.431 516.125 li
106.431 516.125 166.857 516.125 167.686 516.125 cv
168.157 516.592 172.311 520.748 173.429 521.865 cv
173.333 522.222 173.268 522.587 173.268 522.973 cv
173.268 525.39 175.229 527.352 177.65 527.352 cv
cp
f
181.771 509.567 mo
181.771 508.574 182.581 507.762 183.576 507.762 cv
184.569 507.762 185.38 508.574 185.38 509.567 cv
185.38 510.561 184.569 511.37 183.576 511.37 cv
182.581 511.37 181.771 510.561 181.771 509.567 cv
cp
187.96 509.567 mo
187.96 507.151 185.993 505.187 183.576 505.187 cv
181.289 505.187 179.427 506.955 179.23 509.195 cv
172.083 509.195 115.187 509.195 114.404 509.195 cv
113.887 508.675 108.646 503.44 108.127 502.919 cv
108.127 502.449 108.127 500.839 108.127 499.903 cv
110.548 499.903 li
110.548 478.938 li
103.674 478.938 li
103.674 499.903 li
106.095 499.903 li
106.095 503.761 li
113.563 511.228 li
179.526 511.228 li
180.18 512.821 181.745 513.948 183.576 513.948 cv
185.993 513.948 187.96 511.984 187.96 509.567 cv
cp
f
206.774 495.392 mo
207.768 495.392 208.579 496.2 208.579 497.198 cv
208.579 498.192 207.768 499.002 206.774 499.002 cv
205.777 499.002 204.968 498.192 204.968 497.198 cv
204.968 496.2 205.777 495.392 206.774 495.392 cv
cp
206.774 501.577 mo
209.191 501.577 211.155 499.615 211.155 497.198 cv
211.155 494.779 209.191 492.815 206.774 492.815 cv
204.661 492.815 202.895 494.316 202.485 496.308 cv
198.277 496.308 184.341 496.308 183.654 496.308 cv
183.112 495.771 177.637 490.295 177.637 490.295 cv
134.261 490.295 li
134.261 478.938 li
127.39 478.938 li
127.39 499.903 li
134.261 499.903 li
134.261 492.332 li
141.21 492.332 176.053 492.332 176.798 492.332 cv
177.334 492.868 182.81 498.343 182.81 498.343 cv
202.564 498.343 li
203.07 500.202 204.755 501.577 206.774 501.577 cv
cp
f
313.225 555.877 mo
312.231 555.877 311.423 555.066 311.423 554.073 cv
311.423 553.078 312.231 552.269 313.225 552.269 cv
314.219 552.269 315.03 553.078 315.03 554.073 cv
315.03 555.066 314.219 555.877 313.225 555.877 cv
cp
60.1128 537.407 mo
59.1187 537.407 58.3115 536.6 58.3115 535.602 cv
58.3115 534.605 59.1187 533.797 60.1128 533.797 cv
61.1104 533.797 61.917 534.605 61.917 535.602 cv
61.917 536.6 61.1104 537.407 60.1128 537.407 cv
cp
313.225 549.69 mo
311.176 549.69 309.463 551.112 308.989 553.015 cv
295.016 553.015 79.4761 553.015 78.6655 553.015 cv
78.1665 552.517 66.7661 541.111 63.7251 538.076 cv
64.209 537.369 64.4966 536.517 64.4966 535.602 cv
64.4966 533.185 62.5293 531.216 60.1128 531.216 cv
57.6953 531.216 55.7339 533.185 55.7339 535.602 cv
55.7339 538.019 57.6953 539.982 60.1128 539.982 cv
60.875 539.982 61.5811 539.77 62.2007 539.426 cv
77.8228 555.048 li
308.958 555.048 li
309.407 556.994 311.141 558.449 313.225 558.449 cv
315.643 558.449 317.608 556.49 317.608 554.073 cv
317.608 551.658 315.643 549.69 313.225 549.69 cv
cp
f
192.034 430.843 mo
166.659 430.843 li
166.659 430.843 159.82 437.681 159.271 438.23 cv
158.451 438.23 129.979 438.23 129.979 438.23 cv
129.979 438.23 129.979 469.484 129.979 471.397 cv
128.283 471.397 118.291 471.397 118.291 471.397 cv
118.291 478.938 li
115.704 478.938 li
115.704 499.903 li
122.578 499.903 li
122.578 478.938 li
120.327 478.938 li
120.327 477.316 120.327 474.492 120.327 473.429 cv
122.021 473.429 132.012 473.429 132.012 473.429 cv
132.012 473.429 132.012 442.175 132.012 440.263 cv
133.902 440.263 160.113 440.263 160.113 440.263 cv
160.113 440.263 166.953 433.427 167.501 432.878 cv
168.211 432.878 187.121 432.878 192.034 432.878 cv
192.034 435.207 li
210.592 435.207 li
210.592 429.022 li
192.034 429.022 li
192.034 430.843 li
cp
f
137.697 431.702 mo
123.964 431.702 li
123.964 431.702 123.964 461.412 123.964 463.318 cv
122.274 463.318 112.45 463.318 112.45 463.318 cv
112.45 463.318 112.45 469.837 112.45 471.397 cv
110.529 471.397 75.2915 471.397 75.2915 471.397 cv
75.2915 478.938 li
68.4512 478.938 li
68.4512 499.903 li
75.2915 499.903 li
75.2915 517.551 li
101.193 543.447 li
270.859 543.447 li
278.757 535.551 li
278.757 513.045 li
280.745 513.045 li
280.745 492.426 li
275.077 492.426 li
275.077 513.045 li
276.725 513.045 li
276.725 517.235 276.725 533.999 276.725 534.706 cv
276.202 535.233 270.542 540.891 270.017 541.415 cv
269.178 541.415 102.871 541.415 102.038 541.415 cv
101.458 540.841 77.9033 517.28 77.3281 516.709 cv
77.3281 515.898 77.3281 475.353 77.3281 473.429 cv
79.2485 473.429 114.486 473.429 114.486 473.429 cv
114.486 473.429 114.486 466.903 114.486 465.351 cv
116.178 465.351 125.997 465.351 125.997 465.351 cv
125.997 465.351 125.997 435.639 125.997 433.736 cv
127.087 433.736 133.085 433.736 137.697 433.736 cv
137.697 435.207 li
156.254 435.207 li
156.254 429.022 li
137.697 429.022 li
137.697 431.702 li
cp
f
100.838 456.728 mo
101.832 456.728 102.643 457.543 102.643 458.534 cv
102.643 459.531 101.832 460.338 100.838 460.338 cv
99.8447 460.338 99.0356 459.531 99.0356 458.534 cv
99.0356 457.543 99.8447 456.728 100.838 456.728 cv
cp
70.9541 459.335 mo
71.7388 459.335 92.6938 459.335 96.5386 459.335 cv
96.9194 461.368 98.6978 462.914 100.838 462.914 cv
103.255 462.914 105.221 460.948 105.221 458.534 cv
105.221 456.12 103.255 454.154 100.838 454.154 cv
98.8525 454.154 97.1919 455.492 96.6563 457.303 cv
70.0635 457.303 li
59.2681 469.004 li
59.2681 478.938 li
56.7651 478.938 li
56.7651 499.903 li
63.6392 499.903 li
63.6392 478.938 li
61.3008 478.938 li
61.3008 476.118 61.3008 470.355 61.3008 469.8 cv
61.7974 469.263 70.4019 459.935 70.9541 459.335 cv
cp
f
153.68 520.909 mo
154.674 520.909 155.481 521.717 155.481 522.714 cv
155.481 523.708 154.674 524.517 153.68 524.517 cv
152.683 524.517 151.876 523.708 151.876 522.714 cv
151.876 521.717 152.683 520.909 153.68 520.909 cv
cp
101.018 524.116 mo
149.548 524.116 li
150.134 525.841 151.754 527.094 153.68 527.094 cv
156.094 527.094 158.059 525.132 158.059 522.714 cv
158.059 520.297 156.094 518.334 153.68 518.334 cv
151.476 518.334 149.668 519.969 149.36 522.083 cv
142.36 522.083 102.617 522.083 101.86 522.083 cv
101.298 521.515 85.8384 506.065 85.2744 505.497 cv
85.2744 504.948 85.2744 501.625 85.2744 499.903 cv
88.0356 499.903 li
88.0356 478.938 li
81.1646 478.938 li
81.1646 499.903 li
83.2422 499.903 li
83.2422 506.336 li
101.018 524.116 li
cp
f
696.768 1079.24 mo
696.768 1078.25 697.578 1077.44 698.572 1077.44 cv
699.566 1077.44 700.377 1078.25 700.377 1079.24 cv
700.377 1080.24 699.566 1081.05 698.572 1081.05 cv
697.578 1081.05 696.768 1080.24 696.768 1079.24 cv
cp
702.952 1079.24 mo
702.952 1076.82 700.986 1074.86 698.572 1074.86 cv
696.156 1074.86 694.19 1076.82 694.19 1079.24 cv
694.19 1081.66 696.156 1083.62 698.572 1083.62 cv
700.986 1083.62 702.952 1081.66 702.952 1079.24 cv
cp
f
688.262 1104.5 mo
688.262 1105.5 687.455 1106.3 686.461 1106.3 cv
685.464 1106.3 684.656 1105.5 684.656 1104.5 cv
684.656 1103.51 685.464 1102.7 686.461 1102.7 cv
687.455 1102.7 688.262 1103.51 688.262 1104.5 cv
cp
682.074 1104.5 mo
682.074 1106.92 684.044 1108.88 686.461 1108.88 cv
688.874 1108.88 690.836 1106.92 690.836 1104.5 cv
690.836 1102.09 688.874 1100.12 686.461 1100.12 cv
684.044 1100.12 682.074 1102.09 682.074 1104.5 cv
cp
f
663.26 1132.6 mo
662.268 1132.6 661.455 1131.79 661.455 1130.79 cv
661.455 1129.79 662.268 1128.99 663.26 1128.99 cv
664.254 1128.99 665.064 1129.79 665.064 1130.79 cv
665.064 1131.79 664.254 1132.6 663.26 1132.6 cv
cp
756.824 1128.99 mo
757.82 1128.99 758.629 1129.79 758.629 1130.79 cv
758.629 1131.79 757.82 1132.6 756.824 1132.6 cv
755.829 1132.6 755.017 1131.79 755.017 1130.79 cv
755.017 1129.79 755.829 1128.99 756.824 1128.99 cv
cp
756.824 1135.17 mo
759.238 1135.17 761.206 1133.21 761.206 1130.79 cv
761.206 1128.38 759.238 1126.41 756.824 1126.41 cv
754.712 1126.41 752.944 1127.91 752.531 1129.9 cv
667.552 1129.9 li
667.143 1127.91 665.375 1126.41 663.26 1126.41 cv
660.844 1126.41 658.878 1128.38 658.878 1130.79 cv
658.878 1133.21 660.844 1135.17 663.26 1135.17 cv
665.276 1135.17 666.965 1133.8 667.469 1131.94 cv
752.614 1131.94 li
753.122 1133.8 754.809 1135.17 756.824 1135.17 cv
cp
f
897.556 1126.15 mo
896.56 1126.15 895.751 1125.34 895.751 1124.35 cv
895.751 1123.35 896.56 1122.54 897.556 1122.54 cv
898.548 1122.54 899.36 1123.35 899.36 1124.35 cv
899.36 1125.34 898.548 1126.15 897.556 1126.15 cv
cp
850.904 1114.04 mo
849.906 1114.04 849.098 1113.23 849.098 1112.23 cv
849.098 1111.24 849.906 1110.43 850.904 1110.43 cv
851.897 1110.43 852.705 1111.24 852.705 1112.23 cv
852.705 1113.23 851.897 1114.04 850.904 1114.04 cv
cp
897.556 1119.96 mo
895.538 1119.96 893.852 1121.34 893.345 1123.2 cv
888.854 1123.2 863.584 1123.2 862.835 1123.2 cv
862.377 1122.75 856.536 1116.9 854.438 1114.8 cv
854.966 1114.08 855.283 1113.2 855.283 1112.23 cv
855.283 1109.82 853.317 1107.85 850.904 1107.85 cv
848.486 1107.85 846.521 1109.82 846.521 1112.23 cv
846.521 1114.65 848.486 1116.62 850.904 1116.62 cv
851.617 1116.62 852.282 1116.43 852.879 1116.12 cv
861.992 1125.24 li
893.266 1125.24 li
893.675 1127.23 895.444 1128.73 897.556 1128.73 cv
899.971 1128.73 901.938 1126.77 901.938 1124.35 cv
901.938 1121.93 899.971 1119.96 897.556 1119.96 cv
cp
f
838.96 1123.75 mo
839.953 1123.75 840.765 1124.56 840.765 1125.55 cv
840.765 1126.54 839.953 1127.36 838.96 1127.36 cv
837.965 1127.36 837.156 1126.54 837.156 1125.55 cv
837.156 1124.56 837.965 1123.75 838.96 1123.75 cv
cp
838.96 1129.94 mo
841.377 1129.94 843.343 1127.97 843.343 1125.55 cv
843.343 1123.13 841.377 1121.17 838.96 1121.17 cv
836.848 1121.17 835.078 1122.67 834.667 1124.66 cv
798.673 1124.66 li
798.673 1124.66 787.127 1136.21 786.559 1136.78 cv
786.253 1136.78 785.637 1136.78 785.092 1136.78 cv
785.092 1134.88 li
766.188 1134.88 li
766.188 1140.89 li
785.092 1140.89 li
785.092 1138.81 li
787.397 1138.81 li
787.397 1138.81 798.947 1127.27 799.516 1126.7 cv
800.271 1126.7 829.898 1126.7 834.75 1126.7 cv
835.258 1128.55 836.943 1129.94 838.96 1129.94 cv
cp
f
895.751 1047.01 mo
895.751 1046.01 896.56 1045.2 897.556 1045.2 cv
898.548 1045.2 899.36 1046.01 899.36 1047.01 cv
899.36 1048.01 898.548 1048.81 897.556 1048.81 cv
896.56 1048.81 895.751 1048.01 895.751 1047.01 cv
cp
850.389 1048.81 mo
849.391 1048.81 848.584 1048.01 848.584 1047.01 cv
848.584 1046.01 849.391 1045.2 850.389 1045.2 cv
851.382 1045.2 852.189 1046.01 852.189 1047.01 cv
852.189 1048.01 851.382 1048.81 850.389 1048.81 cv
cp
901.938 1047.01 mo
901.938 1044.59 899.971 1042.63 897.556 1042.63 cv
895.493 1042.63 893.763 1044.07 893.304 1045.99 cv
854.637 1045.99 li
854.177 1044.07 852.452 1042.63 850.389 1042.63 cv
847.968 1042.63 846.007 1044.59 846.007 1047.01 cv
846.007 1049.43 847.968 1051.39 850.389 1051.39 cv
852.452 1051.39 854.177 1049.95 854.637 1048.03 cv
893.304 1048.03 li
893.707 1049.71 895.076 1051.01 896.797 1051.31 cv
896.797 1072.34 li
916.886 1072.34 li
916.886 1073.73 li
935.444 1073.73 li
935.444 1067.54 li
916.886 1067.54 li
916.886 1070.3 li
912.202 1070.3 900.306 1070.3 898.833 1070.3 cv
898.833 1068.65 898.833 1054.66 898.833 1051.18 cv
900.621 1050.63 901.938 1048.98 901.938 1047.01 cv
cp
f
817.393 1085.43 mo
817.393 1086.42 816.585 1087.23 815.592 1087.23 cv
814.594 1087.23 813.787 1086.42 813.787 1085.43 cv
813.787 1084.44 814.594 1083.62 815.592 1083.62 cv
816.585 1083.62 817.393 1084.44 817.393 1085.43 cv
cp
755.276 1072.8 mo
755.276 1071.8 756.085 1070.99 757.082 1070.99 cv
758.076 1070.99 758.887 1071.8 758.887 1072.8 cv
758.887 1073.79 758.076 1074.6 757.082 1074.6 cv
756.085 1074.6 755.276 1073.79 755.276 1072.8 cv
cp
721.769 1074.6 mo
720.776 1074.6 719.965 1073.79 719.965 1072.8 cv
719.965 1071.8 720.776 1070.99 721.769 1070.99 cv
722.764 1070.99 723.571 1071.8 723.571 1072.8 cv
723.571 1073.79 722.764 1074.6 721.769 1074.6 cv
cp
880.026 1077.7 mo
881.019 1077.7 881.829 1078.5 881.829 1079.5 cv
881.829 1080.49 881.019 1081.3 880.026 1081.3 cv
879.032 1081.3 878.222 1080.49 878.222 1079.5 cv
878.222 1078.5 879.032 1077.7 880.026 1077.7 cv
cp
880.026 1083.88 mo
882.441 1083.88 884.41 1081.92 884.41 1079.5 cv
884.41 1077.08 882.441 1075.12 880.026 1075.12 cv
877.769 1075.12 875.924 1076.84 875.692 1079.04 cv
863.633 1079.04 760.154 1079.04 758.271 1079.04 cv
758.271 1078.43 758.271 1077.61 758.271 1076.99 cv
760.108 1076.47 761.461 1074.8 761.461 1072.8 cv
761.461 1070.38 759.495 1068.42 757.082 1068.42 cv
754.938 1068.42 753.159 1069.96 752.78 1072 cv
726.069 1072 li
725.692 1069.96 723.913 1068.42 721.769 1068.42 cv
719.352 1068.42 717.389 1070.38 717.389 1072.8 cv
717.389 1075.21 719.352 1077.18 721.769 1077.18 cv
723.754 1077.18 725.416 1075.85 725.954 1074.03 cv
752.899 1074.03 li
753.357 1075.58 754.632 1076.78 756.234 1077.1 cv
756.234 1081.07 li
815.308 1081.07 li
813.024 1081.23 811.208 1083.11 811.208 1085.43 cv
811.208 1087.84 813.174 1089.81 815.592 1089.81 cv
818.005 1089.81 819.971 1087.84 819.971 1085.43 cv
819.971 1083.11 818.16 1081.23 815.875 1081.07 cv
875.95 1081.07 li
876.587 1082.71 878.169 1083.88 880.026 1083.88 cv
cp
f
960.701 1060.17 mo
960.701 1059.18 961.512 1058.36 962.507 1058.36 cv
963.501 1058.36 964.311 1059.18 964.311 1060.17 cv
964.311 1061.17 963.501 1061.97 962.507 1061.97 cv
961.512 1061.97 960.701 1061.17 960.701 1060.17 cv
cp
966.888 1060.17 mo
966.888 1057.75 964.924 1055.78 962.507 1055.78 cv
960.09 1055.78 958.127 1057.75 958.127 1060.17 cv
958.127 1062.59 960.09 1064.55 962.507 1064.55 cv
964.924 1064.55 966.888 1062.59 966.888 1060.17 cv
cp
f
1113.54 1112.23 mo
1113.54 1111.24 1114.36 1110.43 1115.35 1110.43 cv
1116.34 1110.43 1117.16 1111.24 1117.16 1112.23 cv
1117.16 1113.23 1116.34 1114.04 1115.35 1114.04 cv
1114.36 1114.04 1113.54 1113.23 1113.54 1112.23 cv
cp
1119.74 1112.23 mo
1119.74 1109.82 1117.77 1107.85 1115.35 1107.85 cv
1112.93 1107.85 1110.97 1109.82 1110.97 1112.23 cv
1110.97 1114.65 1112.93 1116.62 1115.35 1116.62 cv
1117.77 1116.62 1119.74 1114.65 1119.74 1112.23 cv
cp
f
989.781 1044.57 mo
971.224 1044.57 li
971.224 1046.52 li
960.391 1046.52 li
960.391 1046.52 949.364 1058.29 948.792 1058.89 cv
948.118 1058.89 938.894 1058.89 935.444 1058.89 cv
935.444 1056.94 li
916.886 1056.94 li
916.886 1063.14 li
935.444 1063.14 li
935.444 1060.93 li
949.676 1060.93 li
949.676 1060.93 960.701 1049.16 961.272 1048.55 cv
961.935 1048.55 968.692 1048.55 971.224 1048.55 cv
971.224 1050.76 li
989.781 1050.76 li
989.781 1044.57 li
cp
f
989.781 1057.2 mo
971.224 1057.2 li
971.224 1063.39 li
989.781 1063.39 li
989.781 1057.2 li
cp
f
957.096 1072.83 mo
956.102 1072.83 955.291 1072.02 955.291 1071.02 cv
955.291 1070.03 956.102 1069.22 957.096 1069.22 cv
958.089 1069.22 958.9 1070.03 958.9 1071.02 cv
958.9 1072.02 958.089 1072.83 957.096 1072.83 cv
cp
989.781 1073.73 mo
989.781 1067.54 li
971.224 1067.54 li
971.224 1069.96 li
961.333 1069.96 li
960.854 1068.06 959.143 1066.64 957.096 1066.64 cv
954.682 1066.64 952.712 1068.6 952.712 1071.02 cv
952.712 1073.44 954.682 1075.4 957.096 1075.4 cv
959.177 1075.4 960.914 1073.94 961.358 1072 cv
971.224 1072 li
971.224 1073.73 li
989.781 1073.73 li
cp
f
739.299 1093.94 mo
738.302 1093.94 737.494 1093.13 737.494 1092.13 cv
737.494 1091.13 738.302 1090.32 739.299 1090.32 cv
740.289 1090.32 741.101 1091.13 741.101 1092.13 cv
741.101 1093.13 740.289 1093.94 739.299 1093.94 cv
cp
1142.11 1127.57 mo
1142.11 1121.38 li
1123.55 1121.38 li
1123.55 1124 li
1113.97 1124 1030.4 1124 1029.59 1124 cv
1029.01 1123.39 1009.94 1103.49 1009.94 1103.49 cv
1009.94 1103.49 899.197 1103.49 898.362 1103.49 cv
897.838 1102.96 893.593 1098.72 893.593 1098.72 cv
893.593 1098.72 871.125 1098.72 870.31 1098.72 cv
869.762 1098.17 863.009 1091.42 863.009 1091.42 cv
743.606 1091.42 li
743.263 1089.34 741.467 1087.75 739.299 1087.75 cv
736.878 1087.75 734.913 1089.71 734.913 1092.13 cv
734.913 1094.55 736.878 1096.51 739.299 1096.51 cv
741.25 1096.51 742.887 1095.22 743.451 1093.45 cv
754.718 1093.45 861.372 1093.45 862.162 1093.45 cv
862.714 1094 869.468 1100.75 869.468 1100.75 cv
869.468 1100.75 891.94 1100.75 892.75 1100.75 cv
893.273 1101.28 897.518 1105.52 897.518 1105.52 cv
897.518 1105.52 1008.21 1105.52 1009.07 1105.52 cv
1009.65 1106.13 1028.72 1126.04 1028.72 1126.04 cv
1123.55 1126.04 li
1123.55 1127.57 li
1142.11 1127.57 li
cp
f
1142.11 1109.53 mo
1123.55 1109.53 li
1123.55 1115.72 li
1142.11 1115.72 li
1142.11 1109.53 li
cp
f
1039.06 1101.28 mo
1038.07 1101.28 1037.25 1100.47 1037.25 1099.48 cv
1037.25 1098.48 1038.07 1097.67 1039.06 1097.67 cv
1040.05 1097.67 1040.87 1098.48 1040.87 1099.48 cv
1040.87 1100.47 1040.05 1101.28 1039.06 1101.28 cv
cp
1142.11 1096.38 mo
1123.55 1096.38 li
1123.55 1098.8 li
1043.37 1098.8 li
1043.04 1096.7 1041.25 1095.1 1039.06 1095.1 cv
1036.87 1095.1 1035.07 1096.7 1034.74 1098.8 cv
989.781 1098.8 li
989.781 1094.83 li
971.224 1094.83 li
971.224 1101.02 li
989.781 1101.02 li
989.781 1100.84 li
1034.91 1100.84 li
1035.5 1102.58 1037.12 1103.86 1039.06 1103.86 cv
1041 1103.86 1042.62 1102.58 1043.2 1100.84 cv
1123.55 1100.84 li
1123.55 1102.57 li
1142.11 1102.57 li
1142.11 1096.38 li
cp
f
1142.11 1083.24 mo
1123.55 1083.24 li
1123.55 1085.87 li
998.218 1085.87 li
998.218 1085.87 992.441 1091.65 991.899 1092.19 cv
991.072 1092.19 945.588 1092.19 945.588 1092.19 cv
945.588 1092.19 939.178 1098.6 938.632 1099.15 cv
938.204 1099.15 936.624 1099.15 935.444 1099.15 cv
935.444 1096.38 li
916.886 1096.38 li
916.886 1102.57 li
935.444 1102.57 li
935.444 1101.18 li
939.473 1101.18 li
939.473 1101.18 945.889 1094.77 946.433 1094.22 cv
947.263 1094.22 992.74 1094.22 992.74 1094.22 cv
992.74 1094.22 998.516 1088.45 999.056 1087.91 cv
999.857 1087.91 1113.39 1087.91 1123.55 1087.91 cv
1123.55 1089.42 li
1142.11 1089.42 li
1142.11 1083.24 li
cp
f
850.644 1057.85 mo
851.642 1057.85 852.449 1058.66 852.449 1059.65 cv
852.449 1060.65 851.642 1061.46 850.644 1061.46 cv
849.65 1061.46 848.842 1060.65 848.842 1059.65 cv
848.842 1058.66 849.65 1057.85 850.644 1057.85 cv
cp
1085.97 1078.21 mo
1086.96 1078.21 1087.77 1079.02 1087.77 1080.02 cv
1087.77 1081.01 1086.96 1081.82 1085.97 1081.82 cv
1084.97 1081.82 1084.16 1081.01 1084.16 1080.02 cv
1084.16 1079.02 1084.97 1078.21 1085.97 1078.21 cv
cp
962.507 1087.49 mo
961.512 1087.49 960.701 1086.68 960.701 1085.69 cv
960.701 1084.69 961.512 1083.88 962.507 1083.88 cv
963.501 1083.88 964.311 1084.69 964.311 1085.69 cv
964.311 1086.68 963.501 1087.49 962.507 1087.49 cv
cp
785.092 1055.83 mo
766.188 1055.83 li
766.188 1061.84 li
785.092 1061.84 li
785.092 1060.46 li
846.343 1060.46 li
846.722 1062.49 848.501 1064.04 850.644 1064.04 cv
852.724 1064.04 854.463 1062.58 854.907 1060.63 cv
858.951 1060.63 883.874 1060.63 885.626 1060.63 cv
885.626 1062.47 885.626 1081.59 885.626 1081.59 cv
916.886 1081.59 li
916.886 1088.91 li
935.444 1088.91 li
935.444 1081.59 li
960.989 1081.59 li
959.318 1082.21 958.127 1083.81 958.127 1085.69 cv
958.127 1088.1 960.09 1090.06 962.507 1090.06 cv
964.924 1090.06 966.888 1088.1 966.888 1085.69 cv
966.888 1083.81 965.692 1082.21 964.025 1081.59 cv
971.224 1081.59 li
971.224 1088.91 li
989.781 1088.91 li
989.781 1081.42 li
1081.84 1081.42 li
1082.43 1083.14 1084.04 1084.4 1085.97 1084.4 cv
1088.39 1084.4 1090.35 1082.44 1090.35 1080.02 cv
1090.35 1077.6 1088.39 1075.63 1085.97 1075.63 cv
1083.77 1075.63 1081.96 1077.27 1081.65 1079.39 cv
989.781 1079.39 li
989.781 1077.57 li
971.224 1077.57 li
971.224 1079.56 li
935.444 1079.56 li
935.444 1077.57 li
916.886 1077.57 li
916.886 1079.56 li
911.804 1079.56 889.35 1079.56 887.66 1079.56 cv
887.66 1077.72 887.66 1058.6 887.66 1058.6 cv
854.883 1058.6 li
854.405 1056.69 852.693 1055.27 850.644 1055.27 cv
848.658 1055.27 846.996 1056.61 846.461 1058.42 cv
785.092 1058.42 li
785.092 1055.83 li
cp
f
863.274 1064.55 mo
864.268 1064.55 865.079 1065.36 865.079 1066.35 cv
865.079 1067.35 864.268 1068.16 863.274 1068.16 cv
862.28 1068.16 861.472 1067.35 861.472 1066.35 cv
861.472 1065.36 862.28 1064.55 863.274 1064.55 cv
cp
766.188 1069.58 mo
766.188 1075.59 li
785.092 1075.59 li
785.092 1073.69 li
787.056 1073.69 li
787.056 1073.69 791.935 1068.81 792.47 1068.28 cv
793.262 1068.28 853.385 1068.28 859.354 1068.28 cv
860.068 1069.73 861.552 1070.74 863.274 1070.74 cv
865.69 1070.74 867.656 1068.77 867.656 1066.35 cv
867.656 1063.94 865.69 1061.97 863.274 1061.97 cv
860.897 1061.97 858.966 1063.88 858.906 1066.24 cv
791.629 1066.24 li
791.629 1066.24 786.747 1071.12 786.216 1071.65 cv
785.956 1071.65 785.512 1071.65 785.092 1071.65 cv
785.092 1069.58 li
766.188 1069.58 li
cp
f
785.092 1088.13 mo
785.092 1082.13 li
766.188 1082.13 li
766.188 1088.13 li
785.092 1088.13 li
cp
f
862.501 1103.47 mo
863.494 1103.47 864.306 1104.28 864.306 1105.28 cv
864.306 1106.27 863.494 1107.08 862.501 1107.08 cv
861.507 1107.08 860.698 1106.27 860.698 1105.28 cv
860.698 1104.28 861.507 1103.47 862.501 1103.47 cv
cp
766.188 1096.38 mo
766.188 1102.39 li
785.092 1102.39 li
785.092 1099.98 li
795.507 1099.98 855.392 1099.98 856.151 1099.98 cv
856.497 1100.33 858.014 1101.84 858.929 1102.75 cv
858.423 1103.47 858.12 1104.34 858.12 1105.28 cv
858.12 1107.69 860.087 1109.66 862.501 1109.66 cv
864.914 1109.66 866.879 1107.69 866.879 1105.28 cv
866.879 1102.86 864.914 1100.89 862.501 1100.89 cv
861.761 1100.89 861.077 1101.09 860.465 1101.42 cv
856.993 1097.95 li
785.092 1097.95 li
785.092 1096.38 li
766.188 1096.38 li
cp
f
798.838 1108.88 mo
799.831 1108.88 800.641 1109.7 800.641 1110.69 cv
800.641 1111.68 799.831 1112.49 798.838 1112.49 cv
797.844 1112.49 797.031 1111.68 797.031 1110.69 cv
797.031 1109.7 797.844 1108.88 798.838 1108.88 cv
cp
766.188 1114.77 mo
785.092 1114.77 li
785.092 1112.35 li
794.786 1112.35 li
795.444 1113.94 797.007 1115.07 798.838 1115.07 cv
801.253 1115.07 803.219 1113.11 803.219 1110.69 cv
803.219 1108.28 801.253 1106.3 798.838 1106.3 cv
796.549 1106.3 794.685 1108.08 794.491 1110.31 cv
785.092 1110.31 li
785.092 1108.76 li
766.188 1108.76 li
766.188 1114.77 li
cp
f
821.521 1109.14 mo
822.51 1109.14 823.321 1109.95 823.321 1110.94 cv
823.321 1111.94 822.51 1112.75 821.521 1112.75 cv
820.523 1112.75 819.717 1111.94 819.717 1110.94 cv
819.717 1109.95 820.523 1109.14 821.521 1109.14 cv
cp
766.188 1127.48 mo
785.092 1127.48 li
785.092 1125.75 li
786.54 1125.75 li
786.54 1125.75 792.529 1119.77 793.071 1119.22 cv
793.882 1119.22 815.752 1119.22 815.752 1119.22 cv
819.952 1115.03 li
820.441 1115.21 820.964 1115.33 821.521 1115.33 cv
823.934 1115.33 825.901 1113.36 825.901 1110.94 cv
825.901 1108.53 823.934 1106.56 821.521 1106.56 cv
819.1 1106.56 817.139 1108.53 817.139 1110.94 cv
817.139 1112.06 817.569 1113.07 818.257 1113.84 cv
817.387 1114.72 815.313 1116.79 814.911 1117.19 cv
814.101 1117.19 792.23 1117.19 792.23 1117.19 cv
792.23 1117.19 786.241 1123.18 785.7 1123.72 cv
785.544 1123.72 785.329 1123.72 785.092 1123.72 cv
785.092 1121.47 li
766.188 1121.47 li
766.188 1127.48 li
cp
f
676.818 1084.88 mo
676.818 1065.64 li
652.218 1065.64 li
652.218 1067.67 li
658.685 1067.67 673.325 1067.67 674.786 1067.67 cv
674.786 1069.16 674.786 1080.65 674.786 1084.88 cv
669.444 1084.88 li
669.444 1098.45 li
682.16 1098.45 li
682.16 1084.88 li
676.818 1084.88 li
cp
f
691.269 1098.45 mo
703.983 1098.45 li
703.983 1084.88 li
691.269 1084.88 li
691.269 1098.45 li
cp
f
744.97 1113.27 mo
743.973 1113.27 743.165 1112.46 743.165 1111.46 cv
743.165 1110.47 743.973 1109.66 744.97 1109.66 cv
745.96 1109.66 746.774 1110.47 746.774 1111.46 cv
746.774 1112.46 745.96 1113.27 744.97 1113.27 cv
cp
744.97 1107.08 mo
742.553 1107.08 740.585 1109.05 740.585 1111.46 cv
740.585 1112.38 740.872 1113.23 741.358 1113.93 cv
740.394 1114.89 738.795 1116.49 738.447 1116.85 cv
737.692 1116.85 666.185 1116.85 652.218 1116.85 cv
652.218 1118.88 li
739.288 1118.88 li
742.878 1115.29 li
743.502 1115.63 744.206 1115.84 744.97 1115.84 cv
747.384 1115.84 749.348 1113.88 749.348 1111.46 cv
749.348 1109.05 747.384 1107.08 744.97 1107.08 cv
cp
f
657.073 1123.36 mo
652.218 1123.36 li
652.218 1138.48 li
657.073 1138.48 li
657.073 1123.36 li
cp
f
656.901 1097.42 mo
652.218 1097.42 li
652.218 1111.85 li
656.901 1111.85 li
656.901 1097.42 li
cp
f
663.429 1106.65 mo
662.438 1106.65 661.628 1105.84 661.628 1104.84 cv
661.628 1103.85 662.438 1103.04 663.429 1103.04 cv
664.426 1103.04 665.234 1103.85 665.234 1104.84 cv
665.234 1105.84 664.426 1106.65 663.429 1106.65 cv
cp
664.62 1100.65 mo
664.62 1078.36 li
656.901 1078.36 li
656.901 1071.13 li
652.218 1071.13 li
652.218 1085.55 li
656.901 1085.55 li
656.901 1080.39 li
658.8 1080.39 661.582 1080.39 662.589 1080.39 cv
662.589 1082.01 662.589 1096.88 662.589 1100.55 cv
660.575 1100.95 659.05 1102.72 659.05 1104.84 cv
659.05 1107.26 661.016 1109.23 663.429 1109.23 cv
665.848 1109.23 667.816 1107.26 667.816 1104.84 cv
667.816 1102.84 666.459 1101.17 664.62 1100.65 cv
cp
f
803.991 1054.76 mo
802.998 1054.76 802.189 1053.95 802.189 1052.95 cv
802.189 1051.96 802.998 1051.14 803.991 1051.14 cv
804.988 1051.14 805.796 1051.96 805.796 1052.95 cv
805.796 1053.95 804.988 1054.76 803.991 1054.76 cv
cp
803.991 1048.57 mo
802.069 1048.57 800.45 1049.82 799.863 1051.55 cv
763.362 1051.55 li
763.362 1051.55 757.374 1057.54 756.832 1058.08 cv
756.063 1058.08 666.806 1058.08 652.218 1058.08 cv
652.218 1060.11 li
757.675 1060.11 li
757.675 1060.11 763.661 1054.13 764.203 1053.58 cv
764.958 1053.58 794.737 1053.58 799.673 1053.58 cv
799.982 1055.7 801.791 1057.33 803.991 1057.33 cv
806.408 1057.33 808.374 1055.37 808.374 1052.95 cv
808.374 1050.54 806.408 1048.57 803.991 1048.57 cv
cp
f
487.55 740.557 mo
487.55 738.57 489.169 736.949 491.159 736.949 cv
493.15 736.949 494.768 738.57 494.768 740.557 cv
494.768 742.547 493.15 744.166 491.159 744.166 cv
489.169 744.166 487.55 742.547 487.55 740.557 cv
cp
498.892 740.557 mo
498.892 736.291 495.422 732.824 491.159 732.824 cv
486.895 732.824 483.426 736.291 483.426 740.557 cv
483.426 744.82 486.895 748.291 491.159 748.291 cv
495.422 748.291 498.892 744.82 498.892 740.557 cv
cp
f
656.79 733.383 mo
657.783 733.383 658.595 734.191 658.595 735.19 cv
658.595 736.184 657.783 736.994 656.79 736.994 cv
655.792 736.994 654.985 736.184 654.985 735.19 cv
654.985 734.191 655.792 733.383 656.79 733.383 cv
cp
869.111 752.973 mo
870.105 752.973 870.916 753.781 870.916 754.779 cv
870.916 755.775 870.105 756.582 869.111 756.582 cv
868.115 756.582 867.305 755.775 867.305 754.779 cv
867.305 753.781 868.115 752.973 869.111 752.973 cv
cp
1051.89 703.229 mo
1051.89 702.231 1052.7 701.424 1053.69 701.424 cv
1054.69 701.424 1055.5 702.231 1055.5 703.229 cv
1055.5 704.225 1054.69 705.031 1053.69 705.031 cv
1052.7 705.031 1051.89 704.225 1051.89 703.229 cv
cp
583.109 736.994 mo
582.115 736.994 581.306 736.184 581.306 735.19 cv
581.306 734.191 582.115 733.383 583.109 733.383 cv
584.106 733.383 584.914 734.191 584.914 735.19 cv
584.914 736.184 584.106 736.994 583.109 736.994 cv
cp
583.109 730.805 mo
580.691 730.805 578.729 732.771 578.729 735.19 cv
578.729 737.607 580.691 739.566 583.109 739.566 cv
585.25 739.566 587.033 738.025 587.409 735.988 cv
652.49 735.988 li
652.867 738.025 654.646 739.566 656.79 739.566 cv
659.203 739.566 661.173 737.607 661.173 735.19 cv
661.173 734.338 660.919 733.549 660.496 732.879 cv
662.55 730.822 669.533 723.84 670.012 723.361 cv
670.845 723.361 752.06 723.361 752.06 723.361 cv
752.06 723.361 758.179 717.246 758.723 716.701 cv
759.536 716.701 843.992 716.701 844.809 716.701 cv
845.34 717.238 850.414 722.307 850.414 722.307 cv
850.414 722.307 856.438 722.307 857.18 722.307 cv
857.566 722.697 860.072 725.203 861.38 726.51 cv
861.38 743.734 li
867.581 743.734 li
867.581 750.69 li
865.921 751.315 864.731 752.902 864.731 754.779 cv
864.731 757.195 866.692 759.158 869.111 759.158 cv
871.254 759.158 873.032 757.611 873.414 755.58 cv
885.779 755.58 li
885.779 759.543 li
891.638 759.543 li
891.638 768.809 li
927.863 768.809 li
927.863 768.809 927.863 745.596 927.863 743.723 cv
929.832 743.723 1039.14 743.723 1039.96 743.723 cv
1040.5 744.264 1046.57 750.334 1046.57 750.334 cv
1118.29 750.334 li
1124.26 744.373 li
1124.26 739.44 li
1127.15 739.44 li
1127.15 725.348 li
1124.73 725.348 li
1124.73 715.9 li
1128.87 715.9 li
1128.87 701.809 li
1121.31 701.809 li
1121.31 709.557 li
1111.84 709.557 1056.26 709.557 1054.45 709.557 cv
1054.45 708.965 1054.45 708.174 1054.45 707.531 cv
1056.51 707.174 1058.08 705.383 1058.08 703.229 cv
1058.08 700.81 1056.11 698.848 1053.69 698.848 cv
1051.28 698.848 1049.31 700.81 1049.31 703.229 cv
1049.31 705.197 1050.63 706.85 1052.42 707.396 cv
1052.42 711.59 li
1121.31 711.59 li
1121.31 715.9 li
1122.7 715.9 li
1122.7 725.348 li
1119.59 725.348 li
1119.59 739.44 li
1122.23 739.44 li
1122.23 740.846 1122.23 743.049 1122.23 743.531 cv
1121.72 744.031 1117.96 747.805 1117.45 748.303 cv
1116.63 748.303 1048.24 748.303 1047.41 748.303 cv
1046.87 747.76 1040.8 741.69 1040.8 741.69 cv
925.831 741.69 li
925.831 741.69 925.831 764.902 925.831 766.777 cv
923.973 766.777 895.526 766.777 893.67 766.777 cv
893.67 765.604 893.67 761.662 893.67 759.543 cv
897.466 759.543 li
897.466 745.799 li
885.779 745.799 li
885.779 753.545 li
873.296 753.545 li
872.805 751.889 871.37 750.65 869.614 750.447 cv
869.614 743.734 li
876.331 743.734 li
876.331 725.004 li
862.751 725.004 li
858.017 720.275 li
858.017 720.275 851.995 720.275 851.253 720.275 cv
850.721 719.742 845.647 714.668 845.647 714.668 cv
757.878 714.668 li
757.878 714.668 751.76 720.785 751.22 721.328 cv
750.384 721.328 669.167 721.328 669.167 721.328 cv
659.047 731.451 li
658.387 731.047 657.617 730.805 656.79 730.805 cv
654.802 730.805 653.144 732.141 652.605 733.957 cv
587.293 733.957 li
586.755 732.141 585.093 730.805 583.109 730.805 cv
cp
f
662.718 671.783 mo
661.722 671.783 660.911 670.973 660.911 669.979 cv
660.911 668.982 661.722 668.174 662.718 668.174 cv
663.711 668.174 664.521 668.982 664.521 669.979 cv
664.521 670.973 663.711 671.783 662.718 671.783 cv
cp
534.911 657.35 mo
534.911 656.352 535.718 655.545 536.714 655.545 cv
537.709 655.545 538.518 656.352 538.518 657.35 cv
538.518 658.342 537.709 659.152 536.714 659.152 cv
535.718 659.152 534.911 658.342 534.911 657.35 cv
cp
734.369 681.832 mo
735.367 681.832 736.178 682.646 736.178 683.637 cv
736.178 684.635 735.367 685.445 734.369 685.445 cv
733.378 685.445 732.567 684.635 732.567 683.637 cv
732.567 682.646 733.378 681.832 734.369 681.832 cv
cp
734.369 688.021 mo
736.786 688.021 738.754 686.053 738.754 683.637 cv
738.754 681.223 736.786 679.256 734.369 679.256 cv
732.451 679.256 730.834 680.506 730.243 682.232 cv
723.993 682.232 682.035 682.232 681.264 682.232 cv
680.694 681.66 665.58 666.553 665.58 666.553 cv
665.506 666.627 li
664.745 665.998 663.783 665.6 662.718 665.6 cv
660.702 665.6 659.015 666.975 658.507 668.836 cv
649.004 668.836 549.773 668.836 548.992 668.836 cv
548.547 668.383 542.584 662.424 540.171 660.01 cv
540.743 659.268 541.098 658.354 541.098 657.35 cv
541.098 654.934 539.127 652.967 536.714 652.967 cv
534.298 652.967 532.329 654.934 532.329 657.35 cv
532.329 659.764 534.298 661.731 536.714 661.731 cv
537.384 661.731 538.014 661.566 538.581 661.295 cv
548.149 670.869 li
658.428 670.869 li
658.837 672.857 660.604 674.359 662.718 674.359 cv
664.833 674.359 666.601 672.854 667.012 670.856 cv
680.427 684.268 li
730.057 684.268 li
730.366 686.385 732.171 688.021 734.369 688.021 cv
cp
f
840.761 690.08 mo
840.761 691.078 839.951 691.885 838.956 691.885 cv
837.959 691.885 837.15 691.078 837.15 690.08 cv
837.15 689.088 837.959 688.277 838.956 688.277 cv
839.951 688.277 840.761 689.088 840.761 690.08 cv
cp
577.695 658.893 mo
576.698 658.893 575.891 658.086 575.891 657.092 cv
575.891 656.094 576.698 655.285 577.695 655.285 cv
578.689 655.285 579.5 656.094 579.5 657.092 cv
579.5 658.086 578.689 658.893 577.695 658.893 cv
cp
834.572 690.08 mo
834.572 692.498 836.541 694.467 838.956 694.467 cv
841.369 694.467 843.339 692.498 843.339 690.08 cv
843.339 688.111 842.023 686.461 840.23 685.914 cv
840.23 675.623 li
840.23 675.623 690.953 675.623 690.118 675.623 cv
689.539 675.041 670.271 655.771 670.271 655.771 cv
581.852 655.771 li
581.289 654.002 579.649 652.705 577.695 652.705 cv
575.278 652.705 573.317 654.674 573.317 657.092 cv
573.317 659.508 575.278 661.471 577.695 661.471 cv
579.866 661.471 581.659 659.881 582.006 657.805 cv
590.319 657.805 668.663 657.805 669.425 657.805 cv
670.006 658.385 689.274 677.652 689.274 677.652 cv
689.274 677.652 836.203 677.652 838.194 677.652 cv
838.194 678.973 838.194 683.894 838.194 685.777 cv
836.144 686.139 834.572 687.93 834.572 690.08 cv
cp
f
700.605 728.744 mo
700.605 729.738 699.795 730.549 698.805 730.549 cv
697.808 730.549 697.001 729.738 697.001 728.744 cv
697.001 727.752 697.808 726.941 698.805 726.941 cv
699.795 726.941 700.605 727.752 700.605 728.744 cv
cp
695.669 725.691 mo
682.906 725.691 li
682.906 731.537 li
695.45 731.537 li
696.259 732.5 697.453 733.123 698.805 733.123 cv
701.218 733.123 703.185 731.162 703.185 728.744 cv
703.185 726.328 701.218 724.359 698.805 724.359 cv
697.576 724.359 696.463 724.875 695.669 725.691 cv
cp
f
1135.4 686.986 mo
1134.4 686.986 1133.6 686.18 1133.6 685.184 cv
1133.6 684.19 1134.4 683.381 1135.4 683.381 cv
1136.4 683.381 1137.21 684.19 1137.21 685.184 cv
1137.21 686.18 1136.4 686.986 1135.4 686.986 cv
cp
1131.02 685.184 mo
1131.02 687.6 1132.98 689.565 1135.4 689.565 cv
1137.82 689.565 1139.78 687.6 1139.78 685.184 cv
1139.78 683.764 1139.09 682.508 1138.04 681.705 cv
1139.18 681.705 li
1139.18 667.615 li
1131.62 667.615 li
1131.62 681.705 li
1132.77 681.705 li
1131.71 682.508 1131.02 683.764 1131.02 685.184 cv
cp
f
1123.54 686.986 mo
1122.55 686.986 1121.74 686.18 1121.74 685.184 cv
1121.74 684.19 1122.55 683.381 1123.54 683.381 cv
1124.54 683.381 1125.35 684.19 1125.35 685.184 cv
1125.35 686.18 1124.54 686.986 1123.54 686.986 cv
cp
1119.17 685.184 mo
1119.17 687.6 1121.13 689.565 1123.54 689.565 cv
1125.96 689.565 1127.93 687.6 1127.93 685.184 cv
1127.93 683.764 1127.23 682.508 1126.18 681.705 cv
1127.5 681.705 li
1127.5 667.615 li
1119.94 667.615 li
1119.94 681.705 li
1120.91 681.705 li
1119.86 682.508 1119.17 683.764 1119.17 685.184 cv
cp
f
1112.2 686.986 mo
1111.21 686.986 1110.4 686.18 1110.4 685.184 cv
1110.4 684.19 1111.21 683.381 1112.2 683.381 cv
1113.2 683.381 1114.01 684.19 1114.01 685.184 cv
1114.01 686.18 1113.2 686.986 1112.2 686.986 cv
cp
1107.82 685.184 mo
1107.82 687.6 1109.79 689.565 1112.2 689.565 cv
1114.62 689.565 1116.58 687.6 1116.58 685.184 cv
1116.58 683.764 1115.89 682.508 1114.84 681.705 cv
1115.64 681.705 li
1115.64 667.615 li
1108.08 667.615 li
1108.08 681.705 li
1109.57 681.705 li
1108.51 682.508 1107.82 683.764 1107.82 685.184 cv
cp
f
903.908 668.947 mo
904.904 668.947 905.711 669.758 905.711 670.748 cv
905.711 671.746 904.904 672.553 903.908 672.553 cv
902.912 672.553 902.103 671.746 902.103 670.748 cv
902.103 669.758 902.912 668.947 903.908 668.947 cv
cp
927.364 668.947 mo
928.358 668.947 929.165 669.758 929.165 670.748 cv
929.165 671.746 928.358 672.553 927.364 672.553 cv
926.367 672.553 925.557 671.746 925.557 670.748 cv
925.557 669.758 926.367 668.947 927.364 668.947 cv
cp
1065.81 701.94 mo
1066.81 701.94 1067.61 702.748 1067.61 703.742 cv
1067.61 704.738 1066.81 705.547 1065.81 705.547 cv
1064.82 705.547 1064.01 704.738 1064.01 703.742 cv
1064.01 702.748 1064.82 701.94 1065.81 701.94 cv
cp
1094.68 701.94 mo
1095.67 701.94 1096.48 702.748 1096.48 703.742 cv
1096.48 704.738 1095.67 705.547 1094.68 705.547 cv
1093.68 705.547 1092.87 704.738 1092.87 703.742 cv
1092.87 702.748 1093.68 701.94 1094.68 701.94 cv
cp
899.524 670.748 mo
899.524 673.166 901.491 675.129 903.908 675.129 cv
906.165 675.129 908.013 673.406 908.244 671.209 cv
923.029 671.209 li
923.226 673.066 924.57 674.574 926.349 675 cv
926.349 678.6 li
935.61 678.6 li
935.61 680.67 li
943.172 680.67 li
943.172 667.275 li
935.61 667.275 li
935.61 676.563 li
933.802 676.563 929.629 676.563 928.381 676.563 cv
928.381 676.092 928.381 675.508 928.381 675 cv
930.305 674.539 931.745 672.813 931.745 670.748 cv
931.745 668.81 930.469 667.184 928.725 666.609 cv
928.725 666.231 928.725 665.775 928.725 665.365 cv
930.688 665.365 1049.94 665.365 1051.9 665.365 cv
1051.9 665.998 1051.9 666.891 1051.9 667.615 cv
1049.83 667.615 li
1049.83 681.705 li
1051.99 681.705 li
1051.99 691.836 li
1061.92 701.764 li
1061.62 702.363 1061.42 703.027 1061.42 703.742 cv
1061.42 706.162 1063.39 708.125 1065.81 708.125 cv
1068.01 708.125 1069.82 706.488 1070.12 704.373 cv
1090.36 704.373 li
1090.67 706.488 1092.48 708.125 1094.68 708.125 cv
1097.09 708.125 1099.06 706.162 1099.06 703.742 cv
1099.06 701.326 1097.09 699.357 1094.68 699.357 cv
1092.75 699.357 1091.13 700.615 1090.54 702.342 cv
1069.94 702.342 li
1069.35 700.615 1067.73 699.357 1065.81 699.357 cv
1064.84 699.357 1063.97 699.682 1063.24 700.209 cv
1061.29 698.258 1054.5 691.473 1054.03 690.996 cv
1054.03 690.396 1054.03 684.447 1054.03 681.705 cv
1057.39 681.705 li
1057.39 667.615 li
1053.94 667.615 li
1053.94 663.334 li
926.688 663.334 li
926.688 666.44 li
925.127 666.685 923.844 667.744 923.289 669.178 cv
907.986 669.178 li
907.348 667.537 905.764 666.369 903.908 666.369 cv
901.491 666.369 899.524 668.334 899.524 670.748 cv
cp
f
449.66 665.467 mo
448.666 665.467 447.855 664.658 447.855 663.668 cv
447.855 662.67 448.666 661.859 449.66 661.859 cv
450.653 661.859 451.462 662.67 451.462 663.668 cv
451.462 664.658 450.653 665.467 449.66 665.467 cv
cp
490.126 662.633 mo
490.126 650.773 li
481.103 650.773 li
481.103 655.432 li
466.679 655.432 li
466.679 655.432 460.352 661.762 459.807 662.301 cv
459.253 662.301 455.674 662.301 453.803 662.301 cv
453.229 660.557 451.599 659.281 449.66 659.281 cv
447.246 659.281 445.277 661.248 445.277 663.668 cv
445.277 666.078 447.246 668.043 449.66 668.043 cv
451.847 668.043 453.645 666.432 453.975 664.336 cv
460.651 664.336 li
460.651 664.336 466.979 658.01 467.521 657.465 cv
468.162 657.465 477.459 657.465 481.103 657.465 cv
481.103 662.633 li
490.126 662.633 li
cp
f
852.875 734.932 mo
852.875 735.926 852.064 736.734 851.072 736.734 cv
850.074 736.734 849.264 735.926 849.264 734.932 cv
849.264 733.934 850.074 733.123 851.072 733.123 cv
852.064 733.123 852.875 733.934 852.875 734.932 cv
cp
736.004 726.035 mo
736.004 731.881 li
749.233 731.881 li
749.233 728.732 li
810.724 728.732 li
810.724 728.732 815.729 723.719 816.266 723.19 cv
817.063 723.19 837.739 723.19 838.534 723.19 cv
838.989 723.648 845.299 729.955 847.611 732.266 cv
847.041 733.012 846.686 733.926 846.686 734.932 cv
846.686 737.348 848.65 739.309 851.072 739.309 cv
853.483 739.309 855.455 737.348 855.455 734.932 cv
855.455 732.512 853.483 730.549 851.072 730.549 cv
850.399 730.549 849.769 730.713 849.2 730.982 cv
839.374 721.156 li
815.423 721.156 li
815.423 721.156 810.416 726.164 809.883 726.697 cv
809.226 726.697 752.676 726.697 749.233 726.697 cv
749.233 726.035 li
736.004 726.035 li
cp
f
695.794 718.994 mo
695.794 713.148 li
682.906 713.148 li
682.906 718.994 li
695.794 718.994 li
cp
f
920.146 723.113 mo
916.352 723.113 li
916.352 713.666 li
918.257 713.666 li
918.257 699.92 li
908.805 699.92 li
908.805 713.666 li
914.318 713.666 li
914.318 723.113 li
908.463 723.113 li
908.463 736.863 li
920.146 736.863 li
920.146 723.113 li
cp
f
1035.91 737.508 mo
1034.91 737.508 1034.11 736.697 1034.11 735.705 cv
1034.11 734.707 1034.91 733.9 1035.91 733.9 cv
1036.9 733.9 1037.71 734.707 1037.71 735.705 cv
1037.71 736.697 1036.9 737.508 1035.91 737.508 cv
cp
1057.56 739.44 mo
1057.56 725.348 li
1050 725.348 li
1050 734.299 li
1040.04 734.299 li
1039.56 732.891 1038.39 731.805 1036.93 731.451 cv
1036.93 721.227 li
1042.27 721.227 li
1042.27 707.65 li
1028.86 707.65 li
1028.86 721.227 li
1034.89 721.227 li
1034.89 731.451 li
1032.97 731.912 1031.53 733.639 1031.53 735.705 cv
1031.53 738.123 1033.5 740.084 1035.91 740.084 cv
1038.11 740.084 1039.92 738.451 1040.23 736.33 cv
1050 736.33 li
1050 739.44 li
1057.56 739.44 li
cp
f
1061.69 725.348 mo
1061.69 739.44 li
1069.24 739.44 li
1069.24 725.348 li
1061.69 725.348 li
cp
f
1076.94 724.359 mo
1075.94 724.359 1075.13 723.553 1075.13 722.557 cv
1075.13 721.563 1075.94 720.754 1076.94 720.754 cv
1077.93 720.754 1078.74 721.563 1078.74 722.557 cv
1078.74 723.553 1077.93 724.359 1076.94 724.359 cv
cp
1076.94 718.18 mo
1074.52 718.18 1072.55 720.141 1072.55 722.557 cv
1072.55 723.623 1072.95 724.588 1073.59 725.348 cv
1073.15 725.348 li
1073.15 739.44 li
1080.72 739.44 li
1080.72 725.348 li
1080.28 725.348 li
1080.92 724.588 1081.32 723.623 1081.32 722.557 cv
1081.32 720.141 1079.35 718.18 1076.94 718.18 cv
cp
f
1084.54 725.348 mo
1084.54 739.44 li
1092.1 739.44 li
1092.1 725.348 li
1084.54 725.348 li
cp
f
1095.88 725.348 mo
1095.88 739.44 li
1103.44 739.44 li
1103.44 725.348 li
1095.88 725.348 li
cp
f
1111.99 724.359 mo
1111 724.359 1110.18 723.553 1110.18 722.557 cv
1110.18 721.563 1111 720.754 1111.99 720.754 cv
1112.99 720.754 1113.79 721.563 1113.79 722.557 cv
1113.79 723.553 1112.99 724.359 1111.99 724.359 cv
cp
1111.99 718.18 mo
1109.57 718.18 1107.61 720.141 1107.61 722.557 cv
1107.61 723.623 1108.01 724.588 1108.64 725.348 cv
1108.21 725.348 li
1108.21 739.44 li
1115.77 739.44 li
1115.77 725.348 li
1115.34 725.348 li
1115.97 724.588 1116.37 723.623 1116.37 722.557 cv
1116.37 720.141 1114.41 718.18 1111.99 718.18 cv
cp
f
1135.32 720.754 mo
1136.31 720.754 1137.12 721.563 1137.12 722.557 cv
1137.12 723.553 1136.31 724.359 1135.32 724.359 cv
1134.32 724.359 1133.51 723.553 1133.51 722.557 cv
1133.51 721.563 1134.32 720.754 1135.32 720.754 cv
cp
1131.54 725.348 mo
1131.54 739.44 li
1139.1 739.44 li
1139.1 725.348 li
1138.67 725.348 li
1139.3 724.588 1139.7 723.623 1139.7 722.557 cv
1139.7 720.141 1137.73 718.18 1135.32 718.18 cv
1132.9 718.18 1130.93 720.141 1130.93 722.557 cv
1130.93 723.623 1131.33 724.588 1131.96 725.348 cv
1131.54 725.348 li
cp
f
1099.16 681.705 mo
1099.16 692.775 li
1137.8 692.775 li
1147.07 683.506 li
1147.07 683.506 1147.07 667.354 1147.07 665.543 cv
1148.01 665.543 1150.38 665.543 1152.12 665.543 cv
1152.12 663.504 li
1145.04 663.504 li
1145.04 663.504 1145.04 681.857 1145.04 682.658 cv
1144.5 683.195 1137.49 690.205 1136.96 690.736 cv
1136.16 690.736 1103.09 690.736 1101.19 690.736 cv
1101.19 689.445 1101.19 684.117 1101.19 681.705 cv
1103.61 681.705 li
1103.61 667.615 li
1096.05 667.615 li
1096.05 681.705 li
1099.16 681.705 li
cp
f
1088.24 663.275 mo
1089.23 663.275 1090.04 664.084 1090.04 665.082 cv
1090.04 666.076 1089.23 666.883 1088.24 666.883 cv
1087.24 666.883 1086.43 666.076 1086.43 665.082 cv
1086.43 664.084 1087.24 663.275 1088.24 663.275 cv
cp
1084.19 681.705 mo
1091.76 681.705 li
1091.76 667.662 li
1092.29 666.934 1092.62 666.047 1092.62 665.082 cv
1092.62 662.664 1090.65 660.701 1088.24 660.701 cv
1085.82 660.701 1083.85 662.664 1083.85 665.082 cv
1083.85 666.027 1084.16 666.9 1084.67 667.615 cv
1084.19 667.615 li
1084.19 681.705 li
cp
f
1028.86 698.031 mo
1042.27 698.031 li
1042.27 684.459 li
1028.86 684.459 li
1028.86 698.031 li
cp
f
943.172 738.41 mo
943.172 725.008 li
935.61 725.008 li
935.61 738.41 li
943.172 738.41 li
cp
f
1035.66 669.461 mo
1036.65 669.461 1037.46 670.273 1037.46 671.266 cv
1037.46 672.264 1036.65 673.072 1035.66 673.072 cv
1034.66 673.072 1033.85 672.264 1033.85 671.266 cv
1033.85 670.273 1034.66 669.461 1035.66 669.461 cv
cp
970.149 667.275 mo
970.149 680.67 li
977.711 680.67 li
977.711 677.565 li
980.364 677.565 li
980.364 677.565 985.669 672.264 986.21 671.721 cv
986.762 671.721 1028.98 671.721 1031.32 671.721 cv
1031.55 673.924 1033.39 675.646 1035.66 675.646 cv
1038.07 675.646 1040.03 673.684 1040.03 671.266 cv
1040.03 668.85 1038.07 666.883 1035.66 666.883 cv
1033.79 666.883 1032.21 668.053 1031.58 669.693 cv
985.362 669.693 li
985.362 669.693 980.06 674.998 979.523 675.533 cv
979.19 675.533 978.398 675.533 977.711 675.533 cv
977.711 667.275 li
970.149 667.275 li
cp
f
736.004 738.066 mo
736.004 743.906 li
749.233 743.906 li
749.233 742.094 li
749.573 742.094 749.902 742.094 750.103 742.094 cv
750.646 742.635 756.892 748.877 756.892 748.877 cv
756.892 748.877 848.901 748.877 849.767 748.877 cv
850.356 749.51 873.653 774.482 873.653 774.482 cv
945.519 774.482 li
945.519 774.482 945.519 761.057 945.519 760.266 cv
946.011 759.777 949.287 756.494 949.777 756.006 cv
950.597 756.006 1028.23 756.006 1029.04 756.006 cv
1029.61 756.578 1041.16 768.123 1041.16 768.123 cv
1130.25 768.123 li
1130.25 773.293 li
1139.7 773.293 li
1139.7 761.09 li
1130.25 761.09 li
1130.25 766.09 li
1119.06 766.09 1042.77 766.09 1042 766.09 cv
1041.43 765.521 1029.89 753.975 1029.89 753.975 cv
948.936 753.975 li
943.487 759.424 li
943.487 759.424 943.487 770.707 943.487 772.449 cv
941.52 772.449 875.393 772.449 874.536 772.449 cv
873.948 771.816 850.653 746.842 850.653 746.842 cv
850.653 746.842 758.563 746.842 757.734 746.842 cv
757.188 746.297 750.944 740.057 750.944 740.057 cv
749.233 740.057 li
749.233 738.066 li
736.004 738.066 li
cp
f
669.42 739.566 mo
670.413 739.566 671.224 740.379 671.224 741.371 cv
671.224 742.369 670.413 743.178 669.42 743.178 cv
668.422 743.178 667.613 742.369 667.613 741.371 cv
667.613 740.379 668.422 739.566 669.42 739.566 cv
cp
827.868 733.123 mo
828.866 733.123 829.677 733.934 829.677 734.932 cv
829.677 735.926 828.866 736.734 827.868 736.734 cv
826.874 736.734 826.067 735.926 826.067 734.932 cv
826.067 733.934 826.874 733.123 827.868 733.123 cv
cp
553.89 754.766 mo
553.89 754.766 565.503 743.154 566.067 742.584 cv
566.854 742.584 657.791 742.584 665.229 742.584 cv
665.756 744.41 667.426 745.756 669.42 745.756 cv
671.413 745.756 673.078 744.41 673.609 742.584 cv
682.906 742.584 li
682.906 743.906 li
695.794 743.906 li
695.794 742.584 li
722.549 742.584 li
722.549 742.584 728.039 737.1 728.573 736.56 cv
729.33 736.56 816.994 736.56 823.81 736.56 cv
824.457 738.168 826.033 739.309 827.868 739.309 cv
830.288 739.309 832.252 737.348 832.252 734.932 cv
832.252 732.512 830.288 730.549 827.868 730.549 cv
825.593 730.549 823.739 732.305 823.53 734.523 cv
727.732 734.523 li
727.732 734.523 722.244 740.008 721.706 740.551 cv
721.28 740.551 708.275 740.551 695.794 740.551 cv
695.794 738.066 li
682.906 738.066 li
682.906 740.551 li
678.584 740.551 675.197 740.551 673.714 740.551 cv
673.329 738.525 671.552 736.994 669.42 736.994 cv
667.286 736.994 665.506 738.525 665.121 740.551 cv
565.229 740.551 li
565.229 740.551 553.615 752.162 553.047 752.734 cv
552.279 752.734 420.526 752.734 402.877 752.734 cv
402.877 754.766 li
553.89 754.766 li
cp
f
896.692 618.945 mo
896.692 617.947 897.503 617.141 898.497 617.141 cv
899.491 617.141 900.298 617.947 900.298 618.945 cv
900.298 619.935 899.491 620.746 898.497 620.746 cv
897.503 620.746 896.692 619.935 896.692 618.945 cv
cp
560.719 728.473 mo
560.719 728.473 578.252 710.94 578.826 710.365 cv
579.653 710.365 649.348 710.365 649.348 710.365 cv
649.348 710.365 655.859 703.859 656.405 703.31 cv
657.245 703.31 852.474 703.31 852.474 703.31 cv
852.474 703.31 852.474 679.059 852.474 677.18 cv
854.375 677.18 882.548 677.18 882.548 677.18 cv
899.577 660.156 li
899.577 623.174 li
901.47 622.688 902.877 620.984 902.877 618.945 cv
902.877 616.525 900.909 614.559 898.497 614.559 cv
896.079 614.559 894.114 616.525 894.114 618.945 cv
894.114 621.027 895.583 622.775 897.544 623.211 cv
897.544 628.463 897.544 658.563 897.544 659.309 cv
896.98 659.875 882.271 674.584 881.706 675.148 cv
880.89 675.148 850.438 675.148 850.438 675.148 cv
850.438 675.148 850.438 699.398 850.438 701.277 cv
848.435 701.277 655.563 701.277 655.563 701.277 cv
655.563 701.277 649.053 707.787 648.507 708.334 cv
647.68 708.334 577.983 708.334 577.983 708.334 cv
577.983 708.334 560.454 725.863 559.875 726.44 cv
559.139 726.44 426.784 726.44 402.877 726.44 cv
402.877 728.473 li
560.719 728.473 li
cp
f
892.81 652.1 mo
892.81 647.34 li
894.71 647.34 li
894.71 626.375 li
888.697 626.375 li
888.697 647.34 li
890.774 647.34 li
890.774 648.828 890.774 650.81 890.774 651.252 cv
890.211 651.824 873.576 668.457 873.009 669.025 cv
872.173 669.025 693.727 669.025 692.903 669.025 cv
692.326 668.457 663.84 640.461 663.249 639.879 cv
663.249 639.313 663.249 636.332 663.249 634.969 cv
665.207 634.969 li
665.207 614.002 li
659.192 614.002 li
659.192 634.969 li
661.218 634.969 li
661.218 640.732 li
692.07 671.059 li
873.851 671.059 li
892.81 652.1 li
cp
f
868.048 662.324 mo
867.211 662.324 700.764 662.324 699.931 662.324 cv
699.361 661.748 676.163 638.559 675.593 637.981 cv
675.593 637.519 675.593 635.947 675.593 634.969 cv
677.233 634.969 li
677.233 614.002 li
671.222 614.002 li
671.222 634.969 li
673.553 634.969 li
673.553 638.826 li
699.092 664.356 li
868.889 664.356 li
881.052 652.193 li
881.052 647.34 li
883.368 647.34 li
883.368 626.375 li
877.356 626.375 li
877.356 647.34 li
879.018 647.34 li
879.018 648.861 879.018 650.906 879.018 651.354 cv
878.468 651.902 868.598 661.773 868.048 662.324 cv
cp
f
542.043 685.4 mo
544.03 685.4 545.65 687.019 545.65 689.008 cv
545.65 690.996 544.03 692.617 542.043 692.617 cv
540.052 692.617 538.434 690.996 538.434 689.008 cv
538.434 687.019 540.052 685.4 542.043 685.4 cv
cp
424.729 618.557 mo
424.729 617.563 425.542 616.752 426.536 616.752 cv
427.527 616.752 428.338 617.563 428.338 618.557 cv
428.338 619.551 427.527 620.359 426.536 620.359 cv
425.542 620.359 424.729 619.551 424.729 618.557 cv
cp
429.938 621.279 mo
430.541 620.533 430.916 619.596 430.916 618.557 cv
430.916 616.49 429.478 614.766 427.552 614.307 cv
427.552 606.441 li
433.361 606.441 li
433.361 591.493 li
419.705 591.493 li
419.705 606.441 li
425.518 606.441 li
425.518 614.307 li
423.592 614.766 422.151 616.49 422.151 618.557 cv
422.151 620.971 424.119 622.94 426.536 622.94 cv
427.172 622.94 427.778 622.795 428.327 622.545 cv
430.216 624.43 435.978 630.199 436.445 630.662 cv
436.445 631.488 436.445 677.394 436.445 677.394 cv
455.839 677.394 li
455.839 677.394 461.656 671.578 462.197 671.035 cv
463.008 671.035 528.481 671.035 529.6 671.035 cv
530.043 671.791 534.905 680.096 536.802 683.338 cv
535.271 684.748 534.31 686.768 534.31 689.008 cv
534.31 693.271 537.776 696.738 542.043 696.738 cv
546.304 696.738 549.775 693.271 549.775 689.008 cv
549.775 684.744 546.304 681.275 542.043 681.275 cv
540.752 681.275 539.538 681.598 538.471 682.156 cv
530.768 669.004 li
461.353 669.004 li
461.353 669.004 455.54 674.82 454.997 675.363 cv
454.24 675.363 440.245 675.363 438.478 675.363 cv
438.478 673.412 438.478 629.82 438.478 629.82 cv
429.938 621.279 li
cp
f
589.034 681.32 mo
590.028 681.32 590.838 682.127 590.838 683.123 cv
590.838 684.117 590.028 684.928 589.034 684.928 cv
588.044 684.928 587.229 684.117 587.229 683.123 cv
587.229 682.127 588.044 681.32 589.034 681.32 cv
cp
438.158 704.887 mo
545.041 704.887 li
545.041 704.887 564.907 685.019 565.486 684.441 cv
566.163 684.441 580.221 684.441 584.882 684.441 cv
585.443 686.211 587.08 687.506 589.034 687.506 cv
591.455 687.506 593.421 685.537 593.421 683.123 cv
593.421 680.709 591.455 678.738 589.034 678.738 cv
586.867 678.738 585.074 680.332 584.727 682.41 cv
564.644 682.41 li
564.644 682.41 544.776 702.275 544.199 702.856 cv
543.369 702.856 439.824 702.856 439.001 702.856 cv
438.519 702.373 412.318 676.178 402.877 666.734 cv
402.877 669.607 li
438.158 704.887 li
cp
f
424.658 663.668 mo
424.658 662.67 425.465 661.859 426.463 661.859 cv
427.456 661.859 428.267 662.67 428.267 663.668 cv
428.267 664.658 427.456 665.467 426.463 665.467 cv
425.465 665.467 424.658 664.658 424.658 663.668 cv
cp
467.446 685.4 mo
469.434 685.4 471.052 687.019 471.052 689.008 cv
471.052 690.996 469.434 692.617 467.446 692.617 cv
465.456 692.617 463.836 690.996 463.836 689.008 cv
463.836 687.019 465.456 685.4 467.446 685.4 cv
cp
438.418 690.713 mo
459.907 690.713 li
460.686 694.158 463.767 696.738 467.446 696.738 cv
471.709 696.738 475.177 693.271 475.177 689.008 cv
475.177 684.744 471.709 681.275 467.446 681.275 cv
463.292 681.275 459.9 684.57 459.728 688.68 cv
455.065 688.68 439.944 688.68 439.257 688.68 cv
438.704 688.123 427.95 677.369 427.393 676.815 cv
427.393 676.211 427.393 670.459 427.393 667.941 cv
429.362 667.512 430.844 665.76 430.844 663.668 cv
430.844 661.566 429.362 659.815 427.393 659.389 cv
427.393 650.773 li
433.935 650.773 li
433.935 635.824 li
420.276 635.824 li
420.276 650.773 li
425.359 650.773 li
425.359 659.44 li
423.477 659.932 422.084 661.629 422.084 663.668 cv
422.084 665.693 423.477 667.393 425.359 667.887 cv
425.359 677.66 li
438.418 690.713 li
cp
f
449.66 713.281 mo
450.653 713.281 451.462 714.088 451.462 715.086 cv
451.462 716.076 450.653 716.889 449.66 716.889 cv
448.666 716.889 447.855 716.076 447.855 715.086 cv
447.855 714.088 448.666 713.281 449.66 713.281 cv
cp
559.914 713.019 mo
560.908 713.019 561.717 713.83 561.717 714.828 cv
561.717 715.822 560.908 716.629 559.914 716.629 cv
558.916 716.629 558.108 715.822 558.108 714.828 cv
558.108 713.83 558.916 713.019 559.914 713.019 cv
cp
698.028 693.949 mo
699.021 693.949 699.834 694.758 699.834 695.752 cv
699.834 696.746 699.021 697.56 698.028 697.56 cv
697.034 697.56 696.224 696.746 696.224 695.752 cv
696.224 694.758 697.034 693.949 698.028 693.949 cv
cp
432.556 715.971 mo
445.371 715.971 li
445.782 717.965 447.549 719.467 449.66 719.467 cv
451.8 719.467 453.582 717.922 453.961 715.889 cv
555.675 715.889 li
556.15 717.787 557.863 719.207 559.914 719.207 cv
562.33 719.207 564.294 717.242 564.294 714.828 cv
564.294 713.646 563.816 712.576 563.058 711.789 cv
566.54 708.301 577.548 697.295 578.028 696.815 cv
578.813 696.815 684.134 696.815 693.791 696.815 cv
694.268 698.715 695.98 700.135 698.028 700.135 cv
700.444 700.135 702.41 698.17 702.41 695.752 cv
702.41 693.34 700.444 691.371 698.028 691.371 cv
695.951 691.371 694.21 692.832 693.765 694.777 cv
577.187 694.777 li
561.279 710.69 li
560.848 710.543 560.394 710.443 559.914 710.443 cv
557.831 710.443 556.092 711.906 555.647 713.854 cv
453.844 713.854 li
453.31 712.037 451.645 710.703 449.66 710.703 cv
447.644 710.703 445.959 712.082 445.447 713.94 cv
442.486 713.94 434.094 713.94 433.427 713.94 cv
432.872 713.363 406.178 685.494 402.877 682.041 cv
402.877 684.982 li
432.556 715.971 li
cp
f
973.76 714.051 mo
974.754 714.051 975.563 714.861 975.563 715.859 cv
975.563 716.854 974.754 717.66 973.76 717.66 cv
972.762 717.66 971.953 716.854 971.953 715.859 cv
971.953 714.861 972.762 714.051 973.76 714.051 cv
cp
973.76 702.713 mo
974.754 702.713 975.563 703.521 975.563 704.516 cv
975.563 705.512 974.754 706.318 973.76 706.318 cv
972.762 706.318 971.953 705.512 971.953 704.516 cv
971.953 703.521 972.762 702.713 973.76 702.713 cv
cp
971.39 708.193 mo
972.074 708.637 972.882 708.898 973.76 708.898 cv
976.174 708.898 978.141 706.932 978.141 704.516 cv
978.141 702.104 976.174 700.135 973.76 700.135 cv
971.343 700.135 969.376 702.104 969.376 704.516 cv
969.376 705.324 969.611 706.066 969.989 706.717 cv
968.188 708.521 li
968.188 708.521 968.188 715.242 968.188 715.996 cv
967.653 716.527 962.561 721.621 962.561 721.621 cv
962.561 725.008 li
958.463 725.008 li
958.463 738.41 li
966.024 738.41 li
966.024 725.008 li
964.594 725.008 li
964.594 723.988 964.594 722.834 964.594 722.465 cv
965.019 722.039 968.326 718.734 969.656 717.402 cv
970.186 718.799 971.411 719.857 972.913 720.156 cv
972.913 725.008 li
970.149 725.008 li
970.149 738.41 li
977.711 738.41 li
977.711 725.008 li
974.946 725.008 li
974.946 720.055 li
976.784 719.529 978.141 717.859 978.141 715.859 cv
978.141 713.441 976.174 711.473 973.76 711.473 cv
972.301 711.473 971.019 712.195 970.223 713.293 cv
970.223 711.547 970.223 709.732 970.223 709.363 cv
970.446 709.139 970.945 708.639 971.39 708.193 cv
cp
f
962.677 708.379 mo
963.671 708.379 964.477 709.191 964.477 710.188 cv
964.477 711.18 963.671 711.988 962.677 711.988 cv
961.68 711.988 960.873 711.18 960.873 710.188 cv
960.873 709.191 961.68 708.379 962.677 708.379 cv
cp
959.965 713.602 mo
960.714 714.197 961.648 714.568 962.677 714.568 cv
965.091 714.568 967.056 712.602 967.056 710.188 cv
967.056 707.771 965.091 705.801 962.677 705.801 cv
960.26 705.801 958.291 707.771 958.291 710.188 cv
958.291 710.832 958.442 711.441 958.694 712 cv
948.857 721.836 li
948.857 725.008 li
946.78 725.008 li
946.78 738.41 li
954.338 738.41 li
954.338 725.008 li
950.891 725.008 li
950.891 724.143 950.891 723.059 950.891 722.68 cv
951.353 722.217 957.745 715.826 959.965 713.602 cv
cp
f
1053.69 714.309 mo
1054.69 714.309 1055.5 715.117 1055.5 716.115 cv
1055.5 717.109 1054.69 717.922 1053.69 717.922 cv
1052.7 717.922 1051.89 717.109 1051.89 716.115 cv
1051.89 715.117 1052.7 714.309 1053.69 714.309 cv
cp
904.164 699.107 mo
903.17 699.107 902.363 698.295 902.363 697.301 cv
902.363 696.305 903.17 695.496 904.164 695.496 cv
905.162 695.496 905.973 696.305 905.973 697.301 cv
905.973 698.295 905.162 699.107 904.164 699.107 cv
cp
986.21 702.342 mo
985.663 701.793 979.247 695.379 979.247 695.379 cv
961.139 695.379 li
961.139 695.379 956.214 700.307 955.68 700.836 cv
954.876 700.836 928.59 700.836 927.784 700.836 cv
927.253 700.299 922.177 695.231 922.177 695.231 cv
908.001 695.231 li
907.262 693.861 905.83 692.914 904.164 692.914 cv
901.75 692.914 899.784 694.883 899.784 697.301 cv
899.784 699.713 901.75 701.682 904.164 701.682 cv
906.581 701.682 908.547 699.713 908.547 697.301 cv
908.547 697.283 908.545 697.275 908.545 697.264 cv
911.892 697.264 920.694 697.264 921.338 697.264 cv
921.873 697.799 926.943 702.871 926.943 702.871 cv
956.523 702.871 li
956.523 702.871 961.446 697.945 961.978 697.414 cv
962.759 697.414 977.625 697.414 978.409 697.414 cv
978.955 697.961 985.362 704.373 985.362 704.373 cv
985.362 704.373 1044.54 704.373 1046.41 704.373 cv
1046.41 706.104 1046.41 717.604 1046.41 717.604 cv
1049.59 717.604 li
1050.21 719.283 1051.8 720.496 1053.69 720.496 cv
1056.11 720.496 1058.08 718.533 1058.08 716.115 cv
1058.08 713.697 1056.11 711.734 1053.69 711.734 cv
1051.47 711.734 1049.64 713.41 1049.37 715.568 cv
1049.06 715.568 1048.74 715.568 1048.44 715.568 cv
1048.44 713.838 1048.44 702.342 1048.44 702.342 cv
1048.44 702.342 987.023 702.342 986.21 702.342 cv
cp
f
1139.01 715.9 mo
1139.01 704.053 li
1139.83 704.06 1141.05 704.072 1141.47 704.072 cv
1141.89 704.502 1148.7 711.424 1152.12 714.896 cv
1152.12 711.992 li
1142.33 702.047 li
1139.01 702.018 li
1139.01 701.809 li
1131.45 701.809 li
1131.45 715.9 li
1139.01 715.9 li
cp
f
1075.79 681.705 mo
1075.79 697.24 li
1075.79 697.24 1146.77 697.24 1147.61 697.24 cv
1147.95 697.584 1150.37 700.002 1152.12 701.744 cv
1152.12 698.871 li
1148.45 695.207 li
1148.45 695.207 1079.8 695.207 1077.82 695.207 cv
1077.82 693.779 1077.82 685.109 1077.82 681.705 cv
1080.25 681.705 li
1080.25 667.615 li
1072.68 667.615 li
1072.68 681.705 li
1075.79 681.705 li
cp
f
904.164 739.566 mo
905.162 739.566 905.973 740.379 905.973 741.371 cv
905.973 742.369 905.162 743.178 904.164 743.178 cv
903.17 743.178 902.363 742.369 902.363 741.371 cv
902.363 740.379 903.17 739.566 904.164 739.566 cv
cp
633.597 723.846 mo
632.6 723.846 631.789 723.039 631.789 722.041 cv
631.789 721.049 632.6 720.24 633.597 720.24 cv
634.587 720.24 635.394 721.049 635.394 722.041 cv
635.394 723.039 634.587 723.846 633.597 723.846 cv
cp
852.006 707.234 mo
671.744 707.234 li
671.744 707.234 658.482 720.5 657.914 721.068 cv
657.193 721.068 641.278 721.068 637.855 721.068 cv
637.411 719.123 635.673 717.66 633.597 717.66 cv
631.172 717.66 629.211 719.627 629.211 722.041 cv
629.211 724.459 631.172 726.428 633.597 726.428 cv
635.641 726.428 637.352 725.004 637.827 723.102 cv
658.755 723.102 li
658.755 723.102 672.019 709.84 672.587 709.273 cv
672.972 709.273 700.426 709.273 730.18 709.273 cv
730.18 717.432 li
736.004 717.432 li
736.004 719.164 li
749.233 719.164 li
749.233 713.326 li
736.004 713.326 li
736.004 715.396 li
734.83 715.396 733.091 715.396 732.212 715.396 cv
732.212 714.266 732.212 710.998 732.212 709.273 cv
766.878 709.273 850.721 709.273 851.165 709.273 cv
851.703 709.815 857.564 715.67 857.564 715.67 cv
857.564 715.67 878.263 715.67 880.123 715.67 cv
880.123 717.549 880.123 741.664 880.123 741.664 cv
899.813 741.664 li
899.965 743.943 901.848 745.756 904.164 745.756 cv
906.245 745.756 907.986 744.295 908.431 742.348 cv
909.921 742.348 913.007 742.348 914.146 742.348 cv
914.146 743.072 914.146 744.51 914.146 745.799 cv
908.463 745.799 li
908.463 759.543 li
920.146 759.543 li
920.146 745.799 li
916.18 745.799 li
916.18 740.313 li
908.403 740.313 li
907.927 738.41 906.216 736.994 904.164 736.994 cv
902.37 736.994 900.827 738.08 900.15 739.623 cv
896.592 739.623 883.731 739.623 882.156 739.623 cv
882.156 737.75 882.156 713.635 882.156 713.635 cv
882.156 713.635 859.217 713.635 858.405 713.635 cv
857.864 713.094 852.006 707.234 852.006 707.234 cv
cp
f
904.164 714.051 mo
905.162 714.051 905.973 714.861 905.973 715.859 cv
905.973 716.854 905.162 717.66 904.164 717.66 cv
903.17 717.66 902.363 716.854 902.363 715.859 cv
902.363 714.861 903.17 714.051 904.164 714.051 cv
cp
899.984 717.088 mo
900.52 718.904 902.18 720.24 904.164 720.24 cv
906.581 720.24 908.547 718.273 908.547 715.859 cv
908.547 713.441 906.581 711.473 904.164 711.473 cv
902.023 711.473 900.246 713.019 899.866 715.057 cv
893.154 715.057 li
893.154 713.666 li
899.013 713.666 li
899.013 699.92 li
889.557 699.92 li
889.557 713.666 li
891.122 713.666 li
891.122 723.113 li
885.779 723.113 li
885.779 736.863 li
897.466 736.863 li
897.466 723.113 li
893.154 723.113 li
893.154 717.088 li
899.984 717.088 li
cp
f
915.507 681.574 mo
916.505 681.574 917.311 682.387 917.311 683.381 cv
917.311 684.377 916.505 685.184 915.507 685.184 cv
914.513 685.184 913.7 684.377 913.7 683.381 cv
913.7 682.387 914.513 681.574 915.507 681.574 cv
cp
892.048 685.184 mo
891.059 685.184 890.248 684.377 890.248 683.381 cv
890.248 682.387 891.059 681.574 892.048 681.574 cv
893.044 681.574 893.854 682.387 893.854 683.381 cv
893.854 684.377 893.044 685.184 892.048 685.184 cv
cp
899.524 682.063 mo
896.208 682.063 li
895.644 680.291 894.002 678.998 892.048 678.998 cv
890.033 678.998 888.348 680.381 887.842 682.232 cv
878.83 682.232 li
876.264 684.799 li
861.38 684.799 li
861.38 705.934 li
876.501 705.934 li
876.501 687.44 li
877.71 686.231 879.348 684.59 879.673 684.268 cv
880.282 684.268 885.581 684.268 887.762 684.268 cv
888.174 686.258 889.938 687.76 892.048 687.76 cv
894.223 687.76 896.016 686.17 896.359 684.098 cv
899.524 684.098 li
899.524 690.469 li
908.633 690.469 li
908.633 684.098 li
911.195 684.098 li
911.543 686.17 913.336 687.76 915.507 687.76 cv
917.555 687.76 919.267 686.344 919.743 684.441 cv
950.721 684.441 li
950.721 680.67 li
954.342 680.67 li
954.342 678.082 li
958.467 678.082 li
958.467 680.67 li
966.024 680.67 li
966.024 667.275 li
958.467 667.275 li
958.467 676.051 li
954.342 676.051 li
954.342 667.275 li
946.78 667.275 li
946.78 680.67 li
948.685 680.67 li
948.685 681.238 948.685 681.893 948.685 682.41 cv
946.903 682.41 922.796 682.41 919.772 682.41 cv
919.324 680.459 917.586 678.998 915.507 678.998 cv
913.553 678.998 911.914 680.291 911.349 682.063 cv
908.633 682.063 li
908.633 677.066 li
899.524 677.066 li
899.524 682.063 li
cp
f
1064.78 656.318 mo
1065.77 656.318 1066.58 657.129 1066.58 658.119 cv
1066.58 659.117 1065.77 659.924 1064.78 659.924 cv
1063.78 659.924 1062.97 659.117 1062.97 658.119 cv
1062.97 657.129 1063.78 656.318 1064.78 656.318 cv
cp
1063.89 662.412 mo
1063.89 667.615 li
1061.69 667.615 li
1061.69 681.705 li
1069.24 681.705 li
1069.24 667.615 li
1065.92 667.615 li
1065.92 662.328 li
1067.5 661.9 1068.74 660.625 1069.07 659.01 cv
1152.12 659.01 li
1152.12 656.979 li
1068.99 656.979 li
1068.48 655.119 1066.8 653.74 1064.78 653.74 cv
1062.36 653.74 1060.4 655.703 1060.4 658.119 cv
1060.4 660.234 1061.9 662.002 1063.89 662.412 cv
cp
f
945.033 896.092 mo
946.026 896.092 946.833 896.904 946.833 897.898 cv
946.833 898.893 946.026 899.701 945.033 899.701 cv
944.035 899.701 943.227 898.893 943.227 897.898 cv
943.227 896.904 944.035 896.092 945.033 896.092 cv
cp
1046.07 910.527 mo
1046.07 911.525 1045.26 912.332 1044.26 912.332 cv
1043.27 912.332 1042.46 911.525 1042.46 910.527 cv
1042.46 909.533 1043.27 908.723 1044.26 908.723 cv
1045.26 908.723 1046.07 909.533 1046.07 910.527 cv
cp
873.377 886.041 mo
872.379 886.041 871.574 885.231 871.574 884.236 cv
871.574 883.244 872.379 882.432 873.377 882.432 cv
874.371 882.432 875.181 883.244 875.181 884.236 cv
875.181 885.231 874.371 886.041 873.377 886.041 cv
cp
873.377 879.854 mo
870.959 879.854 868.992 881.824 868.992 884.236 cv
868.992 886.654 870.959 888.617 873.377 888.617 cv
875.296 888.617 876.916 887.365 877.507 885.643 cv
883.755 885.643 925.714 885.643 926.48 885.643 cv
927.055 886.215 942.163 901.326 942.163 901.326 cv
942.238 901.248 li
943 901.883 943.963 902.277 945.033 902.277 cv
947.048 902.277 948.733 900.902 949.241 899.039 cv
958.74 899.039 1031.2 899.039 1031.99 899.039 cv
1032.43 899.486 1038.39 905.447 1040.81 907.867 cv
1040.24 908.607 1039.88 909.521 1039.88 910.527 cv
1039.88 912.945 1041.85 914.91 1044.26 914.91 cv
1046.68 914.91 1048.65 912.945 1048.65 910.527 cv
1048.65 908.113 1046.68 906.146 1044.26 906.146 cv
1043.59 906.146 1042.96 906.31 1042.4 906.582 cv
1032.83 897.008 li
949.323 897.008 li
948.907 895.019 947.14 893.518 945.033 893.518 cv
942.914 893.518 941.144 895.019 940.736 897.021 cv
927.318 883.606 li
877.691 883.606 li
877.383 881.486 875.575 879.854 873.377 879.854 cv
cp
f
813.836 877.789 mo
813.836 876.799 814.644 875.992 815.639 875.992 cv
816.636 875.992 817.445 876.799 817.445 877.789 cv
817.445 878.787 816.636 879.598 815.639 879.598 cv
814.644 879.598 813.836 878.787 813.836 877.789 cv
cp
1003.28 908.981 mo
1004.28 908.981 1005.09 909.787 1005.09 910.785 cv
1005.09 911.779 1004.28 912.59 1003.28 912.59 cv
1002.29 912.59 1001.47 911.779 1001.47 910.785 cv
1001.47 909.787 1002.29 908.981 1003.28 908.981 cv
cp
820.023 877.789 mo
820.023 875.375 818.054 873.414 815.639 873.414 cv
813.225 873.414 811.255 875.375 811.255 877.789 cv
811.255 879.762 812.572 881.412 814.362 881.965 cv
814.362 892.254 li
814.362 892.254 916.794 892.254 917.628 892.254 cv
918.209 892.836 937.477 912.1 937.477 912.1 cv
999.122 912.1 li
999.688 913.871 1001.33 915.168 1003.28 915.168 cv
1005.7 915.168 1007.67 913.203 1007.67 910.785 cv
1007.67 908.367 1005.7 906.406 1003.28 906.406 cv
1001.11 906.406 999.316 907.996 998.975 910.068 cv
990.66 910.068 939.083 910.068 938.318 910.068 cv
937.741 909.492 918.473 890.223 918.473 890.223 cv
918.473 890.223 818.394 890.223 816.398 890.223 cv
816.398 888.904 816.398 883.981 816.398 882.1 cv
818.45 881.738 820.023 879.949 820.023 877.789 cv
cp
f
692.435 957.695 mo
691.441 957.695 690.631 956.887 690.631 955.893 cv
690.631 954.896 691.441 954.088 692.435 954.088 cv
693.433 954.088 694.24 954.896 694.24 955.893 cv
694.24 956.887 693.433 957.695 692.435 957.695 cv
cp
692.435 951.512 mo
690.021 951.512 688.054 953.477 688.054 955.893 cv
688.054 958.307 690.021 960.271 692.435 960.271 cv
694.852 960.271 696.818 958.307 696.818 955.893 cv
696.818 954.668 696.313 953.57 695.509 952.773 cv
705.79 941.498 li
706.787 941.498 li
706.787 940.404 li
706.848 940.34 li
706.787 940.285 li
706.787 920.535 li
700.772 920.535 li
700.772 941.498 li
703.038 941.498 li
693.717 951.721 li
693.31 951.596 692.884 951.512 692.435 951.512 cv
cp
f
549.643 941.844 mo
549.643 940.85 550.451 940.039 551.449 940.039 cv
552.44 940.039 553.253 940.85 553.253 941.844 cv
553.253 942.84 552.44 943.648 551.449 943.648 cv
550.451 943.648 549.643 942.84 549.643 941.844 cv
cp
621.557 940.039 mo
622.55 940.039 623.361 940.85 623.361 941.844 cv
623.361 942.84 622.55 943.648 621.557 943.648 cv
620.56 943.648 619.75 942.84 619.75 941.844 cv
619.75 940.85 620.56 940.039 621.557 940.039 cv
cp
555.695 942.857 mo
617.305 942.857 li
617.765 944.785 619.49 946.225 621.557 946.225 cv
623.97 946.225 625.94 944.262 625.94 941.844 cv
625.94 939.43 623.97 937.463 621.557 937.463 cv
619.49 937.463 617.765 938.902 617.305 940.828 cv
555.695 940.828 li
555.235 938.902 553.513 937.463 551.449 937.463 cv
549.028 937.463 547.065 939.43 547.065 941.844 cv
547.065 944.262 549.028 946.225 551.449 946.225 cv
553.513 946.225 555.239 944.785 555.695 942.857 cv
cp
f
797.598 966.459 mo
798.593 966.459 799.404 967.273 799.404 968.264 cv
799.404 969.26 798.593 970.068 797.598 970.068 cv
796.602 970.068 795.793 969.26 795.793 968.264 cv
795.793 967.273 796.602 966.459 797.598 966.459 cv
cp
750.688 963.365 mo
749.693 963.365 748.881 962.559 748.881 961.565 cv
748.881 960.566 749.693 959.758 750.688 959.758 cv
751.684 959.758 752.491 960.566 752.491 961.565 cv
752.491 962.559 751.684 963.365 750.688 963.365 cv
cp
716.147 963.365 mo
715.156 963.365 714.346 962.559 714.346 961.565 cv
714.346 960.566 715.156 959.758 716.147 959.758 cv
717.144 959.758 717.956 960.566 717.956 961.565 cv
717.956 962.559 717.144 963.365 716.147 963.365 cv
cp
751.575 957.268 mo
751.575 941.498 li
753.526 941.498 li
753.526 920.535 li
747.512 920.535 li
747.512 941.498 li
749.54 941.498 li
749.54 957.352 li
747.762 957.836 746.439 959.414 746.331 961.318 cv
720.504 961.318 li
720.377 959.018 718.482 957.18 716.147 957.18 cv
713.732 957.18 711.766 959.15 711.766 961.565 cv
711.766 963.979 713.732 965.94 716.147 965.94 cv
717.926 965.94 719.454 964.875 720.138 963.35 cv
746.697 963.35 li
747.385 964.875 748.909 965.94 750.688 965.94 cv
752.487 965.94 754.04 964.848 754.712 963.287 cv
759.627 963.287 790.681 963.287 791.442 963.287 cv
791.775 963.623 793.116 964.963 793.967 965.815 cv
793.494 966.512 793.218 967.356 793.218 968.264 cv
793.218 970.68 795.18 972.644 797.598 972.644 cv
800.013 972.644 801.978 970.68 801.978 968.264 cv
801.978 965.846 800.013 963.883 797.598 963.883 cv
796.826 963.883 796.112 964.098 795.48 964.451 cv
792.283 961.25 li
755.037 961.25 li
754.897 959.283 753.466 957.664 751.575 957.268 cv
cp
f
805.071 945.971 mo
805.071 952.154 li
823.628 952.154 li
823.628 950.336 li
840.29 950.336 li
840.29 950.336 864.195 926.432 864.776 925.85 cv
865.582 925.85 891.07 925.85 891.809 925.85 cv
892.293 926.279 896.211 929.75 896.782 930.254 cv
896.782 930.746 896.782 932.127 896.782 932.91 cv
894.774 932.91 li
894.774 953.871 li
900.785 953.871 li
900.785 932.91 li
898.815 932.91 li
898.815 929.338 li
892.577 923.816 li
863.935 923.816 li
863.935 923.816 840.028 947.719 839.446 948.301 cv
838.777 948.301 827.344 948.301 823.628 948.301 cv
823.628 945.971 li
805.071 945.971 li
cp
f
1000.1 932.91 mo
1000.1 953.871 li
1007.84 953.871 li
1007.84 932.91 li
1000.1 932.91 li
cp
f
982.919 932.91 mo
976.904 932.91 li
976.904 953.871 li
982.919 953.871 li
982.919 932.91 li
cp
f
992.455 960.531 mo
993.453 960.531 994.262 961.342 994.262 962.334 cv
994.262 963.328 993.453 964.143 992.455 964.143 cv
991.461 964.143 990.652 963.328 990.652 962.334 cv
990.652 961.342 991.461 960.531 992.455 960.531 cv
cp
971.406 953.871 mo
971.406 932.91 li
965.395 932.91 li
965.395 953.871 li
967.639 953.871 li
967.639 970.277 li
973.646 976.285 li
986.889 976.285 li
993.171 971.154 li
993.171 966.648 li
995.248 966.299 996.84 964.504 996.84 962.334 cv
996.84 959.922 994.873 957.955 992.455 957.955 cv
990.039 957.955 988.071 959.922 988.071 962.334 cv
988.071 964.289 989.369 965.928 991.138 966.492 cv
991.138 967.613 991.138 969.627 991.138 970.188 cv
990.523 970.69 986.637 973.861 986.166 974.252 cv
985.507 974.252 975.253 974.252 974.494 974.252 cv
973.99 973.748 970.176 969.93 969.676 969.43 cv
969.676 968.756 969.676 957.389 969.676 953.871 cv
971.406 953.871 li
cp
f
960.068 932.91 mo
954.055 932.91 li
954.055 953.871 li
960.068 953.871 li
960.068 932.91 li
cp
f
889.445 953.871 mo
889.445 932.91 li
883.43 932.91 li
883.43 942.246 li
855.3 942.246 li
855.3 942.246 836.869 960.678 836.286 961.25 cv
835.624 961.25 826.55 961.25 823.628 961.25 cv
823.628 959.371 li
805.071 959.371 li
805.071 965.559 li
823.628 965.559 li
823.628 963.287 li
837.134 963.287 li
837.134 963.287 855.561 944.854 856.143 944.275 cv
856.859 944.275 878.192 944.275 883.43 944.275 cv
883.43 953.871 li
889.445 953.871 li
cp
f
801.297 931.004 mo
845.857 931.004 li
845.857 931.004 856.371 919.514 856.941 918.889 cv
857.809 918.889 895.725 918.889 896.54 918.889 cv
897.093 919.445 907.759 930.115 908.315 930.666 cv
908.315 931.057 908.315 932.117 908.315 932.91 cv
906.457 932.91 li
906.457 953.871 li
912.472 953.871 li
912.472 932.91 li
910.351 932.91 li
910.351 929.828 li
897.38 916.856 li
856.046 916.856 li
856.046 916.856 845.536 928.344 844.961 928.973 cv
844.169 928.973 808.144 928.973 801.297 928.973 cv
801.297 920.535 li
795.279 920.535 li
795.279 941.498 li
801.297 941.498 li
801.297 931.004 li
cp
f
736.169 920.535 mo
736.169 941.498 li
742.184 941.498 li
742.184 920.535 li
736.169 920.535 li
cp
f
992.455 931.664 mo
991.461 931.664 990.652 930.856 990.652 929.857 cv
990.652 928.861 991.461 928.053 992.455 928.053 cv
993.453 928.053 994.262 928.861 994.262 929.857 cv
994.262 930.856 993.453 931.664 992.455 931.664 cv
cp
992.455 925.479 mo
990.039 925.479 988.071 927.44 988.071 929.857 cv
988.071 930.731 988.337 931.539 988.779 932.223 cv
988.591 932.223 li
988.591 953.871 li
996.324 953.871 li
996.324 932.223 li
996.136 932.223 li
996.574 931.539 996.84 930.731 996.84 929.857 cv
996.84 927.44 994.873 925.479 992.455 925.479 cv
cp
f
557.634 937.332 mo
556.64 937.332 555.829 936.521 555.829 935.531 cv
555.829 934.535 556.64 933.727 557.634 933.727 cv
558.627 933.727 559.438 934.535 559.438 935.531 cv
559.438 936.521 558.627 937.332 557.634 937.332 cv
cp
673.277 945.971 mo
654.373 945.971 li
654.373 948.43 li
653.68 948.43 652.746 948.43 652.083 948.43 cv
652.083 946.688 652.083 934.768 652.083 934.768 cv
561.938 934.768 li
561.575 932.717 559.789 931.15 557.634 931.15 cv
555.216 931.15 553.253 933.115 553.253 935.531 cv
553.253 937.941 555.216 939.912 557.634 939.912 cv
559.602 939.912 561.254 938.592 561.803 936.807 cv
570.582 936.807 648.173 936.807 650.051 936.807 cv
650.051 938.547 650.051 950.465 650.051 950.465 cv
654.373 950.465 li
654.373 951.981 li
673.277 951.981 li
673.277 945.971 li
cp
f
757.903 948.932 mo
757.903 949.93 757.094 950.738 756.101 950.738 cv
755.102 950.738 754.296 949.93 754.296 948.932 cv
754.296 947.934 755.102 947.125 756.101 947.125 cv
757.094 947.125 757.903 947.934 757.903 948.932 cv
cp
1020.26 839.404 mo
1020.26 839.404 1002.73 856.934 1002.15 857.51 cv
1001.32 857.51 958.4 857.51 958.4 857.51 cv
958.4 857.51 951.889 864.018 951.343 864.563 cv
950.504 864.563 802.12 864.563 802.12 864.563 cv
802.12 864.563 802.12 888.816 802.12 890.697 cv
800.221 890.697 772.045 890.697 772.045 890.697 cv
755.019 907.721 li
755.019 944.703 li
753.128 945.185 751.718 946.893 751.718 948.932 cv
751.718 951.348 753.683 953.315 756.101 953.315 cv
758.514 953.315 760.48 951.348 760.48 948.932 cv
760.48 946.842 759.011 945.096 757.053 944.658 cv
757.053 939.41 757.053 909.315 757.053 908.565 cv
757.615 908.002 772.325 893.289 772.89 892.729 cv
773.706 892.729 804.155 892.729 804.155 892.729 cv
804.155 892.729 804.155 868.481 804.155 866.6 cv
806.162 866.6 952.188 866.6 952.188 866.6 cv
952.188 866.6 958.691 860.086 959.24 859.543 cv
960.068 859.543 1003 859.543 1003 859.543 cv
1003 859.543 1020.53 842.014 1021.1 841.435 cv
1021.84 841.435 1126.68 841.435 1150.59 841.435 cv
1150.59 839.404 li
1020.26 839.404 li
cp
f
761.786 915.777 mo
761.786 920.535 li
759.885 920.535 li
759.885 941.498 li
765.896 941.498 li
765.896 920.535 li
763.818 920.535 li
763.818 919.047 763.818 917.065 763.818 916.617 cv
764.387 916.053 781.019 899.418 781.587 898.85 cv
782.422 898.85 914.017 898.85 914.844 898.85 cv
915.418 899.418 943.908 927.416 944.495 927.996 cv
944.495 928.565 944.495 931.543 944.495 932.91 cv
942.541 932.91 li
942.541 953.871 li
948.554 953.871 li
948.554 932.91 li
946.53 932.91 li
946.53 927.144 li
915.678 896.818 li
780.742 896.818 li
761.786 915.777 li
cp
f
786.546 905.555 mo
787.383 905.555 906.981 905.555 907.815 905.555 cv
908.391 906.127 931.583 929.32 932.156 929.896 cv
932.156 930.357 932.156 931.93 932.156 932.91 cv
930.513 932.91 li
930.513 953.871 li
936.525 953.871 li
936.525 932.91 li
934.191 932.91 li
934.191 929.051 li
908.655 903.523 li
785.705 903.523 li
773.546 915.68 li
773.546 920.535 li
771.227 920.535 li
771.227 941.498 li
777.238 941.498 li
777.238 920.535 li
775.578 920.535 li
775.578 919.016 775.578 916.971 775.578 916.523 cv
776.127 915.975 786.002 906.102 786.546 905.555 cv
cp
f
792.604 912.574 mo
793.438 912.574 902.408 912.574 903.241 912.574 cv
903.81 913.139 919.736 929.068 920.3 929.637 cv
920.3 930.09 920.3 931.777 920.3 932.91 cv
918.656 932.91 li
918.656 953.871 li
924.672 953.871 li
924.672 932.91 li
922.333 932.91 li
922.333 928.797 li
904.082 910.539 li
791.764 910.539 li
785.499 916.807 li
785.499 920.535 li
783.422 920.535 li
783.422 941.498 li
789.436 941.498 li
789.436 920.535 li
787.53 920.535 li
787.53 919.393 787.53 918.041 787.53 917.652 cv
788.035 917.146 792.101 913.08 792.604 912.574 cv
cp
f
724.658 920.535 mo
724.658 941.498 li
726.216 941.498 li
726.216 942.016 726.216 942.559 726.216 942.84 cv
725.667 943.389 716.084 952.971 715.535 953.523 cv
714.749 953.523 703.615 953.523 703.615 953.523 cv
703.615 953.523 690.556 966.582 689.986 967.154 cv
689.148 967.154 562.109 967.154 562.109 967.154 cv
562.109 967.154 555.198 974.059 554.652 974.609 cv
554.049 974.609 544.917 974.609 540.403 974.609 cv
540.403 976.641 li
555.493 976.641 li
555.493 976.641 562.401 969.732 562.954 969.184 cv
563.787 969.184 690.825 969.184 690.825 969.184 cv
690.825 969.184 703.887 956.125 704.454 955.555 cv
705.241 955.555 716.377 955.555 716.377 955.555 cv
728.248 943.68 li
728.248 941.498 li
730.674 941.498 li
730.674 920.535 li
724.658 920.535 li
cp
f
991.941 886.557 mo
990.947 886.557 990.137 885.748 990.137 884.754 cv
990.137 883.76 990.947 882.945 991.941 882.945 cv
992.935 882.945 993.746 883.76 993.746 884.754 cv
993.746 885.748 992.935 886.557 991.941 886.557 cv
cp
1115.31 862.99 mo
1035.94 862.99 li
1035.94 862.99 1016.07 882.859 1015.49 883.432 cv
1014.81 883.432 1000.76 883.432 996.097 883.432 cv
995.536 881.664 993.895 880.371 991.941 880.371 cv
989.523 880.371 987.558 882.334 987.558 884.754 cv
987.558 887.168 989.523 889.133 991.941 889.133 cv
994.112 889.133 995.905 887.543 996.253 885.471 cv
1016.33 885.471 li
1016.33 885.471 1036.2 865.598 1036.78 865.023 cv
1037.61 865.023 1113.64 865.023 1114.46 865.023 cv
1114.94 865.502 1141.14 891.699 1150.59 901.143 cv
1150.59 898.269 li
1115.31 862.99 li
cp
f
1103.8 854.596 mo
1102.81 854.596 1102 853.787 1102 852.791 cv
1102 851.801 1102.81 850.984 1103.8 850.984 cv
1104.8 850.984 1105.61 851.801 1105.61 852.791 cv
1105.61 853.787 1104.8 854.596 1103.8 854.596 cv
cp
1021.06 854.854 mo
1020.07 854.854 1019.26 854.047 1019.26 853.049 cv
1019.26 852.057 1020.07 851.248 1021.06 851.248 cv
1022.06 851.248 1022.87 852.057 1022.87 853.049 cv
1022.87 854.047 1022.06 854.854 1021.06 854.854 cv
cp
909.717 873.926 mo
908.727 873.926 907.916 873.119 907.916 872.121 cv
907.916 871.133 908.727 870.32 909.717 870.32 cv
910.714 870.32 911.524 871.133 911.524 872.121 cv
911.524 873.119 910.714 873.926 909.717 873.926 cv
cp
1120.9 851.906 mo
1108.1 851.906 li
1107.68 849.91 1105.92 848.408 1103.8 848.408 cv
1101.66 848.408 1099.88 849.955 1099.5 851.988 cv
1025.3 851.988 li
1024.83 850.086 1023.12 848.668 1021.06 848.668 cv
1018.65 848.668 1016.68 850.633 1016.68 853.049 cv
1016.68 854.232 1017.16 855.299 1017.92 856.086 cv
1014.44 859.576 1003.43 870.582 1002.95 871.06 cv
1002.16 871.06 923.61 871.06 913.957 871.06 cv
913.478 869.162 911.768 867.742 909.717 867.742 cv
907.303 867.742 905.34 869.705 905.34 872.121 cv
905.34 874.539 907.303 876.502 909.717 876.502 cv
911.799 876.502 913.538 875.043 913.979 873.092 cv
1003.79 873.092 li
1019.7 857.19 li
1020.13 857.334 1020.59 857.428 1021.06 857.428 cv
1023.15 857.428 1024.88 855.971 1025.33 854.021 cv
1099.62 854.021 li
1100.15 855.84 1101.82 857.174 1103.8 857.174 cv
1105.82 857.174 1107.51 855.795 1108.02 853.94 cv
1110.98 853.94 1119.37 853.94 1120.04 853.94 cv
1120.59 854.514 1147.29 882.385 1150.59 885.836 cv
1150.59 882.896 li
1120.9 851.906 li
cp
f
580.317 917.742 mo
579.319 917.742 578.51 916.934 578.51 915.94 cv
578.51 914.943 579.319 914.137 580.317 914.137 cv
581.308 914.137 582.119 914.943 582.119 915.94 cv
582.119 916.934 581.308 917.742 580.317 917.742 cv
cp
661.778 909.639 mo
661.778 909.639 661.778 914.402 661.778 915.826 cv
659.938 915.826 594.179 915.826 584.684 915.826 cv
584.623 913.465 582.693 911.563 580.317 911.563 cv
577.899 911.563 575.933 913.523 575.933 915.94 cv
575.933 918.356 577.899 920.322 580.317 920.322 cv
582.04 920.322 583.524 919.313 584.236 917.861 cv
663.81 917.861 li
663.81 917.861 663.81 913.096 663.81 911.672 cv
665.73 911.672 713.086 911.672 715.001 911.672 cv
715.001 912.896 715.001 917.871 715.001 920.535 cv
713.316 920.535 li
713.316 941.498 li
719.331 941.498 li
719.331 920.535 li
717.036 920.535 li
717.036 909.639 li
661.778 909.639 li
cp
f
569.23 924.19 mo
568.236 924.19 567.43 923.375 567.43 922.385 cv
567.43 921.389 568.236 920.58 569.23 920.58 cv
570.224 920.58 571.035 921.389 571.035 922.385 cv
571.035 923.375 570.224 924.19 569.23 924.19 cv
cp
667.064 915.955 mo
667.064 915.955 667.064 919.912 667.064 921.24 cv
665.174 921.24 582.048 921.24 573.444 921.24 cv
572.936 919.381 571.248 918.002 569.23 918.002 cv
566.813 918.002 564.852 919.969 564.852 922.385 cv
564.852 924.803 566.813 926.766 569.23 926.766 cv
571.341 926.766 573.108 925.264 573.523 923.275 cv
669.097 923.275 li
669.097 923.275 669.097 919.313 669.097 917.988 cv
670.883 917.988 689.502 917.988 691.288 917.988 cv
691.288 918.631 691.288 919.654 691.288 920.535 cv
689.433 920.535 li
689.433 941.498 li
695.448 941.498 li
695.448 920.535 li
693.324 920.535 li
693.324 915.955 li
667.064 915.955 li
cp
f
677.92 920.535 mo
677.92 928.842 li
540.403 928.842 li
540.403 930.881 li
677.92 930.881 li
677.92 941.498 li
683.933 941.498 li
683.933 920.535 li
677.92 920.535 li
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 19.1.0
%%For: (user) ()
%%Title: (plata_52.eps)
%%CreationDate: 4/12/2016 2:17 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6BieNLdPh#P5&9h@E!?r<JD'Mo,f/-#OI/:`O?(83)fY9\&)EfJiVDkZQ)$!s[Va[P#MMOlS`fEr>cq@18Yo<V.[:bb2I$,l
%[FRItD#M&90f$qLAJc<Y+6/F^/1eH6*CS_!BF:k6^C`>Mqjgb6l?;d$HE5M#c/aA@S!i+'3W)e#I#@4^emFiiHF\&&hrJt9P@CX8
%'jI4u\X2il"p=6+p@8#4Hj'rJDhe-:3t6]MUL"J2!PDRG#MY`T8?<a/Dt2":FC+;,3os\Mebo+D8TQs7B71W)bPVTQ[[Jr0IuEf+
%V@];`qt2!`1S^o,ceaioZ?V\gCEq8=?[5J0ao5q/s7(T,JHY!4/XuP8'\VDOppZNn1Cc'NJ%pMF=Id/_16)`,>N,a+TE%@q=XC<V
%O.o+U?LC7`ZTQ.H\s[./s3Z>7`6\aJco.u,"8+K%,9)B*+S<"#"on;6XD&&Oe^)X8[HOgEbc@[INB3dqF.M/rmD%"b;EMf-#Q8tu
%H/G^rT]J:jKtK'^>LfY^oSPr>?=plD"D.TJ'M%91H.2qMCt8F8's!`fQL_KA.$]9PW-G0fA?R"2O'9T*WZ[]=%ICYDC]b6tcZk`j
%GF'C^9J\;^FfOAW/<E0Ag;b8g#?BRFeBVjS<@`_l$U[^'l#rt*<D)O\R=P<mZ-ER7s2+R26sW+L?8$'5PrGh/r%:ij,J/;Y7;k&a
%q,RSZTo8s+"@[7G(oXph`NSPKlo/>"D[T\bE:UF@+4Qb#plGHfjhCsHqt3/N\D:llgH3ZdefXopbZ.lF;$O&NM),"\-^dEschROd
%Q>>k8f6e+H$:_O7^sT:HT2E;P-B'rj)NO^fEjOQCYTG..;XI9TV$pf^Q:Mkc5,R<GIG9c34iW3',kt_45^l=(e1m&n3\X=/RD%(A
%n./pCCg6&#;m&B`i4nUN4u6QJ:,_r1\q4M&fC).``VoPcnC_6^>_*rsea)]8(h!"T%*la_VfnN/Au/[P5WFL`42&C4SP-%d2(C,W
%SVHCfA^mbc,hWOsIpousmTmVE&iH^qfh;788cqm?30o;/^'lT:hC5oeC6d"TVr,2/*48smaaM8!Z6]8cq[(#2.7PuU2#!GDT#";.
%6*`b[Q2I*X/kpdPX<dR\RS&DUAuf*f;)uKa>Y0#3<uH+o<'*gNN/,.eVlb9IgQ:2>Z4A1X<iJTE^Uq0-Q.8!uYf[Dj,Q0"C:'/.,
%/)>J"bhdd#kP"=2XU;ajfIJo7n\<LS47)jN=qb^^k-/4Y7;@@^)JsS<1PZe.G/Th0VE@g/h%Q/ekq'EYI-piH)Z7Xnj))#@4`m)m
%jPQA*pt*RBdTc3qf\_Bd"eD-'kP$huX^r:JDUb0Fj"dtc8.LU]eo1p$F.H&d8Q30ueZ57>aXF77apuX]njiURml-+55;&CZZ1'$F
%EX5@.k;q"_ja(91>su*lMr"`NB">b"TE[.0dR9#b(MZbRBa!8%KLmE2h^QM=Ha6*8SO/"eitETFF-<T50?P[)oqKs9.:b`=E=(*'
%Sg[b'?SBkGZX%BIQU3ZkH7>C5P@bJTrQZjnA=JkJqUXV4?/$onq,dc7[LRXAn4Bc!Vp":CY96PPCXhAWcFR>^B"tTPl';9B,nqXH
%S(Z"(me(%[QFg#!'E.3KWhqMF$2SWJLVrG(iAsiF?Vf^&`.TS!c)<[m=4R+m,8hM-B/E/MYAX0@F:.m.f*U,F7r54M7AhQ^EG=*7
%X5BmEgO,ih@ce^X^G^-l-[jLoR\S*#/r)=Xn\Wjb?+)4U0jO.F(<fpl^&fg=kUa%u?cl*93:j!%,`+3,90$Y!Pl#YUjj#nunE&tS
%>IEmH0fK8o\J,-e$5[b4G)k^#\bTEH^6Y7ljlU?hq-"7E5L+)Ij\gpk-#:&&CBdg\l%GH%p"X0OB2h+.-s'W&h=^m*1p2&t9Z\'\
%1GDV%=:KA!eO&n@NCE?6>3&NNEQN?,muNp:VV#\@0)*!6>.M1(>.ViLRo?7i22tbBNmY#-OWf]aYE%#3V]-ZjDnT=eBAKM1`FtXu
%Z+e7hS'"T77opP&q't_\a^5jZf.G]=o=LT+Dc"f?c-]908NWsElfCmUea3"Pbqr$OprV1L1XZZ@oln$uN,Bo6qIEh4V?m(_p,cpK
%8p"/aVpe1rHu@F5-S\FppA1O`l5q_DP@dOU?,K2f-7=4!C`9:kR.0c&/F$/jn_Y$ir-.Kk`dXu>m$6#dE%TmO2%IU\:_J5p<'!/u
%G9i:(&5W4gEl0JuS"'dYG0`k:Rce:\*0Xt8;QL9Ze*,BE(f`)G%!EO,m.&2Z@X>a.[>C[#i(UQfU\[TH_&T'Uj\Dq%d>3*_%[<l+
%At69Hnf,gF'0eG,CH[uq?p6UM:Q7SQF6cPDH>bRq`n@&t;<L'YQCLQc-iH<"c2P6%>0Nahk#"<0`A)!Sb/[4"bG9&lVUDXShpfm;
%SE*nVqIV+4rgVo?DLQM6(@H%,fbE&L46:4ZT;G%d_Qg4#B0^=72,#kePAB8_$(":._mD!GG?^X3"m.g=0hG*t11[i;=IM;ZF#,_B
%"+T<if*kt1Rr[P33XZ7tQ=hBaFr&)A$>l6?!C"J"YVUMYr\T>42=^AiQ-l/pYs-Vc$;s:U:19$3'OtcJ;\Z#^$e%$(9R25AdnrCl
%dq#Eg;B-5.0?VOO<'Q?,lnO#IVZd0pN(^liMN`[^b;]4<\E$;VKAEn9/B3(H@MX?G<8QBj8,/l7D::Dt'PcHI]j-E`0q-p=HRbq`
%7N'jT3,4qCQ-LrAY>_W.AHr,j[6Li2QMm5kfo?@dffVsBWD9.9dq7Y81M'W*M932EV^[q.'5nL]fsOBn*GMZa:M%t;'H6[`\b197
%1)T874jfQB@])E(Nigp%;)q)+1+[GqplJtmJJ@@YK^(tLA\DEMEj])g-iHq6V+AWQ<O:4L,>tAdDtL4mkLP;1`8_I\Kfu6k`J)'<
%@U(R[:-U?SbOrWm^IS*u\de%l4"6.;V];$o.;"6>/'Vh/2:9nG=f9e@A&T>=f_QeGC/r_.k2K?M>8="Hj"remjTQ"&Z*#Y#buu?W
%+^Va\)U(HU[`V93U'1'YP_iM8V9u/SgV0%FU.j#7Ch4A+;,S:f8K[7S*Joq+);Z'^U<N,ULM717ZqW\^*fEpaa.eNUBHE*&:W\r4
%BeUj<-o9g>V"3Ci58GQ)Bq)QaAfcjcBks9-N(#K$"gKJT4J.Hhealn-M6h,c=boL<A_/8WFNeJN8fA/.[S_ODV_lj>;j5@=ggIpW
%ZS/4<H![LQ_KepN?XefTl%hF'`AhWe;u$fB4!t2t:Z^Z'2c6Jmr^sNM1+eoCAhm$)*@AcIX'r\EQC59h]89hbk&r=F'?ojtgoeoh
%g/Q_4XUZIpGAXeD[0Sj:DUmlMmGDd2k0D[S3GW]:2RdH$C9'g"KMHDFb[MKM>Dad&?V`JUl2YceN,Ch<r:r$=d00&L1`o3/@C0D=
%40%c$bJ-hbiARQKAD@m8I(U7+;T85>g2T\AIp4<i,B]_MCLk/?BhR;\CK@4:>''>RRp&3Z4"Bt3WKI5mg2Vu#D.@1Hlc#=UV4$MC
%\JqfVZi9Ql1rBaBR$5scBi9cbCGVZCVb8f-RUp#'(]J2\i;_BdDts@ai.oP4go)(I$KNNO?RF#T3_f@%oqX\DZh:EW5HnId?tK3o
%L[gF>758:b/h)e6UmloS+!")TrT%"Sh<Ml*Fg"#EJ5<EnaN)_'V%lP+a*3q@_(Nd,?YO$f'aCJU@#o:BO@"\!k@0kgc=G*PWin5s
%bV:`7413p6,O2*[]i-dMhTQ7$aXik6oq/6EEX)+NhV'58N<^%Sm+\KG#+FHAS*fh)=ibJ@5QB7ZS=ffkD414qmhe4:q7@pDoABB>
%n,3+XL*FmgIja[^QT88p!c/`i.35VfRI>eLO%d,P5<nb1TD=L_a(+D\I&jZ]Z[SA+2^[AiUu!=Z9US[\UE5b$^S?+gp"/l2eSF=a
%4Wmk0?jb9qdNq,Fi,02hRVt("_/-!R%Kg'sc2U@Dc24%f=;Rjb8tC@8Xnfn2[]-Cd^ZBaqq$u)*LMUcnc$.7+BSS.(__L$qS&B0L
%q1Gr9[S=cTr3c,k'K+LX[u/aEm])hef)DbYl;;K%'33XfST8f4\b:FNC`FmJ;XA!bFnf%\N>b,F2VSe=OK&08>,0soos1<(`+-qE
%DpoD8C`QWp3GY_$.0[HD.#H&e.b-`-j-/;B;um6#F+Z@Ii$[QS+O^_.olhAQ],M'T4rKuf4_cck-?bX9Rk>Afkn9&0Z/5GH1o!+h
%GaWK_bVrkj)_^fBQheYEI,j=\S>gIsKl=V[>o:$M1>d>Ei"]r(MKShRKe1G,OQIKQ2lt)o=?K=N%arQIR^gb.G2a>%ZZ_OU+uUG/
%arjB%ZACCE![^(`6lHs*aX/>YP&R"/@_?d)SNMBVfo^nc0L+-(^&;tgj;HNrEh$Ni2X-Fc4;61S9TJ^<9G9NKVDl:(5;1l4,s4&+
%j#dFmCh7"c6,1^O0?pgVNCuue4"#e"j_F+bR<X$jStme-8pOI?Z_tk]2S[O$0eU;l?Y<1):h4^5e^<A,rZ7\HV3)q?CTED-ZA6K=
%>HcW2=Z>X)B]qk7PU:\0`r$mAn_^h\pqQIhCb>o=X_28=Z0_8nD<=l4VJRkhYFub0]#Z$d33F.FFOH!:=07o@HqVhG9:0;>9d*1K
%IrLA7?ofIZ3.tf6#Lu#X/>SB!mpl:]p+a5U5/n;=Br6>$,FF%1N&3<6pG""<V)rO(I_LjthoD+kSsf%WbkEihA01nTBYAGdfW+cD
%C_kT7B:X(>=0B;Te^B+*oC&i!(s.4X,#r5`F.mWt+\?1d]l;W)odZa1#dmYgdN-m'WNK!3eDh/o9`hD.^Te$]ld&O.;;uR%ARn`8
%9fakMULGVIeW6/a1eY:\r?U-OH(q!`$#uPMBV&mNSnKOsA2f^/L=-q9H(L_''?#.e$lR_4NsPD^C#&O8KKCGlSQ6u[/B,]M-->PP
%I2_#*cV;glh:9Nk;872+YCfiDc:u-CbC5UhffeRMeiQQO1=!#URpGTRDj7,%rQeN[="83e,iC24-kdZiPt$GK&,&n"oZ=&drR8,$
%4$QP4d7Ct:gp1WU:719?lkIi-;n.U"bjHf9%^4QDg6o/+->P3":<Ve#\abWEq.af]R[^MCk,Z&_Xl`OV=7att/?IuG0Ka0Kf5iCH
%7SMce/qm9rjkP5D2dakTQZMc[gjD,kBY(OXS4b0RPUu!`bo'X1V%[>/QZO<QXm120S7]X-YNKM+4dY^do;)-RXM#j@@Y$>].krd%
%S#O^adCSV+r&!)XH(rW1JrFu,N%lU!(scf9*SaZoi:ZAL]j/*QbAaE1/luf$hlE`"$G4"/oea;1Jo4i)R.=POM)Wg2jd<Jb<(+]p
%b#-Z")>NbYU0]Xb=.=Bgcf/1j"YToT)dJ'\IP3AQRuEPKgJYdEF]^)jEbRAqECoiT7B2:BFn)j7nl5mV$CCZuJpU4jBYN#-n&_J1
%ga0]PQZOZ#J%GU(=h,0A<D&g0^4Q;rN8MArd0[,dZ]Ga@99F*?Wl)SLD@dK8Yus[\Kf(=Z\(9c@3nT[]@s4IO2.iUVkt[S3m]n%\
%(mMtW30i?*MV0h8D"Iq\l/3q!)ZqODF^3\'^Y>l&F<^h:-ZaKMmL]=)*MOLd7/X6/MWR+MgaDsmq*^"T*_`t?1io/C2gd9-_WRFN
%N)Q>GhO/;*s-$`P@KO29UL0?t<3J,6N(P1ea^@oQ%&78F1`;f<\fN;2(e(4A@#e$;Ei7L#BLJg@0USjXEn2F@e">&_rqom%p%HS:
%Oo$p*a`2nAg8%N)Bk3T,NftX(Huba%"$H,FiXJu+o=8l;kJh5k6(U;!32o[!h:TU/l&Rp.`DgTj%-I&IX]NJS3[<$G5*InJ).p'H
%hD<,7gQX'4C6X9TMS'-l@Dg?K+oXFe08Wpe/c.>`jbO5@@:W+1UpUY=GHZg9RURe`m`+X#2:a,/9[&fH1on/AB)<(keE=nTSqYr4
%b:25rM,,aDGIpOY&SLQ>E.`7iP>'2*Cu#O?[@&!r;fG9Z7gUTnd7e-ST'd_QS+Y%EO!$7'Hb*/?:Xb=rET(um7a]^Ie?^tBTrrf+
%M`Sg\B8l^0PLdXbnnFQLSVl5p/!JuJJdHgpG5G.3*j[^Qp7%>"WAGj+Uh!Um@q91Wc*leM2JtB.BA](nN\reL/TL9OrDBKJm%1&!
%8RV[CIce(&DW[fj][qGh4!7J,n\M%?Y9uKjqA@dF/EABaYKp90s&XW>LKND-LufZ-i.d:8/`_(Kj(,2nQ&d(CbXLaVD6(2X>ZclP
%AV"bhkHuZ8jcBGSD6r+$rnDn8&-(Hq0:>(ZEn/`TPhGEq],-mkEjL-7FY\<7.b+""+#EiHI(<ReSb!.TO<1f5obI7?^N)'ikERE_
%XJc[9Ti^Ce6lSufP[IH"T<QZcdpi@'0\HDfs4r/&6iL;mdlYL,i*@1\DjmfCRd=B@-l9XK5*WmbI08#F$YmPuls[$DY"+YraR%l8
%i\2bXho@Jr#On@elNWpoADe!E[S9j=At?^E!rTt1*QPYI&(C5(f>Ts*e+H'$L[0V]O#^_a7o"L1NW4;6J,KN:05-s$DW],$,?+OC
%IQYCh![UpAJh0M6eX5WCL^ca?]tVbbbOqgcMn!a'VbEPp0NaS\cS2StNbLHoMAJ=I@5t!]MdHsE6+>HS)op<M.)j7,@Y<r1r:-EX
%b-8lir4m>GM4agW7P(luk&TQ]YZo=9LR*SmqZQrnjuI+CpgJYN[>L4IAh$a]feg)SCjJkIJ(.RS9'jU9hi6)c*Ei>je6"$D;'h#j
%(L!)Q"'.=6EY$l;iFF5=:oj,Yg=-K1R?r^,4F3:q@QDd5;f$?NPYooW_TA)2`59XUULs8]cZ5qqG-*Cu`;%6XCNEXJY5ZbHDlV8i
%'-HqZ4s1PQTh,cihHSPX.@Q0X027,(buXF^pCc]TXib3sD43(XPF1u#Q/[:3LatWsKp-V,?,Opc<$NV^muG*QDf-7is%I>HOENCD
%*9F9o]=h6T!mKPmWp"3,N8>]&TjVQ^C[+,=D@Wi\eG?*/1L!5WHhQ%okk>cnnnu-AR2n)$>-Kbf3JbiN.n!/,"u3.^H%gK8KM1t^
%0rotRPBd#">qag;;;]%Y$'Aj\<F9#N"O:cOHU;6E>I3!t>p[g2Ws=)B.6?e^F_^*kn&)HR%":#f/d/M?I-[1`EBG+&"AEYG;3+2r
%.p'Qt\qS:[s)V`m<5f>=.\.g6](t$\7o:"DnX)!h7.#"VVO<Q.1#Oh[gR1sMH/:3H8"'<V]AJYA1H@@1,N_j?f<U"N&Q#<(n#2EE
%&8RNBQV"8`YJgUZp>QFgbLL?JI!48HSrtt?PKEKEXis)AgP\,#s2IsIQ=C(rZ7o5FoM/WP:,Tq0]4\4hWG2HT,[I^=XGu5jc.'>,
%HFXgmX,--f>YTY"K[k+DhohO6>-]^dD4#%(gJK?IXYort(&4d;(R"DE(nb1&i-fKN<3$)2PhC+`gDqlPRH_f3qR*-^SOi&7[;C16
%iYtjKp5rtm[\So51gb/"=md?2-8;j9hsWthW:OYd3K!h(A[\VH?MUs/YP!>TN4`TA?\DbL78;tY`i#.H]/an&@D-l[mY+V*eoR73
%#]uh;3`5c^YMX,J,,G0j%GLu,e`aMcj.EgHXj_=h+DUZ:h,.N$[G$Hl0:E3e::L.6%;(0TXX4QTdY9DU=#:%<e@U/IgFlK_rf$,0
%o\ITYa]8LLYLf4?VVCFD0'2H.BR3f+9Cp>4k&uX\H9H0Ej/@T>^op-#H\?mZfrJ\W3ot8%MY'.Ail2@:qs6[qm0G8sT@#P*W"ZP!
%>CZC3q7M<FFc&X^XJp>_#c<L:r,#Hq52a5N6D*ZVU\_$3%iV4mWg)hJEa;-ggc:JG:h\A3.;6*\pET$//:+7@CbdYtC5=mE/_ffW
%CAf#mg:4iR*L*(Ccs]P\r$SiiN+l,<1:sW:AVX:N[5Jj&gu%lGm):tAQW0U=Z;TB;1GCpZPGgBXQ7J=#p0n!fXS2Bg>/+:UN&[pX
%='Q5%Zr;[uMs@TZc!d.!GG?G>ck6k`7]fhLCXsdjAK1snkZY*b2HPI(dcsf,l4>hqXLrECo\\^!>Cu"`$+mcIpqKT"-Cq$&/_0Zb
%>*F)nLe-K1oOTt]f(ohbdCqck9WaS2C&8h?8qoIRnMo*@37cVB93%3rbbNnQL"[M[C,8,e-Z$YnAt4fWA4Odapb!HD8Ai^Iat_N;
%9hiOM"RTN9e6Lm5AnGiYn-6"KeCQPokF&Wh3:ZJB]1rg#,V*W#ZgtGFRZ/\AE+mO\Y%Wt6quLoHY+b-rSCHdm/JbR`2h.!tHWb-V
%69ea^6cZd<>`WO/dF,BV<e<k_*Q)!*ZK3Dq(*$;W>GjR-ZW9Q)f-<=eKPGP%Pe&;'-C+26hAt/\J%),`R_YmmVV>P(Ta82]E"+8[
%l4s7.'^-$kFd4%7fkOSlf26XndPaQlmACo?M%?*0\/erd"/;9EQmYqJNpNk)XJf1[1WU]$0HAp:PtK86bKZnh>?sP7%p6!uY=^%o
%:`dsBqs7`Lo-$-u>6CY1ReaO>pgJ+@l]]PbeqeJN#451OX<ub#CNq;$X&6!EQ'O."gh!HAIU?F/UkH&(]8/N"=I[cCY>N:M7QBe"
%^4"kJbatQ(eN,e8nh$P[%5a6^;=7\4#O$rbW3br:,FHoI>Giec&l(9j]tqKRCoEP3AQVgc?9MNS]U5OWbqtqDOpa=FpK,_MX/J#N
%B)5]<X4MCRqPks!F_SJD\R)J%8<b&TMkQWJL3=`%dOj[u0sb:BMGi2b+0Ipq<GTB$PHDb!,c8eS,7E\Q]iLWPe@:7E6Y^U`KfQiD
%R>[_J0HX:NVnY$A%]kaQ,ErYPD[ooBCC6JG^X6$4[iK,4&d]hdA!`u11_`L#2I`gD&_3ga4)YV`ar0I[S;L%n.sWmBC)O3#/9eXm
%]%2AAAlbq]44L!c,)PK(=S?&I#Em4E`$pV+]7ROkc*fYj=J1n$1HUil%,?Mo<p.5S[9SlRX]MY[g:ZA8m+!"&LuJC?dhkZr/h0M3
%f+S(.NMPB&]3b;]KsBW*Q"Kb_>m@$0Xff3.,G]u&X-_QiRR7Wm,ljF>Y4lrR=Vl],Y>en!`f2np(g#(9`qO4222&9$4)u5DH]N&f
%_A6E3#@Bu#l*RVaA/Ph/-Yfje\;m^ZJm,?0(H8'`bFS'$*N6R_FK2mC\jtknNgNR!.=<79P8)NH-7Oab9nnY&ZXtjpX^>T:3)R;/
%ef*<T9@@t[VfGJb_g8?kibI5K_amO<\1G7\VAYqkENeqJ.bqc>5IPou%Nuuh4j@cPeP5++Q3%Q*F$SBk.)SA7\uN0".dGt"L9+a:
%/p5lqTgQp!@C@9/?ht8.3k@qFFTssTdiC`#5!Z-Ok&W9MW:dg(p>GX[In021W,i_G8lfhWG//<a[QES#cA7m/ZRS]lP#WXl*e.2,
%h1AmeJ&P/N#/8O/ik#7N/rY:GU9qEnPIp*?p?+X3e$'Ls`-u8:W8aLkh1!?&Q^rH9cO=EdPI[eQ&W#f?(Q'U1Wp:"G`i_STUJAAU
%^5gW08p5TdWN>fL$8>YoJ!5JM*sL8b=1MWlD6_m`_=IQ7(B#!FqF;@+;U1Lg;$N?/)6kO2^gP,ps)-u&Ml<&[NGN:XE\i?Mre,\9
%[lr$cR;s*njO\RJ*-kMPc+NL#`phk<s%[)%]@G675s$j(AgXP/n/#+7cLebSCM%<Ur`t8#peh;'Q403)J#:ga7[5B#@lrB*9YJZb
%qi(igcq!b4KqHY5n`gZbGc+\P?G0gf9,?X*&:jFtVKJac<9n/mbtG_+P9$?2YuUkf8uL7Sc8!k\nDKbg9Bd$Inh;7do_:^o^5MSm
%l=t.`Q/M>r7p!8e1$LlH5s&.p5r%V$Vq/@\ND%Eh(t!6&:C__Z^WN*^MC+?ZRu,:)EUCu:g\g!?(0rp`h;IM`W]Kb3ANUQ@p@e;?
%)Odo/(23=..jr&5PhfBH<Oq>#)GpP-Q:Di(QuC1@Xts>X:]NMH+&V)VB=5X),c]EL5daPhX83)X7OaJVe=*[QYAB7eE7psl&cA7'
%1^Buu!/jGs5O1-[H-BPR9!$$%>@lZ'7jK9(9`ncRQ[@--7DEir/D'0l6=)$3??qC'fg\s1\mtRe`XplU`1_Q8/4+)RbDD^:^Y`A,
%_as,FN661PWBL'22N"XiLQB?#X'*t2)b-nePG[\6PhNL^8/n_]=,8+1_bRN>eg`-#L_$\MmMNOlP5YdB=Y#),JQ_3?<p+Mp\t/4#
%$7MWFY$PS5&%!5BfoKh'_67cj7oT*l.lP^3e-<MIB!"a=3p0+,Z*p[(41N8!4)N+$,?Z!3gGqt2e.%G[&ge*;kD.o)ZsGie%(B;>
%GI9UrV![E2OXiAr'g#E_]5)%:H+n=*/l1pNl7JhC/B\sjU^Ut=!GugS%>th3PetVd<B@82Ej&IA*Hh@"ejh`o<stHN!!AC]l.?#L
%9^NMo&_HH`>]@^+g!*^5Pg(62GBO%s!6a%F9*VWY]\Il+jk9KckE"6;+.$<gO7nku2`f]QMq.F]^":5M98el&[;r_Qd!Pe-bBpJ)
%nUCASY4H\Ao_%bB7]0V`Md+bMY[BN;"2j=<IMU4qN/&?fhm6*;esG+HNU@a$"cCu8/)BO0<3LY<kHEa-2V+G_0OK2+U/K'E+.j(.
%<N:M"!rYH*@FbCjh(/F$[cr0G?HP-/V/C26Y]oX(L%h6I/3"/)D#UM#rW'nOcA^AQ6b,AP___>fh3Y=UUO;c[FK(LBp"RL_Ab"Np
%C,aml<`iPh(DjQ]B2B"PYMp)VPeu+_&,p0hU],9+D"FBf^[OIW>)W<'<2c1\?Q8;a++N4-T[MZop[di*q!6>2_G57:hWAkJo3q'+
%q*C3Gia]OQLLS,mMpEkW(&-Nnrk^Zu>L+nRO.L4&?2F)-,QIOe0d$(\^,UT?i*rfd.:;(A[:`]VV$gV:BrmQt:@7#$e_9cLe]ms-
%bK%esB4(PHdc$s..);%+[FZ3Q']Z;9J(r%%.utXqT'rhapl2K'CVIR34gT4#b)Z;aEn-C*.tuU2@q[n&ETDVRNTt71^J]e]2KtcH
%/h]Y_Faq0BAb]5.fZ<N_5PVIj'Y9[8Ts4.-Hgnnu\%Y(25H]H<[8%fk@shW?(I4c4hU;_^/RQ.$hRb*meVh\q-f2.*d,Sl_0Y]d'
%/Zb2g*u46-qqT"s4T+/"j2+?[(ut8fNl1kdlpYo"r3cN4lOBc<05^[GgoO<&%VY?%j4T>,>>&#UjnWu6kem#b[Hc)IhcXm?)?[af
%9fF[/W&A#+.XY/p0Gg?'+B@JVbe:Jg3+:&@cJM:8qs=9_jGjR3T,#XPhYc(WQQJHIoM4;Y>CTX4H'(2"W:Y--%kG9&,KiOkaSF^W
%4b/TnT=7#`GhJFc`0FEQf'er_>>WXh?H&K/WDto>go@Y,"hs(GcX&_9qnROb3C>N*-g%bq:$:R&i^Then_RF)rU?!C;W-+e*q\C>
%V.Z:"n9_GuFjXpPa%aN7(Kj$YCX8UH(Q4!Y\S8^"=5cBu7ZB3MiLRD8erG(NF%<E\rP@&YoHn;K\G&42mNHb,2XOSSQ:j,9rud8X
%MiZRfne^0!kH.ZmrFmG?FI%l!s7r+b$#^F/*2W&Xa_R+)h"pT&+qE9bftu$1^FZGdn($@c=6!"mn,)6b0n8mX0[)JReRH8Hpr"`J
%OFGj=XF&8X.-=j>o_e=CX.opG':")WTH;Ke@Jb'gK!O78UTq(`ZdfSg_>5MC.e)%fDnCGt1^p"Y3H#RJZF85!S`OYCR`A+bns=dj
%ab--c9!5R8ohbh2oYD2?ZJB0>?[mMFQ[8WGCmkgJ/sMrFpJ.`Jgu4=GKpCB``?Jr6p@so>45+PBD]BkdP`&b^]8oe4qD2XIX)*pl
%el(h9<IEl0IY<aMLKg%e?]X1ZfKcF&\X@p=j`(TCjn$O'K6mDDV0c9m"fCdoiu_Mgc0!l13c%,;`1k9T-Q>STUV2'>f9*%,+\s0p
%c>nu\CK&)9Z$>j#h?=Pq$ue"SU#hjmIZ7>-#qiWRLOB(8VUb(bf$[FW3Afg/%ktpd5(*(`\S&6UF,*C-c$ZYeY):*P6^"4]Rl@O:
%MsFU8'D<r?k58qWdi[sp/8WmE)d2O205@0V_9:P2BB/c/`SZ0QHXNFoJ"O%hh0ZYC4aHfcDf4`2)u/"mcueli&Y6)=1m]!L0.$;n
%MU=ZJU^Y.jDPDj/ZS0ur]u-$+%Y&oP5*mSV&_lBJEpLn;hd%iS==9`q>=c&[()lEL.EJeQOm9&X`/DG5FWML-qCgnGCQ&CsZd7pT
%.Y6"JUE$HG9$1_bC1.2b+h#D#WF?^*A1M)bLR$$]))iJ>4Ob=7IC+aD1-o6Hf&XbO45Q(Do<ieJ&Iqs-b$rr$1o^df>hQlk4!W,d
%:e[T>pd`tCME)?'23m#Bc^A&'T8]$dH<XANMU=NX`A#9CZ<MRMfj@W0?E3k"d'TM3O[;!g\0U06qNB?5+jJ+%HHp)5,:IGlk=TJ7
%hAb%KM'38GaC]gkOAn-]Wm9Y$?Ceb*QMm7#2=;D@!/]QG?2Hr;0-eKVa:0"BCU/ipdYr-F("*e!>;Ep,S"!C:8u5suN[fQr.@Ipf
%Adt/IEfAjK)-NSf7U)3*YZ`)mJb`i;rPcB6b3F>ofeY>F5A`+eL:Lpai9^@N31Op@M>8B?FSr"=gb?uG-t[g7qZNA,?1`rndXSa1
%?9IHm4l'3rp?t0!3r\n(T%fPQ&g)aN$HZinV*fsVFTZi&?rh_G(2mdj$^s#DhIH$]T6qNeh"'&\Q\mg#o&4Am9$g"Q`g.-39[J*&
%pfkp7B27F1b?k`2B(I:j*Ae;ak72i#NNHiiPstZ'H>t07BZFnKK-tDZ`_4t[EqClkQf$S2SrN6N)Htn21)7JY>uos9phQ/h#<DhM
%l\!(?cI3lQ)!'IRhfa$Y5.j6)>1Ds<_W>rb0Brh8YiKZ<<;na*QPS8TQPNZ+/""Kl0.i9Tn%\l<]d]JblQ34Yp:l,N^%Eo%ST3Dq
%s5iOrd`A6t'LPqp8l8GF^(C=3gFF%gIQ5I$IX3M[B8qUdE.+@Icn$i!q#3ReKsb,cDNjR/&*r*e.o^2uD713$hG^t)n=jm9r8].W
%iLTr,#<6[LO7O16535j\0:oA)rmI9.>H1q[p1K:u[>[#'p;?k[ecemMr;_$Z8mM+ENfoii>&ufP_:;hNKDeko>^34/J\F#b<=LUV
%2gGt6qQ0JPj@*2'roB]fWdW&GXDMT/anOW)-XRO&(nkYJEPXlr(!bZ#gBO]a/6G]J>C7j)jXa.5+ZElff,n:Y)IIs`qmWI6MHe@)
%%r3>)"L/<800NS9')7a?lcjYN)^*D'``o\[d/UJ7Hh[7'\6*uRNIObchg/i.Qi5B]U\*]UX]EllbmE_--2((4ip4;.B.p\h:1F1u
%QA'5#^=g0SI0P`3rg=\;X10\OIIkm5IS]nb2[kYqC85\)SFRF7r3P)n_+!=EdVla2iBY)QK=IJ#p[%!]q,^h<Oh\0pk0n`\@U@j=
%RIB5I\#V`eDk;0SNVE06ednhqShKf>#SlferI?fnj[HZ)H9-EY-5ML7?3VH@h5umLH+L9Src+6?W`a6<rn:M)s(Cc`IJFP@YZ`uC
%?T2f"cDtMjX-6a.\=ZeT[a%A,N@@G[iaGNkV&[L`[L%6P82`"PpS`&r7#0A(@o<s[`oj;I`@(QU[:6uNCd!.8l.aZQQ76tZ#i?74
%`g`fg$eD-+2_VhqrBg4N]"G<Ep?/9BZ];]q`F`HC-@uRW[stf#Kp@^7)f_'*N`Id,mm"$J]:sK'L$-=CIX(;?b\q>Vp0Q[aVR[pi
%S^"j^r>D($TY'm`WHUh/0Vs2r:u9(p^OhHq&&2jpB<P(V2c`-Y.4];Nq%>nS`I2Ei`RgG?H*8'+17nqP@hG$u]aFDjkI!Y+hCC<&
%_g>4#*[#&0hAkq>=69>"p!OGrHnQRZSJ]UiKsRNUD@g_<[<DF-G9cinX0Q)^P453aDW^c3-!8dg^>E4AH^m/ID;]XIQNsS+^:;Qn
%%f<g8K9^AU[I:pLo_O?@fJgb7iUbOi(!rGu;fGsT^+Z(Z?*#;E[9icG5Yn$0g\CHI&uctW^\YM![!eN'?QCd+%([>T[%iDkQA^['
%n4DUuo<bl7.3<NP`CdmNhQ/Yp1JjO`ceaT1]h]S_mEcge:=-8[!E).,f6TK@MNOu@X/E]:8NndDN:?H!@Qs?8F%:qi\QKFa"GX>V
%X1#:EpTDe&N>e8e?"0]NcRU*P^u-[.jpmD0ILRdJK5SEsI(-_m>$NJ&0>3G$q7$1[QdTaCiq^T$Y>r:NFt*aoS'D8>2phHZ+5DLj
%`->?gI/U>b^A;%"#mXUTA/<\^NOSWD@IC49rns:+YI:c_E0=s3'eA\^,.FnWKt@"irQ2s2'3+PqXj`Q]D;?f,FUO3N4Zk9e4EtrR
%&jH3(p&/O,_R;$$Rrl9OFh7Bj&W0`II:duN*?@;SVl@n`*Qbc92RS3UPdj;Fs7pejQFqN?bic]kn$oWT]7\)>dZH&h)0pYJbM:ZG
%c4:H26g)L%"2rtO7Zu]B:r]omPNCrTO`]>cST],QnoA7=72q;E2X=)td1@AHk2kX[lV6QkrV*LeIrug1P#_:,)OJG0='!Q,c<FDB
%CpiI,oJTl45JG,H;@qKg+2A6CF/X>bR_c\H`@%;OHau)-bUP(7q4"kD6F@CXBdXru[m`"IH^Ep<)KV+tqJkJW+Y1l&\G:RH[e6tG
%(;?pf:7p)Q_U=LjH8/K>hIh26$)Kp&^]VF'\+u;mKf<r$=1AcR]fTIODOG-q`RWb[rO>on/Aaeo[,O5%k$DkM$Z3AW;m%b^R%jHV
%'53qT#A@5GKf;*fEMG$=P1Gurqk&`b7dgI@^3NnppN4N1FmaVS.(!@bffrk,^'k9Sqs!)R^&[her9s1Gf>^/:#Z%hF>&eP[OUEhV
%^3rg/m-bu2(YTAOR1I^@L;!E9;1hbk8+;l9]@]DWc9H]<cb]Xpg/q_-4rIZ8;E`aR:$/WE[:KjY[Ki-ZB6!PAemeCG)qku^fj7-l
%kqhW.(r=Cf7Mg,Jg9dHA*=_+=5(6eVL%Up?lXK<3?!:MkA=</77H'L65jmBV@4)?5?WNkJ\G^Ps@Ja7/8orZ5`4](=)lUQl6ft#F
%UJBr=HQ0SNm,#]B;;N,G;QKTbacZncOg>$<NK#t\ZWrF*b-<qHo3T20ZI6FDQWA*Cl+U?a%r*#Rb1kIQio6HpOS1M0flpdFi",M9
%iG&1J0.8F@rqU0dIdiO\:`HUl^Z=l`o*m54K=tUbfA>o^k77CXXhb=`m1a^^[4][5Rgl<*h(/KW>mNrI"ad<9\C$T!Xd1":n+52Z
%#f>.bAa?_rCAAdZUIQE?D3]V;gtup1HUR"4WG09uH27.YFE`__!@51;!B;2P:,$<.d#kN'rW7:kkH18MR5+ZnH2OrBW8EUnSc0re
%Kj[2AQL9^-Yo&!Oc#2&jJ,\6\.-spjoa7l=(Q3O0]#.=8EqOI*Gt_GU7m$J)U0lsNl4C_=1sEKF*cC.,'t%s/p[78PbaF`N8WE?-
%Ia?[BZFuhH(9o^S[T&8fhgRfW(OphA)Q7AY4Ic@E($^(O8S/&En[p.`N6<k.=+"7(S3:UOn9T#!c\j1Dm##+CmJG<loLS_U^\[o^
%+eC)F9D4ADUhPIFi08<.j2\:Kr:";E(Mn;B(l&*OhG3n,7eb$Fqh6u4^\oWMleh03:?*jV*tD!!B5Oju?WXnje%J7c5K@\0=FIl/
%<BTMo>:seUNfN`F4cbR=@;OqG_`l;q)p9#u'Y(N`rAck6\oi=`qbT7r+4V!i9H(1gI`[G9Rk2r=>HBn?q>lX4o+tcbIhd&%)su23
%DSN%:-@4N%1H['bo&\'3e(RF5?amM=Xj:WA>B3B#OW;6j5:kf!<R(ckg&&9pZHXp;Dm]Jhrm?d./&ah>a,W+9JK+0)\PR,)G%!j'
%HEqh,[_=<JQ3>BP0Qr6MUT+Y*iKd=pI<U1iI8\!CS#tsjiLH916#cH]['XM\pUPoWl%f#mf98k=Yf:;3I(We>>5G[Q&&,FiC.jo$
%(X0m+CY3;RIQ`*b3;j[7^p&1UCAZIOqZepEEYsdLIG$nqBCS!LoB"s6YOh2495o\nK#)p-CQm:?DQ-h.(42u[le_O;l3[sQpIiI/
%EtMI)mgbWjYOA#"<!H+Q2SJ-XB/qk;'GjC@C4`uA7SPBsqL%-NS@-'o@iJ-02nk"-h[FI*q.RC4D1BmFq>;L7.Y&ZGO1-V;qqm%>
%=8#L)0>1[BSh(nc-Dci`Nj`,JWEa*.,Cb/>I#M_%JQ?L,T^?UZ>/.X!(c&Bupf@:a5WegCVI9(>q05suJ[X3[#JT_GnaZ<>nPqrZ
%RpZEmiF01aqUkt;(1$Algo?ks<EWG@#OA4:)ttF_n"66t\$#+\J+GVM^+]5%7sY+;<i/l!Lp&@rF0/\H<41akm)@c6`nIorRsoGA
%a=M^#s(:6(^gVY$-0>E/A%r?QZ*k,tCL6:,n^2NZX[8SapE#%/T(fg>mN!m/qJ:$)>M`VqBNE:e_t+BZW9c%Y=LMr+C\PP*`c:V:
%C#rF4GduO>;ndT3s3u]J6fU?]#2Ytij*'a?C&bpaJ&lDN(8f^*m'1=ah+WBrpl(sXq3AVRIC-nh]Ku#`+jKMRYp+buMs=1RO6sh8
%a":&Q9SGo<$r?/1=T1,1mFQ]mG!3to&dSAB;Y8J-Qh>5L>A<cl<O)>=i_K)#KC?=sX,:[[fTN.\'!Jhsi-R/&1[bkFV@8C2j:;E^
%ia!`*Y9.@M/'+sXF##ABV:.[.ZcK($k*&K<a[?9"LLoIo^Jb,p3V<\TEuBoM+Fc%CSRFr_n>.6#Us[5tYS+Kir-2,nGD5h(9'IEc
%_Xto38TFo)q4Au4i)!#CY5XSK_ht,5lA?>#qS$Nr*gW0N*S7T&p8@;)Nc3nZ6p\VmC^:NWa.G$Uc)bV@!H9kI#:Ngb.mQrblSu>:
%!Q_T5E.n.*(^:l8auVh%1F11J@1ZsW<Te_U&:QlAW2K)rD;07O)F0L?@E*MsQ5(4p4,-09;3_K9WB`6Yg:j&-&mWIc]Z^p:"hiiL
%=Z`hi$GiWk"eU)^70=q'@M9>s'N2nJ<)bNTZ]8mL<//34#3J/a"CB[M_djD`5.%:,O9Pj+ZRqZT15/81#\mm%gU".?+freRCsX4]
%F>.P7!V,jkCbO9D8ad"06e%dGZtoGE=u<RgDtp"r9[i-9XodY[TV\L@&>SK(+,<\orY'l7?Jo9a7Z`=Rg8Js;B#Saa%>KV^>!ZQ%
%We3c.:MPspA'r,-C8dVq]KkNhMTa@U@uPgRArY.G-k%=NCHK6`0Zs\rQ3$C5"C1,?]BQS\emL.HHdHTUdh\,!6#Zu91'WKp1RKj6
%"c(dX[7q.3g*(TP@B1e*<9"Fro<%_b_0aYU#+f=grb*QRi#B16[6lV5q#WoV($]q#1"IcS^n+:=Af]beFcHSL\j0(2A-003$lp00
%:-p$*`kEe-Pb^\ca`0T6gDqp8LCY7)lGn3X+#4HU,JaARD'REJ$n.0t(,7OW$l`0*.2!MPDAI1m=!W>C7SXA-]'4a!ZqP>t5V]\T
%1O!<h!3,/YrkK'_$6)e^e+Bc\&/bcZ:eTD9N#\WOm*MOQLU?#JF5QB+M0hZ53X4*Y8)$_%''0EO1Xmp(0Q$"b8i\""7l<goPp!:;
%YiX?=@t:<.B#:n\/2;;^.?RMK*0gAn)*EJ>2%6]/M89kCFRTDm)6gqQ0UuLP+>J++IDBG65t2fSG1QCS=77Jel%;LCRX3[j_`-q@
%VTDli0RYT/GRt?9-TSr#JjEAZ1R%FR8/N<g0m/W$!O3GqQ8Wnc'+VJESW4`D.>b;CJFVYuUDc5P71&!K.Od'"lmPI`FqdGu;2l^9
%$lUWM_@.HEd&MYh:^DX:@u$-Y;]n(18q*+:#DOrmX-r(2R9*=sC'O=B:JhcDa(,ZpLe?WYi[G-;\X@S,Mg:O*$na)5MMu!M(s(kF
%-tlkm_H8l[Z.hoB4`H$YSYLd-feKKV.G6.I#%bLV"X_ZK,mc_CP^o67;A@m*LT-AD\D@R/*M_U+(tPZ(aU[D9ST?[I"=/qo$^7nd
%#gSKBg4U7CBUK!heVi*X0a7fq42&&;,r5u@=s=(scGOd!")Skgc6T?"pc'X0s5Vf=Fc\q_-&0_M(dVT`BR+!@OW?"+!ebCXHW]3p
%HB)][aEC9qXVGS,jU\jiKt01Y"X]rDU8o!DC'+ofBL>dJR(T]Z^r;mbT[@`c^s#"oM-\^VBLtQs<!5u2"&0AphImVH":n^1'Q.<h
%UJ]/7<^oAgN^On,57A(#0Eo;0d^C,)JgGO><-eJFO->Yl;0pu:P)s>gqC/eEanjb3EBaZ>!c3`7YVKV9UXr)E,)3=75o0s<cmOLL
%YgLP;%1MG=>R3Bna3+p.Mg$]hD%K*dQ3i#:+%m@oXIB!@$?WV'k_+U!C(GIm/>NK$.`.],$4U6(5781k)gZ+`JDrS]IS3M0.sGIF
%*sIF&e$g3R<lH`p0*qj`#Fl^>(T&a=_Zi%8#R;J&P]$=@3%&U&H!lLILAiX@d(];%`$*m%+JbZ#Qq.B7#AfS7D5CZA2@L%4SgY#*
%'X[k\dM>b0oJl9VR!o$V2_3V`NAE/p6m8Mlj(8iAB(U.p"1DY]`HX(Wh*d6Mn.=DX+9KH2oj&q4KnM\DILL(S(p!.,FtMV&89%uD
%/:kg(@\e)I6Uf]%Q\i=bNknDq-cQbl>&:?)[!Vmm&HY%mUaC!m_SPbqj%i:!E=Wi:e1oBC3XeX"5<""CGDT-`/B2`N=7eT/Iq+aa
%^iFe,2E;gn)!EC>N=[o+.1P"IP8G,Lp,,N;Nm%AUJYLcY(jt*FL^jU]XbK.g]YI,8gS8-i?[V$MQk^iS!(6')NN`Wh]C#Y)dgi]K
%\;f\@E=Y6+^h8oD*)_<'BE6Ko'+GdiD@.Wr;\aB673-6/bomk2Mp!]E'<jeS!urqc,'8PbBKVQ3Bm!/4E6/E1E+Zfdmg@PYfP<jX
%Oao$$l4Lp2__>a9&)8IJkR"?-c%0SL4]A.a/e$Ld=Ak(fHicZ&\tP>8=MfIIip)ns0!G\d]W>d?8d1)T%[$]j>F60;&)p";_F,1E
%bV6"Wj4o^e*#1-H&riq_<JsG7'VfiC_HORGp#'GS'J-IV]1Psq`69olDm`/V/AeW%D@VUdpm/Ik"9enlZ-e1ke[)b="k/!s3Agl<
%E0h4SL`.G(LsQYiFp\lDZ>UHbhPD=()9U5)c$)j`>QIiLS`:&L67%@s2^%Qp[:a<Ko_&DT#-3iI[O9ce$[5j?>VW%`V]qAMUtA70
%1Q2YMp_F?J#<j1?KUQ<`OPZRd:^JN&%ENmOCF^3k*a9V03*bs-#(pcEq:"8cSdVS=O1TloT"!BL>n:RE5+Z0L^ue]"_863W)u%T+
%luG#f3EgT>$`i3lV3hWSZ"7VdIdT6VOo%0g<6jI:Z=6BZ;EBBhHFi%PqqQuuEEkFA(u3c^P2c\G@+e;V5pQ\g*HpA:$GtgIAqMoK
%(1[8)NhR:!0`5#[Bu6D-g$Efc[YMdN]JDt).8n^7Os>NKd1hk2PeB_C):X`FX\\K>\q]Ha$I_P]5'P:S7p'*aS_B)AkR&Q=MGRd2
%%<^)!:Q?Hd-,HOs&3/_u.N6JA6NesRFFdGF`l&UWUdQ?IE_uJa[@^EHd+@2G';U'i-?[-LG0ADJU::@!q.;GELX%,c<_:[nVKWFl
%Q*!b_&r[N":f0g':PghTp"c$5)[7EaJ@g72/.rAg^c']gGJs&K^c"aH#CJ`F(LXa:dP1/^D!oP]YfdR3.*DVG,b2M\kqRpb>Mua_
%@=f2g/Td!U,%VEEXsN$SV&:KPm4SJs!PtDh4+OaCo<.6h&4?Yhp`c>!<;<VV;>CJ+[bl(%5fHP&:hV-_N-u-C>*fb;71(>eY,uaj
%(bM8nZCZ_\/C&duGGrAd%NTPD'kSJf'"0N^.BrgqKl*.sOn"VDT.eSL%#ffXYi2Iq\DE#&Wl>\6-pR>[Zu?')f++B43K?i@4qum[
%:^e(,MC*"A8]i\%Al.hUcsK\,%2Oj`=eIT\(I5gh30qPXA3uZ%fbgJ$'p-3PaN>bR/AV=4[]N+L+SIZ0?HWh#8iQ((/1?Hr,T&,'
%^p9PbV3GUXniKfZ+2\2j[XkRO@%#'hRDK_H5M84[4Vh*cZio:q!!ZaUGW?I*;.8F#Kn6@gH=>C59iGOn0i9u\:193U/_deL[lMKZ
%DgC&#46#o:('Y9?3sgkn.^4/*I]$Yji`^`37a.R4]`]\F:PoK$ObbDk8^\O,lQcp087_lRNX?t!;q0iS>fb8N_q=9sE@\uI-o]J6
%?Dlh:]J1\Ug;pL7hADCX_JE"AlZ;h=r;4\losfXZ%W*(%U,GsW$#B_1o02nCDNCGBK>:,.Tti-_F:c=<8_pI`HD\uN?pk;Mm.)/r
%NMX\)osN42GqQ$q<0@lF,g/L,Dmb:U*3i[)&h*>WM/:W;dhGu2KL@^b.cla##t"9PTYbE>r*niT(/=^7>"_:VA<ADJUqSo8$L84i
%/]65H1OIYC^gP/9Hi[9(o(X89,L"L;/AQ?)G`H>K6QSIY0Fab!I,'[e][8EC@bVZR61`dG+=ke2TOSs(,I(N7O5VOiL'\GApc3mW
%I\M?D/a*;q@c12h;XuV8M;Yiab[\)ZOc]j)\IE8bgUAjH`brE&TBm^.j#Nn?4bWE[,A2,^$s/Wg5S_[4g__G+Ya5jW9U-#87[fX[
%2@k,1*-%V$1UWq\<8kMB.iD8`@:FsYjM&NO^r"?AQ[:]EfHtNJ&A\W0f^\LmOO*)2`X%9lLA?([lA&VF!b9RpN+HPanDH)>kU^hq
%_1P#^FQAg!3:(1G^tNaY2$>lCiFj'r=Q3<;JYbb^ieun%:kJb=#jr/\*"-NuLA;%7\cL%8+jq(D+b=N'bgYLdEZRH!`R;^`]54Ag
%9mR&^"7'Ec>0Ai;Ya%("+:RRL=f*LL!98]G-"F$nS)1IHbc"(K'Nk98;m@Sbl$!KP//,6';Cl6a=;Xf+23G[(]IW$".T.IPA2u(8
%*W"NA$XM#o-p/)EdEk`e!BaJj=g\Z#a(5(-+G^KDHR@M/NZg;*L06;@.14?PZk>HWPjAZ$b%9H[eE<_Ekj`qlNSEsdoR^!NjViC1
%bRo$RO,g%>E?LomKl/1RqS:#u.h!F^g">j<)?aU6]>mH45oZhgTOXn]'Z+FE)t8GH>YnN*/Q("Sn-IY:/7'J^cK.RA6XbrZ=A>0[
%_U5="eVKIqg?#PX.$1&)ak:o"n$AAspsI'G+Grcf(]u`,&dX5BNU%^@?k]#ib9`-,O'#K90!#M=U-OKBq[P+*>r_%M.i&.S[?dHq
%7S%Mn0ghYT5/q#-V%lfq[#2u5>8#Y;frLK3J7u"c4d8>k]3salq[0](?f#UlQ&>s*">RMS;=APuNCW+^5gciE*QPXW.;HZ(2":>+
%2t06AK8Hq2m9sso5p<[7p%Zoo-$7M^3KtP87(MYgKf['h?lOcrc""ZdmLP$R"Tjh;5_>rqW2V(ORB1Yoa9MB*0AmDRd<!M<@hdt-
%D*Od_(^s(M@L^,)nSg9FA7JFXoRSTTWJ8:$4i(8!Ua]+_Nd9B>pD(ofkG#S[j0CfN:I$9$c&VT@JjM&E[B>0fe6(L%;NQOYJ?Hqh
%`.MRWjXB"4,"a%GCkcWP*LHn)0[JcZ+Y$,]@#I*QW"P-ZH!K_jMOnL_5fD62j4PS!K*J`2a.^-O7.cb;BQ1X=6b,3dYF^t.TF+cQ
%\9=$3aWT7G#^^d8^i]+l6`;TP0s8I6m3,,T9a<%[2r8p;0HO!,*4[Z%_'6Nj@i=e/TiSb?n8fCNl-MA3;VW6-B<[OF_+<f)N[m_)
%`W?U3r=6]=BIP!p^KCq3blZLjYR(DpD,DJ]osL3H"J[^b(b`s>!"EKg[f!M\eaB*pK%9O29.+l/?++mA"J_e,=B:ZjPQD<:I[>h:
%*aaFMLDVP&61GDA#42>?`=L$t^2OYSZXB.`G(]rr]LsAep]Sbd8r(e9[\Ii+O=Z]g#q?XZ%@!A'$*nXLcsSY7^eV1%&!n4@0eYH2
%&'P/kqY[dUJkQ:GZn^c<_h;YN^:)!A224s>fB/3!&qfJb/F+TH2ad!Qo9*3X2`os)Gc3&1.Ccbqe!Y-/)TLjH_'_,BS^^&'1>XNm
%-dipqn/L6NErr+\jC%4g,?=.N]<!).]%%OWDi7nGL#R?tUO8R_anP/k)a,fO%[[WbpFX5NoTjEB:tW+mb(`Fn%LfpdZonO;eA1/>
%pE^t@9?7VT,sR"/U+$LVi;*IQ2d]g.El%3rW?*`qbIbE:5XMm`@a1TS/)]SU-!hrH%-,>`RGWo]ou"Q]mEV$BXE;pJGE/*%abrO6
%;!='m9,'k)Q3C!Jpt7R./-*UT;3uer$T<`n#bKK&2D4^'_jod)6K)b`LPnq7D%$3o$opDrk>6eM#q%i5K#4m0^lk1kK-`#hR?M(`
%,0nY+od#q>!H4>":54YkK(8J\]j9:[#$7*L!)h`E;J:T$>'L0<lkFEWb:H"Sf3Oolj'%+AS^Hf!6H,c%ZlkB_OmrIaR:PXW;*a,g
%gqik=KF[TCYhM@!Rt?HE,cJ[8>Y&`U];oJ+6=Zh.bo<jV,#]+F<Wf)QmeI&(7+^GQdIDHukce^h9><FlIFI?@_\=^E[1rbDE:`1L
%P@?sq9.R,H.SMWt":fZe!oXCh"FOED.m1g$gfVMf<2;q+R,ak#\(n?$?GWs<Tr(5@(o@A0)hM_V)Fim)Rne.NA'nC^r(`AT]"er<
%UI\BX.$b"2V%Zs3Pd$AR%Ea.3NCus:_lc'U$P9$IZ5&2(&puXC0+qG*cTr[gB,(bp%J+6I1S<P[VhP!<ijiq%?qieD:4tAO?4nAL
%.PS#oiZtNg+QXUJk'EDG8D>;$:fLZm>;1]JTs:A#R""Pq7KR)3()l?,F1aVr&JYdAN*;5YRKWKjPR9>=C*dbD@/5g9QYVtq"E2+:
%(d9(KT]"c2J\[s74J$qQU(0D#!95W=FD0;L32$1mNuh_C5p+813J,c>kN8!T`CSr%2RkDnTt[[Ja-g*N%.Adn-L1n!@M\$:!=:;Z
%=Mf<1Bu0q/P+qj>=r>1R0_CRa37\p=JgR=uKdVe=V.&$G'W)n34j-!nTeP:.)PUrB4,EC6Z>h.IB]k,1_MSitS$5UlN&'NtOR-He
%<Og>2gM;r`'Z;p]SKGhLH4edDkntm>K5]R[AIGTVHW\isOt'mLNe:6e]#Cn$LG)q(?XqREIDRZXYS7Ga-=V>%#RBoY*C^k_kTO&Z
%-*DbQbf-oa@jEA)Ld7^PbX:ap:r?6f/ITl*9\6(Z8V^#[HGcb@fA;+(I,[j\KP\@C!!kf@TpWq\B,/?#'=bn&:u!7r6Egab#'NlZ
%XGmtJfY^RG`>tc/Z2tOQFp"9U_KsQ&#OK3Y[G$AFa.!c/K"d-Je:IPSA9f:Oi>[N!=I9Q5A]Y,.XZ=%`9d#Y#$'#RNH6KJG'saGP
%4uHOkp/2HB*E5jh9Bj&hW"J#H1=N)d'L^+jBO!hsi2-g3=Y%jN.VY:p8<c#kD"6KJ*VDBNRM`I"\NZ.[Tqd@PRYb&=R0eZ"_:&J>
%YT0Wu:<&Ema8cNpa.p9Q7(ZBk(/NRO\G8%t-ppUdTo*Mc?9:TSA;JnJ$@@P4H=/e(cqfZHgqdrh_%TiUCBl8T0>R(?a!q47pmp.P
%hs9gci@hR"l['E%'JfL31dEV/nX.eEBY`WQ'S'C;I!qY1N">)C'2Tm6m3^aPQGoHUSR<8OSa[[<gX)]l+I<*C-/2O.aMn;,X__&M
%r&)2E/0XrB^ccaf*DR5V":7__+k[H`PcIWhXS/>f0P^e!6q,e]Yqq\]HHbI0$H_34`s<$s(W8i;/6LD@H/l4n9F/0m]75h'jLD[B
%bR#"6mU[dPHtB`J8J-5=-WN\*p-FDDI=koH5/1L)g9I?H?nQFRbu0VtX@GFf>,:!;OTd!k0DnRh9ZW_?-==uV+B3+j)N%?t`=9<O
%:o?mi0uSBEekZl-+_#VIdb_Q(Y\b$aBP8JHpuWKqQ/9OoeZFI70`o'.[p%H?)l#iHbR_*m%YfZsaYeU#2:3BOL8$m>$p:-Y9-KVA
%o0j5/jd@iCLcDp3cd!c?am`3/NRtsk3Z&5`:+^q"^h6LEQC%a+V]H%]Mjuj[OTAc3J0g>q+Wb!C(ZebV%1/_/iCP0<Q66LM!I&tL
%'P>b4h09*cla7EAq$m\B34T&=QfL4n8UN8H,U"!ldr6`t!g.L\eE9m[*3hYeK7f4V4P$oC0E[-I]Q;Y)"uu"_"jq[OAhIdGm7XE(
%_pLQR>,kB?"`B2%Z'+lEk"FNkVCer';WH:D1UJ-]&E^Ka>;F;q6+"TW)W106m,Ip#<5[5)EDf(kW"`:<)j'e(4W-@n$GnJWqB`69
%[u1hI,=-F`D8YHXh?dXt1CejLOb(-R+Z%0K=@9>AAF];`'jc'B_M$k,+UO_g=_nMa,)e,MC_s_o,G5VF(7cCf6n&H(4X\4/5bqY:
%3rGudNa\%"j'o5,MHI$8M>]b[3"='lmXt_NL+tE@?de>*W,>[loYV[X-$c+X$Js-,;d>N-0p%?@S=&IC9sna*(h*pa-Hg?b3gOm2
%e$pi_p9R)&*q`4:i=;@=BVc&,R+o,sP#)H.\ID)VQf2^fC^kSr)O7P(";p:gS&pd\:f'E!>o7=qM<Y/TfS-Wjq(+an!f095*-8t6
%ou50*"aMfD\1gL'&d-?t75umj?C;"TFE@q&#n[cT**0FZi,UrQO;l=RI#<elR5e_[J1*[-f?`PG-fB=q0dMLT_bPh!Tu/).6ctES
%Ug/V"(=+[.fQe=!DUW%u,4meS$&U!r$OBruGdb,2la!`NP=(WdHjh!p[bAaA2&./m0rs>[(k@S8?*LmTOdNYQZalVL.)4D*O<EWS
%r1A3>R1VJhIDL;?(4Ki$odp@K`kfP2)R<SI";7+?F@`Q&:iJVEBM',:\pYKkhKND#E1>="8M<#c./+tf$@GLB/2Zmk(tC5>M14T2
%rWjZnNZ=5K.&=4RU:A7g%ZM2bcfFofW-Sb@==@$474?,OliuOar?[?_Z]3:BSjQ^mfZ,9PN-pi+,on>eX10p+R6HXcnY.HB<.a)&
%%1?76QmWQgiM+r^[mjjAceA2`R:8bgo!(OA]lE2JRUR(H'T=ChCpUN;Gmm2WbM;)c-`r=N,O[&I@tm8]>d*EP*0")H`Dl?o<Saq>
%';lBH!r>9/29*MoJLhid7e+23XQBQn_>l3D+F1Wp,sdSVaWV8#1Bu/:7A5h#,@dA"kS&[b0'P(5-Pa/hmN3M#RcY>=AV)YV(/Occ
%'FnE,V^3kXNA;J2fG/0)%D3@k[_%9H\5Z1O4UcCB54?+.PQOj9M<gA6_d>K>nG$!cH&!(dkqM6L7>J(b@r5LQS=g:Gg"M?g&ee>H
%T'/l<^^A)E)GV,F3UB3:@ZJ9gjhP>njV7r)0_)*piqE[f\<MM2)0ffRD)RO2@0CCSq>rb#@lT?h`qMl*OQo]q^t]qsVqE3o$>c-C
%e\FlTpnu4i$>C?8>/j7H4O?ldJu3hk&tXrZ/R\/#0\lT1Gt]fD5sgl2cZ/`V5i)n8JD.qPSYeC=om)'62D'KfIT/?`![]sKgTer3
%$0?sp1EgHW!F,Ju#HYZ(MWL-1%[M$Jm2TU[3aCH"<0Z<\]<8,S,T(B1!or)Kb^WDJia0%Ul=C@)_HU/D;j%c5,f`3mDr"pM#'p9p
%9ka+[-%.<%7$kq34;)77"AG3<Kba2!EKA=#>_bgH1_R%7Vg$V-48247QHR=N@ai4_IBJ=0&9HVPcm`u)j)L:F)LMu_`Pd_fGefs'
%V8immLT&W:*.drk,n^YH)J7+C(ej31nB8X9";c\t"&2esTr=be,U$kaO*`+hgA*A(.prg>+J^qFCpQ*5'[J[^c57<]!R"\A5_2qF
%($DR:.4L9u*i:!"Ul^a9K3`p29&h=O_mI9\^mJ0KR$<IAZQ(1bSITp@]ZcNUnhHY2c1j>>63g#sMTIFsTd9m;,&Sc*q%uk+*cF@8
%,VYJ'E0RT:@qugOJg[XbG^kDW9+4idD5/QrA%Jq.Pf+[IY'=-'b-%mo,[`\>#!.5:N*.!&F.i+p__1AP-HoJGq91O8\e9V6K]!:g
%,&W>c%$i);%2au4J73;C[hanq."qck3)NVi_\ar<9*LV8=c-/r,0?!W8k'/opkqBn=`K[\f"_>[Qn1g$jG>l,Oo4W*?AU/"bWYZO
%`9<PlY,;+W^G%[p8&?,.'7'sBA`9>6i=\":Lg<t'XXGo09aRdu8^iV3jAX9#ZSFg$D1c7pPJHlsfZQ.Jn/0VJJtaO=i:[[fK@1Yq
%jB4qC_qY"tgj>lnZ/CTE.c(FR]#t_SiDgVpeHMi9Xs-l'W`W.m[5p`Fm&%eM^sa6(03ho]W$S6-Ss\W4jL66#8_to3f.1Z%Pj^Sg
%MrHHrdU8r>Gl5?bgb6"eUMkBe`YJ<.9t\aiBJ;VT_B.)IfJ.mK7)Iq<%Lr%*ab5D23)I6taDV`,EM+#Spi0VsbA8"6MJnlMTjq$f
%Qj^p.rg)6$YjCol^'`i07]]JRLrSM\NNkOL9EI1=-u:\@Sj;LB=Sr1mKjdr[00[DF2OC05qLid6'[lhRI]GW]B#n7+mBsF^0W#Gf
%H*:ta8&._SmNOi[PQX?C,SAR'=CpNP(*S>KnpHQ+3&H9?$Y9o8m$SiU&VYokMDo^+h[V)id>!r1:65c2$^=Sn]\)u`&B4,];rkTh
%YXh6[YlmM&>tZhV?kr4'O3%1!83nAb?^ec"@<neC#C?0L"$^-b^t=+4TriY<7[lP>icEEiDN@6gp>X\kn>`F*MWSGrJ6I:*9XKTD
%#I[Bb-XHZ#)o[tJUc0^gn4a1J,p"[oNaB<4f]T')P*?4t=UrT'qb+:]D#,d-NQ?j7d_/?JC5ig3!L(dP6-a[2][c%Npr9,N@nWC8
%Mp[]Bip2l,,?,O/!m_jG6M()kkd+28q.^ps3LILf@"n,\Gq>-G=M3jj@$]&<_`WAi>/U-$#d_3XIJA5&oSP=,#%&^8+"K%aZW%it
%WF<<";:K1QaO0&=q,7B3O5((Fa_hZ'(t2<:`L:P+9'6@BMPtPEMU">2MZ`S1E<kB/LG&LQ%N[+CV8K>FH2\Y7KFMg293`D7+;mgl
%Ks!Xe\'<pY5s"q*kElo4eA>U6K%Sj#U6$[B5nPuK8hd2KG@BT@;@c+JKoH4MMtqoe"E!\rF;-h+ohH3'-!"!:]2t0$#6>i<@nADL
%56Nk>FTd]!aY/ZiKaWhS:?j9"M*-s_JE1paVShrHYOCFaSRq=]E&:\X+2c-Q9p`IiNlNC.nD'>#]l8oVmmd=L_:3,9;ruYE)\,Lf
%$kC3SK![Z41ON-)(Vtb1\.Tpg*V.DHGkWk?,1H6ge)DV+7f845+1F/NlM7-M&ZR0Tr!$Bo%e_iSI6oZTBRN9VRg3"=(;C'0dA`G4
%9,M.Rd75?EX\ts>Tq5Ui<\+PHS!Uo;pZaW%(r[+iHKbL3nB/q38l?jpA2u(8h2MVG]F_<k63'^'PhaV^9Z;]%n1j[7mDU#f/G.Q7
%B7]H#6;UO<O:r+<N!=:q6h\q.gNge_O$imdSZcq/#!k-Q!Y*,HAnCp#&jLE:I7hnK^VHTe*#WR],`la2gcegkIc+oghS/+Y5:#mc
%O8fcUN+Pa;CO+&"_%['jM\51V_T<@!67?AcpAugt0.-7?.#GgJ`D0kK";Of_k"B9jePJ(\Y3C4''_d5jr_<)q+"$dk\21p$3Nu7*
%SJjlBWMK87+jh9f:Fnktl1Srr#5Hp3V%9E-":Yd2B9]5C'sDFXHtbr*erl*apisEBB+UD_R&M='g_<(C,G5,\]$LS;(T(KW6S),K
%%,im;[>Rm3R:%sAfRLgTfET*UV:u(+AI6)!Ol^#>5I?<'fpL!JLF1Zj^B?,h+Pt&PA2Xe29?Oa^8.^0$KYM#U8b5:Y`(V0;)M<W,
%q["0qr+lE+g]dQmDs@j#:%Z:k4I4t\!i5u;6YV\s496J:Q)P<.?`+*DTocdC4DRtjjB!]T"3M:c)/Q&kj5]Qmi<p<RZ-#\.@YEK@
%OmG17H'GH`=KuY^'JeZ^?\+SKRft,eB'f9q6N`,O`t3"#XILIKok-k,1$aE(;g(X%Zl8<T"_'Yg]Q0n]N7#\H,m4fgoZ.KF(Q-+H
%J`8DR8B2`<TJ$FZ%gV\a%koWk(>?u109AX(Q"Lu\-mZfehKntj!:V4mB8MUhdWdLB>?"1m7[i6nA45:g6)C.<b.rF7T44$%UCaV+
%3$s3T:(\'#-fD,:1!R_6=B(Dgq:;CJT8G<\ZB?.mA>.-[a)rW(30ms.W41KPUkOU.V5VWJ+_b6:j6,j+DD@s59p/=F)KR-ZdLl_h
%gUX34+IEH9+,ci(.3O%VMGYQbb\i6@G;hGmU[Ere'PLXnL9$ntAS?pnr*g+oD1X`p6h?[*BXZ$gT#Dh`>q@di6uW,]s%4KjFGh-O
%+j[NPL<s<oQMB0ceufXZ<a(+'Ic+K>Fqp&\N_D.*5iBgD0,,qo'fmI1N"Ks$`UuVjAmuZLIYEV)'L`+@LN,fBfKOrJ*Y>7q+_E`;
%6V@D$>87I!0tq!WU(F(:HgV-A#*HV6:k!'ghu4Z)BdJj*jJcI]\k>l"2G53P4'r+6rLuQ<B,4@GnAYVq,+qPe&NZp,R2E&hP6+^/
%$59gFI,^S*$@)H'Ho=1a_Cgr.ULehV(uI0/oDH2i2D55NSu#2Tm"U*YnWcMop:USS,*udfcQ?8r4oV+X_nB[*_]),4ShJs`_SrA5
%@8[5l#;`^2<W&)5/65.^GU4]p=c;be$[srO]b!\EM_Qea'3n\/L<MM"cp6An;@lL3`3PphQM=.4mtkTthgE@I$\;FS\NH)N0de8$
%:Tm/?$R9NXfS3kri"DBcAiOaK8RSKIAamVK/0.<0Z4AJXO<rHi%43\q3!$2u6,fT"$=fM/<Y.\gHYJ;+mVMLEndQY_`urRa3P$Ys
%YIWZDZ@\_gfuEA+nXq3^,rQJE]c)d^+l@)eC"bTf<U+lHV\1W:5ilWr0$f@$8AOcC';"5gi]p&9Yqc,Y]E*lPNJ88R$J,%k9*ban
%(F`HA@B_DVL?@U&4CgDq`*57%?3Coc<5`a5@>d5ER)CN3n&<5)lnrapa6&4f"BOIfh"Y.p77eFEjuB18DVkQ9((,JPE0Bi+KfpJ3
%`Yqcdf>3\_kk/U5HI<I9^#Zf6:'rel-TY54,T(B+!b27;7cS1RD!G3_[`l@dePhVDH")edP2G4]<q(Ig78a%,#J*iY`Q,6hL(W,B
%FWBqCTRr2d:n\@`^`uYmn7AbSf\mEh=su$rZ!EF-Ne-oRoI9J?0?km^jpKl(Bl+jq6_ZuKAK>r1)/AL6:]jW[8V]6@:m&"`[_m=H
%fH!a/dm7C/GpEg;pMG+2/=A3Ea+LrkH'lSse>j>R`4_uGH2dT#D2K%S6nENWfba*Qp`aC2o\a[Fm]P;gh&K,OA'0#Qflbk8!lhld
%^6PCZiUE$t%:dN5:j+sCFEhO?%Up*,,#L0e54Ne4Go8:fZR+IO$upm[8YuW*@qm*/6m*ZH$BIU&ro-(K$FqA*3e7_-s0<PPd^](D
%-po"sC)l-]+LX"A-,(\(\A>6hFpQ8d<[l$deFD>>=H)@b_`J'$/WR)3RMK[?g2(,$E?5G8lZ.[#-og:KLGIMH;&,H;&^t%G8/1#;
%GV9-sE/2-Fin@@G:c@(MMJ'q<e7%<m4Q3-R#$!:*X*5W<Ri#HO^<\"#)a\.4L@6qN@1QjMEqHY-%Ol#]f0q4Fe4CLs@q]jL.9W*%
%U-pM;?km*]>[+,E+9gNK3>.8d:1.4#`DMLK./Bu?4SW(to*iH5"[%i?6_Inn@'E@;p8V92h(H&V(_4VAgIc2i3r2SgBI`$$o9m=Q
%iB>,pn<0F(N@j$_kU/=oNg3FNA`[E]cg/RmNB<^>C7*3505Hpl7r1.(Hp*T/?3I-8PV<sYH`0cL<ZYkC`q-\Ck2?3%]U5Wa)0ir)
%#HnV?I/8[S1as'W]Ch13;X5hP3<HVa%M"&_$!CL=KnMeRKb8P)1ac,n*aZXS]91Hj1>SrN5VL6qB+k?\;hE-`0q263LM9POlp\7]
%@+rekB2g/0*W]1dQ6BW-)[1RN-B_h_o"ama@QmR:Ln0USMrMk!(j7Ub9#sLuN3UZh@?q'!GJHl**T[m3ak*jFmG@F?'SiWNA2"_i
%R&A.nk!0LiqC#)q(F/:g+4jL`4SAmpnAW+n5]Y(gLeh;S9PAs\)nsM!Pf3&FAbgF,.GSH/.^fF"X/-"*ECM1#SAg=0*($7F$o=RG
%?B;>u:O`s@-DF$oH%"5Z7h6&h"h[9C-?o8iUGgjGZK"YJQN%p?MGCf!D"66^/9?]Yn`/:"*/AsE_1<mrpZ#HoY&NM/7Q+CcQ?.]I
%o$Db!$Kbb9%SukM(Ea,NDC84n/]+Z+`huRJg`Ya+r&bEn,l[WF`C0#npu`8*@t>qj$2KNp>?Te_Wpp6liCS%KDMea7DoV^0FStMZ
%]ih6<5uP<#lLPf`:gq;iS]GoV8LL_Lc^/4$Vf*8`S3i8j,S4fq!lMf_Du!4iio7LL\A2Rep3iK0aW_T4#^u#sDTp:6"U<j/'$jZ;
%&hq_i^l0r6O+[\#dW"'P]&:IoJ[V\4B+,jBTu!Ojckelq.!m3jR$<?s^73A39VCTq^:]C>o"1[lRS3R==U^X=Qr]R8NHMCWM9K#9
%BD3oa_?=pW)WIm)&MSPd50-P/;tdNHNt_us6U,6,JX$LDQ7uolKI1dt%/9EX01^PP2VE.rOHgt1A\j%i[]C'^r%R*'=@Poa_D?%t
%JYeRAR&\AQ"\Vo!0I:3O1VZN2Aa`8gDW%)^m+#H@E/[dbW_H8YIL&hA4U^6>([$Qf`N;1b7QbP*ngYap2A0]E0DO5E]b&kW0OHQK
%>=q<u=G>qW"P`/*Ui-)S)du;le[uUhH-Q_UUUV8B'eV363N8o%-1XTm"-VQtNi'ea1rk`ATfACi?u^fl,nXd@OWeV_i&QfLS-I1?
%0@C@C(aC$Qi=\5mO\QQ2cEN3CL]reRA#oaPS5d?hhtEf^N!pP_JWA-1,^b6j9:?G"@g'-Uo0_I3;Ws#d<Xb:\)'R&_q/4'25GrtS
%.4#u'P^!lM!r`b=L3YnZI\%qT\&<Gqi/1ocHiTYN!,:Aj38U"P0[VD\-Ve&38-dDTB*@u;`[nocAI-68nN<#8_C@[WI2iVJ8P).e
%*/A4G*Lp5b((UpOkT,@/I`dObBnlPS+#FO%(IpoQYmT*p3*Jt<@\<-9U?"ifd^g?3`2B,g+5Tr6,:6U$^a`SFA1]+,-7!4a7.<8X
%hPc2QO0e>$-@po3L>oT]g]85;PXA180gaAJa7I8i^$"n+$AH>@3oC6.39B-W(H7-ldGg3W)jn`C@P$9u0di6jGk$o(Gf%YP3)PVe
%?XU8J^?Ino4U'lh?@fVAM'Lkrr:k"<];,p;.Xkb00cNS1+56qlG_Q?TYlqf9r&BBa(.DJL$Lt7<5d[0,T"%-d_X_3B;g2KC-q&/H
%Kf=beE?j;ZL(A5nO2Z1m@&,?7RlTB!:kbAPR-o)`e[:RrJ.CARGkNkRgJ05e63EfJ)k0W6KZ$[tb_erF'9Fnk!BVQ'FPr+&4H;^J
%;im0%U6pbWZnmB)b<(?B.\I,MK"-,i:^J;U%7ki$pO1[]FaUjS"qSXj,[_!:)q/`aAT9Mb1Q8U65eJXcq+eTLA*tc%pE;4;e.pq7
%VCa^BGbbJ#M+*@dJ&*L,N+P'3PR:t(Ma6W_$!TdH&2kQA4?a=69OU<$.tfTg:iqZ+VC\/;1%<OQJ[&0]a.-,G0\,0`kS1pU"\8UH
%(@MQ=[4hqA&Be7>.*mRDNNGAAahj`/9QUQsO!1_Bn>IaGC"_:=`/b"0b6OoB@JDk:6Gj:T;UrgNjUcREK*tB"7)7Lq:c\ZIr*9p6
%gp[qI,.mJ?AW/>j,K;Ns85Dg7YNPEpgkmDo8.-*`'"d.fV0mKW[P3!$S5`IM.Y/;W6.t^MG_[n5Klq6Xc9kHiLZG.\K^=tZ3*@mA
%`&GkR<aVrBaeS\H@E;BHY`+u$'-CtdbMTmkdn$egJ?jhTrt`9Je$f(qea-ht`dg1)pktIE`HPW;)Wq`r&ALYl-S$*Ib)E_6S+/UX
%nV%)ua2!MLN^AR!31k_#_9?*o7&iBXoA@^b!nd`%@cZ1l6o<E6RdEJ04buQ^[OmU9S=2*B4uDk"@)M.k5D**8SZ"-s8&j=%XtLIV
%1B39_MSK6'GbZ*&rP0F]%J.*]Q5AZP`BV3jB#(cZrpBr.<S-7cJdQ+XPth6Q*SN0aj=+%k*]5KFEH6^]kuec=I&P_/!Q;-[lR4$C
%=BNKY2>I8'WZAIF37i3?.8ZbX0dOsdf60T\L.'7&E9uA2.E(sY*Tecs!D61DLR9k$YRSuZCje`BW64CcH=]/hpV%jDcta%HFp]F1
%8l1GD3iD>_ie!IH+CQ/I$H@`eN0rFo]Q\&fn48uY&".KhAT#:P#Z%gf(O"J"*f*\<0#b/I0[sZfqI8#DXUT6H&&l/+2MOI>A;Fmn
%%"@I,QkKf@KBHCC.KqhW'blr]'Z)eS/9WM_$=R?MLpEs&XGt7A40a4J_]u2&5u:W]lqs5H?3,P$gp21SNu?li,XW!S6)bDo4S=B@
%W'HE!^gdCAI0PPK<R&==lP;kS;]DV=9-_@o!pjc1`D/_+=Gb2U5Dl"c7t@1*bDd\=/Ns<Wii=n&51=1A(r%fdM9"3rMYfaAV*dVi
%V@!D's0Va8OrR-#[>FHUjLiAW]*W:n\'^aA2JI8c:6D.Ng$aE-/QFT4(?&+i*MR]X+$=?\eT>I?oYH$'<*l@)]qJVVG4`)RNK68W
%?j]%2[*s6ho_`\b4=SVTFI3;ci*sM3+g&)LSNE\"<^F5t_cMqoCa!-!gqCer6.HJ-d37eHg4*(@@L3jib:Xk!']g&roRuU?Z1jlI
%:MMLhMNFW1^Y>L6/Xn\5gMuGn&>$AN).9&6fM]jIU75E2LYfo$*<j?\,+[1&NM.QAf$$F]0`M"Df[TI@FL'BC[Nq,0mXju[%IJ?b
%=`EW1HIA>GKPp9jEZKn32R2?O[Ni:;Ce="/nU1+CAS5g)_7I9Rp?-#;94j1UZkEB;mr)eLM_XSTSD&HO#c11='nBjdjm7Z4CUeT8
%'u^btG+50rj$SLn`\Y+M(J%Vl7?bdfQ/n+K=j[u'd>uNk049/eCD!PZ<qa;>Oe'uE0A@39qgqUN%hLDMmsu?"CH.8`$97pfBk^b=
%qC,aHb./lK9IF4UT)&tes"hc=HYZ4@PPs,JQj&IFUI(+(Hen_fVhC6g[F[bQh;J7>[IBX!"W`(32Z5%N9;/CU0N5a,>=ubLK5=#t
%\5m-Zi*;?=A7RQ19EPZb$q!@;;dc_+?f)gJEMU*<)fWD%+R[]ubquC?2fVUc[/r>[pr2@t`bi\=-Y]&_.S9R4\jbGO_2oZNri^0i
%m0l)Okmo,F*S%3-NJk@-?/J&6H/b_9/+[R4%U7d9\G\\cJB*bH^"pg*FE5)Z-hHP%b&jH3>kqDS/@5<--`l%dppZg&NkSIqmEg6A
%8Q(j%C6Rt!_`7O>Bs4d,VXr'Qi!2BI4Vo*jId`,@^s_HH)cf38hk/NMLnf\K`4LlGH<G7)C2i8$;[Cti,8fISJ(hpeNu3&_E-fDI
%7Pj'&^RWb%$Qj'rG4+_r0tKq.2g3q[*2L/tDoOrXV_k!G/h:Ht>NC7&h8D_V2+/R4GuXJjl\b,?;A?!r/++H:4.#&dB>+m'89+7/
%*7)-9!6#3&^E:tK6Lg,.]4+aGeWc?t[b<C)D4C`=E#Ar;'G\7SYiYCcR]B8NLjh_q/TWcIXjHc[`ZDCS\UC-,rc4S`Ao8](14er(
%%anu.j70m&gOU^9Xti&MrpPm9_ZQ]q%@dWY2KG`UY2eqT]&]5bUV(mL'#M>gj=Nf/gRo@1REiDkH+DR'17sAt2MrAZ8hF\5%lOAo
%I*Z?QepAlA*k80HI9AKL^FZ8q:IEaY%p4F(Ch\C7Gt$7L!Vmf/Nb8?V;X@5HkZQO0/Z1W5?7sEAX-Tb]_>L1j^bi*_`BN:V\/b"m
%k4&kE"(`b!4EZ=AWHt6(1qhP._3AlPU*.FSm[@E>M:je-\WlX9.4"3E;]M4&D`0QgHg9Dd^1*5m"g`f1?Z<<r6<!SWVgAXEjO+rA
%p1&O#?$d\X9i)0iH]l7QGm,:mg7h0MmdQOSZQJN)<RCE<<+mTR?MFK=abkekY9Ir2#FQbP7>O'`dZb\eFgEhE)?c,u*aD\n_er'S
%F('"h1qdkjZ=FQOP-B?rrB"<_?[+[t"[PC<0=FK:4e<o_T=,X8NnuT*'V/Ib(k4]o38I?/lVgo5'm%*tP#Ncr#=^F^VNQfAXg?`?
%HS\8NmPNIS&\#sM=n09PeM\3e*]h`(=\Xr/2VE#P4Yb/Ybn*(cdVfEp=k)\b$?GhBrh@KEjg(YhLMsq5'^ia[p>+%!cP1gSr(JZ`
%5/P<aVVaEq+(5Srs,GLErU8F.G5C*eNb^$*/+gUT=p\\6>++]491u@;3A?(I`i%@@,atM_*UX=,9o9F!,=t'iEQa0n(]1HL2m)&u
%dodbanZCgNp#S\)q`aDAO2b`^GWlC,qQ4ks6H9:UeMlU+8[fCC&3eRD>(EZ%(d:kiiP3tkUIjm'ricA!TE"Zcq4I]Ers-l/:n`CE
%afCgG&\&uNoGKdY/_H^Q<,cZnqas":%R2#nk]]]bNt]rng(ZI7gEY,!n7`5=8A?tIn,]BSqk#:U,X;&E!bair'VE4R>.<S5iMA"i
%5XI81&3):2jhPLb.1A$QHQpL%I]VD^I8g#EX6;M/d$muR3^:0Q^"Siha)*kVd:T$[OrOo=hd6P!p0&"t?A2qP6k2<,36g4+fF5bh
%,p_b.&10oV2&_[9^3o<gRrmUJZ1mA9XP#K>^PTWVV^YAfL[L#`cf3'G![WbIo8=O;\8q!H2!Oa(dl;b$oA^uCCij7-j"Hpp7=ek@
%8%4ITnqk^?*Eks9Bnm&U@9LK0bF!X6TU]CcA3s'&CEgkh6bKgo[H[50ShrYkbmu,X-gB`#;UgL=$EH4pIhYJRK#2ckKYsWWmY!7/
%['dnAr9\(H>l*Dri=e&YKslA]XobceU)ItCob"Y0X[ZRBRqC.R-RfR"W>LM'/trG3bq%elFLC+_i>Wa!M]rT#^n]bB$ssH"'F)gp
%WU90_H>0bT`FB=ig/Gt%@Bq-L)/QV9r:Fr6aqH_S61Jh_C"=r;YTT#7gtL=C77NJiK/V2nqaEXeX><fU\@H3:<=F?Ql1<$">.C],
%2PZKp82o>sj'eAf43_?>3md,i2r$H[Ii6cXU`H>LG<m%CYrO2FP(uaE6t6BYn3j$6(IC<V]]_[P$:1"2#3+^%,dtr[.XE6lBVJ5J
%6pGX#Gu$ebp#0mV;6FSQ8"ZXnP&I8m4tR0YMq$S+de\+,@pPtfiln0-+mF8*92CZ+;=5F]*P@G*@cqTHG?[pT3Kp`s/^%Hu;\0j-
%iSA;AP8#Bg^33#G*O*nkEpKc>JX+`".F/U^-B/r*d+7qu9-8Epd[*fDl1=RN%#gU?N$'PV*dDUm3DpPncJDbY?19C_V8K(rD<b"8
%hX;D%1Qt-pG[*os;">BnKQCin82\]YT8cZG@3[K5EOkL$1q5$NT"^])"QnE$Q6/P7hI>c&8t3rOOBfE-P\*%U*EWiX"X4D/hnm9!
%^\[Y4j'sq#rOBA%i+UCN,3&^#EZp,!P]YQnE-a<dTFEtK-3Mbi6Iih3Zma(!s4hE0Nm"(9_%dZD<EQ_em7F$N-8?B>cr!*/a8\3R
%JV_[-[FujU_)hZC_LGlM#05U_L)5`jmW`h69m,QYG]#S"c[4'KCu@&2Yj\$6W/nWOKa8$-Zo-HTGufTFYSj#]9stUHE[Rs)Ff$,9
%&#$IMlganq*PZ>eJMb]GX)O3TWkrOOD<od+*c5l@-l>7Ro.WCEOc?(`O&@X@->0a8Cf_idLurNB($d[.]jKrg<ZoXDkUKl6[d*?_
%=_e23Nn"WPIr5.7'NHP\&m)\!=LA]C"9Kc69WS2,>04/*1t/fOU>Z)k:rQ!i/>cCIaT^+/K<F3&EiT[gQ$kX3>n+5PB9$3;h[TE6
%jD*@Yg?[1,+XA2%0(g-'6/.OI]Ag/:mQ6nCBS==;7j-)i@n\*r56sTg2MTpN&;8kgXeP\8Cck"'>kP"9`o#`XBL9^31>1;J^[[k?
%,ND3:<<S9$A",P,K1%7X9-<,CW4p3i*5,oU\r+O'%!RP5NlJM'^KR9")#.2*UTl*8!CLkfn9Qs5`P@-)8=CFt(UaM%HmcTO4QAi^
%AgM-NfIW`i-YT"sbe(A-%u#XjL2T`n"+aZk)EW``'NaUK+&?p@MD6o*kSS,lY+8gX8]\&!j8-OiY2dK`$PFYG.;XgQ6mf`n3^b6E
%3mmRJ;@4W$"e9.m.7Kq;lh30iDS1a?idWmHVoV;6Qo^5"SBBlScF._:j-+e:L-Q4?7'_s_,1QuZ]+'KjmXf9K/[!Cp]Nte.:cOO'
%(+&[OorLaASDK@e=JW?]k*7Io1De=`kN.nC>r_;rYAn@Q"%!Rj1+V;J_)61BAj'(-#0k%P,k1m[Lgf^-6[6GPf/hBC_L.!eM[NIR
%?3iCJ-H\e3h#a/`GW#i"o\lN/Lb*:c%(X]$oo!66QcQY`UiUC4(nGHL?*n6>+1@s)MlF\@OW?h[b^so-XJFEP=ukl,KC/j9Wq^B]
%M'nj]c_Q.`NWEe/<`6!fDfpGpF1b!3UCQ*cPKr'uBqs5;9$87C#%Zqtb6'!4_"`G"mMYo?gRro51kn*LP('8>f:)"Hdj)!gm-=@X
%#VM0B1sr6uhS-kc?YHhN3Y5PB_ZiC4%GT5)bDVs'7SD,3)^ZQ;#la*1!W]-ieDX.)@QjpQnnXXZW:SYY)Rh&^]n'0'bbi-b%$19,
%=U'\e&Bn^`]R@?5Q4$f7ge"u<*u!F7j]"Msc'e?%1t,Vn10eX]$BDhTdoO$DRhUp(?98tg(n2c;qe>iIc%Kup9&EEO!e'.YJgXW^
%CeJWs^dh.amDi:InONUD/#=BB]F4RpN25U;>oCf?Naft/X6;(1f,?hI;<WpL=9@b%>u8NO1cT3P^A7k='6kR%>noahFMZYt#]k+[
%D.q9M^m\EG&60ECeISA9J!fV\V\VZU%62O#e,)MQ&N3rFkfYqh9ZPOb)sK=K=L@,BLXBS;mpUKi='7,__D.!q2PI=%G+,D',diG-
%2rO'#Q.-]p.n:UMX'k8"<VDj/CBYeL;2:dMg99lqXQ':UYOWA#N&[QGEUeu56sa=(6Ig9:"-Ugkp8=L%aW%uG==8K,*9KUK=;aP&
%9g0J<DiCMH5qLA'VUaMP6_*l1G2m^2f<j_lh[6LJ/hG@lRa1IGQ"<_##rjTi9DZ)0`@LJ!kHI<`K4-Zj9OHV>YUBl[o@+Ibm@JgS
%89t"gM`k'S2VU.<;,oPVJWpCJW/f7Oc2*17V*^sc"4!LXRfZAZCG`[5)L_Eas!VM.oMfg13eJ7doU3ASLCbJ'$i6f^UuoIR*+aTk
%;G@iST8b0XZWr$68<*^`_,aI7n8EGsRT^Lo;<>)Z/[uG)%tU8`XaHJnHY[72Gkt,d/&!1`]$,TRKH4h&M2/c5`ah*SZ8@"I&/+hZ
%[KlrNi,/0p-Coo+Hc#4\`qn@a`5Ou_4N$r>9Ts*KC6\Wr'QS0T@uM'DV\UE'2t3Yh`b*g7YUu+QS&JLN>[:iW-pj`a"4"AfaRraf
%ZA3SXI9afW2EStjcak-l3m=\ZWMp&`9EWSG_<d5gs![p6K@oOd?WJ+hqS\"oF#FnF#2FD7!-dq3Ci(!t\mVY_=#Vrq'"thb87m1h
%TCCU.fn&'Qn3f*1pn@H4GIGGY"^@2HGtL6OLX8iWA+"*;+OXd$kPDR6MCJ3Zo6tl!p8I"(:(TB44mj@Kl&$dX^F&ohD4+FqI$X0A
%@&:5\Njd'l;RFkTbLOa1=1)&.oi[N,-M:D*X1e3p/BkVg(D"u3jhJ+ifW,'>U]pj4^+60_[[!Ugi>sA<eDsSf%\t2N81KGhr.;7_
%/#arpCE9#_jppo-%dJ(T%QGuY=6)4$SjPUads?+uhtG^h&:U5_)E13@0j.B%9^K[k^Vd]q@rClRI8Qb!q9_=`kq@itoE4r#5uLYo
%M&D$!`I,;?nX=c*L+esj'Cpa;\!akSe:L5g!Dco;nPX'U_l8E[OD"IB6uLhN,dWf#SS%E^D-@Z5I4@nr%>pY$0U)Dm2%k[@\3t_u
%7Gs^"c3h3C^Ri#=%fS":c%]5k(iY@-TL.r/i\!9S#$mu3@q9oNT:[-93%IQP,0_!Eb&gZ^9CB-,<:S<bf_R-+5EgDoj3na+hL8'f
%)u_>9HPB/F\a2FF\SLbYbm1W3eR5F@7:(/0$R5><J@A*;+t6.U)T8C$7ile7N><6E]Ed'U]5Bf4'OCFt_r&&Cae78A/I%3/]&^No
%>G]][7RY"F&4LD7J,r;OC=$snT(#r-6W83Q_'"gZ-\(*Yo0$j:Msl-(g9f4`QpN,AG4]A7ISM>M2PJk"kr?8C1c$:GH(i)J.5!)"
%-Wd!1FNms-b/qtAb=0M#cX_@LS&cW,.n^O9qun#jWfaK\Jk1n&@9/"_b"&)8()RbG,f0f9Z0&1o/lPO[3h$8Q::mFPaJ?>@RClrO
%e_H)F<*C0mQ2TA&MZ(J$e]&`_$P_(P@)q-dojko)L<C^>-naLFo+p;h>HkpN<'NIb)>6b;=B+fNNu.cOW6ZU'C2P/)VI><A:&3VC
%@h>'9!U&NMBrqQsFclK_Po/>FojmT:K6&adf3S4gM$7gW1L1gUT%AG$5(e.ZTeBD3A=Ngn$hd2-/a=iV?2I^>en7kTRFGF]rEUF9
%2=9,da]OX"Q-F@bUb^F4,6cKVF29='R40`Xd)o.\8?cTocY3"i?H:M<XY3(hI_f0iPuO"H[>(pk>obRd]Od`)S9N[[bCXtAZ\T(B
%fQ'ZAndPK[hbRs8mn1=S:bg,h+u,W^2DKI41jP%@@;H:;"\&''/k!]V^a\8*:,@/33U#*IbTk:X0KkJrF1XUUpJ48GNRWPN:B[2/
%n=46gCC]ot\tr,/\sVpMY:ZR@;EW!:/&:$Oc>bQ3aSX%6;7+=d0ceeTYVu=DR*K;E;N"(o"3pqYP$3K_jeu[;'l8:6KqCrMeM2gF
%M\UefYNr&COeD,b[q<qO(;pe&.ULIjK&Q=)KHP0pit"pT=j[b/3_o5PP+MI<KT.=ehFLD'B8bXS7Efj%XPmTR6II^8S>jTRM2;M?
%f^QZ"pR8u(2^[!ofVI!A?tEt@:C"Yjg6+W'&Pqu=@g'YDjPX?6O4g9YYU*jK,DH#OT\lEuoRRih'a$4dUF?%kULCmjjtT$_X!uC+
%*9b:5?1-I&UO\mQ?fk!ZaLDmg*^:kl4Lr@0D59VnpT^tqVA%pdLc<@5f(ea%EK?5%>p'6;D^T(b\f7rmXY$a=Ml&6jjZ`)A<S.:V
%0>Bq<VLnW$Yc[<4LN!G(/]qFV!D2DJ5OLFi:4jA%"93@C[lL1l]qE@(L^L.YFePGT5j5W)*<8"l:<$,GE5j=o^7&'gqofU3N4(>_
%\XE3X4=6_lqA7C(1jPVH@p`0/?+OFM",Ea2:1,dQdnCde95jE8-6F:@O=R:6O\>l&Z:S6#!cKs(G/0=m]Sc/N8'o`%[m6E-_3>1X
%G6h>4-Mjtg:$(TnLH(BdGtT`N/0.&c#i0@MbiF"@hNk7"Ia%>VQZ%9gPut$!eM\1E."I\^-=UYI7EW7u$)OCBo?W[tpF,oq<`9P6
%*G=j,mOtdhc4AKr0q8iAI2!/W0,^MskSUq/GnS:+]3Bu\YjJ1r3'k#VD[+&eJM%IEg7[I9>5q/!D!_QAi`F$A^et$@3S$P[:72RT
%7N!(J&Y@LTrO3T-\1OrS35ap.'qsM(24m?MG^!DiV"BL].DYNS\3JFt)E:kV!U<4N7FDX+@/"F0R]fdr?rR=>\P*BMGZH:H4Sjd$
%,kOobc58(nq"5s*UcC3mT:d#*NkY5'iPY!YER<BakN#LV7RMeSR5nQQ1YBgDhrZN9Cq&>1RkbC3TW/0YSYVjFZ1RTqBi,:p0o"G;
%&/eH(O,!r((MSM[;`J.*%1#<H1Wo:q*t!3H1_q&=\0,mXH5lpn&,Z6BAM!?XjF$4_"a/&)N.W0S5L:t_plB_s2X"8"dcKMi@'O9A
%_N*eoZcu]?BfB5[!M1`N;^XX=$E>s*T'TnX7"poj.1k,*?EU;!`djg;*>rgfhT*!I9dS7SrBN.A-&9)KO*%"nN33*^Z%G%Zj:MX?
%akr(HDE*\SS+%#)?6/V]4Z!$k4b$mcq#CeN-OL][5i_aq,,`,1o?#,We,gsV[_+5:LljaJNiAKQ/%&hsY+mtXVku/aq.>4@8PjH>
%;uJ0#7iVi]ZmuN#JnAbfnM"i/\ZQ9o%Ia)em7)G<qhGS!gbpG,L,Lg-lOk1:V[2pGW\%Y?FA&<P,hu1;/FoY6e:XAafWuhOmJ(,u
%]B,LH%c<#.NP*ZR<0JE%(:^k,-D2cqR0UZN?k43.YgRY;EuhjHC$0*_^gIOGf:Uh\E.Xt=#Y)en.WBV+U85.ss6W49FO6.;+R+iD
%5I]6%.&]%N.AgGKM/!B::iWtrrD7/^h0?)>^@I;-^W],*j_b?(]//YF;/ZPb62qc`P_jY0>N-=G\IFOu;YgWs5KE01\*Z[fm%,dS
%=YP1GE6XhGm2=2RGUe@Y4?gXj*h<8a&AW/KI?8mQ%LbuJY-U*N]*e_NE&^Hk3^+GaR1"qIbAU"53<$q'6n<7H\UfD[RFgZG3t(1r
%5UKb:]!=hR&IN;g6r4Hua1BklAGF!!l96W22lZrhi=i0bnUYR,b`EC.BX[1!D,kM@?+eRgc1TEMb.L*QBD-cH4O_Sb:s_d!^HOn'
%BT,.(ap5HT]XfWT%hLcI1`9O$G7geB#(a6O2fSE0BX!GN;9#j"Y&PVp%")9n%l,)P+%8=%cc]9I_ZG7R2]nmLh*SS^T7O>g\4?$b
%#ZEiO\2hqBmne<SAgtXV6umlA?i3qQK#(^]Lq8a:&GbYACn:KkO%_4`qCLp9dX%sq>i4f-f\T?2V?i(34)g?F7aFYG+O!Um5>YS$
%d>o</&J&=I&;O/`_6)4=84*YOFD;RT;T#lCf9WP6+$3*?nuWFt&hCN%g-30I->lt.F'.o[S^"8Pp*["_MrKIK[S/X4YBV'YGY0Y3
%L[^=IqSn<6F#F\\VnV3S]2\_hMIg[t=!e3$6%di^7Zk`c1R?snT/@UNX-\O;0oE823rUra>k*gL)6&Ut2^*j#A3.hnT4Y0DnQf)p
%qJU>e.!87/$EJ@CM0<n(=4GoRoB4NF/!K0-/I`2=D7W"%&'*hMQdSm?+OU;lB1kZsdC4%H5c0N_b5(LJbX55HFjM.\Qqd`5h2\$s
%JV4g1riV+*oL&Ld')lu0f57:'IFh^.,,kaoCkL$m7;B.90,:lad+4$XJ@PS.<ITpP8iLDTbX%'Y8C1LM8ShF$16iV7MB+DD6QDQL
%Sm3D_2s;f"Uc.Q.>1KMs"(%0C+:l=C60T9s19P,7n-tiEq8IsOAWKcfkSP[^O)Z#$#827rN8u*#`Z)YQ3t\CcN;pB$CPX:`1pKJ+
%dt"cD/#fJ`>?,fT8:ebbPcPaqlAuduV5;k<@Mk02]F3HI+R&%kNg1C>AS8NsPO^\B9jiQs>l%l5!PqfOK!Z7.?0."*AfY4Cq(sMX
%@^l(/1+;ACmaq`_I8(ZIeaA$bA3j9]7WPQ9,@;H*d'>Gt0'bm73UPU-=)rjK?_ONN/%MUu>CCX)8?(1]TZ``J=qO9EC2]'3klYcS
%&Ti2.,dt9h8gIo!*kq&ZC`mV19m^o31uC`sJ1J05M3j[2HlRpHW?-._G68p$YC+:miAb)?%rD.f:YY0'm6JBa"@bNkP+Y'#Z-Z^f
%H+^X!<RTYI!o>kg2EJb`30'02P3Pdk-i(%gTHE!SeAj%I8"XD=&hVm"/o[[5O8#s>13&"2[k+01+Fdk7n*%@]qM#rP3>n7WH_^'i
%dmCW[eoi.6VLU@+fptf#:oKP:gRDaYl,T2c2rTRik1+!pO></:ljLKM#ViMpmc"gdfYue\4]-I0.*b.CIMRg$GOi/$"s6LqO!Dl&
%iL$jHLkkj_>(dInBO[HbId[sd5ZXXL^J0-3.":^r1fm*FJ8!6XOPhUs\[Rf\bPXh,9lK`Z<fJHZWX37XUY[ZSr'6`7Y&:T.)-4a4
%o?,_Z-Ob=n(,u>Q"f0Zrc",f-.d'!f"I^EkSKa#E))V\'NB5J=f$kScDU[^1c?cA9=aT&Of%Bk#gIN^oU7E?C!J4T<&6)hoku3jB
%#7rTihTP^K$?V7@UHRnX,+=fSP9S=^Sp2#SD*H(m]pKmd(tq(B"!(TfX"QX3$t5W62CfW5m_)1@*CsFaK]_5(a<IYD!(kr,hfd&A
%R5LEIh<a"e"%E)Jg:LJmU%I(qNIKWo)/gd>6b@R6UjG&<42^<KgQKE0N>,@R9"l,i+^W[tmPJ/7Z9@@]'Q1VQ2V\5V]]Qk'M[%C,
%3I%NUJAZJ.:YoGs#["7o?Y^iX;oSla*I7O$\pWFo*q%^=RVh9dD,>JaJ5a0Q%ORcmbLR!=&#4@b?ZCOLgeXug3'6hEdK`7KV8_'Z
%3rLFSBe42jn&J07]e4/^$Skgg""Kfin,P[%a1eOf,>2]%/(3Pc$9`e71fCBOOfd:tEg]s<PiDHL+t<tP4]<"<\I)W]MptcRhJ+"-
%/1:O!GM)4#qVR:TOT81sk'HEGa`65^9l#+r^j-FF18?2F=mq\578Q.46jh7^cS4c'&H5nLf_N.o)qCGrC$:"/3sF0)&Z2IloT;IG
%Gl%>l-6c0.i/Ri@R_LEcGkTB^.=?P&(GkT8pOsC3+S[k^XKdrc]e`qqU\[]bdtqObhMIsdU'mO$)C.h6P]?HVgUc9jifXFaH`>KO
%Wdb<C($4;8>=e?#$;phWhi=bR7:-L6)lIQkT?&LQT>QfQA\iMRNjAj6Sr1)_r_PE]^"pt(Hm3MGMO0$f7L'q,@=^qqL)\DIqdMdh
%;'!_8g"_YPU_'T9ei2%%NU$LA\5Tgac]F&M83ec>CV#2)+?BTF=*$cZAGg;kB)^`mNL$JE8s,1PYK'KnX.XY%]ObQ.?0:D+(nMXM
%c[NOg,SRP-Bi)P[8n.D_.!`reP7LI&f'U@dMAjS?dX2jj!j:Tr-!k=)lQ66uG(n\:,cZ/ceb?HS"P(U8.6Q(G238"I-A7JG.&_NB
%+te:8q'3lNc$g;Bg.jffNRhV-a`)se&Ejej:Q&<b?^j#'po3m6_Q`OV)k<XFc$$C`8bGt,\+E1j-hWb?1W2<'A&:SHp^N70;s+Rh
%9l(U3psm*r]bL3XhVM[MXq54KC[rUqZAuZ-p=9_&mmfTfSe1,Tc;&)i?eaS(17!9/_j*n]]u#C)8snE`h?ACa^J081V'?.sk^[!;
%2KIgnZA?[6GT<S2G;uKnBn^T@bTV(;:f5@]0K'CO]!WYM"JiVe;!7oPh]4;B"2'*Wj%X'gW&>_"est>^W[Z<-f>ED-:td$k=$%7S
%bF=LTYPm>-V4t=(a/OkBVI)GJ+9XHjpQu[TK;AFR1Ei#]-=\$5C&otCqqM/M'gpor@cP??]/2Zn4[Q`h\6Xs6J,R;r!9s##(:`*6
%pAX=]4^i0=E,l4K4[Q_Kh:m*caINt9Gm?'L+h#Bi$b,Hn:;4I4]$($ehJuL+qRo`h3?fZ;7C@E<>7-0MF?S!?caBfQlTDLG*^hIp
%E4*SGogE#t2X/Q:ep6;!@BSHsgR0bh-H&i6re1o#mfa;^RC_$$W<U6Lh)HeXdG6iIS%EVb[><tTi%!AOC)-`UNj3Bj_<!Gqn_Qrr
%4'2o1]Y`#i_)p)m%ECZq=[,1MEOVM+RDJ1TJlDOQT\`CErY+3Uq/g[lo28&]AgP@4fN9J?BuVKLFEf=RTH1d^D>C:Om,AX@))P_n
%L)Nl"G\+c96%0%E^[Wgo)A\hYclG/.NPnSPE&EO+pLR-d%\)-C$Q3Fq^;bb@CN7>4nP'!'<**?2[-0.."5Qi\>P]^n]-h=EbW4S_
%j]<s*ek>BXL^8^JN@%lcmb7n[d*sTn7DX%%Fj6FBh3MtslgL_Z8fd\e7Lae@A>/a"W41Tl/UA9=I'>G9HnnH[b?U;?K_EpJ2MBlX
%S/l!QH\>BlmBu&-C+C+QkMGkVh,;$M7JTKR@cZh<F?PV/"qC4BU2,]SRfT:gCPIkGHc`>V/7ocs%Mb"qQqgkQ2qO3W5lERK17h[@
%(d`RmC<S_hD&4aV"k;#(=4_;(po)+*kl-@g$0LT0cdAp@Be%oGIlT%kK,`";`MFE0,^gUmKG(1GB*N)4%Wi;SIC^k.^m>.?TFhe%
%1k,Ya%#7)/Sb")+N-V01Fs.&We$#G"=d<fu/CV6+lR3.@j!c5Cr&VuPDCJQ6o_h&6NTP8<#,6T7\c>em2&FjFY83<q+n*^33KY<I
%DVeM)!:3n"5,.F(KYt:r2L(tN)=,)dFFSo3I;kZbS<IQbpd1u@!VnKnbYgD2Wi7,iQeD`r\r4rDiMcH]>lA:E]8B*$SrPRB#7`Q<
%Xf6SZj$g_Bidh%ZO-W:to:"m`T"9[,gc\Vi?"DTqKmrMa>^nFVi^5hZ<_r'3j,s[7I<K3pXe8Pb$@Pi&GtqJ70\=`BTM9+N-Lo8G
%*?!$%,*h\^JoPm/0DL87F/q^,R>GsN]@bOnjYU$!p90?]a(cq/-,Y5%=\1[QhC)a$bb8ssR'5cN8@K;="kWML4.UkQ_*S]jFgUWU
%k>ctfk&&WAhs'N'X"lhHN<5cZ9ZJM.2mAENSVXs?:+`=(mDJ&r/",2&^^uK3om@WWr+dBu:;;"1i7k\-=%K3&`VG)%XQZmR6;i'*
%17mZS>&/n[_bt=]9K/>sen$9=_/mVg'YtmD?06C(HJtWIE=S2n:9I9=Rk'No>I[s2H2FhU-(cHld$AUs<PXl)<9(*p%n\S(Ah`@,
%PF99eG]9@?fgU=#TFDX;qOf0kJm=Os6OsI]igK+7lP-IeU@.gQO<LBVV,j:tbb<3>l,^5RPPnI,EbS83pJ,XJkQQh_emXt2d`WZU
%@/<+pJg.4S?N&bm@#$>-N2;u/@72['DgYT&_cX-B4Csp,c9c#69nspq=(>AnWolYY,,JPn7MO6J?pceHJg7hD;1V@fr-"hl@oJ&j
%13_E5XB4GlGP7V7(7(W)1-m:KbOGhKV,.cJlua<_$FOBuNQZ]32@EBLc[2,t\h_qeU8Tii$XRQ$4cWd$d\=&d@ah#(d("q`oTN>.
%me)$IBFTQM^:'^i>-Aug[7!FCG($/I\G-PFp*S,X63*o<*<hEWerLh/Et?Co5=UgD]gLk.dK>8tQn/$^25`'JT</dq[]?j^:e.%L
%j!rc0gHL:h04dd/eZn^T>o84'=gfm1f=lu!h,`Q((JWbDCH_\_a6b`!H_Zl@SuJec]#r@QFc.6uX1[1':("r(_Eo%AN)kVjHh^2R
%[+M&&jBtX-[RN.6C]&=Cq:tlVNd-VlV%lNW%D#.JWNA4o<VAX1nX4TsCG,/;B%r#g4"\Q'6`Uhs9*9uOfc?&$?`hP1+s].4d4hS:
%Im=uf8Fr\!'D_W(/m?/o&$[^X>fB`YJMc,P?8ag`!dGTV&8k#+oVp9.<>##>6eJi^ll]**d*&*\Qp(i)%Ul!Tc(\\)2O/lE#_5ck
%bRT4q3i8fTC!(f\UTKM)NV+pU@r?<ur2E?r)st=6CfauPK$o6"BRq[r:@knZVjUlY^C@2)!+H9^)fLd:GCW6CR:?$eid3Bo$EbE#
%Bl2+pe+L^U.urt`<.aE+EB)N;S>"_N$iL0,31HY1-6Ao>;$AIh2[_t@Y:j,D/IpmnZO=baTI[OYHt('rW>0!.67IL,Q%bOBb$Rn)
%gR&].h@-S9k]Wf_rO;9SE-io@.PFo#d`!LQ?8Ae5aR#D;(Rn[tF8N3<iK8_CX#=i#-AFq&1l'f:r^liARMMS40h#.=B::s6e=ON5
%Pst"Im2oC[l7q[As.lrrisqB"UCF"lg7el:2d=gr92P)rPucHm8,MQn+0JU,P$;VC2s;aL8hR.6<o<qer1B&u^c'u7s3jYX-M8$9
%FbL(FVHq<u^Zc3E0i'$_q(C`DphfjClU0H;k[s?W(?6.qE2V7J$-D&Om^Wn@5]>*>NK,5faf4[nmO-^_c]PTYk_>-4imNK-7Rb;A
%ikG2J'A[5a9,u6Wp*^4lXmr_aFAb%%dVK7YZ%-0*X?V?sdP/,\^*2hK>R.^p/rBnPgB:r=)L:I:k)hQVE_LYPNc^n-[c^fAlX(TG
%!\9g[o$^HYb^^]T*rI5/anN&fcaDAjeOAfOVeot;kVGa+OW;d2n+1,`I=g3E3-!I5TAXk0:M9Ys#R]^lE@:/fhO!;@b"IpRgJ0Vn
%5`f!njC%j:]S8-bc@o,FRF&q/Oj;CsA=CRUJ3.UXT+VpgC;+StST>F9h.sk%TjR\MGIfAs-NmYU]nf`RcuJX&VdKHKKkDkCanq6[
%Z<Xf(I7[a%<a$V6fMU)@Y'F66:HlJBoT,jRk8A\`e;:UK=[&>`XX"]Ro*mb((TFN/][c^?0?CA^/8'93O=/j#jP6_=_NA:#_[plq
%gZ;q=\K3-)G+0SFck54^A,qF7gObr/Jq:G\[m`6SGRM8<8@?q8NC#E?@cr1(IAShmYS@:2;G%*6@EPf/]^C8-Ei8!mr6*>0'3*T'
%0#FIZ8=5;(l$)7<j>DWt-?7,Mj&A-BA+$HbYo9N.`u0HZqRHJ^kW03rZMOn>M\_o\p/Uhh4j>+j73VK>?>.;.6/rH-&2J*?A!>>c
%)P2Ho+\(YBCc+ue-FYB=ki8W9L8)R*II5jHY,M/-jaF!e&?q(jBfPrW&^D%;K-6]1pP+^)U5`+LQ.mmtT%n84L9@Mr])D=X=35(%
%E`&WPR,*rDVq0RE5#&C;amie\d1^92Pua2]"IFkGmCjiA\hBV!?ZelZZM6U^T!Rfq<L8k])GA2iP)P.`Xh?:-PKHc2qsAQDj=oak
%qi[Hu9iM-"edoc\ej[a/^*LaSCSd$O(>A<g3m5!1Mb:Y4p-11OE"?!l4eKd=e&m?X+?+MqO,L"QJpLdKY'9]qfURZnf_(2l>O`SK
%G')LA.lD,a!K,QprRdWD0LN-r+ahWU3j_KTl%HlUi6)3G!W56CU;4mbQ+;O?D4Q-/d.=%o.bEoqM_S4`HgtaI7Hl*%SLu=#EqO87
%GOc#,\?.$$1;_G&ms)K1F4nP?BI>&J^.s-f=MEFJi"YL$96](9>#Vof#)2B5>$feF&+kV.]^i@/J"Z!<5EFh.Qr/Al$3sAWDSE$f
%Q.dWC=:9]j.<7k)2B>tV,FuP?Z1K#aNbb.hCW2G0n<\0MHRu#[dYpW([9C0_nr`:$O!!9s'J;eY^N]8_,G`/?h[dK+\#`XrAB@Y-
%6D+r`RooXJ4jL[+/(;='"_H>A8%`[sl/i\L`0Z)i_(t)XCAR\SKn+q(b[0!8;46ftIAEBP?UGug48hbiX7.?f$`$g1cJ+CVQ5!Vl
%]iNB%A,3^+YB0q9F1?f5S0ld`6ro=ufqL`';TW1j8<-Gm8^>"Kr=&[*+Y&MJ(==*<>Qn>'Xhqj(0im=qmX_V+?]=<7BE2bOdSK5?
%BmG=X5&nRZlVOu&U%r8"eu3<[_d<X#gc[J[(finS5kCS+^E/TNgFHTXR[:eKOUr71a@rQIC0\,/TnWg7&e>ujIhUkn^rOH[_Jq5I
%`%._fc\.]]QaBQo@NF+T';%U2WTGh`<#"_n'`*P/Fg?q!.aa\61&Uf@c2Zd9m^p(17N0'IhA:n"0$mLjAd6cj/U0;ROe%`>,9#`b
%H[G8,M3?2ADsE6>+UGi5pGcq`Qk$tn/s%)b+mP_@$tH9/DR$q>?)KQ=TOcbPJ\F6MCc4">1$t^Ii,V;\6ljGa2KG%ZXJ^YA/T*4g
%E2)5*c1a2dIs=5XAmB9RXX:u`;<6q9\9c7L`,6@N7jrPECu^0\!,gO_TBU((>!OlsB['mS$LH(V;P6jf"dMs+4;9Xdp\f=R"/j+]
%/VKZKOYX9O`e7b+(tLJSIYrh;g$?oZYV=QPdc0rZk(7FOdUnBn?fq4!ht1hGl1[qCmj*5e]G]%U*n[(K#n,(siafqBK$R_`&.K)d
%"X05#-88DI2_Q+9&MPfGUMQltl,Y'q!PVhK'N[4Gr<T8h>:fI]-0ft2lCPOQ=S*Ps%X.frRr(Y2#UB@c^7,[G1Rm^HB3O,fn@(jJ
%ZWLf].#pT:kj&JV39:6P\>`W2if4[9;5b_m9p+E0r/KG[,$4St\.Fn\M?#K20^@BsE&U)aMB+IOLjb]EZ?\!T3?R6bR>5?9Y\*YB
%=*0k=kE!U)Elu1FG@aqKHGj9saNcK:gc?eYZ*9JW]_hD2_i_EBEe-&SU!<5`OITIaTGh;KAHn8YHM3eQlm@F2&^BKS=$0CFi"PXg
%qu$h=K4[fc_k,O&W=Hq3,0'>E*]>eWA_L7n(UQ5hmrs.#c((Na6<Y/-'X7*qX9QW@3u0;`5gq0R[0IGE*S1]h3u8%ueai903n`U4
%^R/d\9QP]f_-.A!C'[]@O6@XA_WgeacXoUB<6V*jQ5u!"4r?t>_p"s]KRkoN!4/=O$Nr46F>A0m&"u2oB/GKn!WB<++K+IdCs2+<
%\6ZL(]e%CR'W)3Y9ca[+m;UrrDmlS!VJq.C,K]Q/fbeshHIkRFr*^ldW]MBlQYX-\VmY2Ea8N9QC&^qBhWIZlE"`%bU#.FIn:W`J
%Vq[9'E3jKS&D'BajTIB#';?]^!WlX25Kd<nC&sG%,bN>q4Nn,fc(NC!bN>M8IT*k'`XZ:A-SG#-[+HHb(H-WrK"$j&IPq\In3$Zn
%AhMXFH6oC<fQF'We)k1ag8snU/"a\Cblt%f-I&=RkX!gaTFK]n&'tdN%#VfVU!66.UFQM*TURMfER''G&r>f%G%r[L6$i?diIo+E
%9CPMKF2c:,iGuKq9Q(>*&J`"MH4VN3[Z,*k40pHTD:VV]Btc/QOJE^aZ4=Ce.*4n`hQ$P75t^)[\/3h-rpCK_%:cY9DYet0M=-"<
%@rq9P0kr9o<d]^/s1T\Zpq(F@$[+VQ91kaN*F6"ALfpmd`J7=iQ/#S4Ilo>c*)eMXDr*9(=>A'a8[7tG5F$E`b,n30`u?&Jd@u9<
%j=7Ugm<!1*a%kpN9Cj[4.G6jp-+0F+OU#0G>D]I#]N+XFND\cnkX4jC0*Gkn'I+:8]Q;-?<$iDOTlY0fMK<`OjtSh#/l5j;qkj_g
%HKRH5@%)Af-t]7leTn4kK,>G&$Q2j\X9:/^f29[@oJdR*n0VW\#0G0X*BkP4Wos[_i4I%H=;4WCa'%\nj:lmR58Lt[;EW@aLnWIu
%[r$efa)`hQYhl7DM.T7CI$d_+LS"-bUSiGEkA`]?SaIB<mnrIIbI=$/6`=[l[)ouE%rEgI[^P$0"n8bBQ9X3:Dc*2)i8ks1XYJBc
%'IbR"p?\Zu?07Yao6&!;LE<S.\TZ[TrQLFn&FHe-]l]^oWl&%PT*F=IS+2iM(iTsR"KJe<ll(cEl*">Q'`11+c>sr2Qns)0K![7b
%Y5Z)2YUk,!p=DqXMYQ[#cIXd,ToQ['CZ&F9-`RJ,5!j^PDFGj_M?]ORIqr++LXL9"%O!SU4=76q`6H3&$>UUgP,8mRa.Xb;a._Q5
%it+0?I;jf-WE3"+UtGrXj]e^d9"`^JBcnVV=?l8@OXP=3*BX_#]IL)sQ=u/(^C8(<V+<=O@Al,[q"VW7V"G)+3qRUUeED&=fi/q9
%[ugq:a``p#6*mMM3c*ob<-X)mH[$m34D1RrXZQ5C7>oEb^Gi8)7VOt&N/8UC:@1P"n)$5qXj.\-XXA3#+%^>[1<ET%,OU/-]seNu
%'cgp5(J+-,\dB:rX_PN!pL-$f>S#'8"!M[.&VX%p8&6tu+uQi^)V%g?l,BA8?^IK/`1+I&%<R#C/3CS2gn=q%ba6'RROqLO,^2&!
%ULriQ`r\hZn^_>MZ^KBkAS$BG:p,N3e#!\&d"1>er3rCY=A-%FN3G_>I;2(Ak%Dg7X%#uQU_SP0$WA=-iRJ2e#20KGptJfYoqBlC
%-MLisVm4&TVi2+@a3JetSg+rp:rZ6,ZBmb51=D%KH_tn!!Yc%\*EBkk)bJ6'&u,.;.&Vtbfg36@0*lHQbFg3[2OJdIB<4`g*^RSO
%D\nA@K><'TSafZ4M8^B3#/0QfZKq,>q]e2iFUbFtBVQXtG1+8s;tK`Z$uUh2PM'2XChhc9Jkduj%[]1s>GVCLRERfB&''Qr`DPNT
%[f`^^RN5#ZD?Do7E;i&'9sM58R3M];.<LNu3l^)HU!#GHMeCqJ>qV7jrA%`%RB'4l.<fmkUI^9^)>u8`%N#%a0Lk/urMokB-7IW;
%\G]HBL!oV,I98tUa"-.=`S\O7jE:3#;"pq>S,(\AMNttWNB>(@h#[T84j0(W5d)^6`LiK\%\F%*FMk?n:X_C73#d_WJl]Ms5mWOu
%?Y7rVc,:(MjirG*6MN-bYYgc)+6(!6E/Tj3=&kpKVhJ)nou:>'1ng9N21_WG:AX:.88#tD(l2;>422IVj,J(0@a>JnVi0,#O>K;N
%$UVIF)Na$_Z2VS[U#\9IITqtho[+2-W>dN0'`F[)q(WCcPg(]]R\mNg$:Q0rkRpe0IJk.h?RC)+R7*BTBb2`+m_rdWb/9-ci;"*N
%S>q;9Kt-\;m>7^-iU'(KSgO\/pRQ]tU"05I6cJ[?DtnNnpO!UBoJGY27;s$6ZCpSQ#TrERom.ej\kSgG[/N6efNalD(bsL[fXsDs
%0e@D9k5YY<X6rW3qQJNfr18nHO;KCu4iZa)=0R"?ZY")GQgJulOWk^&VLA5"T*d5mL$gH,Q^HFr-K1OT2obVD[a[F>1)@ia>ujb'
%1.0('3bOX66<opn&di__:sOV%psr?=1F+C8d`6s5aYhO@d!QjRL*/`MY1n_G5$uUbJk3$FBB^\D=blao]#7Sa/STns]e`%`XipQT
%q$</S#bC(CjC[L!?YK\f9Ldfs%hVV.T(^6kS02+5K?aNjEiU*sosKOiTXRJ#d+a8Ld(a`.8/,nmM@Hq[$]m/IG:V+T4Qp5=hiccG
%5?5poRI)7aIZU;TNdR0e92AG!,hWNqjbr2#/`(7.XUp[j>2`5*qhs@hmQ*jY&L>=-3m/PcXkLb!<a#O?DX#J8^8l<tN77oC[R"!j
%<cV&qf@iEYeJjB]Y<&SL1]:<UgmLg1?`3$!hM.D,%?]e=d$G$42u$oSkPeo`X*l60BP,HF"tesf9p.kKVJu[&Cn4D\[u*+/MgEXD
%hJ+O`AV7fc2I-`*LQ0`e@A=;`k930`_BFMsa:TqD:]6CJ+i:oj6G$,oZC2r0hrchuCsfpR;b,%g9".!C3iqE!.N9VmU8GoZ%@\CL
%Y7$[=MV9HVhIsf=h0aj/!0TrDcP/$*`Jc[W.k^d]<)XXOKDlBFdB-sR[(:^`3/el,$&]]d;b98\EC)$!o`(j\nTUb.M?0bF;[[rL
%d.ZeS*?p*3?gmKmo-kCQYQK$X<B?Sp.m!1cpLT4up;RO$0PWg($?O<u>1O_gHrI_+VY'1^Fu#/_1j>M_80ruU32RhfREgtXVKjjI
%\!^u::kl4+]5lSgQD/!S6cse.6BMR`!4j96==>QA#l?cGAs6UU`GsBO>-H8F<+,!^0_IX`,.m!sorD3E=7%\o0>/b@2=I;-[#DCt
%L_Q):ac$`$6+c&tN5P:9GUX,)2_*8,#hg05>S??<C-aXuo])_,cI_buLYsgU@S.hCV-Z2Wc0Ojqf2up8EM`9Q2)5)J<1C8&J(#dB
%e*9*@f;VEPB)D_h92Jrd$P=TZ;VD_RJmR'%>CqVG+n5/PRU:-4QT5-NWeF71E/oYY_Att5j%`LV0Dk.d!0KkVe`p1kA<0fWY+V3b
%<*7KEW[\2h8N,("Z0G:+O2;9f=pCP";:e6Z2;*?2lFeJB[<C"IVFOd&qG<Ms;KPBGP]MeU,Qs0.UeSU;_m'_eC69JE\oF('65a3S
%qLH9CBC4UH^M?JXTrfVmcI,-rWt+T`Q'#FQH2'/a(Y%llRWS;UOWS]2hUb_Dki8\ocB_eB$`YYnZXeL5&.GT7]r1`gf@#gkl!.H]
%2)0%_Y#^mLXruHl6K`=,PE:VMet@cTUh\^/Et-uGG_+a%&Tgs.A-h0R7EJ!-'FqVpG\IA0>>m.XXRe>g8Q'e!;Tk`62'=kRH]u.N
%mE<\<s/XGQ7&dI%;u-_Sh`,[2$dt>JFA7g]g71K-UmPj&RMr0kB."m(T3G2$D0Z=kKj1NF(#GteW*,;`]s[&&$BmZNJqnUfH)B$1
%NF#9,4#BIJX5fmD1:H7:3aPZ_=K$F+PY7m)`9d9ZR!Qm&nPk<!<RplKG[TPhN.P_!$_?;jmPrGLfc%O/JpjKI%ICK*^NYs+=]"G[
%^TQ6uOpd&lfZ7>'<fjG#(A+jS8Zf6/=isisg'O;gl%`b1^1NpQBF3,,=`b,(88aIO\!kHCT:6(3?4tPu8e[a9?T*!C9e,OLr/m;%
%I._'\MN)6E/B[?%7?*?a^[5'86M_".XZfO-M4#XdbMFLOFs3LI>(.o>5GdrB,><3Hh>Z(-I80^LYG`DbH8+nbj"#Lus/Qlsl@9_5
%N9D+NRPL/?is^esa_,.Wno%k'_t1?0'B3'dmDBDecWSUAS^-DG4]:Nd:mFD/h6<+oIAC'SDe%eoP^7X`p2/=+..)CV/LYX'9\'[<
%JhXj;5ji!B8AG%d`(nfUI-?168YJ5rpjce!X`/N2FBju$\"HfRps[u)JE"HRO0#HUC-j1IU$dZ(XcWF]`2G<63*.T`b$S@gC"pD3
%Trq-fI_66IrNm=]1SEQ(.,LtOb`BRA]pJfRAd_Z2n#K"pF%W?U3oWpQ9]4Vg7-$ga!*RDIdVOQ]dR@oO#&dKVThjJ)iL.HJcRt=`
%9Y*k&E0#15ECo,W8dbSg+23$ZY.$ujJr1G]I/8;&o@Ml\Btd9>.s\M(GZt-Z;14n26;l+$BedrAUj\-2'qT;k_jDcI1]khuE&@e[
%[J=[>(D^q,;7'O:H+9R-gWMoj/d/.#7>>UHegUa,[p-MuT*`gFA*GhrKF@VC]d.r`>9?29S6\X;mN_oid#b5S-qt,3+K;ID*8/J*
%LSUZn`bs1^&a+5@f.G]AY[Ze_)&uIfqD&MH`5CN-hYa5UCg%1@.k_e[?!cQEJ]F(j>k#'J3qRN6]qF'!NkVrn=1+"]&bR@0R11jY
%SYQ%g\kLNi[.>lqeKq6p<L\BQ3Lh?<lEZpaP>Cg\Eht9^eJhEYJsfKSkR8`i.Ri#9XXO-P24kB9f=F2`r#E.*Pk<n)MAM(?naL=C
%c!dDo_"&;YZu3n!@\h_gg/5d87]OguFoC=d_*^;^;g5Q*GO!l?YVN+a31QL\Pde^ps%K^=MI91[Dt>E.>g)q4kpF?MW^^>qbU:!?
%l"ZIUgMV@JpHF;jH-b"c!d0RUZ&h2B]65*@J&$jQ:.1R5\mQWpC&NlBVVjV4Qi4f[*GWAO,$[,VC)4.4^C=@?j&hIKSb_..H:*sI
%KqX<>^T\_iOJE1[*Oc<-(YVQ@^d))#T_%q$W>0L#W4A5UZ'"aKAo/;*B(m;naT^+?K<>8FEjHObQ$q)O_ant<R;@I9DGc[RD1qQP
%1!W!)rKTj^OP4%1]5n`VR(lJo4I3B-5GW?2HKXQQ(/cG7&?RTk.59t&:-p3dpm6Zi^#V9&O&a-cpZ'/2Zb0N!Op`Q2$H4,TGSo-O
%o"NYT#m>cP^tms+Y1YRid#]Ro6Mr9#1AfpACBu&;S-)'^X7LoEHCLJqTJUU.a6'Aqd%JWH`]8uMKBf]E^64NRo`,Y)O"9]c;u6HT
%DCN@s<dICtBK&Xk7I]0b2KE;I2O0OnWseM1L@)>PEU1\^iO.>#[OAOm#F@*uo)/.`6>o8tk+K,b^q&gm@%?]5PWPDtq+I[;@r7q^
%W4(%+L-O$:"haWE[:R]^Z4:LeUkgspXAY#>.YAi5[Z>c*'d7GBb:I@H1##Kp-&dP<)()]=d>q"<HD/q$4TO,*%aX5_Yp49P4U:fc
%T,h>S^U8Fk_<U]B7AF=?rmmp(*<@YZb%>P@efo1js#_i%?_[9G2&[9mg3orPZGDZW!ms3d>hGBi,<G4EinB&\OOWQ##pNSD5;of@
%[7WWa(*QeD$`*S&S`PdZ<[HU;lUiJn%oCY8bqG(kHr?pb,($(4'Zkk<>&Xg$g((7;)n+npBQ&\$E)eQS$`*S&>m62J<]/b!qm;D-
%4L:H+iisPrUX:Osb[VP4c#&lQOPV><C371@,n&"9>8?d?93/T(*!6$,nF5J*.eMIE#YL/EBne*kYCLUdQfR)WS;QEjmmKB@PJ"o)
%IlN`dHhWK[!boA7O0KZl;$WSA)/:?&/<n^=Qr[Fa%/;u*DhV9'lmfq"qTefeXAmb-R#^(e-`AOA,XUq-jH40YAZQ/=Ibj%;G'!Y[
%#ks7(,IbW_q6HWi<@(-&7<A8"^G31l=GYghNikFk8_G)6E+%ell=*X6#*e'Z7p2T2mA-D"15FR`,f^tBKiA8QUE;Q%N*C>Y5&>\_
%Q/i!\^-Pg$=)q/t\,&9_[j>0ZC;bU-"EC#.D^_jL#&KDm`poT,"+RBt`T6<JZD5b1>j$,tdm2NUVVdVCG^6imUNuSb'^C6%0b8pk
%a;g6SI@4PR:-!#8A"$uK`'S/l8H-,ZXXU52F;<PM=*6m);,brmUTQ\tkAYnT2)s&aSA[;K>d%slL,blmr5FCt!10/(m:VXA.$*=;
%l+jc!/R*[aI]TJ#q-G.LY/i'6$'JP;$LdD;9G&9g9Wf10&Q4aka\^!d%WcshAk!.i)E6I'ht!Gb_]$BD_Cm0\X6&T9LQN)GfK_I^
%E=)TP601TFglA$SN8a0H+X<V!GG;,JNc9m^0e&,^B#_,"o?=koQUu:fq6`I7&8Wm0dBY6P@ja*_/P8)CbV%lgi?BlgL)SfjNCK%r
%i)Q]$Q:Y?saSMQ<GA61XaH_AiFJG1,4Y'4u@tG89B='i2VaobMb!W/&C5rgRr^XXH0sjKol5aU2)?#f#7gDO:!]]am;rf$$9F5'V
%g!oYHPh>hl?=D(J%i#CFL!2!mFC2FPLJRC<qV.[mPg]$_)YV4IUU?\[d"fU.[qlU2s2MW\hA)\)>E0m=1Ns6I+.eF)VF]lt:^B4`
%W#M]nF$m.A3oY),'^N\mLdc6bVcIhh1uFt,J<AWg`G9%7gsnrS0mY1NVk\5&0kpCaC!G^d6?Il4==f!8VNoC2MIu/;kC:um8:7rF
%K1'a2,[6tKG`pj`_g>s)Mr^qP=X^fsXhPhA4N%$E.q\]9;sGafV+6<j__2F'%=rmambRS"^.t[E'OL$sB'U!'f]3C)Q^@%M2JKk<
%#ScIln(SI;B:Lclds^]H^+CVI)dQ4r&8SpP?SE!IS;P"hOXgl,2K6=C>#35Q,$jMc\gMPqitS]BQcTO\o!dgdZN'iU"H/>gai-bL
%qiqr5Asl?JX#-6*j)7T[n-#5K;Ru4"1U!./69hMngO(">2BB"n]=E5#F>k-MJ[UnR.+m)@nq&Akh]^$p@(3!DFA(T#fjEU@kQB"=
%R_;hU8pZSMK0?PaTD7/H_mmlAmOY8]L@Hk)*Hh_em@J$,RYnu#-c>B+$j[&iJp*d'^>L*tbY.If5pQ-DVi]0Vh":L-peRM'46>Tc
%rr6;VO7d4=1K@A%628[R2MQrA]7u;gL-*ie8"\-/UZO_-j^$]YS:!o;\c9V0a6J*!H]DH,kh+(qVbd0VS`+lf*FXLoG`d\OS%UL@
%('D=]Cj%?]VG&u>37L87eF&=4RBZKmSW*@LL6sUJn`r:K1aUE/I)K_fq)OLGfb](R(W7fT>9Y.CbV8B)0lXPadX_WB1Wl.QfJT:8
%-=cuW_gCQD[nf)F&Bi@nH#B,[c,&/1iYtWinXG^>[a[=_d>)\1D,+X)L5GVt(HI.N3pn?eVPA"bmO!Ni3hZ^PrK;U8\,+J,pu=;m
%B'tkCV9]1rc5D%_Tf-jPEIC4XmPl@fM*o*II\*3O;Ee??M\aM=&i,hF'Fo+rXX*MpI_d,=qlb-g@8StYJjA"]JG7q*`KYml=AUsV
%22^1AiR_\G+aslSMJ#=3fQa8t$Ko'251>+qkfV)W]8\[HHCcl+2JtAa^\c???4]n:4AB"pg\A"t.k;#Gi+Nu+4C8abC@IScI_6Pm
%Fj^*11Zi)<END;"b>/3UL+Ek^gr]]9(ssGLS)'n0_<;Li-bmn\A"V?^q@7c&OoD:,5Zr7"-JR;hi!HT?f.EBV?93O`XBRcM'gF*i
%+`t5kfO4<@pEb;EqtZVFH!\#CVq(`:BTe9jR0S^\Xq[]nD`.Pt[YT!L\=<!&gP''6\H`fjT8MRk]%*,T"/[0Y=-?h^B4kKi*;s^J
%U\JfaHQp"S[X<_1!j:UY)K5:sP%2=\NQL1!1[(^A%!n:BF<$\3X7_4/kg\IQ*2K2qn?P4dH-3XZE3WIi!caq*ALEXF%lTQR^?j2W
%[0[JsLG4@iA()8NGambLJ,!p0cR[a40BV2+_=%hjnJa'lErAPJW9ui3'#l:K.GVtr%S^4!9Z88P]Z`Q<0rboU[EhfN=;?:<F*N's
%%[uiVH%<WT`6;<o)_lino7nG+(..2:MBk-Q>pNd&T8AsJ+0PDQaT^+?K<>8FEiU*somN?DdsD)eEu@%ESiC.IB!sO[IN,t+;%*K_
%iIN&-i21N#DhK,@OK4."R,eLem-a6n5._ErbIuqp`Sr-u57>Q>Nr3b7]&p.Tl*n26cGt%*FaG*SER=_ZHSq??:Os.a:D=t$ZCP6=
%4tEPq0FK$0T^p=d6d:au(3"_D8`3>+nlC')Jkj-9+/Ws'-cbUhJ,27^[ToT<>!QZ+iRFqKHT0s$7U%P<A'UrmYlr[6n;@l2amP?@
%\N`_lC@,o@_nkU3:=8LlZ5D0'[jh<(TTTB5'7,"\FEJ.k\ekeD85f-h6?,(p8gQ+r"SSj&LkBC20qaf!kfJ1ANbs"&RVNGc(XN&V
%$N4#:.=/-5Ytm3Gmb-%WW:_s3'WBnd?^4?<WcDODn4X@;qXZR@9(ke5L&!Ft%(H("Sq"ELZ4_IcBT>?FXaJ@J&``h;=Z4O3r>ibQ
%8iM7\Jbg)Ektgh/?bM,?p45s6D2&M6]YpJ*<="58XqTm&\stGKMM=F]_+j+@pU-(I=:g*OiHO'UlTSOEWMV@.-_8B<ea]NN@VnH:
%$M_Npc.@i"6fB.a.@pMh<fi^hqWl(8KW`mdIVa514R^@HH+l4-Ee-()TW<T!3N:#&IJl,V*TpS;gB!5+YUC9;n9E(W.>e0Uo`@R&
%.sG91U-Q5J*d3-m&+^5,&BP+(I"SR'cK(c>DtSP,RI-nFQ!lQ_3jV+@QFO#f5>[V!]%-EtgZ4Rieb'Th/P$I&K&i><Ut`g78C@pu
%?jK*(!g'I>O'?pcPIXDp]BJua$X@AKE`T1FmrVeHClHgf31R:^)'*HCojbm"13I?Dq.,rXa4fb$PjZPH'f$_(%Sde(^q&+bYBE3-
%1Ks&Z"/T-^@'t:D78[aF1;S@V!n!a%9pE(7lGHOQlJ8Nr(QfmF9I@-oZuGTNcE/60rRepNZl#,?P=LRlj900i"J*MqjCTFh.iZD*
%;s:K89nV=)6^Y2a$OP(T&&^t@$@<,To5s`l8+X$?IU'jZ&(0oULV7QRe:MqJrXe4rRrS`T_X%lA+L#d("_6;1JbjN$o8#gk;ueHh
%j:.G-(SpY\h?`.1S*G\MF@!DM5&#OfpDP7e>-Vc"!Z)tUULL/.\:NXnC1.cI,A\`,XU<:RDMAD^VnW?K\qbhNjFH8HH4F-FLHf_N
%@'b9-R7]#o*)l%SfJiph\"VSr1\G'K'!<DKQF@J'l%rnZPL%tM-\MO=D.:6H2X@CF58JGtiGgsHfjN4TBQNt^FEr\MmC1-t*^;sT
%Z5oKTZNZP2l[S7=SEbeo)0:Vj6PfN8Ds``H1MBU,g4QCJW'R6NSo=#lloq<1MHa^YLMt?+cbi`X&NQAi/flB7],[M6r6]uP_5ak?
%46b4$f[dB[DgORm,fba['P8FfL?urCP1As;e)SP`HGR%k"%OeAMGfqQMT8)p4k&b59@/7j.%J^tObNJe3n`)hZoE)S$4@Om+2Vjn
%XI<<(=^-P;$eM8T;&su/erd_Qcgn1KUCo)f\(X$93Z:+q5Z.G\JR;]-8Aq!C>siDU<bLoi12_].E@JbUd+2Etc#eji3Q.d\1bd$q
%,5ekqgh6<kMgN0rj9/&g6Lh/+m'gW:jA&YNBeA'c[D7dS@IO$]+Gs"D^Buf3P(hS+#[CE@#(N;4q+c*J5o)b#8H8B8h)F`._PQd:
%cgm1#dujV7\s;5n.E"^1Bp!qmA`NEK-aY:aTH#Fpq+`;@dC8Rs5ZSNb.R2=%Lu9/p>1.,;$PXS8&Q@:\.Y?ja=YQ8PK;R`g"e)Ec
%+0//2DMih/gbVtV-V29JcriJ&DV!d[Z4F8GlZ],-jDl8QRtJee:i>2qaeIZ^9r:j^[W@H\XWluApXQdV6K>%KpY:?i^(ig:F&cE&
%W8.9mrOWCl>8mq[.hqjKV>MR[_;XfA^e2%1nB36:qJ=[_Tn"7"PKJ'iC_N_01sDcQ7aWs\C[Pt.OY"#,Q")HR<j%'M<T5g%>$Xj;
%V'r>sFLIC/2Hs+#Q"HB2XUeJJAg]d$!BKC[_fi@f_$GUeKG+^,MkX!\cXAC0`=k\oT8OmXCb:h*je<2)7ul5sE"ugIq>.>-!C.nH
%8FmQW$Q.!fC:r0Mjpa6k5*W0;s6eAM`Psbnlq:7'0bK6X3qt;ip>KkNYr0'W3[to9[?flcgZYSl7[*toLT;>Ugfo3!0)N.P(Cm%K
%Y0bWaARU?qS4lB<%obFq`+-nG0DIdi"k<+QdRSUnL0oA+@"qX7MK=^e=k63u/WqML>LK-8JKp7cQXAs7q3L?nQ,lk^BSKG+B]243
%c=GXF':a^oVVg&A@3p\k+YVjF+ket]@IPa#%d8d`rl=V+d'3aW5gr9,*Zj)lnm1J"r1/"#bE*7H8):9Y2aZI(27!hrQ%!5Sa3?1'
%0l0^*<qFPKIZ@ere8^==BLYYt4tR6!;!$E?%hm_0T^Rs^7I]rA"P\4F(N3+u%=Mo4V=\+a`GRt?dq/Dn^$Ws<b)#Y2VFP2$<o^d9
%rS<aPE32e=kYlP3XKLTR!Ds7&kJ.O64f\<?&;#Go0")(B_ZSoD_/b[,;"ZqET*>5EWFQt3kC;9FF5B-o/_Gh*(J(kAR^'$VIj@$6
%2`N76>5:q3h\P)kjMU=Z#:lG"W`?r1p<[o\Ru@abHIAuY`pNk14f:DA+n=:\9$Mp%Tp*jX*,al.D132;XF"&fA@'_CIP-1&6uo_A
%0%qH!3,Q;LAf2M#Rq=u?ZSIBu$:EG+\kR*550XSKG`WFJYD"?e81p"d4/ip5-7@>gX0:ClAYqm`0Yf9$&rUdreg/p"U;[`.`K%<+
%jW[W?"o=GCI#JTfN0!$&8[bo]XQ&%s]r_c_Q1\1>nI-N7btRdRc#(<YK7hhFX,5ICkq!1q/LYN_f$+7do5s&7aML$]L\%euM$;=4
%K<F3&EiTgkFcGc,E_b(E.WB*CB9UCA`06E[6:@ueY>=Mjq!3/K)@MQc&)8T2/b7;^5ZP$T;_0;#2[@4J;_9U_@NlWfI*ru.5&.e=
%8nONt#bIN*\)uEanmKPl)iF>G==H)S*!cD2IDl:$btIC\Ff2Y-WEKj4cH"K^#bp4]QeQGZ"dfVm]hrHFgnojU_nS9-Ud*3X"mf"I
%>Io_:ge>$k)`KY_3p/&u:j6QdG_s-3>G2mJ\+ME)HJjk)7=kWX2Wcc%5)`@'S'\mV2?^-Zi8eYm)E+b4T*F&.-MVl5,-PbIr8"V7
%`-K/4O=r)UYVbmc;jm%U`_Lg7h:9_BED<o7%qMj?$Y=-lQ3oV]mpmkdpNslHPkKhp0VXI@59ZPr6:BHgU'S5!.TL?P0Rj3>&MB#2
%P9F_0UmX,Mlf/BjCqB+Ab^P$=>>s9@jgjSm>EXp3\I20m]Yjft'u$iSGtN_('$@1.0^TS8Nk:QWF4m^pRl6QV.!&PdE)LbP_ZS.T
%0dn#%ZA$SfNku!7FsS4YiGm@s%"TFI=t^;V;XS!h=W.1YAUOB#JK9s5Es@:LrbB94;r=/4Ur<dFo%1Yd2iIA]XDgN!]X)[Ii]PJB
%D\[js7ml1aJq@t6q-9C+U7m)$jH8%.Q?\RZ0t&LIoe6[G8ri'q`.jPI(]3`o\r2RFq"067QbFgbCs.38.HO6#lge*Df[\!;53@E+
%Xpf+\\9BOhFhLn!?Pc`U+0_Pl@*gTC:VH3iQV^u)CSmH'%hM?!buR?E-TLK[/eA@->XD82kZZB)R`Td:\XCW"oKhdlZpVb!]^H<S
%Q$SU1q8S9gmaoYYrCA[C1G0/`2#%(L[`-tM(QbqL+JC%f2^UM%30)0.N$iM*^Wein)%/!Aj#NrC>u@u0P:pchh1aaun9Y>q)4TZ#
%LP*c[,9YWJ:\2YHjlo.7R&JqE_.HR.ZD+jK@=dsnBcanMT>IJcUc0ktGLE2C?3U.5V,Fu5GpL$4h0hj6BRkCHl6cC^=j(ZUkB9I]
%2FXiL*bRo-HI1p$22/Ji)cRai<c,78+/u+;lc]3pm"2!!1m\'JRT!^BeD)-5I)MCbJ;kb]'X\GZCfWTl@4$*GBrKq<AYFI;$/0a4
%]gn.m!_6VPcqn`3==u$-qF"=''e)7D)-m3^9cg9e\s!')d7r&3Qu)L1e\]"tqf4_:V/bu!E`ZqY:>n)\B0(ak7+e<58$H7*+f6ke
%&VBLE>drTW_BuY*?$=X,Tr`eQruVO+1&<j*D:B8I0u=cGZ+pS_SXH.%kmsFP!Q=iiacB*gmD-?J'>a!C@5/H^gehBGZ#DnRs,j\P
%!YD+)Q00F:'8iSbR>C;C$`Eh/"0I]9qT\=9*o)qS&/`H1F0cRfNB@",6Ju7'B4:V8;R]aA"EESSBZ7.Qlh%%*U!M*QM,6[d1Y&PA
%@;erB9r_JF+]!m1Ner-1V2bT4<M1+Q*6pGVr?-&!Y:355e4t?`P['dKVo:eSaEOeQX/Q8c>Q_.W7;Ak5YB?,RH+M7co9b]Fa*)kk
%Te_$N)!^EB[%L1o$sDlK5>k2uTC/'7'8>7$,?"eu)cZ$XD2?RFZ!QQ1W=a9a3ZK7YhhQXqfZu:ZB=ZhV"2h[/?.S)B#@GORhP!aW
%W*1TmrT-cR(>P-e(,YL(oM/?K*01nd_/A.PTSPBW!.l.0;5F.hKFpDoNQJ=`E->k@qmeNPG/>6"`pnKt?$&l:]AL=u(cE5eN!F9+
%chWfkM`p!k0<'H<\Y8YDjSA4Bh.!4r<Y,coJ#A9N&pV;hO[d9@XspfHaA4#s:L"(+Ipin:*)i2gndUBsaBV@<<ZpX#Y0n$Z1>2ND
%i)ChcNG\Uq/b%eJD7i<Hp4k'A%KmmCSjkG-_N1&o'DtPQVib_F`ED_&<qBS:Q,7>N"uPZ`^>Q_%SYl-\$[eg4r=Qa:\6e(SJnbX(
%8a&@bAlbFZ>dniGH*!YS4*PfGm;#%$=B6s_ZrQ8(T_m0HU%dZ(F1cct=2`8NfCRT9@ed78kRETH2W4bs#i?A::_kj2!?<JCE=?LP
%drT[P&cimkQu#<Zl8I34]b/1Jd1'C8;j!ZSQa-+1$sloZd<N4'=8GHF"hI3K?%.Gn7XDWH*UI(de97Xi_RDacd9k0o7mF@Ecf05]
%W"1AQURo2A5=-B3\2>:*fAV9u#up5tO0i-#.B;ObG":S_<MpLhqlkdX+<[/e&Xl&i%Yl:`CZ*BtZa#=bN&;>%d,0h_2A7Wj?>&$t
%`sBfe"M##k^Y_RtrWE[C(UQNGdsZh9-(^mURlWCBGZ"[M+OF((/,"#<W:82td"VP&[ZaGXa7Pf-N.+KsH&RY*(#N\C"E[#@p"Qk>
%bRS\kBT?!H/^PS$RZ6?=2::-3l4r(\MTap+#Pa;Ii$FtXJk="7B=<JF%etD:6?"%W#Vg."qE!YcEP9fDC`t4Bj!,>$q<m6P%"'A*
%34D]A7F=$ed]a9d$qfQWMKWXEXu)Xe?%VAX!P_>rc^3?W)m.3H.Hlftj#K-7&178;md+T6D)BMa,9Nj6ik5lYQht-D0+#7%A&)Kd
%6fEgWJ6EamU!o@*D@olg>.b/-'Pf=.=3iGm]tqlkYQr\8mr[>-.K=C[5Z4&M%k5Jh#Wb3>'ht/Yq66:3(_mA9i^='lZY:]k/23S7
%[>VCm'>1f>kSrg%?7U,9`LK"=*gdYlYrIrK2uMA[dR"+S0G"%N;lfUiXk>bp:U<LOedi?P]k0tjLuoUt'e`HhQ$B@sPF?BX8f,j&
%/oXM\GG@#uTFOCIfUrYN+cMlSl:bBS@aO:<_[u2-gh+>6`ZZ`P&tnrjn-2Onm)p+1n`i6Z$rq*#JgS>dD]D5!>40Rhd!TMugt6Mj
%%H3mi5"q3PCLTkqJZDW0aEJj-(@r[AmDIZfj08""FTZBEr-VF;0S]7l2`#4D:\qb'XK:HZ+:&dhgDBTH9nF-tf5sP3.'4/Q,N!7+
%_Eno_ZQaU7V9%8_02mb6i)naF'i`epMZW0F"lc1Z$>&W#O*$E&n&J;*Jd^fm)A-pp_kt?LH7fQBO35hP4;j3r[ilb96/<#9PCjgH
%?FM*;LqgosM7,D6+`)-jhi\ACq$(+.N9""shWjtlZRbsYg#4ZTYir:-N6j,Q3'Kfs7go2ZPMHnd9ips<>Z;d'p3Z/qkq0)-EM$pA
%"^(42-OR5u"osMV>o7!YTgDT?I-;])BAhD/Cr1$NK<+$CdP(V!^@$2k+5QB+'o#W5E39V4\@Sn24-AZLg=L#5_ftSBiU&Q"1n2'l
%gJBg>kko;EC?f;"DB'Sn8j<e%W:OdXW\/6)C9E/<Xbg>p4/o/p(T:JqK=E*W<7#50>VnHs;qnF61!u&A/`-us6b"8E"_o>"8Fm;%
%$5gmeC:r*kBhQW\^*d?(9o6DW#^6m2>S)KoQ$][?jpQ-*Y52`F[SWjKWXoMg0>r`>QH.Xm:$e-nnm5E/9-1]nb"WEoI`Aeb34BD/
%pWCDUj5E?:63t.dT[LalTVU/Y63b+La`\m-Zm0s'ffm(9\W/^7a1+bUeW];.e,aHN*jj_hR5sL*7d"ZfW1'VN2D\TZ-u@E(a;_\Q
%qs$RVAfrjC@utaXLf/Ka5F&p@pY".W(nmGP9:i^TcZCt@EBUdle-G"-j7(R39_p2(`ar'C9T-kt"mT9J2bKI++IJrK*?9tm(1fjW
%H=FBb_V.M8Un]#Yd7ELqgP:"hjjQ^F[a:=UcrI`D>ZB^bXtcIder]4j_+c>r-gi?:<r6N#O)`a!o(tqW?!X?ufFLrnqRs8eWLqCs
%:Di(t=P,\e%IJ$0`(kVD?#S+FJ4q9O(X/Ib?Ri"b\gCB9KN=:#96./ej]M)E#erfI:Q?(`E:aroRM53hI_s\jUE*1A0pt9*Zeop1
%q8J0C3!ht9$;]E8_71oKW_la$#lI`?kd9;@%m=n:k8F#6#TAg7Nn1nk_K[Vh&="qC@ENIl)t`\F$DMe4ge]j?!.KjX=PbDArSAs>
%;0b*lLb)&?HQT2`E(j:2:\6P2fXKD%NgbG`Cs"I#TSUq5p[^gLW!26\d;NfFM\"T'IE%u[]X$@@IR+L1>!/.p=aj4Np9JfP2##LY
%nt&NsfMC>K?q5"&"^M4nI]8M@k(iIY2fTjlNQ-Yhr:#N`/&d/hb`JJ__.#/NUEU`U6#eSdI9(*e=NCA0bN-ab53$,;LWtmTP$B,H
%MkID,Okd%W>@eld/YaP1SE>2JB(PM9Voa<2SoA2+D8I:d7We3SeePGa+RjtV7Qrrs?l7#=iu(8Oh/[Aq*$*]Hr"_C,LFYZ?6kCR'
%Pj@G/LjGAUs-=0:=:*!Do!V[nQ`440=>It*Zg0%Elo%:c1lKF%7&D^R*+4N1:V!,ZC#N;4C4Dl>[M[BWid[WqZF<-5i=($3)nNZ#
%FAYQ_RVC&B:YuG_imH9Y\dIFmg;VtOY!)'+4W7V@5)]Nj:$q(O,jEP5qnqq^c@TZWfu/%8rr=;lU9J=)*3i>E!AAluYg(uL;@=1m
%;Hh?2ZmODKi^`T_jP-5lDg`Fe=K0!ap0mBcdA>H/)c!a1N]'ICbRCNK/IJ,S(/bVeK&4N^6(DkZKM$YeOlZ(EJ!,1,_Jdb8I\67"
%4N;@mK@<eu\H,\uRJMV=8F"*PWK<.p_[J,S"s#M$CoFiW&H+3E=h/JdQgNGJL&5Q0eY8SM1C.RpO3<H1DcC@M^0DW;"4`eS.6Q&f
%[0eYp-)l%M%#aPi$bHBp89XK6Rnd:lNMrBb6PhRIIPLD9[DrA+D6m0iUu.ia,*9-Q*09G8grj5]]FQ<VI/:#fp](D5S;T!MKYrHh
%o<e3Om1c<d`gP1iMm0!h&%A",&cT#n)=l5%RYd1bWBcnbcrISHD,oPsW_^65]'VZH(Mko9DFIZe&8dHUfL<("n?i1Q&HR.?)!HX/
%A>%[>luOsBbSTPrGBGFk+N5S>l4<@COX:*SY.H<mHhp/I;G]@4On`B`@h"4IcM/QC!%0*;Up2d%6;=rYR_NML$GC[-r`o*u=*+i0
%pk7S9eat/;_3IBB6QO+Ei&fL6pu10dh\Us/7q[J!UkD-r!?o-F0Zcim7We-*)*(HD*&B,p\pd[b?(=5k`3@"645^7@Qc46g"QR*j
%j*S=*V-qUmR,]-f$(EWd?pKDP"!QK&1D*XI1pf`r7+_oUE'kAsp^ilo2_9"g@u\C=64h/4]Bp,d*f&j`,SpRPD5>=mQ:<s7C/$j&
%pg2:_+KR6J*#@0TKugJ(fM)>b.5C*#g,atB'C-nJo8q;ri[.5#OW4JKJuth\fj?7CQ.OlC_gbSd3R`\KV^<*@a[\F93<P]uP26HO
%]gW?I8IhnfGr(T>E5\>1i*ok=H8;%4>$H#u[S[TX(,1o0C:r*k@9%sK134@iLf(8qC_aHD9*c.D1aD2ch*LZPL+f<_JW@[F'JJ(_
%N*-]ZgnG]=MR+T>eIu2s40$aO@P)Y3#0L%1.3kMO5a[\ME@+IPLe*r3.5j$+:p05[hVaqRo)\n41Dj=&BkEk)_]MX0"Ti,=Ze>BK
%*_==[SYdf-Idlb]<Y#Ip(50+TY)SR.ON:9AoRmS\G\9n_&Vhc?/&t4X<;:`QqA"[]&=S30,"'%a*&F#s?3ATN@t1>!j)2FiUW<#Q
%o29[SdlTh(;g+#ukL:9riSiu*5Ag"n'd(:a:Ue7ZNDrG+,t@lS61!#75E)u#:jX.FZ@5B3W,fN)74j>=YT9'V2q(SHdNnppXXoW7
%Z%YSdFFl,:0M]CUZfI^g,,l\?liMLL,UkDEHQB3hZt1.M+#mCnf/I$1*24Mm'oM'Cm#=9a*C5V.-qu:_K36CK&V"$D">4U7Nnih7
%9p,m[q$(+.N9"S&?7Qu\=$!Rpf6JL<[Z-j53k/<g8g2aDZ'')N38qmta<!m')J"=/;Sf!^SW_>5OoEf&+`A*Z_P78<@#CC)hFK@g
%(s?.QUf`rI>Un)BgROf!h#gFDpa#H^lJ3[tf?j@Z[l_iK.XE1N6;7.EO!'ff^t"[DZ+:VWYDmq.4MBZUZH#77Lb1P7j'oiAV]o2"
%5g.!h&dmS`:X0=%1*-=5&YsOf'SZ(c";,1@-5]Rjb7[+h<[9*3&%%?,U]\fff/DEW:hPe>'7:nLMomgqlN1RTIdb2IRDs3b;5J59
%\EknkinB"3N<nl@/OI4;Nf1F3(b*&?2WV>id?p%rkQs%+`cbI?@rY@lAq>J<OGn(5XVsMa/ILr(1nN.3*Df3E!Z>=roa/bXNh8O&
%=Eug>f-;!,aXt$o=UQDL_jI4n/%saqL7>3@+;>>Xc2@.LmCUKQ*Z3lL'pG^BcC/#S5#D4VKuX<0;a+)K'H:\#6"ljpH3kHX5M\.$
%e8/nc>:nl5%.uic@Pa)8+@ibjK<;-N-!nLW'G-tRb_M2k)lrNs[!+Bj.K\:0(=8G&B9Y7.;HiNYAk<0;P!fjdM&YK=9HpMGjM1Gt
%aRC7jOfjV$:fjGlFI8tnhfaPEA+$-??3BeA$:9W.i\l*j-PqHF%G[J'S$^7A"Y>Orlj^r3G4`2eqH-Ng]S,)5rWHdmd8Z`PX;[R$
%L%Rl)W.\WO:6]qNFkh$:7&pW$^?pou_GP+`)a:GXQ[*O5l#=9r@]YFD-9odPD@W+CbM1\/JSt(8Zj;EXK`+HMB*CS;eT$]_!)rH1
%g$^O$<DCVkVT9BC+fu@i:F1C(4KI/*o='!=$=8E5Kj;%JPVt?WL]+\JZO*V>c/B>Lm6^T]Vsm@ll-U34'*K6G!4gJcj(b'%kAjB2
%'V^K7ZDF%!TNc\Q/hZ,-G\=@c_*MHSY6\p(M1^IJ?AiG#,WC&'V%pYkUO13OF!1mj]0#DA&+O[b(JBe7a/In*nD8>"k/DX^j$d<u
%n8;loI9V/tN/)`BQP;X1EHNkrD"uRf=nCRIND;N)Yu+/?en:KDBIopk0(k;8;Hmi[fD[l,T=3s*OKj!66<j*:jNYD/U7O?T;Zogm
%>X28;qX#qtm1O[;j@?sRA3"W$[4`0,b^;W-5,)J;.='Vki+)!>"qQn*JD>5O5_1>l+rs"13;a82*6\3;(upQe-HQSBTc4\'4tq([
%Ed56J8W2Xkd>o$q$Q'tg>0PLQ.NA+&BdUo0])/am-Co6cNDK0Ei#Q'`.rR*bRRuP>Kh,9!cqj/:5gPElZnI=L%VRJ'-;7o`/_&ef
%Z;r;"gUS3V"[sa7_XrC'jOc"mV!q'a4e?n@@ba\8RZG1pD:-&J]/KsL]NI-#e;O(k]B<*@DB.K(58TL&FgR3HRZ+i4TBNXp.\3FU
%1<upZG8PSp^``Sk@Ttmr=qF:H4kh]@Tl/lV5d#HSe+jNc\Ppi82RPjmr%lZCV_>3:r7G5[`FOtSVWW.K73aERDSO&\#%\K0HoP&?
%#]Ksb`Q30Fr"ajXm\\mX0g-`fE"q5@MFoaPVT1U@5V-8Y3X0L1peB_/g%h<\W!]mt\UQGcYPA1[rW/L5\s.YuHDeUQ<r5C3>/7?b
%GcC!7bH)uJl10`s]_Dba\hpqiL)\_17kZp6Goo5EL9(9C9^CrH*TY8$;2+#FDi4KU7T#j&Lj!me@WkS:>'5$bP-(K$;dm8?Pd_0a
%27$A)LJ7E_2s;f"Up_cC<njO=4ZN2/b:3^B_6Xspf>D+;0$;/`*LHalYReIKS[e$R_A)o>:q$c!Oj5C"-MjuI_An<PLUW%;l1@";
%"fahH5\aJ[8unKs,e96*@8X=Q_I"XV^9=^Mo>JbH9Ok$3N?WLtE$3!&!Aht0ZEL<CED;VO"@@To>F3$0,A\Iq4UCPY+6mQdGrMHZ
%\/N^'D/.kpKQ1j3TJ5N=r&n"oi0)0I4IM$,A^V_Q3+DtO6iD;HbN/=&f$aihpZ'ngo8@bt";Zc2gXX.T#!JYsPrONNX0$;2a$EN)
%B#/\Rg23i+R]Rh6'UHt-[)[sD/<D0c+I[)m<P1k><T:-hEe<Q3@PIE;756;=[N7&>5n*Ai^JTmJ%d[l`F"'_o]KbHirCCqRL4E^I
%7Xq'jp@sP!?DH^YFJG1XIHQlK:>Mn2`q9n!O7PJ=A7(Q;A_^FKS3R5gAN:(6+\F/)q]Ve@Ln8o87buI7*HpnnnCGO!g3K-B%9uoR
%8Vqf?A\'[SY"nc]PqIF-pbKf2F0*)(d(!Vo%BX-pp=l78-KX=roaJ02jR.f>&+hPEWc,LrQd3FHZm9_GL5O<@^k+8rU@0Ar`0%n7
%6Ld*8Z9PaXitGBrhhLXhs/7mdqoVMmj\3.ujpGT4Va0%N+>-JmTIVYG8@??V.1UMHGm_e7U[$BM_^+(kk]m$&)nlbfk%nGP6MV]/
%Du(`lE;hau-Nh6h`KNqYn6E3E++&.!1mur,cc03im51<i`^-*-9Vs>.:&I94F<d3#Z:Jdta8IO;8]W(ljhY)U[DYe[Cs8S-GaXs=
%NV9C7\#L5P<)E1sCl.[YI*cF``#>lM@m!_4I)W5T*p\n!['p3L&_P;5!&<Ush)/(KFR[8p]6Y*:>WfO-/I5^#N4QT`&e[2/bRc^n
%2Mn6\W-K=eq]k>V%]$M_*+"Sl<0KX2)V:IHG7S*t6lI0j*638`:eqFU#?Y$&3)4pIa<!;:+qUe:7+79_&8?ZFZX>;_<VX$a5+V*1
%,Y4[eUr6C(<8TkVj";GiJKrPmEe;mJChJ?_>n):"[@$TjpY/4J=6g77U<%JOT=NW\qhOYk`74kQ_AR6D+M=Nb*>oheo,B#-ndkIa
%5lF"6l9ji:"l`^M3nKCKYl,QsS`nldgTh%ZC7[%in^`(T2:]?bB8]&e-aJ72.jj>a3!YAW4!Y>hIO\Rl%LBfa6N=mi@H78CNY7tO
%rYUui<'EQnS%o%$[b@$`ITtcKfXGuk^#^egLlK-rTt,g5f$%d'a3aqTI1l9.#,sq=@'r.+^s:"C'lLp^rf%tN?a#u:[#Bu"n[h3R
%EFf-%Z.SGWN@CQBn6o]M0&gZ&^(4dTQBm"`Tm1GW]i3''&C7!X6V)=:7>W3?<)@i+L[KA^<a9l&\N9;4mQPgS_eSWrRT^iY2WuVt
%,e%OY<njOoImNRT_/Yrbqd3pp+H*#L8^A$>JrIG5s0(hG>'3uVjKSB5rX\n&5m$MW\n"iQfh^&'%#,'([b:A#'$YO!h;Ht'N`n@;
%pTB;hR3V:7ZsVC9_dUknq2N$d?H4@H,#_%k3tSQA`r3)A$j.2C-O4,823Q]H[Se#.,3fHEGBQLFq#jK_)$40&E[o^[O]/B=!k4!p
%'T8QS#[EV<`5m@7'A*102SP7)*<ph..HaYAgmQ@ifHFV:GYH_0?Lr1n1fs"CX:Xb>keAK&4_)K=U.XFM-qjY'($XYmqa-0l:X.%/
%k$JWIm%A!hF]!<MGTmoc`9d%m[-u]lIb=2hZXCuhfL"MPs"ojciLqH,&b0!^5_KDq30'T-gd]'`I;Di/3lL`B?g6:BJp=1HAJ1>+
%[`M?nWIr#]6ei$pNU)tO+eUgIU4HIOpEHFsG4rn\gMkl:-!6e]B)O<2J!q;hh-bZ3SSjmi'Fk:t0`AKp/W)niEJ8rWYU#3S#DCud
%;=+q*b:#>`^941A=XpdmKgb>Kk$b$iUtqs5E>co\Z9f>'KV0+.>drVM+XkJEnu+4HC[Gc]/b+]oj)XD;1ctOoTsgubD(\#`=.h2r
%PPQ3:X(Mk\0`k^cC+/f2V(rtETcb$9d"fmeGqKi"2DisRLt+c'ID=VUWj!TqX;KSsJ&`;riqJB*ScR>EQHSI5o7XCQkarlnk8)P6
%*#W/dh7.]oFp-.Wq[@MdVOO7gZOD:K.1Z?ggGIZ<n<^s<@)Yb$#"r)*H)6@Xetob$LSrG3o'/Y9?`&k(_sh?^<k,?WK=Dl3hlB9^
%(U]E4qgJVk6NN`sC>G"]R]<n-`lOE(aH#9T4(k@GCi&qoF$]B(6<N1ETCe,>qarG+ktPFrRg]'%7+$H+:)T6.fVnj+,VHY"bX6jR
%F$d[NYf`du6)\71Z-\$LEMV$()@j@een-`!$X?+4C,E_0_rNaE)3Qiqf_C[i8]ZR:KTfPI+DC"+6^a3CH_)_*:7Z(.<&OH_CngWX
%->K<S]3]+'KfAJ;4MCD"Kb$.]%lH\$3!i,t=lFQ-*sA&b*J0>!ZCN`EMA:f^4-^@b1MHN6lVJ2d$%JH..[@8q)jB`9QJ/XQ&OWpu
%o$i7?JZ_rS6jUDBkElt)R;@\-U')50BT`p*EA')J0G&UUbYT@ZUY%&"pb!up[OF2?BTn:0G!C1(>^YpK<"bgDj_b\#dm8@NV&JFh
%L<#!8r[AJ6VX<6W>hUN;?`u=0rYFR#g'U<c)F"0J/g7DWdF#`Df6d&?=]60T0"s-XY=M$FkQS$oU3Z&Q%PT.F&_kT[arCRUM'<h*
%aN#=`Z08uW_<[ClIdqVAiX18n0^jGm3C1b#Y/2-pni@LB;,@H"<Fm9aQXHE:%%;Qgnf$`42;X=*HT^!qoihF'BBOUqZM-=X6GID7
%]PKf3bH`j.:e0,clUf2Z`;@_C$f`CR03AuMEJFea[4$6ATIZ@[R$.UJToVmEhqpj/ElnT*+9&&_L36Ah`UR1\O%5qSWimVn*g"XB
%J3N,k"jN^-3&]Q60AbDhU[Y89inBV0?DBDGiRNjc.;CTIP2NL\!2R;@[.!5AKH@0<MB%3qYOX@*.rFI&_Ba8Bf;Co!A>neW]i\[6
%1WZIPqAN>_JL^&'SYroIA%isnJ\Ap:$KmIWJX-&i3d!k=VPtgF(6.\cT7/(`SC",q45>e,"@M.d>"!69Vq6;<5,6>o]nL[c=[c6a
%#+["n]C1qg6]ibg^>g0>Mk8.TU9s#(qC+);m*rJ]7uXlcNYDOqYC!\[>#sL+aRh%X)]86CVSWa\`QRFLNYr/JErHW&??DZ%"m(2/
%PNd_b/TdXWlb8S2&ur69p*R\of4H.5YGZl%+h?>mEDkMtfg$WGUW'Un,`5:t+`@jaMC$>INp-@*i<4PuAiQIQ((PG!f%S@VimckN
%N<SdPV,:+<;2.6teX019npipd[@c3r=sJI744La)PjfU!h8>e?c9]&J*enP==Ml+>5_NVN&U6h6X39?06_k7,?SFe-6jIQan!uc.
%72tbhc'!mo!rA'HBWJO7"fm5\aiAK<3\V!KH,TFE&<nSjl(OP:EAb6+XPOG8JK4RD.(3k5hcss$H1:k;HWqNdGa;Woj%I]ffYLA?
%5Gb<t-G"_ME<:45"4>"`hdNtX+U-YMD=9aE8&86?[!1.G:L->Lrj!FBY5:j5)TO>e6@q=B@:%@/>j333rq8Hogl9Cp3m<!/g,@[!
%)7V:DJR].9W^HcB'>7r@886*gju8o8!I`@q^spI4d`tZpQ6BD/J^Ln?PoY,7kUT(X&d#-d%"e4Z:.IAoTh=&Kjml`0PQf5/#$')D
%LQW;DW9&WO>MUMTE^4!c)T9j<"WJFX_KN0OYZM_F0=W,Y0be@L>Q@[W)ZG.fm@%pCnCc2^^DADe*%57'@f.j?]h0GDD7:]-[Khnd
%RB/B)X>n<DIL'<=X+eR.6Bcqi[_#EChMj_ekm/cu:^U49pgG.;YXk0taN=L?!P#k5SC.#gqOM"H3HuA^jW3JJ7R6CM]`HN=]mH\A
%cQ;g(ZC*u88'NUs)4c+1FN&DM.BBCB%.STs^`E%\pDc+p74K4Z1a)d>$d)s0#S0#^Hr=39?>ZF3Gq!Y'iMj/ogtoVFciF^?piYOY
%6G>l%N6o(][Es>dG6R&VrM(f>(tu]@_S1UT]fm3#DKibR;riU#m9cUPmkAd_,8$`0K[(F\'X,2[[%(br47"!Q,%($!Ppe?3;JeE'
%blfu:iZ)#RS,t_d4uA6m@-lSnIP6?$?D]k+!ZfC;)2b@K>`W,0U9!2T3K6X=X>q5f7C+Wro"!L.[V`6u/52]<jiefH$,6qeD5Sg]
%2LTC-WWO>A@.=/%-4C>OKHUh+.gb>Bdefh*LJTY9Af*GC$@;`:[O?<7W]./c87(/B3/Um8L;\igqcn]I4S(Z1BGe`p(35P]"SWaV
%BLfS[e?$I"P_m$mq_]0AESGMrL@kRe%#Je^6,DZ"SI+)O%dZhVhP6@2W:abYI-C6]Gll\PY4]EN%c3\g.B*o\]kqug,_tU"CA48+
%lj6j_am;[RB0*Vd7.N:'\)!TAkaGT/YqID+3gh>?M^%%mdEbTKeWPfN7$]@r=GqQ=O+Ru0k4#9V3dI*G"&C3kWO!f<atbMmDUWTI
%DI4ntRhRL.98@OI-<0$fo(qj%eK&/M37GEl=OBJUSW\5(%G2Q/cWA&i1F4>1_mZ4t:A@b5C=[6+>lk4:M)t$n^R-)1MrgQb*:^b.
%Y=:RrKFnR8<."Ho-c41MZg$N6.L-r[\8P8-:MgL+91`q<'pDt2L'kac)J56^Ra"N_fq%;tCLF%.)"hCNJ\a_Np40tQg_Y!LeqE-)
%1:0!`-2&ZZo/E.]0^JXcbse></p.qtQre1hBP'l\mQC7A`KntldZHt2?$XIk.[>`r5=QY@grKo5WK"tGYm]=^P(<oXIZLOI\Lg_L
%,^ag"0sMCF.$ON&j(""B)bS-aTmEg^_4e2%hf?P'^EEn"P03nWU*ns>*9PN"!iD*`+Y+P)Gd%7l-Zd/5_)1@0_LnN3C^<j>j*ZN,
%2UVR]!L&gia7/]K6:YQT61[jo%MNQDfC!TTW`^.K*b*gog,m<oYJCS175n<[3_#Df@-uI<VGGna"2>&Z`<sj(D`Du7J9HX/aA9%'
%#'1HU3teDbksn+i1Y-2@a3[l"<^=E1n:`FLGmNnO2.:H\codoX<P]b01+2J\r3eb0)G!]H-mki89u1jD0X0Ze]VIOoI<3UsUVX#+
%9IGrqrsi*,1)SO1);D"%A^N*.XA#F"5(sI6%<[fH6SJ;=Tp\(^Se>VdVJnpK6,NEVB5E:0mg0<^#BP!J!&BlGL\Z@i/;!ZO(@GR2
%&8\OCRH5=K2&e[3BG*g:SpUENa$`7HIO$YZKbJ&=HWHdK\NC^IY"K8s(_[+s_9t/I%,ODei"B,><a3NEnB:bAs+_DC\Nj@Xi[sS2
%c]&[YKQCO]UI8^:Gku9D_mk`RZGj]=Vah"0Qo@Eg7uUl/J"l!9),q85_3qVOk9J")&]<h;@;qoC(=e&6]4n:Z7U[c[Ond6j]RfNK
%j$bGD[`9k:q!*^d[$+q%"6#V&(hkLXpmMEUTl[1ChmX2c+<6#BAL`E4(!:a=8SZGD:H(Jq<VA2mS>R7e4')?U@PTY7i7Cj#e^.@4
%.T2<%[et@`k-NCl6[>paM/WNfRhZ2Vi&P\i=n(eC#8:d<ea7<oVMgDi4EgS?]!N,Z.?X>lqZ/<i[C1]s!K68%SPgJc9hTk%<Y2F/
%gDTQ!aNn'%.0ORjb5Wcj,-_gdr$cl%po[2e%!5Ub+p99VTODS43Q$1o$^O0Jqqa]\cB6R`K&Prm;)BRC8Jo=b^$^p"ajOC]7BJM2
%#(>c]'=l&:D@C$B!fi1,rtq(H7PX>D\Z$dApi0Ka0d\B2bU3mmS!_[`YRb'=VXO<jhKA,a]T7E_3uBVRI6X(g)J..%aAFQ0bY.0E
%!kt=s>3;P=OP7E1oV$mj:a?k\6_Qd_Aa&7rMPssNd$>t5I,FFf8)1HgReTrjXdb(bd[5b`I][TWiqGAK2c\]'q0>8TifHsR7$%,S
%0!E:d^oIqrY"/68Us2?;8D\&)*OEm/m`fj9]f.T*hQKHJ.cVJ-UIS)4\DUmjIA=&Bjb:X1Nf/gP1sA#BE:9$Lm%*_$ZVsdi8($\L
%OSI>q<u3-8.;bbk78uPm;Jd*?LVXFf31)[jH<0H=#/LP:c#X<5E=c!F1o./W`MZem1&Ul1'm/b1n,KmUl?oO<kFM)fUJFsq0<pA_
%7_1HEO`Qku6\CK/5kb?Wm=[B'j<s:.?.FTKj8<:J9C#UY.[6UO$S<X+"j"82@G>`MSD`=?L$GjHqLigT5mUuNLaEa\^V2.UEdK&q
%"nRGR=$`O&[RDEla.lm2&9b+ekm<Q4+pW?`J@Eq;:CVp3-GGhSBY>+<A-LS+XO,?\a)!:H#0R1.VF47H@Gg^g4,0Bfg*$WX's2#g
%P=1-<!Ko%(+,;[IU%W7I3(Q$YIQKp1.07_p9H1:@I9JB+!Qm!V%;PH@ii$o8-AjVS$J2<!J4FjFUjRjg=N<LDBsA`D+72nTo`,B@
%clf??4R+#>"c5(9Y.A]cN5*C#;6IHC?GKI7@:$L\URCWE*ns0V7Vk?@Dld9Ho/]L(i;cYke"m(u2gF@>3fpgdhOgCK1-Z_+_[0C\
%mW>tEN(HDS=K!gV'qe,31j6IKa=:NIhcsDjj1=.X>DF5pOfs)cVP:;Y0k%_O1i-.Y=L?GnAOi?hX<F"_:6CSmUOa3a(DMYNY)8)5
%()=HAq8tQS=NDkP993Yng&pBXh2k5#S;SRDC#*EaL0<mRpP-9#hOta6O&;moA2".95JXrAE0Fs6%r?=\:=V8*a'#]:!1sWUbW=kT
%T%a2fZ?OG@cTZV)7mZIbSpL7RI`M*fHh"Ka^<jV:i'[E6D'`h)C_IbdJu;m$0Q%PKq<VrN\jlf_QY;cT1'U+LN+]5M%+FuNHWnh1
%SYN!'B1RF<q5]i56AV+if=1lIKC_7DaF9!;k[#.e*eWYfBWa"ATu81ZA'gV"U6]uI7;E92:J+<Zf8Ujk\r!T2jWPRL!<Kr8h(_s$
%Xj!NjaW^5cj0md<7d<kma!G.^>FZ*W?U]>FX=7)i1bO?aENmfmF3,%l*%is#*uKd0J2;aQW.TPK)OJ87j(r9B[8(mrci&;ID5cAV
%GNlBD55>!UmfnSJ8Hu$>l^!DCd/eUHD9T"GES"M<$SV(mR`-Ue3p@LmbJkg9gFK-ZQu->JYSFT!VqC0PY\?M-GV.\A0I7\WFpd'+
%%)-!^5IW>sp2!bgL07qu\Ea&9f"c!a$kLne/2m.mEuS#&5;tP0B?sK@did_A\j0'IFR2;iKPM6%)Q:`ES2B3N#8dXrq$^UUqc]S!
%]^u`JT()0!!V6A2P+EFKRkCPT]pSW-:%/>"mA7B,9/TGa5%a1V%5$muU?2o4m,FU_;us[`8^?"8hi>%O8(\S2'')@+NjZWm>?=2A
%qk_S%@is'\)"7^b:V</$k$oIba8@BJeNTpRrHl80m<ei1LEE$a7m'Iq%R3VeKS"jmhM&Un9o(lpH]bIlqgK*DRQ%GK20tCpmo.-9
%LI08$V-C"jZs98W^9I(L7:eb5(r#lIj8!7'cUR!@=s&W>h/A%:4"pk#G/ff=5;tQH(0or!Jgp2Yn_-(ET3jtc3f4upFXN=D1L\Ts
%l"3_6+!u?7:Tu99?[NZ2+e>(3.7jM')k?/ZkY8ioXafuP%q<%Vkr$P;-db@DA![G8EeO9`h^5S;[k(77\h)PZRB2<'bUYVs1c%R4
%Dk9&inq9Kjg*0=Em@L=JA9ja8<LO=#lf%Y:QhE)l$KEM!rc**p?1q%$(k6H?P*u&os.CliA:t:/.e_,0=fu18#OMaY%t7'c8A>I`
%TjZZ:D8Q::osjC%GEf_<38>+t`^pM$G'jK"7A^N2JK8SP@nL3lM4aoqcRhhfdHFAH5B8#jV*YI8@YLUE`R%DS>8V2qU'rYNG<nB8
%oG7W.9TVke]@qqsaTF&oSAqXD)2]rG$CXNq]-7adIr93;qkf:)no`d7WV2A2k?q#_;o,c!#M^&aXluM=hem73*;)gGi0/;]_sm9M
%:Y@!+gEIZcoQ.hBoCiTZgB5/YM4(e'0QV8`^n5Hm#rX&JXnh^`iCS(4fEolN&GApF]uk>0WOaDR@,T(R2crh13B(Y)1Q\\:2guIc
%p#XQ1hc$`OT#1oWS'[5:[1i>aRYnNKq.@n*Si;))I5h?PT;GM.-B)IU<5/]KP!XqO`Yc@GI<C^_.,E3KH!m-s95k/>;/dX/\r@/]
%N`k`Z7lt#9kg"7qF46Vu%4!RQH@A);F2oBCJ$g8r0'=6mErOOWr>(<(LS+3+)[?<;LprN*i4^6!8sB)[1\+FQR#0l.EQc++D=UZ9
%GK25d>8-pDXP+8Hf3Yli.A%!%5=(,4&M<dFcXUbC";bZIGrX8[U5TTh`_dE>(1*5_Jg8)`Y,oromIgaS"lp*,5rb5_CRc>9Ir.P0
%5RpXo(pl>hV<,>56F"K_Esk/QVjk)1_RJ.?r=/0n-3Mf2rNWgd<"2eI#U;*p,I!;WL5d[-pcGujj?2Z-NJ9A<)K`7-]n7BhH9Fs.
%!;dTc27ANB)#c:G1k$n)6#T-Mf&.8.?$dWJf=M)`ATT8H>`g%V>`f<:6@O+%6P(T`Yr9F4'grs?Ya8Y:>oD30CiYYR!:X*&!T+]d
%T]/`5#9J5Se6F4uiRs!1BXcLLC/blo%le1[JFD*)bZ9Aeq:Ms-(TYe8J""*+IAWHp\*tj_ZVU7rSFZAop`>8-p+e=1d1`j:mVqLh
%`tha_$^@W1\*>Z]_c^Mnl.?Mp[;`-L5TU<*Wsd=;@?Cck)&1Bo4BM"p-d4[?d%:fpB1ROpO#%$T0'i2;OPf%X"/d"!F=VtN'cPTj
%aYg2qZbm^RGcfjk9uK,<Oa$W!r,ok2n.@k%<-)En(gB\+MU4CNmrQX$JuNYsli*UVANYj9i+J32<aO7r3I#_Tj3b2JiD!;'$#VGW
%C$620IiS!-[N?I".K-849I"^6^E<';n*n4m?n*%B,[WP"?k\.TEP%fM`#l1/+h(0(@af\!Mb?,Y.+/4C$M'c3a;*c0q#XQ].=sYT
%THMRTW=2RbL0<UJpLYI\C`g@,kMBtDN^)_-HorCW6++nT3uAL3.q27^dG-Sd1Ch.d[-L'16;'nb:kAY,8Q='cMj_!ejI*qsjMs7s
%`dP>]m`HG5i]2S5Ghl.TBXk=P:L`8p!c%S2%38Cep9'YR_Q1<a+dCiZMPI8"G8[))_Sc>S_iJPu;aH>&8sqX-,p19"T=-\_$$#^I
%2m<TS^5MLAlYsbZ\m3:7ST7R`N4XVVVloZP+a3i_N]h2F$u[s^Hmm09]5I?C5pQ(\VXN)"]HIB_Dh/o:#;d`oYbL7+q_ght'mplR
%J#JnR`/f[pTOk-ikMsCDA%)"A1Pc`4hm3cj_lbZ\.EEj[QbL:)rLZK4f>:L6H8:ki.SHX-.jZ+rPoDj>R1`#6SpRUjiOl=^SBZ=p
%7ZsPl*,YhEmc?";5ta6>"/iQopaTpa8M!"VQMk6A#uD7l9QG45T^JGk)E>,JEGKNN[B;ZR6WhN[#+tHBqMnCEE'NVAh/ganUW>CD
%Yol-sT"G*aG\3V2M<kgldhO(206r&q)qBk`ENkBPb_TQiR+LbFDlAN:%R'RbKj&W1C0`'"RDW[)m2oBn3uI#Y@f/[95eimO%!<@#
%*ktXgcP%+o`_1\Hn:gNX$&26X'?l9<-E!0JY&;W+(c?8*f6O'2bl%PG?A-iqK2(nYW'e&.3!-uoo,=it\`h]kSl(^BTK76ESq]Hg
%3-788Z<OHEFu+*4nI]r/7<*f>_FCsaK*\_neBU&M%ukT4T+:Wp@4,\J];:&:CCEX7CNgHO9`%aqor?'t0X/8S3]=^$?k43)T375!
%qh0`/Qk)Zr4(-/S8i+Ni3fL=K:?g<M'c#aj0`MgkT1[coM$0S94Cc(u^qQVdh83/JMh5nZ4_Kn3H0kfsL7632U$'/QP4e@`ST^>`
%DLsh(UE;u$%2pES?V>iq^"G&5)<d2OpNr</OG=CAf.^P!='K,uW-PQW(nmc&V>W5*"I?1/0tsXTHcC2OjV;LQYU5ZYmk8bX87J,D
%,6/\5Zf!ZH6FO$BUSDegK-Z[t73!up<ekR)Jkqs4giha%$105:JAuYXFm)KIHDpg4a^YI@VF8>'EecT9m7ee0K5AS-GsF)98`W(#
%>_=\*W_9j@TfXQ0MO&L@`40.dhfG>\"TS7ZhnZ4HGr;e&h&mXXhr\-i6tlAePMnR1e4pU\_>AGnI+/QgZj08K_b8kO((t*mF#D.s
%#OU'M=e&o,Zb`E!-?4.iWS@IDd1(:7lC$cD@DECh'"Qohg>Lu&MmQuBJlC^;L)'X!c5lrhA&<X>hKqK)B4S44(ci#kAHXr8\:G*,
%%54S!.8fAh/UE<Dk6]%j79c+8lng"p].obEYk=:Vq']Egop/.[CB?$<\jc!JN&;[f,8K_.VUe4W\S2G!%GOr$Q7m0%OO2q?6$'N=
%X2>444@f[Y4bA^4L/$]?n1$'s(C;]k4<UN)[Z*c\5&_n@aJ,S1%8S/WbM"!)%<[fH6a-@cs"h?tqrNItraC+spu1OTPrTQ=[St?O
%G'0[%3P-_L'g0TRa#4KV`q?[GQjEf2Mj:9g')E33p58:uK\r":i-tEBSbgJ3Tt%:W1b8?@i/#DE$4L[?]-&eT:BYq/Z7fe:$A.+I
%bD7S[-Z"oL(4Vo0f^e"&i?I`u;&KLN[<F0r#F=\EMo*SRO$g:41sB`Z379/V;kaXX?MaffQg<&n"hnh;_PLD8,VC3#3+*<K]t63Y
%N>t'?Y;PJ:WT^]"q)!jIG/3nDb5@FTO,1_,g'/*S%NdN$VfQ!%em0_Lr='+3%KkHIWJY+o2XVg]m0'WHfH9gEGAtk"EAmYp]>PN3
%*5n=;P75H$hm]jG'k_:61hR4,RN33TdP51!Y=-)]fpQq:Md_%9nS,Tha*b<@S4u\.fp1`,kN6b,*j)K:$Y*ASBClIaqbPQVD8QkW
%%M"-KVoXqeVrZh+JTOf6L?I2K:^?]F2Agh`?,X"Vki"@,V<@&+i&9#KnNoHQoP0"e)>mo+_WMAE17h!0EssKS\'WED.4"8lpQ)bL
%#N6/^E0Kf12%e;YUQhq0l.7K9NQdK,Etl>'$6I!!=E*ICZpkU6\92n8dleA+1'FIi0AJM'duX5Em$&UgomXkL>i[1=T+XV/BJ\Z8
%&Qf>t"DE9X`1)ki=@W#p+'dX0:0:7Ss7lf,_<M":OqolAM3`!tFKP-5$QguiEWJ;`^JY9FfikfNqQP1&@u%12Df\chX9YL.?Qg*F
%6_A=HU_GgQjjQ.Ia7H9E_5[%.Na6(Fm4^5k7+EjnqDF&@@>QTK,&6]FK5>:)^>4lopc@Ph4n"::1sE!YGVl]6bapq@g,;#P:7ces
%UNX<L^?=1tiH\W0Ig>R,J'LC;^a93]!hOh`g79UK!nD\I%.p5g=?YY`@3XRD-H!:rE-32UGfWeEq)uPj!&H8"6/F\JmAU?("0YQA
%rDc$J0&dlkrqg\UOOVtAK3;`n)1jqF`)$[3+hG&^hq+g=.oXhG;uhY]D#"#*&E-uUqs(JCWo^1Go#CY]9aHd8#qNTnJ"c66T421o
%gR"RW=`=O.`0aT:E[@qC&[&NHqGHm6'!+Tk72fdG41o:f_7j'(JoapSc`:dM@@WbB[`D>`4Ed7tXi'AVZ(51H_H4m5H.rba("P0t
%g_n3t<A*K.1R8Vh?Ej-jA<UYn=)IG?V+DZ?H1(HcLDF4Nf+el5D$6psn<$0_HAD%+/.iM"Y+Y+""7m?D)YDCqR>7^E3B.QE;iHUm
%%1#:=peR!&E:9)/VM+t*67!0<mWKH)^'4>Q^hejNCd'WmpU./NY<Ico-5],S8+:p@3HLe9D'dNg.f):b$gKUKaoeFD71iH)?(Dt8
%6Q^X01P=3G$6gbId/oX.226bJf_ol5N,ST?hFBtJ(2[P8mmdYHS2peQ;<<XTo\L+%]UMT$Ibs7U?t\uYZ6E:=9U+2d3XVhWK[a:"
%^^9V0)8+,Ph#no6<iP\`"NDN"j?_P`UA*:q2nTGRaK%4D[*g4[hE:Nof?l\"CS[,/aSkfon"0416"q_Q_X7qc*-$(r@N'AAW<+GW
%dR=T.Y-6XL<+SJAK#m#t<Bm9*dVIr?'.pN0R^CM;+f!URnB5Y(.$jhsZC\\.nbJ[Spi$0!?iKl9s+de-reH""a1qSrJ,ScL"no.X
%Z?"R(s6JSAc2[@\J,+kLr;5CNe\D!*s7YdE^O6(-s7FWeMmEBZ\,QXYs#^-cbeDLj^B0>81nKQlR'GuqhH+Z"4@p*-bl`9NmpG"G
%blkFT0Q_Fa/g2<66T=CM-Eb.-I7tk8K\p5qY8=O:F]m%]rM_#&*<6g<6qcQ"/96D5)RgK^]gV0(A<WO7-TjU5W`mJNaO6D'Zcn]l
%>[26)HbBI=\)@7h;_dJNpJ'OuW\m%QdJ'_GYHd7hBpiYiiS&;JcOY\b0g"j&"F%?HTd@5HkQJt9#V5&_5!%h&Ne!ln'Nt_dbLG?R
%(GnB&f@H*Kjljac*%tS;q2Im)P%8M?mcui\_@C/kJlNBoomkOJ/<Lu`TV,,Tp+;s[+u6[S7he@s+GT"9U:P2pP.'giIL`fkUYoAk
%fr79.F*U$t_VJ!+"q7IDn7KQkU!Pt,/r4p9Ud'PFO-*?CD=rj8_#m"@9FV4WU.hUTEuVfT_''KQ\;8Sl;?Vj5,(Fc'$e#"gl"C\'
%aFoRl:cMA2X+&3OHnjUAfkJrD9fe]@O5/Rt+`o+fiJ-$bUW@=OAa5Ic!.u8'j\*(GKYA/e-'I7=Gj`C$_E/4+>n@(:Trh=trS]ZW
%2C/,ZUDI'!58AurO>uhhfY'0#`O;=Wl[+9$*?5Q%%df]kE)?i.,H#Sfl289`\D5>r>S%,5&K^UFqr`]Q>fB6t1*9j2fhWHe`5I,d
%8lT-e4hWIs^RtBJ$Erl'hj]MT[9VfV9NK[7*(&Wu^Ob":Qq5%FoM=p`R''q0'uS+G]l2k&#6j(oH]AT'Sp>@REU8-4OK3D0*+4Dg
%-tFAQ&f=?q.2%"+*/j6$JpYl\/f<bLV1>&>:r(KObM[_+6UW.fY0>1JZkIgco$Sk_`I[::CUdDI;<XZd3A?SMH0kf;`GGec+Erk-
%OMZT.aeJ0M3L+S[I37s92uX)N);j[!4O!onD*6_4^si3bY96kk#L@I8;eP")9IGU7.`Z]]mN/V&ajC\\`a`#r$qMVd7BUj5qfm`9
%<_2h9qrGK0MC'jm<Xn-u6tR=WTGQ<(IuWR90G[]2<r*Q*(JLh4SaI)uSdXeQG*Q=Q[VdLbG74R4-qSchXfD[39"&qa3Z5;_3]NfD
%"`SXl.]V;JjGMVkLLLYj:fMD-gXiec&$T"Z5+)*;f-oLNOmiqF`Q%YuN,JJm4Q@:"K&^K.Q[Td79(TP:*<RGL]K[*F*2oL+-h8ZK
%SZmt-A)6a`0ke!ZJop0A/d&=Zd2h.DDOf=TZ@N(?PJD_JPT/i.GZYMdSV7Xt0_k.O!U>k9n^$]gV!bmJe/59U;%slS(Q`rH2j76B
%=l,@.:h^I4TV]]PrTG`=K@dn=@E5&ePdqI+P327=f>TU"i-@s)J@AM5][etU_g?oln\/&P7YY.:!LF1#5(a(Nf4\@)48'!ILt(kQ
%\!:RKc"hRoAGGsR5-H6!*Vh=uS$d9cG-mF9m>0r]$<Lttls4'K;Eq:.8u/t&kE=F9&:Y(G1)G6P/BX.>iY(g.'-.NUEMFIKrV`^J
%b*.s*??tOY5JU\Nk:m`B%=GlJ*T?t0*S=Fu(?Es071m/cAr-VYcME)-GuIE-C)eO+F^SQrf_/?XdHjSbI-UK&*Eg.bD`T&7(crPE
%3@,#gDN3:g)5^l!]bM0u`f6P6A0$.^^(c7iOjQSFC;iqn5aa0Ur-a`ADjs>a*I.#::E@R4iV)5AMN.,TCS@L.j&ra(A*#^]mr1X(
%jghm'Am&oP]*#rnc)%'PXC[Q[OB7n7B\eb.]("(q?`2hU$KAjT)O[rL9(=KF%_3JdPW!Bm1QeqXJZ[b%IIQqiM?k[I*9*(*%8'O!
%[mU)\(2OpjE+)H=/a\#?/V.^A*smB(Ua5jLV5/K6#Kgjsi1Y+'e[oesm6LmimO#uqoln?,pifgUkZ[ICjqY=UkTSPlfN7J['oQ+-
%VdWlY1u]%12eWTQMue@K"F$$K4:C-YYelf])6i&Qc\Y9_ao`/h\/_9k,uWAB>!_dUc&t@EoJ->LTX@&N%o`cLoSX/N?^e"!<?le]
%HEJg,-mj_a7?25.NgXt7qnO[s,\H"@"hs@6SKhd'UI?dL'lWu/aJNbp'siVT-j.=^mg5bZU/l4@pF;AmOB$)[-(6G"#@D*`6WS,\
%ptP4s?j4.M3Gl0'6p`3TegcKEKc"Fd!iUH-jDf1hi2hAomqi07j-EuM5.mfT_G>1f);8pGFXV'\A?*+Z#do;GS#"kI";Xob"^*E$
%%:\UhNH;-hciY:Z5XBp)ocq&3XT2RUGbK*h7.P<S.%YUHT7?n49%FS/^;JBAD@(>>-H,tN48$/pq50Ej#qm-Z#*3E,XBM_,n[Dm\
%3NoD)(]q4];HuOpDka"X.B`F)Z*QZ;5jR:_,fcALSl*G,XB8`8:Hk]bnL4%;)GmLQ9o:J,MLm`Z9?<H7UA%[iZbB"`K(FGBH`[>=
%VqJ^[0KV"b4n\O3hGS0DXuZa#V=PM2^d+afB1$X7_fa'Dd-.%&p-YRL9kIiJGI3qp0b9X`R2'qBrpYM.'Mg>6+g6*_ft\a`]CFD.
%?[#^?rZC6e7D;b?oY5$\j-'N.J#Gq*)IKe41"?```<3ur(-[.M=ed*!M0?P=L+kuh;Z:d2#`PL@rB<Qikk"[BC5O9%ngh`:^u-0c
%4pHo.p;l*9/Wh!NK0ViSfo\M(@:-=g';Tur\L>srbDiC.+*u8];^BadTd$#DOU3]'H?PITUF/%%SU`gG)X\0=de9X_1ALC`l8bd`
%3p"c5h^3Y@s(gU2"1Oe,Dhn,B.l_RT+N+2^\:QEaZ-i[<fMui;EiNLk@'n!?1$S.@]M9%58kPS&9-]nnH;q[&amqUgMS_I%<9u:m
%:r0l[kedR]fs^04fc_c5$uPNH8dL"-0Y0>F;alKEML$5c/NV54Zj/n?G"n&meXrsjZ0B[.G/efI*YH1E:jh8LY/ThP"NCrIoLLf:
%g:OjE2I!@DTWfe"]mu@MotH?A^V.L77^Ii2dIsJ5r`li2Z\(R63:172Y"CXNP[SqPJT7ZSGqWA,k5b+#EOoaBclU@a18H4,HWd*;
%$su8!P1!MEUs<.*`1N(PNIoi?+mlhL^[@2n58uGdQP@D\/;V7&MM3,8kCi9(I*Oo%6,%.kMR7c58c;e[E]ksY46ZU,ME^[mJ`)E@
%kVO?B*JC.YrnS,]It**dY?4D-O\bV2QIr!MrN;d#DY>DbY''"cZeuF37"?13`'4^]a3VN$_sqc8qY!(Ii"^1Q,VQWP]JS[Q@3`@B
%Y\3U1/TSfJ"VH<q:=9?0,AQ/Y==k2o*=>1(nI15g*0'9_G<sY`FS481F!`A;"r!L@<'#Fl^o*D(bZ0%u&hCVH#`6[+amPAF(Olq@
%gA4V[bW07(74&eXlfSTCH>=0-[kH;OO+4a*0Dc?B)I=dTiog'$k:l[PL(QGPG&kuYNFZkoi*",:N`cn^rPpt./OqMln2/c^s(It;
%aY@gq1Lk'#F=.?]3R+UH.C]u**G30cDj#(%.WQ../L)*u]_9/5o6^)>C7U9SifSA?".JKrBXT\XAT+/$r[V'qH7?L:?9!e%8WN/@
%[-l[X!!?Q\YK(d<ONM'Y.#NqNZn!R\0cqcqa.-W@kd=**F%]5]Y8`,q?K]e%:O$%cLe4F%qE&p;dWs/OGQjGl0t/cjE-1)RXFJ4#
%Z#AXfB'\l*2UgTEY[@8a,7U-V8]"u'S&hiOXEIr08A2$3bEDA3BZDYYZ)R;IZ^jHmG3>jf^N/9U:!'h^O"89/1!^XU"OuMnH5L?X
%kG89M\fSF`oM@;9PF.Gm;kc;6C=r0+AjT#AY/b[;TJs/44j<9o:CDjR!7/h;iCO=QVAMAn!&sG-Hg>JJ7k^ISqH'a<q]rmrH?)'9
%Ba@sJehTrj_kq@8n<i>eENBAFgXclo+S>B6U*XL;?".8AjU#Q];e5UbWTV#mF+qQa>7"4n:G?YD:4I1mN>:mbZob=ObO/hH:$;t!
%BTLeGZQ-%Z[%tLj'9=%s)sOJuRtGeILE)SH.rg*3!k59QqXFWN`eD+g>f*L+(Wm,h&8auG5'ET5Q%"SunW6,pCD>p>6\L^@!\Fui
%r=6Nm=nh29$*V`4W!J4IiVG<+30oHqb+PX-Pn8<(.!5_(<NXp\'$YB+(tO4'7sEp,.FTE`0F/\@B^&*t%>9uV5)><?0N!"ZP8cBN
%>;m"S8MOD<.+O1bKjfIc(_7<T-ML]<8iL%a11B[M>%h?M?U)=BIHq;.'ZkC>=R;IuiD&"6Vp3_!h_cjY?&tJS_,,LF2/#fPMaltY
%4ICJ)*l?kp"nF,;*fF`ng-7^/RC;/WUKcAPr4Kq&*puY:_t\0H^2@n&6"hM=)`si;2hbpk_(2*\OB3!Y5WZH@Ic$&gO?WrEC,>K<
%:hJFc?UJIS*`Hi>DfZueTf%'#bAf$??:rZ+]edk;_I0mW*LJ'=,+cpcWO9;BVOqec8EN>cHNN#B3?-U:RZI*OK)S+tL5NWo!r`U1
%['M+<Slt5/5N#DfpcNVm?pnRNKGWHUC*lE))e,Ve@l:NjEb[#`*pNhsY0pORb!M/Z.4<qNTm"HrUF*(?$[R?f1$f`4*>Wo>-YBh)
%LAbCR[hsaq'o%OQrHc-T41od0GjOqo0(^2IL7^0t@WhZXGCnNUVhumO:_D5$4D88U3%dk(Id-o.oM_^@!Ut01i@`(1aaXCDH8+1-
%q:Hj^O5hAMW1CA9H2r0Ce"Q[I/m,je<Xg`Gl_&Q6Wo!h5@[gUTSCf2plOB9u@)>A/Y"<)&XOpKt@/B[O>1ol'_Mn1kiddo;#<Eck
%ij(45h>YM;Mmgh*\2"WjR+oJl?D]%g2!sc=O&7TfA$E%T+'7ePZ(YgX'&7.Q19mhPKL\+&@Wpq6k<F*&&XT7lK!Z'o]aO9jH>%F8
%2_&*"6(qJ-.I)^pDA$0=jN0f\_:rFAG3CIEQh%u6JlTW8/hS<JFb&/T+YA'1eCC0QPdWU*:a2'IR;1j'(5D\Bgk;b5#57J_ZnY,F
%B!BZNnFX;o;o)0Bpb"0BX*0$H]HJjgn^Q<#pS'.AN_:V0rG_u%BnC<j5BU4r[e@_U60irTM,U5.lsf>AN8ji5^95VG<a^2ZNi7Ft
%36@e:6+Fj5hD[K!.^io:liH'bU8'K:&,[2]0[>3)lRcL7\G3^g>km+jni:'T62(qW&oj@HYf[q5O0nd?3jSbt*Y8f&Z4WNZ>Zo6L
%Bd!0s*2cG:9e6KElr(m3?p+dPPoJR*Hak/,3:BX_)&bklSQE;D_VMHSgu#tP9VPCC0g&U!$,%tu@fAp:^2?1Xdl6`Zk4@+sqY^.4
%l8F;qSgKi-+O!%["#9TCc/[049]%#jD@(3,2k.$OKWe]r5l>Ro,Yc@3(&UF'EG5VgXTnLMRC(@sVnW.&#Nd8d@*bEfmX%:p<?<?V
%U79m3)L-noOh?V7k^J3ZW3lrF\)6S1JE^G_4@HqPLmk;-`DLlp'WRi\WCr^s:qQ2(AM`O;INj*e!Y*0D)G/mqhn2>c+0iL98$`A@
%/NW,16t8%/4csR>BL`U%!S)fiE1BohC.I=DXb70W`455k/4COYKN*.$^TC%+\^(G[aK&")5ut1_Rjc3\>Sq_!hR!D1IS8obZQPd2
%%t:5l@KK+dgTj5W'OBQZjLRV='80bq<V]\bJ]7FIUC0Yk36.D4THQ0O'5.ATYW9EYR>gE>-t4?a]/Ut'DukC2dkLA@^6mbAIrds1
%!c!;+BDJ.7)UjFW!Fcp,'WgJ)-(t#_MdihZ61g0J[hNJ:cb`)&A^A?;K>OZ0NY^Ka?>O^lLjJFP:Z%Su;fQ.A@VZpVBo_W(9K'MT
%]Knp%k=`?MFXCAJI0tl-!di>+l`.ON]5F@8'>!ToF9m&ues@L9-s*2nJmqn9(9c+W5`,,1Y<d*WrVQ$?ne+Apa<T'um;(2sr5ACc
%$u)NI'(\R'[Jlb+O4Qj_q7V8`mpUo+KH^g2"O$LpP,MpU*'r#s,5E[/an%c.(cIOi?9oPF6)[a;-+p@SCK"MC0Qt0_5u_298fc#`
%gS*g'CNpJtQUjaK%^me=)r;b>#%5/=DJW;m3d6)V?BZ%'LNi%e2sq_G["n/kEUO;,?t&Y1H'/<+hmQo8Y_(J7FD5J8^Io*@5=Eun
%naI7qIf-\kN;mAHr;6Z5qfs:?[!-otFjERhXTfGsnA@CaZO*,@38sE54F&<2]BB[#aohP+1QZ2O07)o>GDQW#FXN^(9SqGnVk3q\
%,=6PZ?+'NTrgr*5P9\%m.I2>*g(^,is/J6K4MkA,-P?ljm)@Z<"pW<DmGu,pW'!Gf-Ys_i<YN-pl^cC&>50j.OWMsU<G'Yrh;i$s
%+gmX7EDR:>L9TWk=<DfB%%`,/A8C$C3ApkElT$g4_;s%uNBS3?]eqbSVR,:Y!'ZD8YL$9^/_t,??aRu90k"Pcq:O1c.[)2qqP";"
%ZEd4L(WD;-[0NS$T/XD'F3uo&;COB+WV0rMY27M>R2pV=q_)(H%1YKaK>&^TRYAhJ]C;!V#+fJdUZA&Yl=jN0#)oPG#u?d?85<(Z
%_snI([Ja8%0A<_Q2';I$[Ul;5:9HQgfF\M/=IG3&'QZ7"4'dH(X8/mu9K>)0/W4mJQ7%Q]JPH:QrBi\b?c+\EceqoPKVap>[c'\/
%St+13K=nMpO)\<LhFJU#kFql$mRs;jhm&P5+:)BO!XH0BEqi,^f[RrpqtB"nq_mNCgPuH`U'U>!UAH%q]O;[7eNM8qA]i3Q4E^Q<
%]:.?bq-E$-L8X8AJ+)]J@SBF>RZ>JbI6:5%E7eO\2,2NtMP-W4U^$W;)E]A2hL,E@P/?UR1t"QZkpbJlp/(D\rd-Y;Oblf?-Tp+.
%TC]^0>&RI3V`ei$cU7X=0)4#f5"5-1O%qa%1DeG)Rhkph\qWp":O#Q>'0.DCeXhtk53_sQm;p[g'?6H]`2;6%cA&4;m*J\gJ&+^;
%"S@RKln0151CPXun6sf$]T2:i/tHc"SrdKSG_!WSK'<1?@jW,X,B"8kJ]jJF^%j>Ur_5>]KKsX$fP`b^%Gg-eU<43oq@7)l.@b#Z
%g12^1Mr5;UKs*>D0%kTVZblTN_cUp4oH:V6Yk\kEFKO_<Y^"SL\sXDDMI#?&k6WA)IAq9b\<aupCr4t3po`j`[qCcY!Da1_(Pku?
%p)]fqFe0u)YBm[ORtL.IVWKAOmUNj5N*a<heutcO&>;q.8q`b".<.>4FKG2S*>8d$;d&5J'lh;XpG,ZBDS+\U!n3VFrX[UE(BlPm
%<[X#a=lkAZh;=82KpQJ!W#!2(0RQ^GCG?'4qP__MqCC&N2B]Uo@.f!4AqpC;iOtOk$'eI6r[A%r..uCAm?!H?Wq[EVfpE5;e@edX
%fRC;>(7CP>M*u\0:#P6WF/ON(G!/fdnD>Hrf_;2^*:U&dUha:\3_^Kq;%rI5p%H:)R[V5Rnt.:%[`#Ms^=$rH0&cDugg@B0?1<)u
%Q%+fcD5]ON1U$cJkUrIjGq+7G-rQl]4U=:"*qBXc(g<@\-92PP(rWG*c4aH<`usa$W*.nZA?ms!pH%.W#56HPa`S,,r(FtP+Eil+
%-KlEVI697VQ!reqlO%2LfW_)H/X,Ap35aQi_UahPaC2TBMj$%fk#0IXVcCG!@;5;,8=HdfOiS^u$9EI@nDto#hhMD<ff]NX+61)L
%Yk*ROiYQ(n`KgOkH8HGuI\Z5:3-l`8O$Wp^aq#Q?a#"5f52^^4r??r@+3I73+5`cumOg3p;\KTMh;:ZVZ'Pdfc^<qIfrS*ni\XDu
%.<5n%es5X8F\P<`OP>duA7AL!$"l&L8F+N!a+*sRm+r^Vd4)D_#>""oRHi%UrW_2#=U_[/iYi=A&6XGkW_5;\%Hp0LY5/br7Ic%I
%2<&4!b.7e#&.l'#'WQe+:cPOY&CKnSVIZHp3<BGh4DW5haY<Z/BSsWtc8am9ISM:h0]>I]d%]udoi7#s&:cF$llm7cVU<Uf,?`i&
%ink$("U43"$"EOUmjRou>370uU-I<&A"lJV;I\On2l_uDj,h[U7m*D&-DKtmkDYRo\>/)Xru/jq$qb@Mr!#=n7Zp\Qg,dH1?cgu5
%9Ul/);KU*.?Z'PR`1%,-&.V!ABCKS4"ii9Bc]F\%RuYMY>NBC%0CeSW.%E*^n*%i9^M#6:US[.j*,%DG@83;:6D`j`kg5*pT>TB'
%D[9%BeV98(ZI:P]<of+96-UDuG`q=[OjK_0:KG&)TGuau=?]du*HZ8FrKrpcTFYpEZ2?gnD@4/@IT#.,friW<)X.DUW?A\&I:uib
%q#2O[4%6$&^&sVb/hh=)P/4j7aOql3Z9UUl1s'Q#,YdIh$cc>pe._l'/U(4KME8$R@3=r;ke/+"!%O7g3,C7k<T\&Fod%?++2tZf
%o1+(Y%KY)-0^JE8i\l1</Xb:F!QBKr!\^W<bas13cmkV8I.$2!@h<*Detj:<\\&XtTeu%ehMY]>He;N_W5^Y.boq<F@8giF[Aebf
%"4aUabFpL"o3b1p]<dp,m\ON\RQDIYed%ah'\p=r$7qK^d/[-i,rR6a6fC93#Ka[p6Y#>t8;n:;)aBQskAg])X#ua5@aQs5d#FV[
%_0SHIGm!o15.W=7kLOp8FpUDG.,(PecH*6JclTQD;ru61X*KB*dn&J>iqC&TmOJnAk"9V;?ebqAYtbHa`G:>mC=d3(]p6dLB1;#)
%_.IZq?=^Vr"'S7($Ac;=p'#!#$f:hI$^2JN?Ec!)g$0.(Qjo#ql1="#p%'iJ5&]Ona2HCX.,'F=*=dEbrs[L@K5@e0gAM(I>5')F
%>0Y<26Z.Z7PoDf(8k[7+9m!a\8F(\Km-7B[f_UPc'N3gtSVt1.,aQ<T4S!-<lIMY/f!sB,41Zm'c,B-4J"G,W&J/#1)p-l)60PfO
%h8L7BobuO'R,Tkcel.'JS\_<m0t8\R8lOs8\%(G)1W,L`ZP8LJdldjhYk_)B_o6brUIRnJN.?A5#b2CsN8roIJT`Y>TaOC%Fb\l%
%h\b97:q36cF$C*0+X^<a@)-B5X[A6FM@Tmo!`oICfHeUb)>#.5#(j-i8VcFrRFaW?QO'$j;W.`BA8l%j[+,.Z`#t<Nge`V*f>'bC
%k(T&*benV*pMn-3+JlQgBKCgC#^&*[6rjkFG\V--3/=eC6gs&n\m-RfT`T3A6OL,m"@ENJ:KL!O3Z8L&#5+If6ZEM/:m3P%?]omO
%l0Q55/e1Y3WSt,>qC0UOXQY,`g(Jc)5ah:=UcTUnU%_rfLdo+UJg>o*]JFe>(>0Tf9%I;(b<,>@pqiFC*PRjf*dgKB`8WcAEPodq
%79kD,Ws&b]`;;93-1XDRm/@@NbWlEeb/#Jl=%BSM&%YD]Q&1go#`c-Bnjr)nI*hOtr:tAQs+5mkl3Z+_K_q@g;\<o;+u3i6VsM8a
%d0'6nRZ!9gNae-la?@I%jQe<nE&?,ARu)b4'*2<<Dhl&9VQ58N0Y9'X4n\QIDpJlT_lMA5VCV]@KHg*dY3.a02LG!%6QkQk[!Sps
%RI^kIrHa=0q`>L)!D"sZWf[n;+m'Bb2R$jV+ipacGWUh+OXFO"Q&JLT2"q$l*0VJeUpL>)J"Xi91j3N&TPY6QjDTU4EadGu]80@r
%*G(?CNi!FE/F8^7O#1e\l%:-u4l./DK)(ue]EX-q#<s56`?bA\"@d0#U0$:Fo1iil"pJRO6sZM,92O$;3YXfTVeC35*mj(1p/<o*
%`aD<>7)X!&UOOd]8kar!JfURa'a2H_LOF1+6d1]e]rBpfn-kqF1*WJIhB;#"p"X$.!&JE>o6*U&m;o3q;Kmc[URl+3<Mg:gW-ps<
%/D'J63;l%21u=s/A;;F\7HBV[*:=k*&ns8#(7W^[G,%(S<FJl]e<`!oUNgd.KA'(?StU=U%JoO5+'Zi.q$+gEKkYl<"=4l@\dki_
%f\e*,Mh_T(f:F(kFf%XP"_c_!9Xp-jU?="^/C]pt\cBB;&Y_ld6l[Y_ZiH4+Mcg2OrPt"cBoiujjP>@o$G3piqm:0P4OaBdOXj3*
%6pYWf7+GN8]e>S9BEcE`'#4K91:IFRU=\TS!BM$FS(D=l)::V<-<_5Rkud1!P5S(q`Zn>cV4kLQ)m6@rmb:gX)G)5:TJ);GI9`#9
%i!C-HMi03TBa\Sh`105LS!&lk4)B"N5G/De9mFM"TWRs;&g0bHfaiAG&>G?nJ"#RNL*;2R8jHMX"*)/bPO!?*UP26lHGm6dNW4FQ
%%]p68ls9(^Eq#$0[,P]Led8mKd_m;B@?@Ia`%UY<@"&?p^L/3k0KkON,.PFm#9`!rLXJW0Q+[oM]D/?feIGc4OkIaI9Bri:ji.Su
%g*MDD.SfCLf--FjACOK*3eEt>Gf0&NaDruCL^g=V9?=.k["qJt`.?S`c^h/G,@?S?Vf'Jsi>')9E7s6JKB+!5>U*Yihhj/,kL%Pe
%4n0^[/iU'RA\sMcp^0puG@]jHNd1&TEJlX[jZ[8Nd-PF3E)\8mYcp.4&C/Au,,Ofm;%nM+"dT(3\XEEo2ZhR6U;=l:s.7V:%l*K!
%j?uHAm(3!J%jY2$'tMdALA+_!PGj.^F%Q"e1=Dt8Mju5EF'47PAMu0aAIjO&Vlp$KkCLn3qF?)=(A'K.(V;Y1Oe";,l;&!I462<2
%TUfc>`6eVQgjG(c&rS&R'r0R0=8(q-&t67`6q@-/\Eq1EDh"<-%*O9;_9"pkO@]"J_]tb'%e=%f]sFV!;WGUO+D*6hOKHF![3"(2
%BLQmiVS-J)&A9uSYamI>;U:NC9/D`j/kWPVZ<(_s/&lZQN8ogI><L/%'p&Uf4gSrtA7$NPQpX5\leoX-67.X76J.1%edd*WmqE.F
%U/A-a833R*<eSbigC]s^['4sl7#smnYmi'19Z6P(_.sk!2Z*fZ-%X>D[pG"LP0=n<G9(A5HYt@g"!dtj7q/*lCT#Ii[t/n0N0n<C
%0;.8uoa2[eSuiBBi46J!Mq6?6qY;)1Is(5f0"cc[Mp&E6h,$@2q]/G3qdn`BIImZ[[F^,gZQ4>D][hW.e]DQI9a/kIe>>3XZ<@@*
%FXF26iOQ/,FqZ9>pQ.i]m'k&n@_$^T1WXhY5Dkt%r8bA[a^\me>/8@'T@OO^Rt=9Mf@VJVSRsQ@`oY2_gGg45b=tUpG8@70/iRJ#
%efCYg%[tK)MJl!#><jRn^ebM,^\OShb&So^6(h=RQT,?n$4[1</b3/$J%N?mE8oaKn2"su=LWhS9=]WA9k5i`5B%7s(?j+3hbcb$
%;mDK-]%>^bG^*`I\r7#GB3D<.8F96:pD=`]$V_O/%*c+nU%-,iHu?2fB[M!(hkTo\RsPmB:<^:t]gZ3.!af^>(XS*j_NV'kBB\>h
%hnr*&&Q.@6`a;)R3"i94;`%>WX+7C4eTjO;off7=+AL4V?2]&.rIPud/V(J]'q!S3dLg.QLM!@>6QGZ>2pd#[0ld0kj3'S=9'%1:
%cS60i`PUs##3>Fqg)HF=7Q6q9qboFF>\grAULqO?%!FP1%7F5[2-K73C%7'SjB>*a:rS8N$9"^,>UOLtfn<&'PA?Sn:9J0Y-FoGO
%D\UE%$uq?ArKS`?,I;'"X\s@jMf*Ds)$8R?:SDE2#X-BSjDQP]G8XSf7p<.uI0C)96GJd_YjR#)V?1J96Bd/lTG&YM"2q';aipZ]
%eNi@gJP9jd;m0UWX%3VBlqn"PhCr[n,t:CDlr-,=#E3!U!!*J`iRUr/_%%45)npDim-$'Wmtq:Snre7Tgh9XeZrAA&>*3Uj>'7kJ
%rX_A/':0j.F^YQi:*lZhSU9&b8A=X7U@ikE-qm-VZ.X=S8Ag+$,j%mB2qX?fkIT!U[E(;j$;T;D>gA:Qi+6[h?V:8rjSRP+>Z,i/
%VRR@V`1bnWa:@W9_PT/o/CPsiWu]QR]Tb18=qiOYr.iZ"edllqTFq='VT?H+nW]?BK7#2Oh1'(VKh80S9TtH^/"gni"@H<(^itjc
%SU`Br0ZS@AArM=LT;O=tJpj=`k*.IiUg/-*p&,GCUe^W7IL;(Mb8#l<mtm"B&l-WC[mSS1?W@,TM-f["AL^cH&<=Uu93=VTbt>0W
%Z+XMQH7od#mRi/q)72obiT[h-\in.=ZgOLg!YbC_i^HJsA:'mjkG'eI3`s>ipA&_>qY<Xe:Gt2X?:su"gP1lhFqg%47kfo6;.mt;
%iJ&@.f".g<rp`#OqMO?GH;S4h,@#go>XDJ,Jtm<7D=lbcX$9YlA1M0AS`!^fl@,V#L19\DCS*g#cCkaD^7$HfSXUC*(O,(hkk,.u
%("m-5Y]BKpZnNhT82J>e270hGV=dSGp\*e,D/<eP,),u=p<S::X!dbZKT-IAjiI@?qG.M+6i1-DTek3a%Hu!6:9@d!0MQ6c=ga"X
%p8,.pOVi:-^[?,`h3[80Y*R/#JB%aZf!`k&#c8-.p]_uY(a)]`>ju4)QU>`]TMB*k$T<9e0HUC(2@eR3g/YC=NWr4aMi/h2lclc'
%4Xo,b&:"u88Qm<=CP#Pu8K\W(YoJlo#,rM/A\&jbM')M,lgXtrKsW9fZ(^p4k@J@^pmOHe"8iVKS>2,A3flk&Vrni+rt&=AW.d=a
%U^;F*H4V>hKZdk=A>1[Wq6G.g]g;*M'/h\&2K&4Edb0M],F#E#kpqeqOm`O2.B'N3W)oP"pM0e1jH#+C'+5WaJctRP=MPi!<lX?5
%H<tV&h3ML=ER[$)ioo6l5!U>*mgV<L\.@rS'=5D>Tft-P#]U?p0c25KmUMH14n[`RW/d44UV!n\[S#+Acs`uN6XL`D?ELm`nj0^o
%?'3/-A$KlThh&$$+Zd+_-%J;&OTm2")="X_TR-P<V%Xjl3bQDQe'sP9c02&d#V=^"Eqe4@"qb4!r#(>tB0%.&>2'P_Y*E[c-Hj@K
%;HA.X!QFe0FKQ?`,CR.[9??EnF>P\jNG^lOpST&[50rXQ%48N/4?I;qKF7uh*?=YGS`lb;J;XduQ.Hu%4J#\p$r`$VaQlQB1bcn.
%DERUd(EUo4=c$8dYN\K/`Y[H#qr#m1iIZZc[(,q]"7ldZR^:lr$%9cnHnB1bGi+R_>fSd'im=EPlV#8uTQ%Pt$J`SUPI4h3Z$JM(
%V)E6H%=>qgTMi;CO>[ZReNpibH,(/#hU^?Z.f:Rf&/WM?64nJsn/1QGZlHIo\mR0t*r#%iIHQBlqL1W"#Dl1\nKN/1\*3e\m`4@+
%%diieF(cM]qQ'Ku&`%C4\IaEAIsg,6%uei`V"k2KW.!d):^PFk]0][^#)X@NFOAn?5t,;11qOB+jn3QOTJt5_,A2-ar9`3D]sHW0
%aaI(@5ePYXB'WKA)cn,Q3r9<:I#p=HP[NC>lTnbR8l@On$RjL@O'ag0LW2V4l3$.4K1)8"Md4%MC(/Y77I/u0c/Wsg"sUlXD>gUX
%d+PTT*VrU4SZQd,#J$9Vpka^DX=Bk"&$]6[q5K"=8s$H;UuHiaC[8qtYqMg"iq!fY@E;TDd$J3)B^4dur5g1'pJo0.i6\G2d$O[_
%4*nk[)8\)Ob`\97%Z#6O<U74k"e.,5/hE]tF[e=XBS9!5R-&@Bi-pS]^?;d'o*5W"Df'n,Xg&m@^VrZe7QK;"RK&i:aOE8i>6@1Y
%gOt#jAp(`-WJ_^gq^rfPS:[I7;]EVWkpG7a>aLMR:<:+o.]0(1+1g*2nmap*nGZ/mNh.on#=Hp$7;.31JmbEed%;kUkb/fcA%3Z^
%PK56o+p\&AfA`qKGpO0`pf:)<W15fVckeh+QuS.P\&?#Ul_DpC>L=3`6?pi'%s>bYM]/rh#4J,I3CQ8UNd$]=hD+sK8rhW&U/3J,
%Y.`fi782C1E.m^Qn.?nnFn>^l(uB#84CUU13r_<NBTC.\S64\(0]?Ct)\\7qdiS;IcTf3]1V'1=P3-9-V6j%jl3TA6&.qA;LO<MX
%H76S^`DoV4YIBOkK&&%W!G+Q1HFIr.Q]Tggk\+@])r5c(mnZ*aVHI"8@AZEmjb=S,_4:Kp\O)W3SiVM$'en#+%qO\sD3>])Z)R$(
%o]uD,^92<*\jf/+(R`oTH,A7Y'UcX[lM+/i*Je`8F=0m-KtZ:#V'mh]1Z5^^DFj&Ror_4mG/D=p"&,\>#PLGq_mQgt/EAegNV&.F
%6\7BYBqUViOmaTlqYZ`5(=1:masJ;(G&+@]foj[:%VuJ(G_E?X[LTKMpNR)?_>/IAAj=g\6LO:ugj5-3Y_+o^bL1`eoWYA+PNYnT
%b6.Vt3&*&i._th1/QPQ3g(9ZF@2aMu=\;g=W@kA4%W?g1;Z$0n/Y,Q6^8P:<99ah`D.@BK5WhOG]jJOaIl`=Sj]Y30Gu@^g<%9?h
%`5e876pQ!7Ob<6G4:-<2"@)PeB@_-W@#7PX=&kcehhiC7`C\HSL5@e8)=c4[j@K[L#\&,kdA[+Oj2qqs]fY,<58oppZk&'\LL@Fm
%T@Qhh_IEtV8-d'%L>LqjM6'7.9L4:*LEOJR"h-!K^*)gQ[h(nb=XNZ3"%<Q1ZJ`n,a$Qi66`dX)^@5"h*9h^J]^FHS7XZt'9tX[b
%RS'hI:rZp\?)*AV<A:%$'r:CK+F2KT6,6:tTBg2>mHgR>)%aYTi]._"#DdX0$AESt:c,bT2s@)jp2_GUH%YP5Jj2eNNE5.>-<fDK
%1f1&@$cUDA3n<&:fW.Dukd2=5aD#:C%gXS66uUs[`,_%md%OHR;Z3KnBn"Y=KC_O46"\4#d@KKV@`c&g3t4W[q7>sJr2B\g!5lW"
%OaA+23&Oe?j;B`":SFI+!TajK5^<)^nKN(X+aa)(.1tEc_17UNHe)hk'#b:gmdhD7*.4T\LVE)Nn+K""QqS7+Sl"[nS,BaM"q@.k
%79jU<<B]q;VUSH`rLD5\dDt9garL'eo\\];V"O6^>nig`lWOM#`^"Ms'5:(;dl>"&aX!6iloQ'G%BnOLZ;(Ri^4Us7#EJS0erfar
%cj^4'ipkY/&2BI5^(s3_E+o*AJ`e+@QOj.gBWsO\oAGdT0%#D@+VG.c7.,u>kDNMrqYA*%oAf#GHIt+bO./b6[KBh_f6%pf/Y;B5
%;GG#Kk>330#3)5":Bd)nk^):>#/oDbOT9#.X9u[_E=#dU$'+/E[*a`.hYpanLs=6k^r\Of5kCg1pgkF;%kgG^SfN99lb#-i5:$>*
%^,`<'J!lb8KY6/07g"OVm)DtRJ"8Wb>BT8'L\.#0(6(`/!eTJ6+\9iDXF7!B,AX7&2cJRE_6/uS31a7_R>o;7DL5)t_k`ao]'U4C
%S?8i+U>QY%MML@'&$2P<HBC4L44Zt"eBuS[*@V.8?s1,3p'L@RKrnWD[J3C:&o\rX>Bae."te#+]AE_R8GquZ[60/9oEZJfCXaY@
%DdT8fIXJl"2*]u,c9JY'5'*D-Rpdr4@9GG.VcTVK<b^R)7FUNZdq:;_/3&r:MG)%V9lr3G`Jnatp%R(@qb#HSH:L;O*4.TQ`t"1Q
%)paGZ.&DX+6L_$09ePG\E1[<%7W8k@ng3"R:-'E7=po@%7`-CQEbhT:5?[*V8'5*s*6UCj;)ADA0Oi0ikYGH>)?PlD*lIT._B;J1
%[ZF=PoaQ]WK,uYnk_&Gq@Llm:Bd;:L6\QG8GHZ6+!hu%QLMkD[r\dS(:@2HoSXh]eqJ?U1'@mQc8o,:UTT#MmH*f[*-.3aCL0-a'
%pso^MkB$gEfNm(?>e9k0C^BZS6E`hHXLN"#q>!,%,f$'>Q^9),.]P@0Kj4C;Jiq]Z$ek%1BQGOS]LJ:\cO(j.n.D5HiSG",5+OjV
%oL#Ka]qkr03MXS.&!M'.bEjXTjP,t1@E2U!Im<kIhOmV6Se>A)kFk&uTj9<KQS8j:Dbt?ie<6rbpZSV.$o:;RY!X)iML'lRW1t/C
%.J3!hK^X,&O2&A*q@Bkhd#`3)Zte?Uc'mFD0Y;p:Ae\H:B@OCI+M2=2qptKrcg'9s%6`$'=DFnu2/3bQ3X8f*#kr<C2;YgF&+k$9
%PY>%&(?l<<g&uS9aK]^iGb82rATL^VkQ$7#eJZ`#XpZ,^)?g^f;!K;Y+g3fOhR\q0HLTG7TDR9FD'q@Ufra^EY'17pDdQT7Q:'=W
%8(B2X(4G[eZWkd7<*_#\i;JhiffPuUijC*oR[;Gl-_>Y]l`M5nJk2_2H!E7IEdU*eY)se$C#?ajU3\)qI0\(b_"q6g^As$L750Sg
%IUf<_,lKa7V&!m88h16p'2ldn^m$i"+%ukZrd95,g%eWJ$U<i&pn%*d?A5NJJu'E[pt@[mrN0f*=H:h_ANE:Z)gZQVAM/jbUDb>U
%4.NOPC@q)u_p(l@DF?'_BB2on,k:-jrd;bbWJf``q&Q)f!Pf"_KLG>:@fQQd*1AoJd&U@p:#=D6ZWPb/IDu+IFlB[$d#6AC@NlJT
%.Si$nR3Jsr:EBK"C\@\ap"R7Xf>%:Qs4^o\eUR,@!k>RVpViDa%iq/nE&#B1)^$QMP\UnbCEberW$jgXQakd2HMhd@176K$4-'Ec
%8iqW3T(P:N+3GU]R),>^N4ZU4CKn^$qg]@<LPXbsl58`meSt1<kkLo,3miEbs!p-sZb[Tt(pC4Kq&XY41ak%L_\S*.J7:1jN@Fk(
%[hLSP>gs-gAG'>FN>bTh!FZL/W]m"s<j5#19(D%]Od;ab>`i3G?,<,B-uu"/auhd*N<D%,LVE$)9]Mn4>GMd`nsu2"j?JYp1IM#+
%6)_W[m<@c_8Ug4BM1mjt$2r/]'"fBTl!>Mc:t%q/Mo6/2\Xbl09u<C4TpR2p"pCH+=1HhGn7ruq=84)`qp(*XL!*48'D'okL7^RB
%+YFD1:6B4(eD;qYHk2i507)5qm$BDH3"r(7k]a#9[P@91%f78MRe2obeT]mld2'A7GbS-MKdh)hB7@<q`,n#K#5"a;WZ//W]H:qM
%TJ:GK'2eG^S&JhJ6O]:1Z./;Q5*u]I&`#2-\Ku2=@0p#R'ACIr[(g9i>NX2.*Rmc4M\fC8.6H2-\A3(>`fiP/gNs@bFZFDTRr"*c
%Bd!=fM3Q"\%MuJ5S>7IleL!?2Qf<<=*kJ@[i:Nde3bRaP"2'NkqSm8pJn(Ous36jdTKZ-dR;E*d^8iT#".GNH8$S<=[mSraC<hfq
%^MJT,VI,B2>1(_4'D^-nNJC<o6e%ddH<W!qM_IsmD;U%<NLe.Y6$3LBrd%:AQVp>"V:S6nH''VYDH"A7;B;18KY6#,8+TX6keg>3
%2%$ZR&(+2&IT(:k>LE2(<mm;j]BXg+m9FD<>XKIS^@Z.]&EYK0P;\*(><u((o)KfZ&rBffdmPj'\JhFR?p3X1J@f6B2qQHN.q70?
%7H2ZD\j3oqPW33HGZGj>kn)W[@:*+<PWq$q3R/kH3I-'n9Z'G_WqCpl$722?ms%%D]k:Vi\5O-!`tGJ62mc'^PR_\60/\-eXPg)A
%;i'1M`D5XR>$L`T)^l]a&)J(#*9]j.T"nKKa7S\Ej(:F8JC,%,)l*q1%Zg?p<&Sr"h0iQ]Uf1hodt(iplf&@#OVSo8oMaCUH1A\5
%/\')7ph>$LSN6nTCtNOT(1tL9+u,.!oaM3#g-f/4SK-?P)rXV@]+7n>pdud+5-A9Wq_*Ys^K;h+dS'bu<#bSbV1e$YJGFVZ<n2K$
%Ii("lgOZN`\LZcM>pqe%9rc#$lRam<GgSA]4h/SOVTK-[bo@q02btIG\?rZmmnEV9TndaX=LbXL?ut8fhD^aN^@[PK]q/0=1WX$"
%>XH02,hg`g(O(_-eE[S-905dbi$auK(uh.`qdR$'0LPp\rpPX\@Ls]n*0q^T(apfI[,#&2f087leaWW<]:hqb,UO#IDFAGH]cHq^
%a,2Ve><u)iE5e]aKWJKI$`SU=%__:19dV5+S/!Qbkq?Q`lL%9&HinA,/5g7;Gag,`hgin`4iujjB\_cZ$f><Vh3o$6L6>fQUJ#9W
%hk8g/\1b5"?$*NN)[S^[)/br)M]j#H59b?'anjHZk25iW!n]]rs,'ISE^G:NL/s'tnVN;Ik7tj#8/p]QJ#5WO);)n3gO[rqd$K'S
%\""0aZHTqjKY6/07fu]Fkf-PN?S!+9dTk/%iUO`L6&Z0#U[YunoM_[oG&S\cFp<h,-%EtsN)pZhp<&U`+F6rFIEf6)(9Cu+Tf?@M
%*EpF>_qtrG^I3Zjic(0u_qjVF&:U)X*!NYfHdd&lqn)'kpG%_'TV"R>_s4P",C*?rGH[ed&>caTD@K.0`T36eThh=Oi96[s2@>Ja
%E1+4"W)g*]^,7SPU)VlOqT!t<(Hu[6fQUVsPe]s9=o$SV`O?G[4,47ON#hKXRckLsXX7peFKa:8&:_<J,f^8/5ZM+B!3FIsNM`PF
%d=J3eC?8Da&oj1ZOl%r567]A?OKE7gn.1^LO[r6p5uqsFc+-O-'!_gPB_9rr`Me$p3IK]!?I6:2`BEti`>3K'Z_cpe)\&F/h\0a/
%53="qE3DPl1.j62^-bTpin2ChW.rK<r)VDIMf`8!I0(9\Mfol?;W9hCB]&@Z8$!dcfJlpZ#.c&joM[.q"8Fb638dCT5Bt[Df.=qn
%OS*BSpE7>J8-pB?i2Wj]'LrC'K?3mlWd^H$/pi8.4(>P'H99(&Sk?-J"n/TMp]BEqG\N:96lilifS_BR(`=X^)/+uohRI:l?W.&]
%aHWb-6pp@@/XWY7!_:*(0J"@T(D17HUf00$AYrroV93L:_%UH92)tlC&MlZMoNIM_N$oaT-bQElog,]Z!X$#Id7;A@D&uNZR/IN`
%!)>mH8pLN5!9Q@_W6$pZ9>:r.>bnbiY8Y]5TNpD,pdF`^1PcGFQXg67cpg"A[e)Q/+jM42f?l'4:_O)o&G1KRDhm!-6dbR5&A_i1
%Y-F_i#eD284JUT1a9YPRru$iNR4AC:$,YQt>\C-kaU46'^VG:@:H2Zci-b3,Mm8JfBDO5j"#_8aq!"Y<:r]LiUFaN@?orSR='22T
%]KJt/aGAdYj=<<b=CE_P1fb1H9mk`m\:hNO6q7?7\Eq46J$gm*1:)PI0$^DbPQ4U;`gc:m`uo/ZTtTP:DY,UJomm*M+etC*i"g%Q
%;Og$RYG&X\.;j7f\\Bj12P1L07559RMbH_`4CL]&Q2a:^)aqX^jJt5e957@gG)#k4=)U@/MF^:s"dsCTOu<lTFb$606e:J<@o)]L
%DGYAD\mHbAX._4k8$iBH&kd<?%UJ-("r+8V8*hY_<(:(4[ID'l$B#rY1/K>A75$N3*Mabb'80'k,97HoO@RQ=72;WeUh_79Z`];^
%3WQJ5?HAW="ltG$-kdUmoK"7`pDLNY^PQ+Z(rSD\cO$_#nc^S<jEZMU'#<@-TB$KHH*b+mmhY^_0BU@d-RPA^bT/^;V).2Ml?$B'
%g2@Gh$ITd,2T5r:Hj;?uT;SI*R7gUELW0J\d)Rsp8lB`EQu8O).7$5AZ5hHKmhrS(U>Ao(Sp.DufIPXTog5hH[9[jM?k'`TP-)6f
%roI%pCNQ^u+rI,m2h1QbTjI=f_i<[cl8?I2L+9Ph.!Wgbi>.YP@5!=eDWkoP0qe/T'8d//.;.#I^@i#LG8<@SLfV'[!>OW%D@+No
%80U0$Or`8DEtj@o"R2&RU0J9n#>TEI?sHN3O:Gbc?da][gO'ciC+a\7/hJ6Ie\M(4%+X=eY/nf&CF:;^00&Xn@i'jqPA9k\,>#1.
%\q1i@#/s>Nn3nbBq\]Zo1%qE.r#OZaroS=1jiL>F?:qGOaA&C]i!'k>9Hp<?7.#c=e4Z5?cukI-'![t<lXPmp#6aMZ%T1u2T,QE-
%]ItEjTeL+!MWsm*EjC2We]b`T%fBThVO1P@XCD@GY$mU6",hgL#2(P"E0iMN9C(qB<c(*/qOYp7klnnR]'Y]kKWNl18+TX4kepD<
%o/$XcL/ZujnDKuNbI%6^SQ>TKn/@kl,<2Yq0CRYWTmlL<?*iK1$4e&FRm<Z-\utaW17%$Z^)mWs!YdO%h=l3]e3=GVaTs&0HRO8&
%0[:F7o6Gtq(=@-:aLjo\e*)WW:$QLN?ARsi)(b%db.Pr6W8HYY6*g;<oV(p2ApiVNBuL;a6\^c&-=fI_d)S!$p4Zk$aS<XAB"AHn
%7B8bPnV'UF`j^MJW`en.JBN,L[k+ufP-TCn[%0?D;g5F*_Y*!Fapa-9IK1Gs@9Rb!?DGInFG^qB2_WU<d$bk3T7mL#%s`);E)j!+
%6^ta]AuK(aBO@m&.qjII<)t8S?f.V2!1Dj4j1W<+k,W80>(&kFbJfjDn?N&sI(3l->&'jQ"4%gf>HJSo57q?U'Q\mOnu+S&i;07Y
%?p\?1FQd5'(p6!=frYLuCGb]s-K$1`'C.k3@)"WX"Fj4G/*8bc9YUVA@F%gn03YpD,)$6N*8f4^Tqcc=fHQj,TchjUY7#S(^`a!1
%^@tr8')AsOEIF2n1mELR\!:b4"9"`dT6%7"0l5hYl4Tb2g%tnr<$"ukXLqu$`[Bi\1pde6\;H8#HQLtGQO!C/*!>*I$/8<=3K_/a
%X2(C-;2Iat?5'e*1&Z?t!rA?<'NoB['N/1&?LL.cJO<[cj/Kes9[Mt*)u0'b5-!i"VK\/R9m](?]mDSZ'H*,1@\"\<Jop&U598Z*
%V+;eW;*rbSim_&jg-@lVL44!sA:Fd!]qX9/@;;R"jl4Y'fV,LQLTPmSN.Sr&Z1$E>*NJ.7jCk@2EcHo]h:AR^JA.7di)mGQ"aOV1
%__all"$g^cC$q'a/1c/Bc+#\12Gdq7<`8[FlCtejl*l[B@'i5(WuPS:a=l>bl*DUMF;#Cb9q0bur16rt4WBWLSq>ilIrc>#70SM+
%Cn!WK+U;A0r)4kE[+i1!?25)GeptK!0gY+"/;GcUD%\`<YB5;iEC3^o^gfT9XLn@O?6[Q3[2jM7ItsfEI3c\C"Etm)Q4dE4c]F(h
%YoeIM;pN*O0]W!@=cs?,,1h',6bu3l%lnCH_[hPcc@7=";)Y2#2UoEK6jEirX@-9V-H@6FMjML*Tt0%t(-0_TUd4"b*70bn[$0C;
%(U3D'0GGj@\A![mD&pch("%S/[@V0C/(<n$Tr*2AU#HNG6U6:K]nNjGPWCm"-R\?(6dJ,U^MUQ:>/C*t&>k+(/g7FMcpOMLBC3WM
%oZ`&IaB;<0"mk[ihV<ipWo.?!&.%(Ak(K2Qdd^NG-N,Phf8\h*D`&NFWF%WQ2F?igR!qao`M7f@<^Rg8bA5oCibTG[!fZ>JB@%fR
%&^H+UU>uPOh(9B$"8\^qK5^n4>7n-.1q"eF+W,.soTs(n\QJ'o31q@ug?=CkHUBDjI)Ht.jn<n.WuOpFXMDVTYVco8>rVQGEs3kE
%`R<u;h6@J[A.?&Pld+2+h6oe#-,m3N3V,D/TafsN^@p3gl(7*[FW%/5Z#Wm92-I.Ob_q<NaO`tWVtM5HLX:Qg=sANF`Cs;'7^;<t
%OS.,Vg`TC'cj<4].Wt4SK_fg18L.lgI>us/*Mu4n8\>3)pIp7k*f^&RhCh;1,<?O!/e/m//&FWaG><lf''1#pgD\:L%#i#?JB1;;
%i_ZK./_C=?J>t;#"J[O6n-e]H&p!ed0n>5;mStrMBTXSCe8tro`65!hC&%FOa;M[dZ'-$3/*bt'HeB0Z_`7GUTYDHRnp9bc0AAlB
%!D"KM4=['=h881HWErMi6U1=rr>q&R\SU"&qE3HjH.\c?:h2m-;ZLE<lTlp$`M<BH<(J9VG)JnH]"3DknI4TsFWU_=i^pt6][Rk@
%@#Ncg0YnX<j!bM)=G,1$P8[u(j8OaAFf0d`e;'V3Reit`96?=n7)T!6h6,fL5j/uEJr9php@ob1iO(If+#u(DCJ^YLW3=;6^,kk_
%oEM^WI\&]kmNjjk*`5AnEMlABWukR`%NW.Hc4Klk@oV?T?)$LEAf"sW3>GpAI50VC_CUXN%jg5[H5ns$3qO]_-pmf!Qu11k&Uac@
%7(bae*)kHPP.\TJD"$sjY51,\Y5Sd+&HKR?FN:YF)lH!&QB4Hl("X4HK4aN#5^h'(E@<7dhk2T1K?F'gli8tT,8,ndLiHmW(9&B>
%_mtM40GDUqIpESnLdrm[T,H..Y4#5WE);G[O(V:@e*kVf[CnuE@DPU>6&hRENgs!Cn/Q-S&9Q;]"2'iLedl`(>(MFs`GCHH3&8$>
%lEWg[6X+1-Hin8kIO7Vb&edZU%is=g-Q1ck2!ZiFRu@\YX?7%*m+m[b<o/_XhNre4i/ZQ2LOR;p]%.e.1is"kK1-L]45(U^9qX#c
%[gWs2=NRS4ck!f`fBWj'(`=tVgu>.\\tK3jq%Eqj4E`_gTit`5"s)&'XGd757_mA<`3#Z3\m4"cJ0L/*Ol[rg5QSI5L[L<X'+JEh
%3":6U`TT.m(C'M!Y4,/0)I*Dbdp#Fgb,_e&r@.47fRu;CcPJd$JNt9^&XVoSgGf*7F"0HZJ*q5@?SBa3p-B_2Y+T$2i,QYZ>i!\T
%^\BI.V%/lZppEU),%QKVP8gPX^G<*NDBsTui(D#YLB5ln0@ReR0#llkVa2C[=\Ie8+JdBHJJFkVhBK93FH&&1%#Fc</*scK&6f3W
%"JFGP%lt=`S+tH#:PPIO0Ot=@g/MiQTotY,SJ;9s2kPV^M^p$"?YC3EltXARrJ4<NB\\+ufW`=HH7W*B$kX/f&26R]ENjXLEqQsE
%7NbnGkV;FqU'GVc*TN=miSD_^_4&==]nY>EN]lHd\!J+EnCIs1pBMdrr=9Ki]p`)fPrVA)OR%)B!A<NE*@RS'59esN2KD1OgDLp/
%Y?Y8LWdD,SI7Z5Dm@%7Si#Xpa':4g4RqQ_I8fO=GlKp*efX`[)0E_n@'+g?j+,Yu7?a@Qh?j&PL&iSZ.bOGEEHu+3$5gPD,reC,;
%">[27rd%$4cHV8"+EaLG+=0?u:@+Pa=&]Ze"4#R/?["^DegnMR?4"V_l7Hm)'[!NA?pH)B_RVZ0oYks']+AWF.#:r8A+V;l#I1?W
%C_uF&=0/,+(NJ9e(sXBrp<s*"RP50_N."EGJ[f"M)FCP4P+se":Suqpj`;hO8n6*DWg!Z/TsPMh`IQq+'h`R4aM"Y\]DO6G>&*J:
%E_/:0BLIT*hrfo(D2^MdN7EG4pD1]_nC)!cWZX!Qird2l'.V/cDXD*D@oS=1Q/>PX+S[7OG;TIo%*#M*KH`2N)I4Z:%\fO4D#Frc
%TaWgHTFM]]V]MPO>pH[7'h7M4?%T=q98UW]\e4M>qb68l-NiL9Bk8o#qWtAYSC]UKer-"g&2S:R+!?k@==Xk4c!$`>pG8tI[Oo2c
%-W<e$P3\L$>^]H`C?c^s3l/q?otI"P_0`WYHUGJj#=`)3pr9I3I?5:TF6U"oru?Y]eJ.jJ2(k(Pcs&gA,Et[3S[UWmB2.lm\,#4Q
%/^&?`Rm4N:(r#Yc4r(9Y;+=WjJWS=#&>-<3>iUo'=\EE?XO;X5j9?/025;;I)+nmg#$J?gp?%dQd>+XFIYBSS:!teAIlO!cj4Xt)
%@b>ckimmh6Ao-2j'&M]"0o6T]c;_=s/J,/MX`Z+L4Bbnr.5*EZg>L@NP;mm[h!l3o?QqqtTfVIV_<Xu.-FUi!Zq'JjA"Yti@t>r;
%.XU2$E=pml<-_mJH-oiA.U'g'1PnfL.o/!kR1chf:Ha2=QA0!(6KKj\MgeGMc7?n#)AJSSRC336Vi$cN[,Qg4'n/LD4m"p`=+g"F
%!kN7=/uBBU55Xb"HL$M:0S3;0Y1LQ7=9jsljgp<c7!/:^`UP_N:rX82g(]oaiXiT<"RoQ4L[\M%(mLjl"^0Rpb(>mq`l3JsCZI+&
%K)r'k7k0/nrLD8@f.Vn[BjrdG?oZo-C+*5j>:4q-W%+Ft5X#nN&n#OTL7H]h,gr<(*stFE=pfcI-#,)#FC)e'0>ZoIkC%;3)&X(S
%1\((ur,bT@9oc`N^sihYht>\4XX>ZW;V$N/f--b+M8j&E`>.5-^#"9!3EG4Q>,QtAp2LaYOO\,[DkMsQh0AAVb;DH"JPed7-727#
%.Dh`p*@[=/dFNR&#HDJk'lJfB1/j&toU`jfjG:3o92L>6\=BhXTT-(0Ct\DuoH'E"f%nMW)dbtZ"k$k4[^\]oQ\cLFG:@>i'F[!:
%li97,STUi>3-5t*]C5&(6YuhRN>p<S%q!N_e<*]W%.nU-qaTMjWRhNAn14p79,&;J\nmD^:V!V#YM\5)N]&U#3-:"HcQHH9#;r1/
%K.ELd::1)=\-I__Jc:#c0?>m82;4tdkKA_HMg9]HU>%\o11HhA@if;HcL(sr+RsMBHtFY88tY@rE6DKeRi2<TaTZA4b3Ht8P1n))
%bTNt:ctJtA)dR^PBeEk6&Ms$oU]>SFaf46?;G=eoiO"=spc1ojNS8R\ER3*m8C0TmF)1G7SXB!>hu34TrQW+U+7"FSp](#<I/`M_
%rO]iBrqd0&c%#NC^]1qGoe1gl&-(8=rT16_lL4cEhu5iipY4U)j$/.\o'cSHqk&?7qnN'bJ,\V\qTIdpp7MB2J,4YGi()f4J+GW!
%rdXbdrq`ht5CPp<"o~>
%AI9_PrivateDataEnd
