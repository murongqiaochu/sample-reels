%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: plata_2.eps
%%Creator: Adobe Illustrator(R) 19.1
%%For: user
%%CreationDate: 5/12/2016
%%BoundingBox: 0 0 1200 1200
%%HiResBoundingBox: 0 0 1200 1200
%%CropBox: 0 0 1200 1200
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 19.1.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 19.1.0 x29 R agm 4.7731 ct 5.3840%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=100 RasterRes=1 GradRes=1 Text=1 Stroke=0 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c067 79.157747, 2015/03/30-23:40:42        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
            xmlns:photoshop="http://ns.adobe.com/photoshop/1.0/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">abstract vector background with high tech circuit board Vector Illustration</rdf:li>
            </rdf:Alt>
         </dc:title>
         <dc:creator>
            <rdf:Seq>
               <rdf:li>Iryna</rdf:li>
            </rdf:Seq>
         </dc:creator>
         <dc:description>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">abstract vector background with high tech circuit board Vector Illustration</rdf:li>
            </rdf:Alt>
         </dc:description>
         <dc:subject>
            <rdf:Bag>
               <rdf:li>circuit</rdf:li>
               <rdf:li>vector</rdf:li>
               <rdf:li>backgrounds</rdf:li>
               <rdf:li>tech</rdf:li>
               <rdf:li>processor</rdf:li>
               <rdf:li>abstract</rdf:li>
               <rdf:li>abstraction</rdf:li>
               <rdf:li>chip</rdf:li>
               <rdf:li>card</rdf:li>
               <rdf:li>design</rdf:li>
               <rdf:li>electrical equipment</rdf:li>
               <rdf:li>integrated</rdf:li>
               <rdf:li>technical</rdf:li>
               <rdf:li>computer part</rdf:li>
               <rdf:li>hardware</rdf:li>
               <rdf:li>engineering</rdf:li>
               <rdf:li>line</rdf:li>
               <rdf:li>cyberspace</rdf:li>
               <rdf:li>computer equipment</rdf:li>
               <rdf:li>graphic</rdf:li>
               <rdf:li>electronics industry</rdf:li>
               <rdf:li>digital</rdf:li>
               <rdf:li>technology</rdf:li>
               <rdf:li>computer</rdf:li>
               <rdf:li>circuit board</rdf:li>
               <rdf:li>illustration</rdf:li>
               <rdf:li>creativity</rdf:li>
               <rdf:li>connection</rdf:li>
               <rdf:li>computing</rdf:li>
               <rdf:li>backdrop</rdf:li>
               <rdf:li>science</rdf:li>
               <rdf:li>cover</rdf:li>
               <rdf:li>internal</rdf:li>
               <rdf:li>connect</rdf:li>
               <rdf:li>art</rdf:li>
               <rdf:li>industry</rdf:li>
               <rdf:li>conceptual</rdf:li>
               <rdf:li>construction</rdf:li>
               <rdf:li>textured</rdf:li>
               <rdf:li>computer chip</rdf:li>
               <rdf:li>mother board</rdf:li>
               <rdf:li>motherboard</rdf:li>
               <rdf:li>black</rdf:li>
               <rdf:li>blue</rdf:li>
            </rdf:Bag>
         </dc:subject>
         <xmp:MetadataDate>2016-05-12T13:09:14+03:00</xmp:MetadataDate>
         <xmp:ModifyDate>2016-05-12T13:09:14+03:00</xmp:ModifyDate>
         <xmp:CreateDate>2016-05-12T13:09:14+03:00</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CC 2015 (Windows)</xmp:CreatorTool>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEBLAEsAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABABLAAAAAEA&#xA;AQEsAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A8v8A6W1X/lsn/wCRj/1x&#xA;V36W1X/lsn/5GP8A1xV36W1X/lsn/wCRj/1xV36W1X/lsn/5GP8A1xV36W1X/lsn/wCRj/1xV36W&#xA;1X/lsn/5GP8A1xV36W1X/lsn/wCRj/1xV36W1X/lsn/5GP8A1xV36W1X/lsn/wCRj/1xV36W1X/l&#xA;sn/5GP8A1xV36W1X/lsn/wCRj/1xV36W1X/lsn/5GP8A1xV36W1X/lsn/wCRj/1xV36W1X/lsn/5&#xA;GP8A1xV36W1X/lsn/wCRj/1xV36W1X/lsn/5GP8A1xV36W1X/lsn/wCRj/1xV36W1X/lsn/5GP8A&#xA;1xV36W1X/lsn/wCRj/1xV36W1X/lsn/5GP8A1xV36W1X/lsn/wCRj/1xV36W1X/lsn/5GP8A1xV3&#xA;6W1X/lsn/wCRj/1xV36W1X/lsn/5GP8A1xV36W1X/lsn/wCRj/1xV36W1X/lsn/5GP8A1xV36W1X&#xA;/lsn/wCRj/1xV36W1X/lsn/5GP8A1xV36W1X/lsn/wCRj/1xV36W1X/lsn/5GP8A1xV36W1X/lsn&#xA;/wCRj/1xV36W1X/lsn/5GP8A1xVCYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FU68teTPNPma9t7PQ9MnvpbqX6vE6IRF6lASGl&#xA;akaUDAnkwoMmMciOKjXe0y1GMTEDKPGeli/lz6FPtX/KDzZo2rS6Pq5gtNWhVZJbIGW4dY3+w5Nr&#xA;HOnFu3xZdi0xmLBH2/oDhartSOGVSjKu/wBIB93FIWhv+VZa5/v6P/kRff8AZNlv5Cff9kv+Jcb+&#xA;X8Pcf9Nj/wCLd/yrLXP9/R/8iL7/ALJsfyE+/wCyX/Er/L+HuP8Apsf/ABbv+VZa5/v6P/kRff8A&#xA;ZNj+Qn3/AGS/4lf5fw9x/wBNj/4tpvy01pVLPcQoiirO8V6iqB1LM1uFUDuSaY/kJ94/2X6lHb2E&#xA;8hI/HH/xaufyt1QIHa7hQUPPmGHBlj5MrU5D4GpyP8hEgqlSJfyfLvH4/Hy9XJr/ANEOO64ZH9O+&#xA;1e8cv6QMDUqBp/yw1NS6m7hV15mjhlHFUBqSRtxc8JK/Yqrn923LAez5d4/H437ufLdI9oMZ/hl0&#xA;+/8ASN4/zt4/WOFTk/L2WCeWG5vCpRqRtHA8gZf8oAho3DVVkYVFO4ocB0RBon7Px8mUe2xKIMY/&#xA;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</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:InstanceID>xmp.iid:0f5503b7-375d-5f4a-8ce0-745a7b21c03a</xmpMM:InstanceID>
         <xmpMM:DocumentID>xmp.did:0f5503b7-375d-5f4a-8ce0-745a7b21c03a</xmpMM:DocumentID>
         <xmpMM:OriginalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</xmpMM:OriginalDocumentID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:84bab058-8f5f-44f1-95d8-ec89d6793375</stRef:instanceID>
            <stRef:documentID>xmp.did:F4F2B7FBCDBDE511B2BBC0EB12123494</stRef:documentID>
            <stRef:originalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F07763D45588E411BF89F345A28D8C9F</stEvt:instanceID>
                  <stEvt:when>2014-12-20T17:10:37+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:29845C695A88E411BF89F345A28D8C9F</stEvt:instanceID>
                  <stEvt:when>2014-12-20T17:19:01+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:2E845C695A88E411BF89F345A28D8C9F</stEvt:instanceID>
                  <stEvt:when>2014-12-20T17:33:07+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:4365C60ACE89E4119A65C8F5B8A1FEA0</stEvt:instanceID>
                  <stEvt:when>2014-12-22T13:34:24+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:0B5A99264D6BE51194FFADFDE0B012D7</stEvt:instanceID>
                  <stEvt:when>2015-10-05T13:38+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F4F2B7FBCDBDE511B2BBC0EB12123494</stEvt:instanceID>
                  <stEvt:when>2016-01-18T12:30:34+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:D247321AF2BDE5119314DC75DE111CE2</stEvt:instanceID>
                  <stEvt:when>2016-01-18T16:45:22+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Bridge CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/metadata</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:BC90E609F8BDE5119314DC75DE111CE2</stEvt:instanceID>
                  <stEvt:when>2016-01-18T17:27:52+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Bridge CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/metadata</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:0f5503b7-375d-5f4a-8ce0-745a7b21c03a</stEvt:instanceID>
                  <stEvt:when>2016-05-12T13:09:14+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2015 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Print</illustrator:StartupProfile>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>1200.000000</stDim:w>
            <stDim:h>1200.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 10.01</pdf:Producer>
         <photoshop:Headline>abstract vector background with high tech circuit board</photoshop:Headline>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -1200 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 1200 li
1200 1200 li
1200 0 li
cp
clp
gsave
1200 1200 mo
0 1200 li
0 0 li
1200 0 li
1200 1200 li
cp
clp
1200.28 1201.73 mo
.278809 1201.73 li
.278809 1.72607 li
1200.28 1.72607 li
1200.28 1201.73 li
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
0 0 0 rgb
f
243.539 270.151 mo
241.626 270.151 240.08 268.605 240.08 266.694 cv
240.08 264.782 241.626 263.236 243.539 263.236 cv
245.446 263.236 246.996 264.782 246.996 266.694 cv
246.996 268.605 245.446 270.151 243.539 270.151 cv
cp
63.4253 187.452 mo
217.599 187.452 li
255.782 226.197 li
255.782 251.211 li
247.427 260.519 li
245.851 260.391 243.783 260.857 242.425 261.318 cv
238.886 262.513 235.66 264.342 235.66 268.08 cv
235.66 271.816 238.689 274.844 242.425 274.844 cv
246.162 274.844 248.373 271.726 249.191 268.08 cv
249.55 266.479 249.956 264.512 249.846 263.001 cv
259.238 252.536 li
259.238 224.777 li
219.048 183.995 li
62.0249 183.995 li
42.4292 203.012 li
-2.41846 203.012 li
-2.41846 206.47 li
43.8315 206.47 li
63.4253 187.452 li
cp
0 .862745 1 rgb
f
244.744 234.372 mo
246.081 235.736 246.056 237.926 244.693 239.261 cv
243.328 240.598 241.14 240.575 239.804 239.21 cv
238.468 237.846 238.49 235.658 239.854 234.321 cv
241.218 232.983 243.408 233.008 244.744 234.372 cv
cp
70.3394 197.249 mo
211.855 197.249 li
240.799 225.637 li
240.799 229.586 li
239.558 230.586 238.376 232.427 237.718 233.727 cv
236.027 237.059 235.002 240.624 237.619 243.292 cv
240.232 245.963 244.515 246.008 247.185 243.394 cv
249.853 240.777 249.249 237.003 247.283 233.827 cv
246.433 232.455 245.372 230.788 244.257 229.78 cv
244.257 224.186 li
213.265 193.792 li
68.9419 193.792 li
43.8735 218.062 li
-2.41846 218.062 li
-2.41846 221.52 li
45.271 221.52 li
70.3394 197.249 li
cp
f
272.069 391.46 mo
270.16 391.46 268.611 389.913 268.611 388.001 cv
268.611 386.092 270.16 384.543 272.069 384.543 cv
273.979 384.543 275.527 386.092 275.527 388.001 cv
275.527 389.913 273.979 391.46 272.069 391.46 cv
cp
273.455 382.349 mo
271.621 381.938 269.298 381.452 267.745 381.768 cv
261.328 376.19 li
227.297 376.19 li
220.956 371.003 li
195.713 371.003 li
155.659 410.767 li
-2.41846 410.767 li
-2.41846 414.225 li
157.083 414.225 li
197.138 374.46 li
219.724 374.46 li
226.065 379.647 li
260.035 379.647 li
265.869 384.719 li
265.88 386.192 266.29 387.927 266.692 389.114 cv
267.888 392.653 269.72 395.879 273.455 395.879 cv
277.192 395.879 280.22 392.85 280.22 389.114 cv
280.22 385.377 277.101 383.167 273.455 382.349 cv
cp
f
240.847 299.255 mo
238.937 299.255 237.389 297.707 237.389 295.797 cv
237.389 293.886 238.937 292.339 240.847 292.339 cv
242.758 292.339 244.304 293.886 244.304 295.797 cv
244.304 297.707 242.758 299.255 240.847 299.255 cv
cp
52.4507 179.098 mo
221.351 179.098 li
265.58 223.61 li
265.58 266.987 li
244.571 289.608 li
243.017 289.524 241.043 289.976 239.736 290.418 cv
236.196 291.617 232.97 293.447 232.97 297.181 cv
232.97 300.919 235.999 303.949 239.736 303.949 cv
243.472 303.949 245.682 300.829 246.501 297.181 cv
246.876 295.515 247.299 293.456 247.138 291.924 cv
269.037 268.344 li
269.037 222.183 li
222.789 175.641 li
51.6772 175.641 li
41.2417 180.561 li
42.7163 183.688 li
52.4507 179.098 li
cp
f
18.6167 185.231 mo
19.9673 183.879 22.1548 183.879 23.5063 185.231 cv
24.8589 186.58 24.8589 188.769 23.5063 190.118 cv
22.1548 191.469 19.9673 191.469 18.6167 190.118 cv
17.2671 188.769 17.2671 186.58 18.6167 185.231 cv
cp
24.0786 192.652 mo
25.6362 191.665 27.5806 190.397 28.481 189.099 cv
32.7095 189.04 li
32.6626 185.581 li
27.8169 185.65 li
26.7651 184.601 25.2163 183.647 24.0786 183.086 cv
20.729 181.428 17.1548 180.444 14.5112 183.086 cv
11.8687 185.727 11.8726 190.008 14.5132 192.652 cv
17.1548 195.294 20.9214 194.651 24.0786 192.652 cv
cp
f
303.392 335.649 mo
301.513 335.982 299.719 334.724 299.388 332.846 cv
299.058 330.965 300.31 329.172 302.193 328.84 cv
304.074 328.507 305.867 329.764 306.2 331.644 cv
306.531 333.526 305.275 335.319 303.392 335.649 cv
cp
303.177 326.438 mo
301.609 326.364 299.696 326.299 298.248 326.618 cv
290.732 322.2 li
288.98 325.178 li
296.025 329.321 li
296.126 330.921 296.98 332.973 297.69 334.274 cv
299.483 337.55 301.848 340.411 305.527 339.758 cv
309.206 339.11 311.663 335.604 311.015 331.924 cv
310.367 328.245 306.908 326.61 303.177 326.438 cv
cp
f
301.46 353.424 mo
303.37 353.424 304.917 354.972 304.917 356.882 cv
304.917 358.793 303.37 360.339 301.46 360.339 cv
299.55 360.339 298.002 358.793 298.002 356.882 cv
298.002 354.972 299.55 353.424 301.46 353.424 cv
cp
275.087 274.171 mo
258.087 292.673 li
258.087 328.44 li
272.872 345.07 li
287.591 345.07 li
295.147 353.165 li
295.282 353.04 li
295.167 354.609 295.628 356.651 296.082 357.995 cv
297.279 361.534 299.111 364.76 302.845 364.76 cv
306.582 364.76 309.611 361.731 309.611 357.995 cv
309.611 354.258 306.494 352.046 302.845 351.229 cv
301.142 350.847 299.027 350.412 297.486 350.603 cv
289.095 341.613 li
274.424 341.613 li
261.545 327.124 li
261.545 294.021 li
278.545 275.518 li
278.545 219.016 li
230.79 170.76 li
228.332 173.192 li
275.087 220.438 li
275.087 274.171 li
cp
f
271.619 299.29 mo
269.707 299.29 268.161 297.743 268.161 295.832 cv
268.161 293.922 269.707 292.374 271.619 292.374 cv
273.529 292.374 275.076 293.922 275.076 295.832 cv
275.076 297.743 273.529 299.29 271.619 299.29 cv
cp
284.599 277.273 mo
273.515 289.742 li
272.429 289.895 271.333 290.174 270.507 290.456 cv
266.968 291.651 263.743 293.483 263.743 297.219 cv
263.743 300.956 266.771 303.985 270.507 303.985 cv
274.242 303.985 276.454 300.866 277.271 297.219 cv
277.786 294.93 278.4 291.895 277.438 290.532 cv
288.056 278.589 li
288.056 216.13 li
242.937 170.758 li
240.485 173.196 li
284.599 217.559 li
284.599 277.273 li
cp
f
292.953 282.46 mo
287.206 288.911 li
286.695 309.978 li
285.152 312.934 li
288.218 314.535 li
290.133 310.866 li
290.634 290.262 li
296.41 283.776 li
296.41 212.967 li
254.708 170.76 li
252.249 173.192 li
292.953 214.385 li
292.953 282.46 li
cp
f
306.145 295.122 mo
307.483 296.487 307.458 298.674 306.094 300.011 cv
304.73 301.346 302.542 301.325 301.205 299.96 cv
299.868 298.596 299.892 296.405 301.255 295.069 cv
302.62 293.735 304.808 293.758 306.145 295.122 cv
cp
302.173 290.354 mo
300.943 291.359 299.773 293.186 299.119 294.477 cv
297.427 297.808 296.405 301.372 299.019 304.043 cv
301.632 306.712 305.915 306.758 308.586 304.143 cv
311.253 301.53 310.65 297.752 308.685 294.575 cv
307.829 293.193 306.756 291.511 305.632 290.505 cv
305.632 210.377 li
266.816 170.768 li
264.347 173.186 li
302.173 211.788 li
302.173 290.354 li
cp
f
212.894 300.485 mo
210.983 300.485 209.437 298.938 209.437 297.027 cv
209.437 295.118 210.983 293.571 212.894 293.571 cv
214.803 293.571 216.351 295.118 216.351 297.027 cv
216.351 298.938 214.803 300.485 212.894 300.485 cv
cp
79.269 206.182 mo
202.318 206.182 li
224.953 229.573 li
224.953 281.843 li
216.265 290.824 li
214.775 290.82 212.992 291.241 211.782 291.651 cv
208.242 292.848 205.017 294.68 205.017 298.415 cv
205.017 302.151 208.045 305.18 211.782 305.18 cv
212.17 305.18 212.539 305.138 212.894 305.074 cv
212.894 313.725 li
216.351 313.725 li
216.351 303.351 li
216.074 303.351 li
217.296 302.102 218.117 300.335 218.546 298.415 cv
218.949 296.624 219.419 294.37 219.148 292.818 cv
228.41 283.241 li
228.41 228.172 li
203.784 202.725 li
77.8745 202.725 li
52.519 227.143 li
-2.41846 227.143 li
-2.41846 230.602 li
53.9136 230.602 li
79.269 206.182 li
cp
f
211.155 233.551 mo
213.064 233.551 214.611 235.1 214.611 237.008 cv
214.611 238.92 213.064 240.466 211.155 240.466 cv
209.244 240.466 207.695 238.92 207.695 237.008 cv
207.695 235.1 209.244 233.551 211.155 233.551 cv
cp
120.831 216.268 mo
187.11 216.268 li
205.019 232.682 li
204.748 234.29 205.275 236.637 205.777 238.12 cv
206.973 241.661 208.804 244.887 212.54 244.887 cv
216.276 244.887 219.304 241.858 219.304 238.12 cv
219.304 234.385 216.185 232.173 212.54 231.356 cv
210.706 230.944 208.385 230.458 206.831 230.774 cv
207.39 230.165 li
188.454 212.811 li
119.278 212.811 li
98.0054 236.725 li
-2.41846 236.725 li
-2.41846 240.183 li
99.5581 240.183 li
120.831 216.268 li
cp
f
178.412 231.822 mo
180.32 231.822 181.869 233.37 181.869 235.28 cv
181.869 237.191 180.32 238.738 178.412 238.738 cv
176.499 238.738 174.954 237.191 174.954 235.28 cv
174.954 233.37 176.499 231.822 178.412 231.822 cv
cp
2.72119 248.54 mo
115.532 248.54 li
139.504 224.912 li
165.51 224.912 li
172.275 230.953 li
172.004 232.56 172.531 234.909 173.034 236.391 cv
174.231 239.931 176.06 243.158 179.796 243.158 cv
183.533 243.158 186.562 240.129 186.562 236.391 cv
186.562 232.657 183.443 230.444 179.796 229.627 cv
178.37 229.306 176.652 228.949 175.224 228.951 cv
166.831 221.454 li
138.086 221.454 li
114.113 245.083 li
1.13428 245.083 li
-3.729 250.747 li
-1.10596 252.999 li
2.72119 248.54 li
cp
f
21.9585 276.574 mo
162.873 276.491 li
181.386 294.598 li
183.804 292.127 li
164.282 273.032 li
20.4927 273.118 li
-3.66064 298.051 li
-1.17627 300.457 li
21.9585 276.574 li
cp
f
237.396 330.77 mo
237.794 328.901 239.631 327.71 241.498 328.108 cv
243.366 328.504 244.558 330.341 244.159 332.208 cv
243.764 334.078 241.925 335.268 240.06 334.872 cv
238.193 334.474 236.999 332.637 237.396 330.77 cv
cp
170.493 297.17 mo
157.126 282.774 li
26.7095 282.774 li
-3.62939 312.499 li
-1.20752 314.968 li
28.1206 286.231 li
155.617 286.231 li
167.035 298.527 li
167.035 314.44 li
195.986 343.915 li
230.278 343.915 li
237.031 337.144 li
238.289 337.321 239.73 337.321 240.96 337.307 cv
244.693 337.265 248.205 335.752 248.983 332.096 cv
249.761 328.445 247.427 324.852 243.775 324.074 cv
240.121 323.297 237.658 326.071 235.751 329.284 cv
234.792 330.893 233.551 333.703 233.963 335.324 cv
228.844 340.457 li
197.439 340.457 li
170.493 313.026 li
170.493 297.17 li
cp
f
148.862 297.098 mo
150.214 295.749 152.405 295.749 153.753 297.098 cv
155.103 298.448 155.103 300.636 153.753 301.987 cv
152.405 303.337 150.214 303.337 148.862 301.987 cv
147.511 300.636 147.511 298.448 148.862 297.098 cv
cp
25.3901 300.982 mo
144.061 301.019 li
145.058 302.276 146.957 303.472 148.291 304.131 cv
151.64 305.788 155.216 306.774 157.859 304.131 cv
160.501 301.491 160.499 297.207 157.857 294.565 cv
155.216 291.924 151.449 292.566 148.291 294.565 cv
146.958 295.411 145.341 296.462 144.338 297.561 cv
23.9761 297.524 li
-3.63135 324.682 li
-1.20557 327.147 li
25.3901 300.982 li
cp
f
234.64 358.149 mo
235.991 356.799 238.179 356.799 239.528 358.149 cv
240.878 359.499 240.878 361.689 239.528 363.038 cv
238.179 364.388 235.991 364.388 234.64 363.038 cv
233.289 361.689 233.289 359.499 234.64 358.149 cv
cp
7.15186 336.602 mo
5.23975 336.602 3.69385 335.053 3.69385 333.144 cv
3.69385 331.233 5.23975 329.686 7.15186 329.686 cv
9.06299 329.686 10.6089 331.233 10.6089 333.144 cv
10.6089 335.053 9.06299 336.602 7.15186 336.602 cv
cp
24.8765 313.374 mo
10.2397 326.949 li
8.81104 326.995 7.17529 327.381 6.04053 327.764 cv
2.50146 328.963 -.725098 330.793 -.725098 334.527 cv
-.725098 338.266 2.3042 341.295 6.04053 341.295 cv
9.7749 341.295 11.9858 338.174 12.8042 334.527 cv
13.2231 332.67 13.7124 330.316 13.3687 328.762 cv
26.2339 316.831 li
89.4116 316.831 li
114.626 340.17 li
138.585 340.17 li
160.556 362.07 li
229.835 362.07 li
230.833 363.328 232.734 364.524 234.066 365.182 cv
237.415 366.838 240.992 367.825 243.636 365.182 cv
246.276 362.542 246.275 358.258 243.632 355.616 cv
240.992 352.975 237.224 353.617 234.066 355.616 cv
232.733 356.461 231.115 357.513 230.112 358.613 cv
161.986 358.613 li
140.015 336.713 li
115.981 336.713 li
90.7651 313.374 li
24.8765 313.374 li
cp
f
39.0073 341.521 mo
37.6343 340.194 37.5952 338.006 38.9233 336.631 cv
40.2495 335.257 42.437 335.22 43.812 336.547 cv
45.187 337.873 45.2241 340.063 43.896 341.436 cv
42.5688 342.809 40.3823 342.848 39.0073 341.521 cv
cp
37.0728 399.167 mo
35.7212 400.516 33.5337 400.516 32.1831 399.167 cv
30.8306 397.816 30.8306 395.627 32.1831 394.278 cv
33.5337 392.928 35.7212 392.928 37.0728 394.278 cv
38.4233 395.627 38.4233 397.816 37.0728 399.167 cv
cp
-2.41846 398.375 mo
27.3511 398.375 li
27.4507 398.289 li
28.4663 399.512 30.3101 400.668 31.6108 401.309 cv
34.9585 402.967 38.5347 403.954 41.1792 401.309 cv
43.8188 398.668 43.8188 394.387 41.1753 391.745 cv
39.9644 390.534 38.5151 390.018 36.9985 390.002 cv
43.7075 384.179 li
43.7075 345.587 li
44.6753 344.526 45.5366 343.058 46.0513 341.969 cv
47.6479 338.592 48.5708 335 45.8823 332.405 cv
43.1948 329.811 38.9146 329.885 36.3159 332.57 cv
33.7231 335.259 34.4312 339.016 36.4839 342.135 cv
37.5337 343.731 38.8921 345.73 40.2495 346.561 cv
40.2495 382.602 li
26.061 394.917 li
-2.41846 394.917 li
-2.41846 398.375 li
cp
f
59.3823 337.239 mo
60.7065 335.866 62.896 335.829 64.269 337.155 cv
65.644 338.48 65.6831 340.67 64.356 342.045 cv
63.0278 343.418 60.8413 343.456 59.4663 342.129 cv
58.0923 340.802 58.0552 338.614 59.3823 337.239 cv
cp
63.6792 387.205 mo
65.0522 388.53 65.0903 390.72 63.7651 392.094 cv
62.438 393.468 60.2495 393.506 58.8765 392.178 cv
57.5015 390.852 57.4624 388.664 58.7915 387.29 cv
60.1167 385.917 62.3042 385.877 63.6792 387.205 cv
cp
59.2671 382.838 mo
58.1851 383.908 57.2026 385.561 56.6362 386.756 cv
55.0396 390.132 54.1147 393.725 56.8042 396.321 cv
59.4897 398.915 63.772 398.84 66.3687 396.155 cv
68.9653 393.465 68.2573 389.71 66.2017 386.588 cv
65.2261 385.108 63.9858 383.279 62.7261 382.359 cv
62.7261 347.348 li
64.2261 346.627 65.7466 344.189 66.5093 342.579 cv
68.1079 339.2 69.0278 335.608 66.3413 333.012 cv
63.6528 330.418 59.3726 330.493 56.7749 333.176 cv
54.1812 335.867 54.8892 339.624 56.9438 342.744 cv
57.6245 343.78 58.4351 344.988 59.2925 345.935 cv
59.2671 345.935 li
59.2671 382.838 li
cp
f
301.46 415.664 mo
303.37 415.664 304.917 417.211 304.917 419.122 cv
304.917 421.033 303.37 422.579 301.46 422.579 cv
299.55 422.579 298.002 421.033 298.002 419.122 cv
298.002 417.211 299.55 415.664 301.46 415.664 cv
cp
213.886 404.139 mo
201.495 415.954 li
-2.41846 415.954 li
-2.41846 419.412 li
202.878 419.412 li
215.271 407.596 li
287.332 407.596 li
295.251 415.633 li
295.224 417.145 295.663 418.993 296.082 420.234 cv
297.279 423.772 299.111 427 302.845 427 cv
306.582 427 309.611 423.97 309.611 420.234 cv
309.611 416.498 306.494 414.286 302.845 413.469 cv
301.099 413.077 298.915 412.625 297.369 412.855 cv
288.781 404.139 li
213.886 404.139 li
cp
f
69.7915 434.681 mo
71.7007 434.681 73.2485 436.229 73.2485 438.139 cv
73.2485 440.05 71.7007 441.596 69.7915 441.596 cv
67.8823 441.596 66.3335 440.05 66.3335 438.139 cv
66.3335 436.229 67.8823 434.681 69.7915 434.681 cv
cp
56.2104 421.715 mo
-2.41846 421.715 li
-2.41846 425.172 li
54.8354 425.172 li
63.7241 433.557 li
63.3374 435.162 63.8823 437.683 64.4136 439.251 cv
65.6108 442.79 67.4429 446.016 71.1772 446.016 cv
74.9136 446.016 77.9419 442.988 77.9419 439.251 cv
77.9419 435.515 74.8237 433.303 71.1772 432.486 cv
69.7759 432.171 68.0962 431.823 66.6831 431.812 cv
66.7925 431.697 li
56.2104 421.715 li
cp
f
270.34 416.973 mo
272.249 416.973 273.798 418.604 273.798 420.618 cv
273.798 422.629 272.249 424.262 270.34 424.262 cv
268.431 424.262 266.882 422.629 266.882 420.618 cv
266.882 418.604 268.431 416.973 270.34 416.973 cv
cp
-2.41846 432.088 mo
52.6636 432.088 li
54.9448 434.992 li
54.9448 444.332 li
64.8901 454.276 li
180.858 454.276 li
218.173 417.106 li
264.132 417.106 li
264.137 418.668 264.557 420.525 264.962 421.789 cv
266.16 425.52 267.992 428.92 271.726 428.92 cv
275.462 428.92 278.492 425.726 278.492 421.789 cv
278.492 417.852 275.373 415.522 271.726 414.657 cv
270.349 414.332 268.706 413.974 267.31 413.949 cv
267.31 413.648 li
216.746 413.648 li
179.429 450.819 li
66.3208 450.819 li
58.4019 442.9 li
58.4019 433.795 li
54.3433 428.629 li
-2.41846 428.629 li
-2.41846 432.088 li
cp
f
45.4937 440.442 mo
47.4048 440.442 48.9517 441.99 48.9517 443.899 cv
48.9517 445.493 47.8687 446.821 46.4019 447.221 cv
44.7524 447.273 li
43.1997 446.933 42.0366 445.554 42.0366 443.899 cv
42.0366 441.99 43.5835 440.442 45.4937 440.442 cv
cp
270.34 449.823 mo
272.249 449.823 273.798 451.454 273.798 453.465 cv
273.798 455.478 272.249 457.111 270.34 457.111 cv
268.431 457.111 266.882 455.478 266.882 453.465 cv
266.882 451.454 268.431 449.823 270.34 449.823 cv
cp
-2.41846 462.92 mo
15.3608 462.92 li
32.353 444.479 li
36.8081 444.479 li
36.8208 448.665 40.2183 452.054 44.4087 452.054 cv
46.0737 452.054 47.6089 451.512 48.8618 450.604 cv
50.4702 450.553 li
61.9722 462.92 li
99.9146 462.92 li
105.083 468.496 li
105.083 482.985 li
116.128 493.176 li
168.902 493.176 li
230.277 431.801 li
246.454 431.801 li
264.134 450.081 li
264.16 451.616 264.568 453.409 264.962 454.637 cv
266.16 458.37 267.992 461.77 271.726 461.77 cv
275.462 461.77 278.492 458.575 278.492 454.637 cv
278.492 450.701 275.373 448.371 271.726 447.506 cv
269.842 447.062 267.451 446.542 265.899 446.931 cv
247.919 428.342 li
228.845 428.342 li
167.47 489.718 li
117.478 489.718 li
108.54 481.469 li
108.54 467.141 li
101.424 459.463 li
63.478 459.463 li
51.9321 447.048 li
51.5425 447.061 li
51.8403 446.246 52.0112 445.37 52.0112 444.452 cv
52.0112 440.25 48.6069 436.846 44.4087 436.846 cv
41.4448 436.846 38.8843 438.545 37.6304 441.02 cv
30.8374 441.02 li
13.8452 459.463 li
-2.41846 459.463 li
-2.41846 462.92 li
cp
f
35.1187 461.911 mo
35.5151 460.042 37.353 458.852 39.2222 459.249 cv
41.0874 459.645 42.2778 461.482 41.8823 463.349 cv
41.4858 465.216 39.6489 466.409 37.7817 466.012 cv
35.9136 465.615 34.7222 463.778 35.1187 461.911 cv
cp
-2.41846 471.852 mo
30.8794 471.852 li
34.269 468.465 li
33.9351 468.132 li
35.3511 468.46 37.1743 468.464 38.6831 468.449 cv
42.4155 468.406 45.9282 466.893 46.7065 463.238 cv
47.4819 459.586 45.1509 455.993 41.4956 455.215 cv
37.8423 454.438 35.3804 457.21 33.4722 460.424 cv
32.564 461.952 31.4048 464.555 31.6392 466.205 cv
29.4478 468.394 li
-2.41846 468.394 li
-2.41846 471.852 li
cp
f
323.868 423.588 mo
324.264 421.717 326.101 420.528 327.97 420.924 cv
329.837 421.323 331.028 423.161 330.631 425.026 cv
330.235 426.893 328.398 428.086 326.531 427.688 cv
324.664 427.29 323.47 425.454 323.868 423.588 cv
cp
129.101 478.367 mo
127.75 479.718 125.562 479.718 124.212 478.367 cv
122.861 477.018 122.861 474.829 124.212 473.477 cv
125.562 472.125 127.75 472.128 129.101 473.477 cv
130.454 474.829 130.454 477.018 129.101 478.367 cv
cp
268.011 434.975 mo
252.448 419.985 li
222.503 419.985 li
168.33 474.735 li
134.117 474.735 li
133.201 473.375 131.109 472.043 129.673 471.335 cv
126.326 469.677 122.749 468.693 120.105 471.335 cv
117.465 473.975 117.465 478.258 120.109 480.901 cv
122.749 483.542 126.517 482.901 129.673 480.901 cv
130.89 480.129 132.339 479.187 133.346 478.194 cv
169.772 478.194 li
223.945 423.444 li
251.052 423.444 li
266.607 438.424 li
314.138 438.721 li
322.785 429.829 li
324.185 430.134 325.956 430.141 327.431 430.125 cv
331.165 430.082 334.677 428.57 335.455 424.915 cv
336.232 421.262 333.9 417.669 330.245 416.893 cv
326.593 416.112 324.13 418.887 322.222 422.099 cv
321.403 423.478 320.376 425.733 320.351 427.372 cv
312.685 435.254 li
268.011 434.975 li
cp
f
298.687 508.159 mo
299.085 506.29 300.921 505.099 302.79 505.496 cv
304.658 505.893 305.848 507.729 305.451 509.596 cv
305.054 511.465 303.218 512.657 301.351 512.259 cv
299.483 511.862 298.29 510.026 298.687 508.159 cv
cp
297.695 514.416 mo
299.081 514.703 300.808 514.711 302.251 514.696 cv
305.985 514.653 309.497 513.141 310.275 509.485 cv
311.051 505.832 308.72 502.241 305.064 501.462 cv
301.411 500.684 298.949 503.457 297.042 506.67 cv
296.206 508.078 295.16 510.396 295.179 512.042 cv
280.974 526.889 li
235.49 526.889 li
207.249 554.262 li
66.3169 554.262 li
38.6528 526.889 li
-2.41846 526.889 li
-2.41846 530.346 li
37.2329 530.346 li
64.894 557.72 li
208.652 557.72 li
236.89 530.346 li
282.455 530.346 li
297.695 514.416 li
cp
f
273.798 569.533 mo
273.798 571.445 272.249 572.992 270.34 572.992 cv
268.431 572.992 266.882 571.445 266.882 569.533 cv
266.882 567.625 268.431 566.076 270.34 566.076 cv
272.249 566.076 273.798 567.625 273.798 569.533 cv
cp
212.441 583.941 mo
235.494 559.449 li
257.405 559.449 li
264.153 565.776 li
264.062 567.333 264.517 569.327 264.962 570.646 cv
266.16 574.185 267.992 577.412 271.726 577.412 cv
275.462 577.412 278.492 574.382 278.492 570.646 cv
278.492 566.91 275.373 564.698 271.726 563.88 cv
270.071 563.51 268.031 563.089 266.503 563.24 cv
258.771 555.991 li
234.001 555.991 li
210.949 580.484 li
12.9897 580.484 li
-2.93506 565.397 li
-5.31201 567.91 li
11.6118 583.941 li
212.441 583.941 li
cp
f
236.742 577.189 mo
237.138 575.318 238.976 574.127 240.843 574.523 cv
242.71 574.921 243.902 576.759 243.503 578.625 cv
243.109 580.492 241.273 581.685 239.406 581.289 cv
237.537 580.89 236.343 579.054 236.742 577.189 cv
cp
228.675 590.281 mo
235.667 583.451 li
235.642 583.424 li
237.044 583.734 238.824 583.742 240.304 583.724 cv
244.039 583.681 247.551 582.169 248.33 578.515 cv
249.106 574.863 246.775 571.269 243.119 570.492 cv
239.465 569.712 237.003 572.486 235.096 575.699 cv
234.273 577.086 233.24 579.36 233.228 581.002 cv
227.267 586.822 li
10.1333 586.822 li
-2.90088 573.789 li
-5.34717 576.232 li
8.70068 590.281 li
228.675 590.281 li
cp
f
270.34 597.195 mo
272.249 597.195 273.798 598.744 273.798 600.654 cv
273.798 602.565 272.249 604.111 270.34 604.111 cv
268.431 604.111 266.882 602.565 266.882 600.654 cv
266.882 598.744 268.431 597.195 270.34 597.195 cv
cp
230.431 596.621 mo
235.192 591.722 li
257.413 591.722 li
264.161 597.95 li
264.257 599.281 264.612 600.732 264.962 601.768 cv
266.16 605.307 267.992 608.531 271.726 608.531 cv
275.462 608.531 278.492 605.502 278.492 601.768 cv
278.492 598.031 275.373 595.818 271.726 595.002 cv
269.706 594.547 267.103 594.015 265.58 594.555 cv
258.763 588.263 li
233.73 588.263 li
228.968 593.164 li
6.38818 593.164 li
-2.90088 583.871 li
-5.34717 586.316 li
4.95654 596.621 li
230.431 596.621 li
cp
f
273.798 631.773 mo
273.798 633.685 272.249 635.232 270.34 635.232 cv
268.431 635.232 266.882 633.685 266.882 631.773 cv
266.882 629.865 268.431 628.316 270.34 628.316 cv
272.249 628.316 273.798 629.865 273.798 631.773 cv
cp
-2.41846 614.484 mo
229.112 614.484 li
236.319 621.979 li
257.132 621.979 li
264.134 628.342 li
264.119 629.844 264.548 631.658 264.962 632.887 cv
266.16 636.426 267.992 639.652 271.726 639.652 cv
275.462 639.652 278.492 636.623 278.492 632.887 cv
278.492 629.15 275.373 626.94 271.726 626.121 cv
269.949 625.723 267.716 625.258 266.165 625.516 cv
258.469 618.519 li
237.79 618.519 li
230.584 611.027 li
-2.41846 611.027 li
-2.41846 614.484 li
cp
f
236.248 633.455 mo
237.598 632.104 239.787 632.104 241.136 633.455 cv
242.487 634.807 242.487 636.994 241.136 638.346 cv
239.787 639.695 237.598 639.695 236.248 638.346 cv
234.896 636.994 234.896 634.807 236.248 633.455 cv
cp
-2.41846 622.555 mo
213.662 622.555 li
231.439 637.369 li
232.435 638.627 234.339 639.828 235.675 640.488 cv
239.023 642.144 242.599 643.131 245.244 640.488 cv
247.884 637.846 247.884 633.563 245.242 630.924 cv
242.599 628.281 238.832 628.924 235.675 630.924 cv
234.523 631.652 233.161 632.537 232.164 633.473 cv
214.915 619.098 li
-2.41846 619.098 li
-2.41846 622.555 li
cp
f
299.796 544.893 mo
300.195 543.026 302.033 541.834 303.9 542.233 cv
305.767 542.629 306.958 544.464 306.56 546.331 cv
306.165 548.201 304.327 549.393 302.461 548.995 cv
300.594 548.598 299.4 546.761 299.796 544.893 cv
cp
-2.41846 627.742 mo
207.274 627.742 li
233.785 652.232 li
281.201 652.232 li
290.071 644.676 li
290.071 558.46 li
297.99 550.928 li
299.456 551.435 301.615 551.45 303.361 551.431 cv
307.093 551.39 310.606 549.877 311.384 546.222 cv
312.162 542.569 309.83 538.976 306.175 538.198 cv
302.522 537.421 300.058 540.195 298.152 543.408 cv
297.449 544.589 296.599 546.417 296.353 547.951 cv
296.234 547.825 li
286.615 556.979 li
286.615 643.078 li
279.926 648.775 li
235.138 648.775 li
208.627 624.285 li
-2.41846 624.285 li
-2.41846 627.742 li
cp
f
118.2 664.621 mo
120.109 664.621 121.658 666.17 121.658 668.08 cv
121.658 669.992 120.109 671.539 118.2 671.539 cv
116.29 671.539 114.742 669.992 114.742 668.08 cv
114.742 666.17 116.29 664.621 118.2 664.621 cv
cp
68.2056 815.178 mo
67.0522 678.563 li
87.3853 657.131 li
103.839 657.131 li
111.998 664.496 li
111.95 666.025 112.392 667.924 112.821 669.193 cv
114.019 672.731 115.851 675.959 119.585 675.959 cv
123.321 675.959 126.351 672.93 126.351 669.193 cv
126.351 665.457 123.232 663.244 119.585 662.428 cv
117.863 662.041 115.72 661.598 114.176 661.807 cv
105.171 653.674 li
85.8999 653.674 li
63.5845 677.193 li
64.7339 813.74 li
18.3452 859.559 li
19.5034 981.313 li
22.9604 981.277 li
21.8159 860.99 li
68.2056 815.178 li
cp
f
67.4917 849.268 mo
69.3979 849.344 70.8813 850.957 70.8022 852.863 cv
70.7241 854.773 69.1128 856.258 67.2065 856.176 cv
65.2983 856.098 63.8159 854.488 63.894 852.578 cv
63.9722 850.674 65.5815 849.19 67.4917 849.268 cv
cp
204.493 693.551 mo
205.844 692.203 208.032 692.203 209.382 693.551 cv
210.734 694.9 210.734 697.09 209.382 698.44 cv
208.032 699.791 205.844 699.791 204.493 698.44 cv
203.142 697.09 203.142 694.9 204.493 693.551 cv
cp
63.895 858.912 mo
65.3237 858.975 67.0581 858.69 68.5015 858.428 cv
72.1782 857.76 75.3843 855.68 75.5396 851.947 cv
75.6167 850.063 74.9116 848.326 73.7183 847.049 cv
85.7769 833.262 li
85.7769 739.961 li
127.419 697.471 li
199.69 697.471 li
200.687 698.729 202.587 699.924 203.921 700.584 cv
207.271 702.24 210.845 703.227 213.487 700.584 cv
216.13 697.943 216.128 693.66 213.487 691.018 cv
210.845 688.377 207.08 689.019 203.921 691.018 cv
202.587 691.861 200.972 692.914 199.969 694.014 cv
125.968 694.014 li
82.3179 738.549 li
82.3179 831.963 li
70.7407 845.201 li
70.2056 845.039 69.644 844.934 69.0601 844.91 cv
65.3257 844.756 63.3618 847.902 62.021 851.391 cv
61.3901 853.025 60.7007 855.734 61.1675 857.328 cv
39.3853 877.678 li
39.3853 981.295 li
42.8433 981.295 li
42.8433 879.178 li
64.1948 859.234 li
63.895 858.912 li
cp
f
173.373 722.941 mo
174.724 721.594 176.912 721.594 178.263 722.941 cv
179.612 724.293 179.612 726.481 178.263 727.83 cv
176.912 729.182 174.724 729.182 173.373 727.83 cv
172.023 726.481 172.023 724.293 173.373 722.941 cv
cp
103.931 812.316 mo
122.659 794.453 li
122.659 760.139 li
155.071 727.727 li
169.397 727.727 li
170.424 728.648 171.778 729.469 172.802 729.975 cv
176.15 731.631 179.724 732.617 182.369 729.975 cv
185.011 727.334 185.009 723.051 182.367 720.408 cv
179.724 717.768 175.96 718.41 172.802 720.408 cv
171.122 721.473 168.994 722.865 168.21 724.268 cv
153.64 724.268 li
119.201 758.707 li
119.201 792.975 li
100.474 810.838 li
100.474 866.766 li
52.6382 915.176 li
52.6382 981.297 li
56.0972 981.297 li
56.0972 916.596 li
103.931 868.188 li
103.931 812.316 li
cp
f
145.71 754.06 mo
147.062 752.713 149.251 752.713 150.601 754.06 cv
151.952 755.412 151.952 757.6 150.601 758.951 cv
149.251 760.301 147.062 760.301 145.71 758.951 cv
144.361 757.6 144.361 755.412 145.71 754.06 cv
cp
110.269 815.75 mo
127.558 798.463 li
127.558 768.596 li
139.415 758.846 li
141.675 758.846 li
141.675 758.791 li
142.708 759.736 144.098 760.578 145.14 761.094 cv
148.487 762.752 152.062 763.738 154.706 761.094 cv
157.349 758.455 157.347 754.17 154.705 751.529 cv
152.062 748.887 148.298 749.529 145.14 751.529 cv
143.458 752.594 141.33 753.986 140.547 755.389 cv
138.176 755.389 li
124.101 766.963 li
124.101 797.029 li
106.812 814.318 li
106.812 869.08 li
58.1167 918.93 li
58.1167 981.295 li
61.5737 981.295 li
61.5737 920.336 li
110.269 870.486 li
110.269 815.75 li
cp
f
116.605 817.486 mo
134.185 799.902 li
134.185 776.664 li
140.278 771.67 li
161.373 771.67 li
168.187 765.365 li
168.187 748.303 li
173.248 742.998 li
188.069 742.998 li
188.069 739.541 li
171.769 739.541 li
164.729 746.918 li
164.729 763.854 li
160.019 768.211 li
139.042 768.211 li
130.726 775.031 li
130.726 798.471 li
113.155 816.045 li
112.866 872.381 li
65.0288 920.65 li
65.0288 981.295 li
68.4868 981.295 li
68.4868 922.072 li
116.317 873.813 li
116.605 817.486 li
cp
f
147.507 791.205 mo
147.906 789.334 149.744 788.143 151.611 788.541 cv
153.478 788.94 154.669 790.775 154.271 792.643 cv
153.876 794.512 152.039 795.703 150.171 795.305 cv
148.304 794.908 147.111 793.072 147.507 791.205 cv
cp
122.66 820.949 mo
146.677 797.492 li
148.036 797.746 149.683 797.754 151.071 797.74 cv
154.806 797.699 158.316 796.185 159.097 792.531 cv
159.873 788.879 157.54 785.285 153.886 784.51 cv
150.232 783.731 147.769 786.504 145.862 789.717 cv
144.996 791.176 143.91 793.607 144.011 795.26 cv
119.203 819.494 li
119.203 875.119 li
71.3921 922.93 li
69.6401 981.242 li
73.0981 981.346 li
74.8052 924.406 li
122.66 876.553 li
122.66 820.949 li
cp
f
174.64 760.357 mo
173.289 759.008 173.289 756.82 174.64 755.469 cv
175.99 754.119 178.179 754.119 179.528 755.469 cv
179.659 755.598 179.765 755.742 179.871 755.887 cv
180.523 757.711 li
180.578 758.662 180.255 759.631 179.528 760.357 cv
178.179 761.709 175.99 761.709 174.64 760.357 cv
cp
127.847 826.734 mo
149.275 806.68 li
159.175 806.68 li
167.898 796.664 li
167.898 778.065 li
178.56 768.557 li
178.56 765.16 li
179.816 764.162 181.013 762.264 181.673 760.932 cv
183.912 756.402 184.925 751.457 177.398 748.971 cv
177.141 748.885 176.845 748.879 176.584 748.953 cv
169.173 751.082 169.355 756.586 172.107 760.932 cv
172.955 762.269 174.013 763.894 175.117 764.896 cv
175.101 764.896 li
175.101 767.006 li
164.44 776.514 li
164.44 795.371 li
157.603 803.223 li
147.912 803.223 li
124.389 825.236 li
124.389 877.141 li
76.2671 925.838 li
76.2671 981.297 li
79.7261 981.297 li
79.7261 927.258 li
127.847 878.56 li
127.847 826.734 li
cp
f
142.726 827.139 mo
143.124 825.269 144.961 824.076 146.83 824.475 cv
148.696 824.869 149.888 826.709 149.49 828.576 cv
149.095 830.443 147.255 831.639 145.39 831.238 cv
143.523 830.842 142.33 829.006 142.726 827.139 cv
cp
134.187 839.795 mo
142.248 833.494 li
143.533 833.688 145.023 833.69 146.29 833.676 cv
150.023 833.633 153.535 832.121 154.313 828.467 cv
155.091 824.815 152.759 821.221 149.105 820.441 cv
145.451 819.664 142.987 822.438 141.081 825.65 cv
140.169 827.184 139.003 829.803 139.248 831.449 cv
130.728 838.109 li
130.728 880.879 li
82.3188 929.289 li
82.3188 981.295 li
85.7769 981.295 li
85.7769 930.721 li
134.187 882.313 li
134.187 839.795 li
cp
f
180.097 794.018 mo
178.746 795.367 176.557 795.367 175.206 794.018 cv
173.856 792.668 173.856 790.479 175.206 789.129 cv
176.557 787.777 178.746 787.777 180.097 789.129 cv
180.226 789.258 180.332 789.4 180.437 789.545 cv
181.091 791.373 li
181.146 792.322 180.824 793.291 180.097 794.018 cv
cp
155.123 897.445 mo
167.321 883.992 li
167.321 809.18 li
178.29 799.334 li
179.831 798.695 181.435 796.219 182.241 794.59 cv
182.365 794.338 182.484 794.084 182.599 793.83 cv
182.617 793.795 182.634 793.76 182.65 793.725 cv
182.665 793.69 182.678 793.656 182.693 793.621 cv
182.699 793.607 182.705 793.594 182.71 793.58 cv
182.79 793.4 182.865 793.223 182.938 793.043 cv
182.964 792.981 182.992 792.918 183.017 792.856 cv
183.028 792.824 183.039 792.795 183.05 792.766 cv
183.128 792.563 183.203 792.359 183.273 792.154 cv
183.291 792.1 183.312 792.045 183.331 791.99 cv
183.414 791.738 183.487 791.488 183.554 791.238 cv
183.564 791.199 183.575 791.16 183.584 791.123 cv
183.597 791.068 183.607 791.018 183.619 790.965 cv
183.66 790.795 183.695 790.627 183.726 790.459 cv
183.737 790.394 183.753 790.33 183.763 790.268 cv
183.769 790.229 183.773 790.191 183.778 790.154 cv
183.806 789.975 183.825 789.797 183.839 789.619 cv
183.845 789.557 183.854 789.494 183.858 789.432 cv
183.873 789.184 183.874 788.938 183.862 788.695 cv
183.861 788.662 183.86 788.629 183.857 788.596 cv
183.854 788.535 183.845 788.477 183.839 788.416 cv
183.826 788.262 183.806 788.109 183.781 787.959 cv
183.771 787.902 183.763 787.846 183.751 787.789 cv
183.743 787.746 183.732 787.701 183.721 787.656 cv
183.685 787.498 183.638 787.342 183.587 787.188 cv
183.569 787.133 183.555 787.076 183.535 787.021 cv
183.45 786.787 183.347 786.557 183.224 786.33 cv
183.211 786.305 183.194 786.281 183.179 786.256 cv
183.144 786.193 183.104 786.131 183.066 786.068 cv
182.982 785.934 182.892 785.801 182.794 785.67 cv
182.761 785.625 182.726 785.58 182.691 785.535 cv
182.653 785.488 182.617 785.441 182.577 785.394 cv
182.463 785.262 182.337 785.131 182.207 785.002 cv
182.164 784.959 182.123 784.914 182.076 784.871 cv
182.041 784.838 182.013 784.803 181.976 784.771 cv
181.796 784.609 181.609 784.463 181.415 784.324 cv
181.362 784.285 181.308 784.248 181.255 784.209 cv
181.095 784.098 180.914 783.99 180.737 783.883 cv
180.588 783.791 180.445 783.699 180.283 783.613 cv
180.091 783.51 179.879 783.412 179.669 783.315 cv
179.492 783.231 179.318 783.146 179.126 783.066 cv
178.906 782.973 178.662 782.887 178.421 782.801 cv
178.265 782.744 178.128 782.682 177.965 782.629 cv
177.97 782.643 li
177.831 782.596 177.709 782.545 177.564 782.5 cv
175.923 782.928 174.65 783.519 173.66 784.219 cv
173.531 784.307 173.406 784.4 173.282 784.498 cv
173.216 784.551 173.141 784.6 173.079 784.652 cv
172.905 784.799 172.737 784.955 172.578 785.121 cv
172.537 785.164 172.503 785.209 172.462 785.254 cv
172.414 785.307 172.369 785.361 172.321 785.416 cv
172.17 785.596 172.032 785.777 171.908 785.965 cv
171.877 786.01 171.845 786.051 171.816 786.096 cv
171.675 786.322 171.552 786.553 171.445 786.787 cv
171.42 786.844 171.4 786.9 171.376 786.955 cv
171.298 787.146 171.231 787.34 171.173 787.535 cv
171.153 787.602 171.134 787.668 171.117 787.734 cv
171.055 787.979 171.005 788.225 170.974 788.475 cv
170.97 788.512 170.97 788.547 170.966 788.582 cv
170.943 788.803 170.932 789.025 170.931 789.25 cv
170.931 789.326 170.932 789.402 170.935 789.479 cv
170.941 789.697 170.956 789.918 170.982 790.139 cv
170.987 790.18 170.99 790.223 170.996 790.266 cv
171.029 790.523 171.08 790.783 171.14 791.041 cv
171.157 791.113 171.177 791.188 171.195 791.26 cv
171.248 791.465 171.308 791.67 171.375 791.875 cv
171.397 791.941 171.417 792.006 171.44 792.072 cv
171.531 792.33 171.63 792.588 171.742 792.842 cv
171.765 792.896 171.792 792.949 171.817 793.002 cv
171.913 793.213 172.015 793.422 172.123 793.629 cv
172.161 793.699 172.198 793.771 172.236 793.842 cv
172.374 794.094 172.519 794.344 172.674 794.59 cv
173.319 795.606 174.083 796.785 174.897 797.734 cv
163.865 807.637 li
163.865 882.66 li
153.589 893.988 li
125.406 893.988 li
86.9292 932.17 li
86.9292 981.297 li
90.3872 981.297 li
90.3872 933.607 li
126.83 897.445 li
155.123 897.445 li
cp
f
123.65 969.512 mo
122.299 970.863 120.111 970.863 118.759 969.512 cv
117.412 968.162 117.412 965.973 118.759 964.623 cv
120.111 963.273 122.299 963.273 123.65 964.623 cv
124.998 965.973 124.998 968.162 123.65 969.512 cv
cp
128.453 965.592 mo
127.455 964.334 125.555 963.139 124.222 962.479 cv
120.873 960.824 117.298 959.838 114.655 962.479 cv
112.011 965.121 112.011 969.404 114.655 972.045 cv
117.298 974.688 121.064 974.045 124.222 972.045 cv
125.556 971.199 127.171 970.146 128.173 969.049 cv
144.92 969.049 li
156.506 982.428 li
159.12 980.162 li
146.501 965.592 li
128.453 965.592 li
cp
f
253.88 876.424 mo
252.531 875.072 252.528 872.883 253.88 871.533 cv
255.231 870.184 257.419 870.184 258.77 871.533 cv
260.119 872.883 260.119 875.072 258.77 876.424 cv
257.419 877.773 255.231 877.773 253.88 876.424 cv
cp
254.343 886.709 mo
257.8 886.709 li
257.8 881.225 li
259.058 880.227 260.253 878.326 260.912 876.996 cv
261.412 875.982 261.849 874.955 262.146 873.934 cv
262.833 871.574 262.757 869.275 260.912 867.428 cv
258.271 864.783 253.986 864.783 251.345 867.428 cv
248.705 870.072 249.345 873.838 251.345 876.996 cv
252.232 878.394 253.347 880.104 254.505 881.09 cv
254.343 881.09 li
254.343 886.709 li
cp
f
147.748 857.908 mo
146.397 856.56 146.397 854.369 147.748 853.018 cv
149.098 851.67 151.287 851.67 152.636 853.018 cv
153.986 854.369 153.986 856.56 152.636 857.908 cv
151.287 859.26 149.098 859.26 147.748 857.908 cv
cp
151.845 872.519 mo
151.845 862.565 li
153.036 861.535 154.151 859.75 154.779 858.482 cv
155.278 857.473 155.716 856.44 156.013 855.422 cv
156.701 853.06 156.624 850.76 154.779 848.912 cv
152.136 846.273 147.853 846.273 145.211 848.912 cv
142.571 851.557 143.212 855.324 145.211 858.482 cv
146.103 859.887 147.224 861.606 148.387 862.59 cv
148.387 872.519 li
151.845 872.519 li
cp
f
267.205 699.201 mo
267.604 697.332 269.441 696.141 271.308 696.539 cv
273.175 696.934 274.367 698.773 273.968 700.641 cv
273.574 702.508 271.735 703.701 269.87 703.303 cv
268.002 702.904 266.808 701.068 267.205 699.201 cv
cp
259.226 711.879 mo
265.855 705.385 li
267.29 705.754 269.201 705.756 270.769 705.738 cv
274.501 705.695 278.013 704.184 278.792 700.531 cv
279.569 696.877 277.237 693.285 273.583 692.504 cv
269.93 691.727 267.466 694.502 265.56 697.715 cv
264.797 698.996 263.861 701.039 263.716 702.639 cv
257.814 708.422 li
232.751 708.422 li
224.374 714.453 li
224.374 760.227 li
221.781 764.404 li
221.781 981.295 li
225.24 981.295 li
225.24 765.391 li
227.832 761.213 li
227.832 716.223 li
233.866 711.879 li
259.226 711.879 li
cp
f
239.703 731.637 mo
238.328 730.31 238.29 728.121 239.615 726.746 cv
240.941 725.373 243.13 725.336 244.505 726.662 cv
245.878 727.988 245.918 730.178 244.589 731.553 cv
243.264 732.924 241.077 732.961 239.703 731.637 cv
cp
235.037 844.986 mo
243.968 838.068 li
243.968 736.137 li
245.107 735.076 246.152 733.332 246.744 732.086 cv
248.343 728.707 249.265 725.115 246.577 722.519 cv
243.888 719.924 239.607 719.998 237.01 722.685 cv
234.415 725.373 235.124 729.131 237.18 732.252 cv
238.117 733.676 239.3 735.428 240.51 736.377 cv
240.51 836.375 li
231.58 843.291 li
231.58 965.037 li
249.98 982.547 li
252.365 980.041 li
235.037 963.553 li
235.037 844.986 li
cp
f
332.612 355.397 mo
334.521 355.397 336.069 356.944 336.069 358.854 cv
336.069 360.765 334.521 362.311 332.612 362.311 cv
330.701 362.311 329.155 360.765 329.155 358.854 cv
329.155 356.944 330.701 355.397 332.612 355.397 cv
cp
311.394 287.717 mo
323.23 299.728 li
316.866 317.401 li
317.167 345.332 li
326.468 354.608 li
326.228 356.212 326.741 358.506 327.235 359.966 cv
328.431 363.504 330.261 366.732 333.998 366.732 cv
337.734 366.732 340.763 363.703 340.763 359.966 cv
340.763 356.23 337.642 354.018 333.998 353.202 cv
332.34 352.83 330.294 352.409 328.765 352.562 cv
329.04 352.288 li
320.608 343.881 li
320.331 317.989 li
327.22 298.85 li
314.851 286.298 li
314.851 206.038 li
279.173 170.748 li
276.742 173.206 li
311.394 207.483 li
311.394 287.717 li
cp
f
341.884 329.454 mo
343.257 330.78 343.296 332.967 341.968 334.342 cv
340.642 335.717 338.454 335.755 337.08 334.426 cv
335.705 333.101 335.667 330.911 336.996 329.538 cv
338.321 328.167 340.509 328.127 341.884 329.454 cv
cp
319.751 264.485 mo
333.149 282.244 li
337.906 287.66 li
337.906 324.7 li
336.656 325.713 335.482 327.65 334.84 329.003 cv
333.244 332.382 332.319 335.975 335.009 338.57 cv
337.695 341.165 341.978 341.09 344.576 338.405 cv
347.168 335.715 346.46 331.958 344.407 328.838 cv
343.544 327.527 342.471 325.94 341.362 324.956 cv
341.362 286.356 li
335.828 280.062 li
323.21 263.327 li
323.21 203.751 li
291.095 170.771 li
288.617 173.182 li
319.751 205.157 li
319.751 264.485 li
cp
f
351.245 403.077 mo
352.616 404.403 352.655 406.59 351.329 407.966 cv
350.002 409.34 347.814 409.379 346.439 408.051 cv
345.065 406.725 345.027 404.536 346.355 403.162 cv
347.68 401.789 349.871 401.75 351.245 403.077 cv
cp
342.392 185.149 mo
350.007 192.51 li
350.007 245.231 li
347.999 263.719 li
347.425 398.196 li
346.117 399.168 344.869 401.217 344.201 402.626 cv
342.603 406.006 341.68 409.599 344.368 412.192 cv
347.054 414.79 351.337 414.715 353.933 412.026 cv
356.528 409.338 355.819 405.581 353.767 402.461 cv
352.945 401.211 351.932 399.715 350.88 398.725 cv
351.446 264.002 li
353.455 245.512 li
353.464 191.042 li
343.79 181.692 li
314.106 181.692 li
302.656 170.727 li
300.264 173.227 li
312.718 185.149 li
342.392 185.149 li
cp
f
361.054 386.901 mo
362.428 388.227 362.465 390.417 361.14 391.79 cv
359.814 393.161 357.624 393.202 356.25 391.874 cv
354.876 390.547 354.837 388.36 356.165 386.985 cv
357.492 385.611 359.679 385.573 361.054 386.901 cv
cp
348.446 175.641 mo
368.736 195.108 li
368.736 263.234 li
357.21 275.819 li
357.21 382.04 li
355.912 383.021 354.675 385.05 354.012 386.452 cv
352.414 389.829 351.491 393.421 354.179 396.016 cv
356.867 398.612 361.148 398.537 363.746 395.851 cv
366.34 393.161 365.63 389.407 363.576 386.285 cv
362.749 385.026 361.729 383.515 360.667 382.525 cv
360.667 277.163 li
372.193 264.579 li
372.193 193.631 li
349.838 172.182 li
319.172 172.182 li
317.039 170.592 li
314.972 173.361 li
318.025 175.641 li
348.446 175.641 li
cp
f
274.566 550.697 mo
272.656 550.697 271.109 549.149 271.109 547.239 cv
271.109 545.329 272.656 543.78 274.566 543.78 cv
276.478 543.78 278.025 545.329 278.025 547.239 cv
278.025 549.149 276.478 550.697 274.566 550.697 cv
cp
389.206 416.985 mo
362.685 445.237 li
362.685 503.122 li
340.07 525.738 li
296.742 525.738 li
279.971 541.528 li
278.585 540.567 275.335 541.225 273.455 541.862 cv
269.917 543.058 266.691 544.89 266.691 548.625 cv
266.691 552.361 269.718 555.392 273.455 555.392 cv
277.19 555.392 279.402 552.271 280.218 548.625 cv
280.482 547.451 280.775 546.077 280.871 544.83 cv
281.171 545.15 li
298.111 529.195 li
341.503 529.195 li
366.142 504.553 li
366.142 446.604 li
392.642 418.38 li
393.241 385.245 li
381.125 373.995 li
381.125 205.143 li
396.974 188.432 li
396.974 171.977 li
393.517 171.977 li
393.517 187.053 li
377.667 203.765 li
377.667 375.5 li
389.755 386.727 li
389.206 416.985 li
cp
f
305.29 574.519 mo
303.38 574.519 301.833 572.97 301.833 571.062 cv
301.833 569.152 303.38 567.603 305.29 567.603 cv
307.203 567.603 308.749 569.152 308.749 571.062 cv
308.749 572.97 307.203 574.519 305.29 574.519 cv
cp
390.347 362.786 mo
396.109 368.547 li
396.109 422.737 li
374.787 444.347 li
374.787 499.659 li
308.958 564.868 li
307.414 564.799 305.47 565.247 304.179 565.684 cv
300.641 566.88 297.414 568.711 297.414 572.447 cv
297.414 576.183 300.443 579.212 304.179 579.212 cv
307.915 579.212 310.126 576.093 310.944 572.447 cv
311.321 570.763 311.751 568.677 311.577 567.142 cv
378.245 501.1 li
378.245 445.764 li
399.567 424.155 li
399.567 367.118 li
393.804 361.354 li
393.804 206.69 li
405.906 196.317 li
405.906 171.977 li
402.449 171.977 li
402.449 194.725 li
390.347 205.099 li
390.347 362.786 li
cp
f
393.605 612.139 mo
394.98 613.465 395.017 615.654 393.69 617.027 cv
392.367 618.402 390.176 618.441 388.802 617.111 cv
387.427 615.785 387.388 613.598 388.716 612.223 cv
390.043 610.852 392.231 610.813 393.605 612.139 cv
cp
403.89 433.24 mo
389.769 447.217 li
389.769 607.271 li
388.468 608.25 387.228 610.285 386.563 611.69 cv
384.964 615.068 384.042 618.66 386.73 621.256 cv
389.418 623.85 393.699 623.775 396.296 621.09 cv
398.891 618.402 398.183 614.644 396.127 611.523 cv
395.302 610.268 394.285 608.762 393.226 607.771 cv
393.226 448.661 li
407.349 434.684 li
407.349 218.157 li
415.128 210.665 li
415.128 171.977 li
411.671 171.977 li
411.671 209.194 li
403.89 216.684 li
403.89 433.24 li
cp
f
430.398 171.977 mo
426.94 171.977 li
426.94 181.692 li
430.398 181.692 li
430.398 171.977 li
cp
f
423.665 427.575 mo
425.576 427.575 427.123 429.123 427.123 431.032 cv
427.123 432.942 425.576 434.491 423.665 434.491 cv
421.753 434.491 420.206 432.942 420.206 431.032 cv
420.206 429.123 421.753 427.575 423.665 427.575 cv
cp
411.671 420.345 mo
417.499 427.052 li
417.344 428.638 417.819 430.76 418.289 432.143 cv
419.484 435.684 421.314 438.909 425.052 438.909 cv
428.787 438.909 431.816 435.879 431.816 432.143 cv
431.816 428.408 428.696 426.196 425.052 425.377 cv
423.479 425.025 421.55 424.625 420.05 424.714 cv
415.128 419.051 li
415.128 249.901 li
445.384 220.163 li
445.384 171.977 li
441.926 171.977 li
441.926 218.713 li
411.671 248.451 li
411.671 420.345 li
cp
f
369.327 965.582 mo
367.415 965.582 365.869 964.033 365.869 962.125 cv
365.869 960.213 367.415 958.664 369.327 958.664 cv
371.237 958.664 372.785 960.213 372.785 962.125 cv
372.785 964.033 371.237 965.582 369.327 965.582 cv
cp
317.804 914.752 mo
315.894 914.752 314.345 913.205 314.345 911.295 cv
314.345 909.385 315.894 907.836 317.804 907.836 cv
319.712 907.836 321.261 909.385 321.261 911.295 cv
321.261 913.205 319.712 914.752 317.804 914.752 cv
cp
300.359 730.205 mo
298.986 728.877 298.949 726.69 300.275 725.315 cv
301.599 723.941 303.789 723.902 305.163 725.231 cv
306.539 726.557 306.578 728.746 305.249 730.119 cv
303.923 731.49 301.734 731.531 300.359 730.205 cv
cp
370.714 956.469 mo
369.028 956.09 366.938 955.66 365.402 955.836 cv
327.636 916.75 li
324.894 905.545 li
319.031 900.799 li
319.031 771.248 li
304.335 756.408 li
304.335 734.957 li
305.585 733.945 306.761 732.006 307.402 730.654 cv
309 727.275 309.923 723.684 307.236 721.088 cv
304.548 718.492 300.265 718.566 297.669 721.254 cv
295.074 723.943 295.783 727.699 297.837 730.818 cv
298.704 732.137 299.781 733.731 300.895 734.715 cv
300.877 734.715 li
300.877 757.828 li
315.574 772.67 li
315.574 902.449 li
317.914 904.344 li
317.523 904.281 317.126 904.24 316.718 904.24 cv
312.517 904.24 309.112 907.646 309.112 911.846 cv
309.112 916.045 312.517 919.449 316.718 919.449 cv
319.799 919.449 322.446 917.611 323.642 914.977 cv
324.499 918.482 li
363.131 958.465 li
363.066 960.008 363.513 961.945 363.951 963.234 cv
365.146 966.771 366.976 970 370.714 970 cv
374.449 970 377.478 966.971 377.478 963.234 cv
377.478 959.5 374.359 957.287 370.714 956.469 cv
cp
f
349.445 969.9 mo
347.533 969.9 345.986 968.354 345.986 966.443 cv
345.986 964.533 347.533 962.984 349.445 962.984 cv
351.356 962.984 352.902 964.533 352.902 966.443 cv
352.902 968.354 351.356 969.9 349.445 969.9 cv
cp
295.626 697.473 mo
296.023 695.604 297.859 694.412 299.728 694.81 cv
301.595 695.205 302.785 697.045 302.388 698.91 cv
301.992 700.779 300.155 701.973 298.289 701.574 cv
296.421 701.176 295.228 699.34 295.626 697.473 cv
cp
350.832 960.789 mo
348.833 960.34 346.267 959.816 344.735 960.326 cv
293.098 908.9 li
293.098 845.246 li
278.835 827.957 li
278.835 779.621 li
288.353 770.678 li
287.489 710.424 li
294.259 703.652 li
295.696 704.023 297.615 704.027 299.189 704.01 cv
302.923 703.969 306.435 702.455 307.212 698.801 cv
307.991 695.148 305.66 691.555 302.003 690.777 cv
298.349 689.998 295.886 692.771 293.979 695.984 cv
293.222 697.262 292.294 699.287 292.139 700.885 cv
284.011 709.014 li
284.875 769.201 li
275.376 778.125 li
275.376 829.199 li
289.64 846.488 li
289.64 910.338 li
343.265 963.746 li
343.362 965.076 343.719 966.523 344.069 967.555 cv
345.264 971.094 347.094 974.32 350.832 974.32 cv
354.567 974.32 357.596 971.291 357.596 967.555 cv
357.596 963.818 354.478 961.607 350.832 960.789 cv
cp
f
386.48 939.527 mo
386.095 941.398 384.265 942.6 382.394 942.213 cv
380.524 941.826 379.321 939.998 379.708 938.125 cv
380.095 936.258 381.925 935.055 383.796 935.441 cv
385.665 935.828 386.867 937.658 386.48 939.527 cv
cp
328.593 730.508 mo
327.22 729.182 327.182 726.994 328.509 725.619 cv
329.835 724.244 332.024 724.207 333.399 725.535 cv
334.773 726.859 334.81 729.049 333.483 730.424 cv
332.156 731.795 329.968 731.834 328.593 730.508 cv
cp
390.853 941.566 mo
391.61 937.908 389.003 935.111 385.599 933.572 cv
384.13 932.906 382.324 932.123 380.837 931.908 cv
380.837 876.271 li
332.429 827.863 li
332.429 735.375 li
333.732 734.4 334.972 732.361 335.637 730.957 cv
337.234 727.58 338.158 723.986 335.468 721.393 cv
332.783 718.797 328.501 718.871 325.902 721.557 cv
323.308 724.246 324.019 728.004 326.07 731.123 cv
326.999 732.533 328.168 734.264 329.366 735.219 cv
328.972 735.219 li
328.972 829.295 li
377.38 877.703 li
377.38 934.904 li
377.591 934.904 li
377.413 936.232 377.47 937.738 377.603 938.828 cv
378.058 942.535 379.199 946.065 382.857 946.82 cv
386.515 947.576 390.095 945.227 390.853 941.566 cv
cp
f
334.644 201.702 mo
333.272 200.376 333.233 198.187 334.56 196.813 cv
335.887 195.438 338.076 195.401 339.45 196.727 cv
340.824 198.055 340.861 200.244 339.534 201.618 cv
338.207 202.99 336.019 203.029 334.644 201.702 cv
cp
341.689 202.151 mo
343.286 198.774 344.21 195.182 341.519 192.586 cv
338.833 189.992 334.552 190.066 331.954 192.752 cv
329.361 195.442 330.069 199.196 332.123 202.319 cv
333.043 203.718 334.205 205.432 335.392 206.392 cv
335.54 217.657 li
338.998 217.612 li
338.849 206.262 li
340.013 205.21 341.087 203.422 341.689 202.151 cv
cp
f
85.6733 853.935 mo
86.0708 852.066 87.9097 850.875 89.7759 851.273 cv
91.6421 851.668 92.8354 853.508 92.437 855.375 cv
92.0425 857.242 90.2026 858.435 88.3374 858.037 cv
86.4702 857.639 85.2769 855.803 85.6733 853.935 cv
cp
89.2358 860.473 mo
92.9702 860.43 96.4819 858.918 97.2612 855.266 cv
98.0386 851.611 95.7056 848.018 92.0522 847.24 cv
88.3979 846.461 85.9351 849.236 84.0278 852.447 cv
83.2651 853.731 82.3315 855.769 82.1831 857.369 cv
45.1499 893.256 li
45.1499 981.295 li
48.6069 981.295 li
48.6069 894.721 li
84.3169 860.117 li
85.7534 860.486 87.6665 860.49 89.2358 860.473 cv
cp
f
341.917 496.45 mo
340.566 497.801 338.378 497.801 337.027 496.45 cv
335.677 495.1 335.677 492.911 337.027 491.56 cv
338.378 490.211 340.566 490.211 341.917 491.56 cv
343.265 492.911 343.265 495.1 341.917 496.45 cv
cp
346.021 489.028 mo
343.38 486.385 339.611 487.026 336.455 489.028 cv
335.121 489.873 333.503 490.925 332.5 492.024 cv
243.535 492.024 li
193.974 542.163 li
72.6372 542.163 li
42.6694 513.635 li
-2.41846 513.635 li
-2.41846 517.092 li
41.2886 517.092 li
71.2563 545.62 li
195.419 545.62 li
244.98 495.482 li
332.224 495.482 li
333.222 496.739 335.122 497.935 336.455 498.594 cv
339.804 500.25 343.38 501.237 346.023 498.594 cv
348.665 495.952 348.665 491.669 346.021 489.028 cv
cp
f
272.028 513.811 mo
270.679 515.162 268.49 515.162 267.139 513.811 cv
265.79 512.46 265.79 510.272 267.139 508.921 cv
268.49 507.571 270.679 507.571 272.028 508.921 cv
273.378 510.272 273.378 512.46 272.028 513.811 cv
cp
266.567 506.389 mo
264.8 507.508 262.54 508.991 261.867 510.464 cv
236.354 510.464 li
198.318 547.348 li
69.1899 547.348 li
41.5278 520.551 li
-2.41846 520.551 li
-2.41846 524.008 li
40.1265 524.008 li
67.7886 550.806 li
199.72 550.806 li
237.755 513.922 li
263.41 513.922 li
264.4 514.755 265.625 515.489 266.567 515.955 cv
269.917 517.61 273.493 518.595 276.134 515.955 cv
278.777 513.313 278.775 509.03 276.132 506.389 cv
273.493 503.747 269.724 504.388 266.567 506.389 cv
cp
f
121.283 392.187 mo
119.933 393.538 117.744 393.538 116.395 392.187 cv
115.043 390.838 115.043 388.649 116.395 387.297 cv
117.744 385.948 119.933 385.948 121.283 387.297 cv
122.634 388.649 122.634 390.838 121.283 392.187 cv
cp
112.289 385.155 mo
109.644 387.795 109.648 392.077 112.289 394.719 cv
114.931 397.362 118.696 396.72 121.855 394.719 cv
123.953 393.391 126.757 391.549 126.757 389.817 cv
126.757 388.086 123.737 386.083 121.855 385.155 cv
118.505 383.497 114.931 382.512 112.289 385.155 cv
cp
f
121.672 319.751 mo
123.023 318.401 125.21 318.401 126.562 319.751 cv
127.914 321.102 127.914 323.29 126.562 324.641 cv
125.21 325.992 123.023 325.992 121.672 324.641 cv
120.321 323.29 120.321 321.102 121.672 319.751 cv
cp
127.134 327.174 mo
129.233 325.844 132.038 324.002 132.038 322.27 cv
132.038 320.542 129.017 318.54 127.134 317.607 cv
123.787 315.953 120.21 314.966 117.566 317.607 cv
114.925 320.251 114.925 324.534 117.569 327.174 cv
120.21 329.815 123.979 329.174 127.134 327.174 cv
cp
f
180.555 269.391 mo
179.205 270.743 177.017 270.743 175.665 269.391 cv
174.314 268.04 174.314 265.853 175.665 264.502 cv
177.017 263.151 179.205 263.151 180.555 264.502 cv
181.906 265.853 181.906 268.04 180.555 269.391 cv
cp
175.093 261.969 mo
173.76 262.814 172.144 263.866 171.142 264.964 cv
13.0239 264.964 li
-3.64014 281.606 li
-1.1958 284.053 li
14.4556 268.422 li
170.863 268.422 li
171.861 269.679 173.759 270.875 175.093 271.536 cv
178.441 273.19 182.017 274.176 184.662 271.536 cv
187.302 268.893 187.302 264.61 184.658 261.969 cv
182.017 259.327 178.249 259.969 175.093 261.969 cv
cp
f
236.369 388.374 mo
237.72 387.022 239.908 387.022 241.258 388.374 cv
242.607 389.723 242.607 391.912 241.258 393.262 cv
239.908 394.613 237.72 394.613 236.369 393.262 cv
235.017 391.912 235.017 389.723 236.369 388.374 cv
cp
245.365 395.407 mo
248.005 392.764 248.003 388.481 245.361 385.84 cv
242.72 383.198 238.953 383.84 235.794 385.84 cv
234.259 386.813 232.348 388.062 231.433 389.34 cv
215.577 389.34 li
215.577 392.798 li
232.013 392.798 li
233.066 393.864 234.642 394.835 235.794 395.407 cv
239.145 397.061 242.72 398.047 245.365 395.407 cv
cp
f
239.056 603.648 mo
240.408 602.301 242.595 602.301 243.946 603.648 cv
245.296 605 245.296 607.19 243.946 608.537 cv
242.595 609.889 240.408 609.889 239.056 608.537 cv
237.706 607.19 237.706 605 239.056 603.648 cv
cp
238.486 610.684 mo
241.833 612.34 245.408 613.324 248.052 610.684 cv
250.695 608.043 250.695 603.76 248.05 601.115 cv
245.408 598.476 241.642 599.117 238.486 601.115 cv
236.804 602.182 234.677 603.572 233.894 604.977 cv
-2.41846 604.977 li
-2.41846 608.434 li
235.08 608.434 li
236.107 609.356 237.462 610.178 238.486 610.684 cv
cp
f
127.966 348.064 mo
129.316 346.715 131.505 346.715 132.856 348.064 cv
134.206 349.415 134.206 351.604 132.856 352.954 cv
131.505 354.303 129.316 354.303 127.966 352.954 cv
126.612 351.604 126.612 349.415 127.966 348.064 cv
cp
26.6479 336.08 mo
24.7368 336.08 23.1909 334.532 23.1909 332.622 cv
23.1909 330.712 24.7368 329.165 26.6479 329.165 cv
28.5581 329.165 30.1069 330.712 30.1069 332.622 cv
30.1069 334.532 28.5581 336.08 26.6479 336.08 cv
cp
136.962 355.098 mo
139.603 352.456 139.601 348.173 136.958 345.531 cv
134.318 342.889 130.55 343.531 127.392 345.531 cv
125.945 346.449 124.158 347.612 123.191 348.815 cv
98.1675 348.815 li
65.7036 319.135 li
38.1362 319.135 li
30.1899 326.417 li
28.6675 326.378 26.7915 326.819 25.5356 327.245 cv
21.9956 328.441 18.771 330.272 18.771 334.008 cv
18.771 337.745 21.8003 340.773 25.5356 340.773 cv
29.272 340.773 31.4839 337.655 32.3022 334.008 cv
32.687 332.288 33.1284 330.146 32.9214 328.603 cv
39.48 322.593 li
64.3589 322.593 li
96.8228 352.272 li
123.408 352.272 li
124.449 353.421 126.162 354.489 127.392 355.098 cv
130.742 356.754 134.318 357.739 136.962 355.098 cv
cp
f
235.704 544.033 mo
236.101 542.164 237.939 540.973 239.806 541.37 cv
241.673 541.766 242.866 543.604 242.467 545.471 cv
242.071 547.34 240.236 548.53 238.369 548.133 cv
236.501 547.737 235.306 545.9 235.704 544.033 cv
cp
239.267 550.57 mo
243.003 550.528 246.512 549.015 247.292 545.36 cv
248.069 541.706 245.736 538.115 242.082 537.336 cv
238.429 536.558 235.966 539.333 234.06 542.545 cv
233.218 543.96 232.165 546.297 232.196 547.946 cv
232.095 547.841 li
216.751 562.907 li
62.5767 562.907 li
35.2017 535.534 li
-2.41846 535.534 li
-2.41846 538.991 li
33.77 538.991 li
61.144 566.365 li
218.166 566.365 li
234.517 550.31 li
234.446 550.239 li
235.872 550.583 237.733 550.586 239.267 550.57 cv
cp
f
157.423 237.917 mo
157.027 239.785 155.189 240.977 153.321 240.58 cv
151.455 240.183 150.263 238.346 150.66 236.479 cv
151.056 234.61 152.894 233.419 154.763 233.816 cv
156.63 234.213 157.819 236.049 157.423 237.917 cv
cp
157.037 229.783 mo
153.384 229.004 150.921 231.777 149.014 234.991 cv
148.247 236.284 147.302 238.348 147.165 239.954 cv
130.367 254.59 li
7.51904 254.59 li
-3.67627 266.479 li
-1.16064 268.85 li
9.01123 258.049 li
131.664 258.049 li
149.318 242.665 li
150.752 243.03 152.66 243.033 154.224 243.016 cv
157.958 242.973 161.468 241.461 162.247 237.806 cv
163.025 234.152 160.695 230.561 157.037 229.783 cv
cp
f
212.765 731.287 mo
212.367 733.154 210.531 734.348 208.663 733.949 cv
206.795 733.551 205.603 731.717 206 729.848 cv
206.397 727.979 208.234 726.787 210.103 727.185 cv
211.97 727.584 213.162 729.42 212.765 731.287 cv
cp
204.354 728.361 mo
203.285 730.168 201.839 733.49 202.781 734.941 cv
203.723 736.394 207.078 736.414 209.564 736.385 cv
213.3 736.344 216.808 734.83 217.587 731.178 cv
218.367 727.523 216.035 723.93 212.379 723.152 cv
208.726 722.375 206.262 725.15 204.354 728.361 cv
cp
f
209.595 870.787 mo
209.2 872.658 207.362 873.848 205.496 873.451 cv
203.628 873.053 202.435 871.217 202.831 869.348 cv
203.23 867.482 205.067 866.289 206.933 866.688 cv
208.801 867.086 209.994 868.92 209.595 870.787 cv
cp
209.21 862.652 mo
205.556 861.875 203.093 864.652 201.187 867.863 cv
200.634 868.791 199.99 870.119 199.617 871.391 cv
199.525 871.299 li
183.388 887.435 li
185.833 889.879 li
200.533 875.18 li
201.966 875.891 204.44 875.908 206.396 875.887 cv
210.13 875.846 213.64 874.332 214.42 870.678 cv
215.196 867.025 212.862 863.434 209.21 862.652 cv
cp
f
213.052 761.545 mo
212.658 763.412 210.82 764.607 208.954 764.209 cv
207.086 763.81 205.892 761.975 206.29 760.107 cv
206.688 758.238 208.525 757.049 210.392 757.445 cv
212.259 757.844 213.452 759.678 213.052 761.545 cv
cp
212.667 753.412 mo
209.014 752.633 206.551 755.408 204.644 758.619 cv
204.038 759.639 203.326 761.141 202.981 762.519 cv
197.578 767.287 li
197.578 848.277 li
172.797 871.041 li
172.797 887.955 li
159.099 902.055 li
128.585 902.055 li
93.8452 935.904 li
93.8452 981.295 li
97.3022 981.295 li
97.3022 937.361 li
129.99 905.514 li
160.562 905.514 li
176.255 889.359 li
176.255 872.559 li
201.036 849.799 li
201.036 768.848 li
204.206 766.051 li
205.664 766.658 207.998 766.666 209.853 766.644 cv
213.587 766.602 217.098 765.09 217.878 761.435 cv
218.655 757.783 216.321 754.19 212.667 753.412 cv
cp
f
345.892 475.776 mo
345.498 477.643 343.658 478.835 341.792 478.436 cv
339.925 478.04 338.732 476.206 339.128 474.336 cv
339.527 472.467 341.365 471.276 343.232 471.672 cv
345.099 472.071 346.29 473.909 345.892 475.776 cv
cp
350.716 475.665 mo
351.495 472.01 349.161 468.418 345.507 467.641 cv
341.854 466.862 339.39 469.637 337.485 472.85 cv
336.494 474.516 335.21 477.458 335.759 479.045 cv
327.968 486.837 li
237.191 486.837 li
189.648 535.534 li
74.9927 535.534 li
48.4858 507.585 li
-2.41846 507.585 li
-2.41846 511.042 li
46.9995 511.042 li
73.5073 538.991 li
191.103 538.991 li
238.646 490.295 li
329.401 490.295 li
338.962 480.732 li
340.172 480.883 341.525 480.886 342.693 480.874 cv
346.426 480.831 349.937 479.317 350.716 475.665 cv
cp
f
322.139 458.983 mo
322.536 457.113 324.373 455.922 326.242 456.319 cv
328.109 456.717 329.3 458.555 328.902 460.422 cv
328.505 462.29 326.668 463.481 324.801 463.082 cv
322.933 462.686 321.742 460.851 322.139 458.983 cv
cp
325.703 465.52 mo
329.437 465.477 332.948 463.963 333.726 460.311 cv
334.503 456.657 332.171 453.065 328.515 452.288 cv
324.865 451.508 322.4 454.284 320.493 457.497 cv
319.421 459.301 317.976 462.624 318.919 464.075 cv
319.861 465.528 323.216 465.547 325.703 465.52 cv
cp
f
274.726 363.651 mo
274.33 365.52 272.494 366.711 270.626 366.313 cv
268.758 365.915 267.566 364.08 267.964 362.213 cv
268.361 360.343 270.196 359.152 272.066 359.549 cv
273.933 359.948 275.124 361.785 274.726 363.651 cv
cp
274.341 355.518 mo
270.688 354.738 268.224 357.513 266.317 360.725 cv
265.685 361.79 264.935 363.38 264.609 364.806 cv
264.544 364.719 li
256.935 370.425 li
231.615 370.425 li
224.122 364.375 li
188.285 364.375 li
148.736 404.139 li
-2.41846 404.139 li
-2.41846 407.596 li
150.175 407.596 li
189.722 367.832 li
222.9 367.832 li
230.392 373.883 li
258.085 373.883 li
265.786 368.112 li
267.236 368.76 269.63 368.771 271.527 368.749 cv
275.262 368.707 278.773 367.194 279.55 363.54 cv
280.329 359.887 277.998 356.293 274.341 355.518 cv
cp
f
263.388 724.68 mo
262.039 723.33 262.039 721.143 263.388 719.791 cv
264.737 718.44 266.928 718.44 268.277 719.791 cv
269.628 721.143 269.628 723.33 268.277 724.68 cv
266.928 726.029 264.737 726.029 263.388 724.68 cv
cp
270.421 725.25 mo
272.078 721.904 273.064 718.33 270.421 715.684 cv
267.778 713.043 263.498 713.043 260.855 715.684 cv
258.213 718.33 258.855 722.094 260.855 725.25 cv
261.701 726.586 262.752 728.203 263.851 729.205 cv
263.851 743.432 li
267.31 743.432 li
267.31 729.481 li
268.567 728.482 269.763 726.584 270.421 725.25 cv
cp
f
206.905 898.404 mo
205.553 899.756 203.365 899.756 202.014 898.404 cv
200.664 897.055 200.664 894.865 202.014 893.516 cv
203.365 892.164 205.553 892.164 206.905 893.516 cv
208.253 894.865 208.253 897.055 206.905 898.404 cv
cp
199.478 889.41 mo
196.837 892.053 197.479 895.82 199.478 898.979 cv
200.325 900.31 201.376 901.928 202.476 902.93 cv
202.476 917.615 li
205.935 917.615 li
205.935 903.205 li
207.192 902.207 208.388 900.309 209.046 898.979 cv
209.546 897.967 209.984 896.938 210.281 895.916 cv
210.968 893.557 210.892 891.256 209.046 889.41 cv
206.405 886.768 202.121 886.769 199.478 889.41 cv
cp
f
173.015 974.014 mo
171.106 973.977 169.586 972.402 169.619 970.494 cv
169.652 968.584 171.228 967.065 173.137 967.098 cv
175.046 967.129 176.568 968.705 176.534 970.613 cv
176.499 972.523 174.924 974.045 173.015 974.014 cv
cp
178.472 969.535 mo
177.337 965.979 175.563 962.721 171.827 962.656 cv
168.091 962.59 165.009 965.565 164.945 969.301 cv
164.88 973.035 167.96 975.301 171.59 976.184 cv
173.351 976.609 175.562 977.107 177.117 976.885 cv
183.456 982.582 li
185.765 980.008 li
179.222 974.131 li
179.271 972.621 178.869 970.777 178.472 969.535 cv
cp
f
208.736 267.808 mo
209.132 265.939 210.969 264.747 212.838 265.143 cv
214.706 265.542 215.896 267.379 215.499 269.247 cv
215.103 271.114 213.265 272.305 211.398 271.907 cv
209.531 271.51 208.339 269.675 208.736 267.808 cv
cp
194.785 288.211 mo
208.408 274.186 li
209.657 274.358 211.081 274.359 212.3 274.345 cv
216.035 274.303 219.544 272.79 220.324 269.134 cv
221.101 265.481 218.769 261.889 215.112 261.112 cv
211.46 260.333 208.998 263.108 207.089 266.321 cv
206.125 267.946 204.874 270.789 205.319 272.402 cv
192.303 285.801 li
194.785 288.211 li
cp
f
333.244 861.197 mo
333.244 870.129 li
336.701 870.129 li
336.701 861.197 li
333.244 861.197 li
cp
f
355.329 918.658 mo
356.655 917.285 358.843 917.25 360.218 918.574 cv
361.591 919.9 361.628 922.09 360.302 923.465 cv
358.978 924.838 356.787 924.875 355.413 923.547 cv
354.039 922.223 353.999 920.033 355.329 918.658 cv
cp
353.341 927.691 mo
356.028 930.285 360.311 930.209 362.908 927.525 cv
365.503 924.836 364.794 921.08 362.74 917.959 cv
361.692 916.365 360.333 914.365 358.976 913.535 cv
358.976 905.539 li
355.517 905.539 li
355.517 914.473 li
355.552 914.473 li
354.571 915.535 353.696 917.023 353.174 918.127 cv
351.578 921.504 350.655 925.094 353.341 927.691 cv
cp
f
299.979 822.842 mo
301.306 821.471 303.495 821.43 304.869 822.756 cv
306.242 824.084 306.281 826.271 304.953 827.646 cv
303.626 829.021 301.438 829.059 300.064 827.731 cv
298.689 826.406 298.652 824.217 299.979 822.842 cv
cp
297.994 831.873 mo
300.679 834.469 304.961 834.394 307.558 831.709 cv
310.155 829.021 309.445 825.264 307.391 822.143 cv
306.342 820.549 304.983 818.549 303.626 817.719 cv
303.626 809.723 li
300.168 809.723 li
300.168 818.658 li
300.201 818.658 li
299.22 819.721 298.346 821.209 297.826 822.313 cv
296.228 825.688 295.304 829.279 297.994 831.873 cv
cp
f
182.419 816.191 mo
181.068 814.842 181.068 812.652 182.419 811.303 cv
183.769 809.951 185.958 809.951 187.308 811.303 cv
188.66 812.652 188.66 814.842 187.308 816.191 cv
185.958 817.543 183.769 817.543 182.419 816.191 cv
cp
186.339 829.818 mo
186.339 820.994 li
187.597 819.996 188.792 818.098 189.453 816.766 cv
189.953 815.756 190.39 814.725 190.687 813.705 cv
191.374 811.344 191.296 809.043 189.453 807.197 cv
186.811 804.557 182.527 804.557 179.885 807.197 cv
177.243 809.842 177.886 813.607 179.885 816.766 cv
180.73 818.098 181.783 819.715 182.882 820.719 cv
182.882 829.818 li
186.339 829.818 li
cp
f
307.722 603.56 mo
307.722 605.471 306.175 607.019 304.265 607.019 cv
302.355 607.019 300.807 605.471 300.807 603.56 cv
300.807 601.652 302.355 600.103 304.265 600.103 cv
306.175 600.103 307.722 601.652 307.722 603.56 cv
cp
295.577 604.113 mo
295.577 608.313 298.98 611.719 303.181 611.719 cv
307.379 611.719 310.783 608.313 310.783 604.113 cv
310.783 599.912 307.379 596.507 303.181 596.507 cv
298.98 596.507 295.577 599.912 295.577 604.113 cv
cp
f
338.998 572.441 mo
338.998 574.349 337.451 575.898 335.54 575.898 cv
333.628 575.898 332.081 574.349 332.081 572.441 cv
332.081 570.531 333.628 568.984 335.54 568.984 cv
337.451 568.984 338.998 570.531 338.998 572.441 cv
cp
326.851 572.994 mo
326.851 577.191 330.255 580.597 334.455 580.597 cv
338.652 580.597 342.056 577.191 342.056 572.994 cv
342.056 568.792 338.652 565.386 334.455 565.386 cv
330.255 565.386 326.851 568.792 326.851 572.994 cv
cp
f
50.0386 753.688 mo
48.1274 753.688 46.5815 752.137 46.5815 750.229 cv
46.5815 748.318 48.1274 746.769 50.0386 746.769 cv
51.9487 746.769 53.4966 748.318 53.4966 750.229 cv
53.4966 752.137 51.9487 753.688 50.0386 753.688 cv
cp
48.9517 743.174 mo
44.7524 743.174 41.3491 746.578 41.3491 750.779 cv
41.3491 754.979 44.7524 758.383 48.9517 758.383 cv
53.1519 758.383 56.5562 754.979 56.5562 750.779 cv
56.5562 746.578 53.1519 743.174 48.9517 743.174 cv
cp
f
103.34 770.873 mo
103.34 772.783 101.793 774.332 99.8823 774.332 cv
97.9731 774.332 96.4253 772.783 96.4253 770.873 cv
96.4253 768.963 97.9731 767.416 99.8823 767.416 cv
101.793 767.416 103.34 768.963 103.34 770.873 cv
cp
91.1948 771.426 mo
91.1948 775.625 94.5972 779.029 98.7964 779.029 cv
102.996 779.029 106.402 775.625 106.402 771.426 cv
106.402 767.225 102.996 763.82 98.7964 763.82 cv
94.5972 763.82 91.1948 767.225 91.1948 771.426 cv
cp
f
139.306 954.451 mo
139.306 952.541 140.853 950.992 142.763 950.992 cv
144.673 950.992 146.22 952.541 146.22 954.451 cv
146.22 956.359 144.673 957.908 142.763 957.908 cv
140.853 957.908 139.306 956.359 139.306 954.451 cv
cp
149.281 955.002 mo
149.281 950.803 145.876 947.398 141.675 947.398 cv
137.478 947.398 134.074 950.803 134.074 955.002 cv
134.074 959.201 137.478 962.607 141.675 962.607 cv
145.876 962.607 149.281 959.201 149.281 955.002 cv
cp
f
182.196 957.908 mo
180.285 957.908 178.738 956.359 178.738 954.451 cv
178.738 952.541 180.285 950.992 182.196 950.992 cv
184.106 950.992 185.655 952.541 185.655 954.451 cv
185.655 956.359 184.106 957.908 182.196 957.908 cv
cp
181.109 947.398 mo
176.91 947.398 173.506 950.803 173.506 955.002 cv
173.506 959.201 176.91 962.607 181.109 962.607 cv
185.31 962.607 188.714 959.201 188.714 955.002 cv
188.714 950.803 185.31 947.398 181.109 947.398 cv
cp
f
257.156 968.389 mo
255.247 968.389 253.699 966.84 253.699 964.93 cv
253.699 963.021 255.247 961.473 257.156 961.473 cv
259.068 961.473 260.613 963.021 260.613 964.93 cv
260.613 966.84 259.068 968.389 257.156 968.389 cv
cp
256.071 957.879 mo
251.872 957.879 248.468 961.281 248.468 965.484 cv
248.468 969.684 251.872 973.086 256.071 973.086 cv
260.27 973.086 263.675 969.684 263.675 965.484 cv
263.675 961.281 260.27 957.879 256.071 957.879 cv
cp
f
285.795 967.836 mo
283.886 967.836 282.337 966.289 282.337 964.379 cv
282.337 962.471 283.886 960.92 285.795 960.92 cv
287.705 960.92 289.253 962.471 289.253 964.379 cv
289.253 966.289 287.705 967.836 285.795 967.836 cv
cp
284.71 957.326 mo
280.509 957.326 277.106 960.731 277.106 964.93 cv
277.106 969.129 280.509 972.535 284.71 972.535 cv
288.909 972.535 292.314 969.129 292.314 964.93 cv
292.314 960.731 288.909 957.326 284.71 957.326 cv
cp
f
274.734 871.971 mo
274.734 870.059 276.282 868.512 278.191 868.512 cv
280.101 868.512 281.649 870.059 281.649 871.971 cv
281.649 873.879 280.101 875.428 278.191 875.428 cv
276.282 875.428 274.734 873.879 274.734 871.971 cv
cp
284.71 872.521 mo
284.71 868.32 281.306 864.914 277.106 864.914 cv
272.906 864.914 269.501 868.32 269.501 872.521 cv
269.501 876.721 272.906 880.123 277.106 880.123 cv
281.306 880.123 284.71 876.721 284.71 872.521 cv
cp
f
50.0386 817.223 mo
48.1274 817.223 46.5815 815.672 46.5815 813.766 cv
46.5815 811.854 48.1274 810.305 50.0386 810.305 cv
51.9487 810.305 53.4966 811.854 53.4966 813.766 cv
53.4966 815.672 51.9487 817.223 50.0386 817.223 cv
cp
48.9517 806.711 mo
44.7524 806.711 41.3491 810.113 41.3491 814.315 cv
41.3491 818.516 44.7524 821.92 48.9517 821.92 cv
53.1519 821.92 56.5562 818.516 56.5562 814.315 cv
56.5562 810.113 53.1519 806.711 48.9517 806.711 cv
cp
f
20.8608 691.822 mo
20.8608 689.912 22.4087 688.363 24.3179 688.363 cv
26.23 688.363 27.7769 689.912 27.7769 691.822 cv
27.7769 693.731 26.23 695.279 24.3179 695.279 cv
22.4087 695.279 20.8608 693.731 20.8608 691.822 cv
cp
30.8374 692.373 mo
30.8374 688.174 27.4321 684.768 23.2349 684.768 cv
19.0347 684.768 15.6304 688.174 15.6304 692.373 cv
15.6304 696.572 19.0347 699.979 23.2349 699.979 cv
27.4321 699.979 30.8374 696.572 30.8374 692.373 cv
cp
f
45.4937 695.445 mo
43.5835 695.445 42.0366 693.896 42.0366 691.988 cv
42.0366 690.078 43.5835 688.529 45.4937 688.529 cv
47.4048 688.529 48.9517 690.078 48.9517 691.988 cv
48.9517 693.896 47.4048 695.445 45.4937 695.445 cv
cp
44.4087 684.934 mo
40.2095 684.934 36.8062 688.338 36.8062 692.539 cv
36.8062 696.738 40.2095 700.143 44.4087 700.143 cv
48.6069 700.143 52.0112 696.738 52.0112 692.539 cv
52.0112 688.338 48.6069 684.934 44.4087 684.934 cv
cp
f
24.3179 658.154 mo
26.23 658.154 27.7769 659.703 27.7769 661.613 cv
27.7769 663.521 26.23 665.07 24.3179 665.07 cv
22.4087 665.07 20.8608 663.521 20.8608 661.613 cv
20.8608 659.703 22.4087 658.154 24.3179 658.154 cv
cp
23.2349 669.769 mo
27.4321 669.769 30.8374 666.365 30.8374 662.164 cv
30.8374 657.963 27.4321 654.559 23.2349 654.559 cv
19.0347 654.559 15.6304 657.963 15.6304 662.164 cv
15.6304 666.365 19.0347 669.769 23.2349 669.769 cv
cp
f
335.54 638.807 mo
333.628 638.807 332.081 637.258 332.081 635.35 cv
332.081 633.44 333.628 631.891 335.54 631.891 cv
337.451 631.891 338.998 633.44 338.998 635.35 cv
338.998 637.258 337.451 638.807 335.54 638.807 cv
cp
334.455 628.295 mo
330.255 628.295 326.851 631.699 326.851 635.9 cv
326.851 640.102 330.255 643.504 334.455 643.504 cv
338.652 643.504 342.056 640.102 342.056 635.9 cv
342.056 631.699 338.652 628.295 334.455 628.295 cv
cp
f
334.759 667.565 mo
332.849 667.565 331.302 666.014 331.302 664.106 cv
331.302 662.193 332.849 660.644 334.759 660.644 cv
336.669 660.644 338.218 662.193 338.218 664.106 cv
338.218 666.014 336.669 667.565 334.759 667.565 cv
cp
333.672 657.051 mo
329.473 657.051 326.069 660.455 326.069 664.656 cv
326.069 668.857 329.473 672.26 333.672 672.26 cv
337.873 672.26 341.277 668.857 341.277 664.656 cv
341.277 660.455 337.873 657.051 333.672 657.051 cv
cp
f
368.381 635.307 mo
368.381 637.217 366.835 638.766 364.923 638.766 cv
363.013 638.766 361.466 637.217 361.466 635.307 cv
361.466 633.398 363.013 631.85 364.923 631.85 cv
366.835 631.85 368.381 633.398 368.381 635.307 cv
cp
356.236 635.859 mo
356.236 640.059 359.639 643.463 363.839 643.463 cv
368.039 643.463 371.443 640.059 371.443 635.859 cv
371.443 631.658 368.039 628.256 363.839 628.256 cv
359.639 628.256 356.236 631.658 356.236 635.859 cv
cp
f
441.281 444.545 mo
441.281 442.637 442.83 441.086 444.739 441.086 cv
446.65 441.086 448.196 442.637 448.196 444.545 cv
448.196 446.456 446.65 448.004 444.739 448.004 cv
442.83 448.004 441.281 446.456 441.281 444.545 cv
cp
451.257 445.098 mo
451.257 440.898 447.851 437.493 443.655 437.493 cv
439.455 437.493 436.05 440.898 436.05 445.098 cv
436.05 449.297 439.455 452.701 443.655 452.701 cv
447.851 452.701 451.257 449.297 451.257 445.098 cv
cp
f
300.164 389.444 mo
300.164 387.534 301.711 385.985 303.621 385.985 cv
305.531 385.985 307.079 387.534 307.079 389.444 cv
307.079 391.354 305.531 392.901 303.621 392.901 cv
301.711 392.901 300.164 391.354 300.164 389.444 cv
cp
310.14 389.996 mo
310.14 385.795 306.736 382.389 302.536 382.389 cv
298.337 382.389 294.931 385.795 294.931 389.996 cv
294.931 394.194 298.337 397.6 302.536 397.6 cv
306.736 397.6 310.14 394.194 310.14 389.996 cv
cp
f
300.807 451.504 mo
300.807 449.594 302.355 448.044 304.265 448.044 cv
306.175 448.044 307.722 449.594 307.722 451.504 cv
307.722 453.414 306.175 454.961 304.265 454.961 cv
302.355 454.961 300.807 453.414 300.807 451.504 cv
cp
310.783 452.056 mo
310.783 447.854 307.379 444.45 303.181 444.45 cv
298.98 444.45 295.577 447.854 295.577 452.056 cv
295.577 456.254 298.98 459.659 303.181 459.659 cv
307.379 459.659 310.783 456.254 310.783 452.056 cv
cp
f
334.392 393.6 mo
332.48 393.6 330.933 392.05 330.933 390.143 cv
330.933 388.231 332.48 386.681 334.392 386.681 cv
336.302 386.681 337.849 388.231 337.849 390.143 cv
337.849 392.05 336.302 393.6 334.392 393.6 cv
cp
333.306 383.088 mo
329.107 383.088 325.703 386.493 325.703 390.693 cv
325.703 394.893 329.107 398.297 333.306 398.297 cv
337.504 398.297 340.908 394.893 340.908 390.693 cv
340.908 386.493 337.504 383.088 333.306 383.088 cv
cp
f
378.566 398.096 mo
380.474 398.096 382.023 399.645 382.023 401.556 cv
382.023 403.463 380.474 405.014 378.566 405.014 cv
376.655 405.014 375.108 403.463 375.108 401.556 cv
375.108 399.645 376.655 398.096 378.566 398.096 cv
cp
369.875 402.106 mo
369.875 406.307 373.278 409.711 377.478 409.711 cv
381.678 409.711 385.082 406.307 385.082 402.106 cv
385.082 397.905 381.678 394.501 377.478 394.501 cv
373.278 394.501 369.875 397.905 369.875 402.106 cv
cp
f
25.605 570.185 mo
25.605 572.093 24.0581 573.642 22.1479 573.642 cv
20.2368 573.642 18.689 572.093 18.689 570.185 cv
18.689 568.276 20.2368 566.728 22.1479 566.728 cv
24.0581 566.728 25.605 568.276 25.605 570.185 cv
cp
13.4585 570.738 mo
13.4585 574.937 16.8618 578.339 21.062 578.339 cv
25.2603 578.339 28.6655 574.937 28.6655 570.738 cv
28.6655 566.537 25.2603 563.13 21.062 563.13 cv
16.8618 563.13 13.4585 566.537 13.4585 570.738 cv
cp
f
56.6069 570.185 mo
56.6069 572.093 55.0601 573.642 53.1499 573.642 cv
51.2397 573.642 49.6909 572.093 49.6909 570.185 cv
49.6909 568.276 51.2397 566.728 53.1499 566.728 cv
55.0601 566.728 56.6069 568.276 56.6069 570.185 cv
cp
44.4604 570.738 mo
44.4604 574.937 47.8628 578.339 52.0649 578.339 cv
56.2612 578.339 59.6675 574.937 59.6675 570.738 cv
59.6675 566.537 56.2612 563.13 52.0649 563.13 cv
47.8628 563.13 44.4604 566.537 44.4604 570.738 cv
cp
f
335.843 516.165 mo
333.933 516.165 332.386 514.616 332.386 512.706 cv
332.386 510.797 333.933 509.248 335.843 509.248 cv
337.754 509.248 339.301 510.797 339.301 512.706 cv
339.301 514.616 337.754 516.165 335.843 516.165 cv
cp
334.759 505.653 mo
330.558 505.653 327.156 509.057 327.156 513.258 cv
327.156 517.458 330.558 520.862 334.759 520.862 cv
338.958 520.862 342.361 517.458 342.361 513.258 cv
342.361 509.057 338.958 505.653 334.759 505.653 cv
cp
f
100.97 668.096 mo
102.879 668.096 104.427 669.644 104.427 671.555 cv
104.427 673.465 102.879 675.012 100.97 675.012 cv
99.0581 675.012 97.5122 673.465 97.5122 671.555 cv
97.5122 669.644 99.0581 668.096 100.97 668.096 cv
cp
78.0229 824.33 mo
78.6548 823.685 79.0034 822.82 79.0034 821.92 cv
79.0034 724.768 li
101.218 702.973 li
101.882 702.32 102.255 701.432 102.255 700.504 cv
102.255 679.326 li
105.292 678.33 107.486 675.477 107.486 672.107 cv
107.486 667.904 104.083 664.502 99.8823 664.502 cv
95.6831 664.502 92.2788 667.904 92.2788 672.107 cv
92.2788 674.6 93.4858 676.807 95.3394 678.191 cv
95.3394 699.051 li
73.1255 720.848 li
72.4624 721.5 72.0894 722.387 72.0894 723.316 cv
72.0894 820.514 li
26.187 867.656 li
25.5464 868.316 25.1929 869.203 25.2065 870.121 cv
26.9351 981.35 li
33.8511 981.24 li
32.144 871.453 li
78.0229 824.33 li
cp
f
237.112 444.034 mo
239.023 444.034 240.569 445.585 240.569 447.495 cv
240.569 449.404 239.023 450.952 237.112 450.952 cv
235.203 450.952 233.655 449.404 233.655 447.495 cv
233.655 445.585 235.203 444.034 237.112 444.034 cv
cp
-2.41846 502.651 mo
71.4165 502.651 li
78.8921 508.678 li
79.8149 509.421 80.9624 509.827 82.1479 509.827 cv
176.831 509.827 li
178.189 509.827 179.49 509.295 180.46 508.344 cv
234.433 455.48 li
234.946 455.589 235.48 455.651 236.027 455.651 cv
240.224 455.651 243.63 452.246 243.63 448.046 cv
243.63 443.846 240.224 440.44 236.027 440.44 cv
232.278 440.44 229.171 443.156 228.545 446.725 cv
174.713 499.454 li
83.978 499.454 li
76.5015 493.426 li
75.5806 492.683 74.4321 492.278 73.2466 492.278 cv
-2.41846 492.278 li
-2.41846 502.651 li
cp
f
84.9644 528.067 mo
83.0522 528.067 81.5063 526.518 81.5063 524.61 cv
81.5063 522.698 83.0522 521.15 84.9644 521.15 cv
86.8735 521.15 88.4214 522.698 88.4214 524.61 cv
88.4214 526.518 86.8735 528.067 84.9644 528.067 cv
cp
183.078 520.852 mo
90.5835 521.579 li
89.3042 519.184 86.7817 517.555 83.8765 517.555 cv
79.6772 517.555 76.2739 520.959 76.2739 525.16 cv
76.2739 529.361 79.6772 532.764 83.8765 532.764 cv
86.1265 532.764 88.1401 531.783 89.5327 530.231 cv
186.651 529.469 li
232.556 484.217 li
304.685 483.691 li
313.091 477.098 li
307.756 470.297 li
301.673 475.07 li
228.987 475.596 li
183.078 520.852 li
cp
f
354.905 610.451 mo
356.558 610.451 357.905 611.789 357.905 613.447 cv
357.905 615.102 356.558 616.443 354.905 616.443 cv
353.25 616.443 351.906 615.102 351.906 613.447 cv
351.906 611.789 353.25 610.451 354.905 610.451 cv
cp
295.533 670.357 mo
295.539 670.357 295.546 670.357 295.554 670.357 cv
297.117 670.357 298.615 669.754 299.743 668.674 cv
310.41 658.443 li
311.535 657.365 312.2 655.893 312.267 654.334 cv
313.175 632.99 li
325.968 619.654 li
356.208 619.654 li
359.552 619.654 362.259 616.947 362.259 613.604 cv
362.259 610.262 359.552 607.553 356.208 607.553 cv
323.386 607.553 li
321.739 607.553 320.162 608.227 319.021 609.416 cv
302.86 626.262 li
301.841 627.324 301.246 628.721 301.181 630.193 cv
300.279 651.393 li
293.131 658.248 li
227.415 658.012 li
206.08 635.609 li
204.939 634.41 203.355 633.732 201.699 633.732 cv
-1.11475 633.732 li
-4.45752 633.732 -7.16553 636.441 -7.16553 639.783 cv
-7.16553 643.127 -4.45752 645.834 -1.11475 645.834 cv
199.105 645.834 li
220.431 668.227 li
221.569 669.422 223.144 670.1 224.792 670.106 cv
295.533 670.357 li
cp
f
48.7319 186.989 mo
48.7319 192.241 44.478 196.497 39.2231 196.497 cv
33.9722 196.497 29.7144 192.241 29.7144 186.989 cv
29.7144 181.735 33.9722 177.479 39.2231 177.479 cv
44.478 177.479 48.7319 181.735 48.7319 186.989 cv
1 1 1 rgb
f
118.048 228.874 mo
118.048 234.126 113.792 238.381 108.54 238.381 cv
103.289 238.381 99.0298 234.126 99.0298 228.874 cv
99.0298 223.62 103.289 219.364 108.54 219.364 cv
113.792 219.364 118.048 223.62 118.048 228.874 cv
f
338.664 275.89 mo
338.664 281.142 334.406 285.399 329.155 285.399 cv
323.9 285.399 319.645 281.142 319.645 275.89 cv
319.645 270.637 323.9 266.381 329.155 266.381 cv
334.406 266.381 338.664 270.637 338.664 275.89 cv
f
149.746 251.874 mo
149.746 257.125 145.487 261.381 140.237 261.381 cv
134.984 261.381 130.728 257.125 130.728 251.874 cv
130.728 246.622 134.984 242.364 140.237 242.364 cv
145.487 242.364 149.746 246.622 149.746 251.874 cv
f
197.578 291.855 mo
197.578 297.107 193.32 301.364 188.069 301.364 cv
182.816 301.364 178.56 297.107 178.56 291.855 cv
178.56 286.602 182.816 282.346 188.069 282.346 cv
193.32 282.346 197.578 286.602 197.578 291.855 cv
f
101.58 344.608 mo
101.58 349.859 97.3228 354.116 92.0698 354.116 cv
86.8179 354.116 82.562 349.859 82.562 344.608 cv
82.562 339.353 86.8179 335.099 92.0698 335.099 cv
97.3228 335.099 101.58 339.353 101.58 344.608 cv
f
225.086 320.994 mo
225.086 326.249 220.83 330.502 215.577 330.502 cv
210.325 330.502 206.068 326.249 206.068 320.994 cv
206.068 315.744 210.325 311.485 215.577 311.485 cv
220.83 311.485 225.086 315.744 225.086 320.994 cv
f
294.249 320.994 mo
294.249 326.249 289.995 330.502 284.741 330.502 cv
279.49 330.502 275.231 326.249 275.231 320.994 cv
275.231 315.744 279.49 311.485 284.741 311.485 cv
289.995 311.485 294.249 315.744 294.249 320.994 cv
f
333.736 308.538 mo
333.736 313.789 329.478 318.046 324.228 318.046 cv
318.974 318.046 314.718 313.789 314.718 308.538 cv
314.718 303.286 318.974 299.029 324.228 299.029 cv
329.478 299.029 333.736 303.286 333.736 308.538 cv
f
361.243 253.956 mo
361.243 259.21 356.987 263.465 351.734 263.465 cv
346.484 263.465 342.226 259.21 342.226 253.956 cv
342.226 248.704 346.484 244.448 351.734 244.448 cv
356.987 244.448 361.243 248.704 361.243 253.956 cv
f
150.395 323.712 mo
150.395 328.963 146.136 333.221 140.886 333.221 cv
135.632 333.221 131.376 328.963 131.376 323.712 cv
131.376 318.458 135.632 314.204 140.886 314.204 cv
146.136 314.204 150.395 318.458 150.395 323.712 cv
f
171.905 362.204 mo
171.905 367.455 167.65 371.712 162.396 371.712 cv
157.145 371.712 152.886 367.455 152.886 362.204 cv
152.886 356.951 157.145 352.695 162.396 352.695 cv
167.65 352.695 171.905 356.951 171.905 362.204 cv
f
145.566 388.772 mo
145.566 394.024 141.312 398.28 136.057 398.28 cv
130.806 398.28 126.548 394.024 126.548 388.772 cv
126.548 383.518 130.806 379.262 136.057 379.262 cv
141.312 379.262 145.566 383.518 145.566 388.772 cv
f
193.86 418.153 mo
193.86 423.403 189.601 427.661 184.351 427.661 cv
179.097 427.661 174.842 423.403 174.842 418.153 cv
174.842 412.9 179.097 408.643 184.351 408.643 cv
189.601 408.643 193.86 412.9 193.86 418.153 cv
f
175.09 452.913 mo
175.09 458.165 170.833 462.421 165.581 462.421 cv
160.33 462.421 156.071 458.165 156.071 452.913 cv
156.071 447.661 160.33 443.403 165.581 443.403 cv
170.833 443.403 175.09 447.661 175.09 452.913 cv
f
162.396 726.082 mo
162.396 731.336 158.141 735.59 152.886 735.59 cv
147.636 735.59 143.377 731.336 143.377 726.082 cv
143.377 720.832 147.636 716.572 152.886 716.572 cv
158.141 716.572 162.396 720.832 162.396 726.082 cv
f
275.089 751.318 mo
275.089 756.574 270.831 760.828 265.581 760.828 cv
260.328 760.828 256.071 756.574 256.071 751.318 cv
256.071 746.068 260.328 741.81 265.581 741.81 cv
270.831 741.81 275.089 746.068 275.089 751.318 cv
f
205.358 741.269 mo
205.358 746.523 201.101 750.779 195.849 750.779 cv
190.596 750.779 186.339 746.523 186.339 741.269 cv
186.339 736.018 190.596 731.762 195.849 731.762 cv
201.101 731.762 205.358 736.018 205.358 741.269 cv
f
318.446 762.727 mo
318.446 767.981 314.191 772.236 308.937 772.236 cv
303.685 772.236 299.429 767.981 299.429 762.727 cv
299.429 757.475 303.685 753.219 308.937 753.219 cv
314.191 753.219 318.446 757.475 318.446 762.727 cv
f
345.048 854.094 mo
345.048 859.348 340.792 863.604 335.54 863.604 cv
330.287 863.604 326.031 859.348 326.031 854.094 cv
326.031 848.842 330.287 844.586 335.54 844.586 cv
340.792 844.586 345.048 848.842 345.048 854.094 cv
f
344.099 876.555 mo
344.099 881.807 339.843 886.063 334.591 886.063 cv
329.338 886.063 325.081 881.807 325.081 876.555 cv
325.081 871.305 329.338 867.047 334.591 867.047 cv
339.843 867.047 344.099 871.305 344.099 876.555 cv
f
367.324 898.438 mo
367.324 903.69 363.066 907.945 357.816 907.945 cv
352.563 907.945 348.306 903.69 348.306 898.438 cv
348.306 893.185 352.563 888.928 357.816 888.928 cv
363.066 888.928 367.324 893.185 367.324 898.438 cv
f
311.976 802.621 mo
311.976 807.873 307.718 812.131 302.466 812.131 cv
297.214 812.131 292.957 807.873 292.957 802.621 cv
292.957 797.367 297.214 793.111 302.466 793.111 cv
307.718 793.111 311.976 797.367 311.976 802.621 cv
f
233.019 788.115 mo
233.019 793.369 228.763 797.623 223.51 797.623 cv
218.258 797.623 214.001 793.369 214.001 788.115 cv
214.001 782.863 218.258 778.606 223.51 778.606 cv
228.763 778.606 233.019 782.863 233.019 788.115 cv
f
194.373 835.063 mo
194.373 840.315 190.117 844.57 184.865 844.57 cv
179.611 844.57 175.355 840.315 175.355 835.063 cv
175.355 829.809 179.611 825.553 184.865 825.553 cv
190.117 825.553 194.373 829.809 194.373 835.063 cv
f
159.701 876.777 mo
159.701 882.031 155.443 886.285 150.193 886.285 cv
144.938 886.285 140.683 882.031 140.683 876.777 cv
140.683 871.527 144.938 867.269 150.193 867.269 cv
155.443 867.269 159.701 871.527 159.701 876.777 cv
f
265.833 896.072 mo
265.833 901.326 261.577 905.582 256.326 905.582 cv
251.07 905.582 246.816 901.326 246.816 896.072 cv
246.816 890.82 251.07 886.566 256.326 886.566 cv
261.577 886.566 265.833 890.82 265.833 896.072 cv
f
340.505 948.935 mo
340.505 954.188 336.249 958.443 330.997 958.443 cv
325.744 958.443 321.486 954.188 321.486 948.935 cv
321.486 943.684 325.744 939.426 330.997 939.426 cv
336.249 939.426 340.505 943.684 340.505 948.935 cv
f
195.849 895.961 mo
195.849 901.213 191.591 905.469 186.339 905.469 cv
181.087 905.469 176.831 901.213 176.831 895.961 cv
176.831 890.709 181.087 886.451 186.339 886.451 cv
191.591 886.451 195.849 890.709 195.849 895.961 cv
f
213.714 925.5 mo
213.714 930.754 209.456 935.008 204.206 935.008 cv
198.952 935.008 194.696 930.754 194.696 925.5 cv
194.696 920.248 198.952 915.992 204.206 915.992 cv
209.456 915.992 213.714 920.248 213.714 925.5 cv
f
197.578 332.245 mo
197.578 337.497 193.32 341.754 188.069 341.754 cv
182.816 341.754 178.56 337.497 178.56 332.245 cv
178.56 326.991 182.816 322.737 188.069 322.737 cv
193.32 322.737 197.578 326.991 197.578 332.245 cv
f
438.037 189.402 mo
438.037 194.655 433.777 198.912 428.527 198.912 cv
423.273 198.912 419.019 194.655 419.019 189.402 cv
419.019 184.152 423.273 179.893 428.527 179.893 cv
433.777 179.893 438.037 184.152 438.037 189.402 cv
f
218.945 390.565 mo
218.945 395.817 214.687 400.073 209.437 400.073 cv
204.182 400.073 199.927 395.817 199.927 390.565 cv
199.927 385.311 204.182 381.056 209.437 381.056 cv
214.687 381.056 218.945 385.311 218.945 390.565 cv
f
347.124 225.512 mo
347.124 230.766 342.869 235.022 337.617 235.022 cv
332.362 235.022 328.107 230.766 328.107 225.512 cv
328.107 220.26 332.362 216.004 337.617 216.004 cv
342.869 216.004 347.124 220.26 347.124 225.512 cv
f
82.7573 497.464 mo
82.7573 502.715 78.5015 506.973 73.2485 506.973 cv
67.9966 506.973 63.7397 502.715 63.7397 497.464 cv
63.7397 492.21 67.9966 487.956 73.2485 487.956 cv
78.5015 487.956 82.7573 492.21 82.7573 497.464 cv
f
325.514 470.123 mo
325.514 475.377 321.257 479.632 316.005 479.632 cv
310.753 479.632 306.497 475.377 306.497 470.123 cv
306.497 464.873 310.753 460.614 316.005 460.614 cv
321.257 460.614 325.514 464.873 325.514 470.123 cv
f
45.4702 729.496 mo
45.4702 738.053 38.5347 744.988 29.978 744.988 cv
21.4214 744.988 14.4858 738.053 14.4858 729.496 cv
14.4858 720.94 21.4214 714.004 29.978 714.004 cv
38.5347 714.004 45.4702 720.94 45.4702 729.496 cv
cp
f
45.4702 789.803 mo
45.4702 798.359 38.5347 805.295 29.978 805.295 cv
21.4214 805.295 14.4858 798.359 14.4858 789.803 cv
14.4858 781.246 21.4214 774.31 29.978 774.31 cv
38.5347 774.31 45.4702 781.246 45.4702 789.803 cv
cp
f
5.44287 555.706 mo
5.44287 560.989 1.15967 565.272 -4.12354 565.272 cv
-9.40771 565.272 -13.6899 560.989 -13.6899 555.706 cv
-13.6899 550.422 -9.40771 546.139 -4.12354 546.139 cv
1.15967 546.139 5.44287 550.422 5.44287 555.706 cv
cp
f
472.783 170.454 mo
472.783 175.735 468.501 180.02 463.216 180.02 cv
457.933 180.02 453.65 175.735 453.65 170.454 cv
453.65 165.169 457.933 160.887 463.216 160.887 cv
468.501 160.887 472.783 165.169 472.783 170.454 cv
cp
f
817.137 195.86 mo
818.475 197.224 818.453 199.414 817.088 200.749 cv
815.725 202.086 813.533 202.062 812.199 200.701 cv
810.863 199.335 810.887 197.146 812.25 195.809 cv
813.611 194.472 815.803 194.496 817.137 195.86 cv
cp
813.166 191.096 mo
811.934 192.101 810.768 193.925 810.113 195.214 cv
808.422 198.548 807.398 202.113 810.012 204.781 cv
812.625 207.452 816.91 207.496 819.578 204.882 cv
822.246 202.265 821.644 198.492 819.68 195.314 cv
818.822 193.931 817.748 192.248 816.623 191.242 cv
816.623 181.674 li
807.684 173.749 li
805.391 176.335 li
813.166 183.227 li
813.166 191.096 li
cp
0 .862745 1 rgb
f
602.688 296.171 mo
604.021 297.536 604 299.724 602.635 301.061 cv
601.271 302.398 599.083 302.375 597.746 301.009 cv
596.408 299.646 596.432 297.457 597.794 296.119 cv
599.162 294.784 601.35 294.807 602.688 296.171 cv
cp
801.482 217.028 mo
788.803 204.639 li
694.863 204.639 li
668.352 232.588 li
621.41 232.588 li
598.787 255.212 li
598.787 291.083 li
599.162 291.083 li
597.773 291.964 596.391 294.08 595.658 295.527 cv
593.966 298.857 592.945 302.421 595.558 305.093 cv
598.171 307.761 602.457 307.807 605.129 305.192 cv
607.795 302.579 607.191 298.802 605.225 295.625 cv
604.215 293.993 602.904 291.943 601.559 291.083 cv
602.244 291.083 li
602.244 256.644 li
622.842 236.046 li
669.838 236.046 li
696.348 208.097 li
787.394 208.097 li
800.074 220.486 li
825.408 220.486 li
835.066 210.83 li
835.066 175.042 li
831.609 175.042 li
831.609 209.397 li
823.978 217.028 li
801.482 217.028 li
cp
f
633.805 296.171 mo
635.141 297.536 635.119 299.724 633.756 301.061 cv
632.391 302.398 630.203 302.375 628.865 301.009 cv
627.529 299.646 627.553 297.457 628.916 296.119 cv
630.279 294.784 632.469 294.807 633.805 296.171 cv
cp
798.336 222.214 mo
786.232 209.822 li
696.896 210.116 li
629.332 278.849 li
629.332 291.083 li
630.283 291.083 li
628.893 291.964 627.514 294.08 626.779 295.527 cv
625.088 298.857 624.065 302.421 626.68 305.093 cv
629.291 307.761 633.576 307.807 636.246 305.192 cv
638.914 302.579 638.309 298.802 636.346 295.625 cv
635.334 293.993 634.023 291.943 632.682 291.083 cv
632.789 291.083 li
632.789 280.264 li
698.35 213.566 li
784.781 213.287 li
796.879 225.672 li
827.402 225.672 li
840.832 212.872 li
840.832 175.042 li
837.373 175.042 li
837.373 211.389 li
826.018 222.214 li
798.336 222.214 li
cp
f
665.318 268.003 mo
666.656 269.367 666.633 271.556 665.268 272.892 cv
663.908 274.23 661.717 274.206 660.383 272.841 cv
659.045 271.478 659.066 269.288 660.432 267.953 cv
661.793 266.615 663.986 266.638 665.318 268.003 cv
cp
793.152 228.552 mo
781.914 217.028 li
700.502 217.028 li
660.738 257.234 li
660.738 263.807 li
659.742 264.841 658.84 266.285 658.293 267.359 cv
656.603 270.691 655.58 274.254 658.193 276.924 cv
660.809 279.593 665.094 279.639 667.762 277.025 cv
670.43 274.409 669.828 270.635 667.859 267.457 cv
666.85 265.825 665.537 263.773 664.195 262.915 cv
664.195 258.656 li
701.943 220.486 li
780.457 220.486 li
791.693 232.011 li
831.43 232.011 li
846.883 217.488 li
846.883 175.042 li
843.424 175.042 li
843.424 215.992 li
830.059 228.552 li
793.152 228.552 li
cp
f
723.777 266.274 mo
725.115 267.638 725.094 269.826 723.73 271.164 cv
722.367 272.5 720.174 272.477 718.84 271.113 cv
717.504 269.749 717.525 267.559 718.891 266.223 cv
720.252 264.886 722.443 264.91 723.777 266.274 cv
cp
791.695 234.03 mo
779.588 221.921 li
745.297 222.222 li
719.809 248.185 li
719.809 261.404 li
719.947 261.404 li
718.666 262.379 717.432 264.29 716.754 265.628 cv
715.063 268.962 714.039 272.526 716.652 275.195 cv
719.266 277.865 723.551 277.91 726.219 275.296 cv
728.887 272.679 728.285 268.906 726.32 265.727 cv
725.385 264.221 724.193 262.357 722.961 261.404 cv
723.268 261.404 li
723.268 249.599 li
746.76 225.665 li
778.17 225.392 li
790.266 237.488 li
834.045 237.488 li
852.643 219.195 li
852.643 175.042 li
849.184 175.042 li
849.184 217.746 li
832.629 234.03 li
791.695 234.03 li
cp
f
805.736 252.328 mo
804.385 253.679 802.197 253.679 800.848 252.328 cv
799.496 250.977 799.496 248.79 800.848 247.439 cv
802.197 246.087 804.385 246.087 805.736 247.439 cv
807.088 248.79 807.088 250.977 805.736 252.328 cv
cp
809.262 247.162 mo
808.309 246.398 807.188 245.729 806.307 245.294 cv
802.961 243.638 799.385 242.654 796.742 245.294 cv
794.1 247.937 794.1 252.218 796.742 254.861 cv
799.385 257.501 803.15 256.86 806.307 254.861 cv
808.143 253.699 810.512 252.148 811.082 250.619 cv
830.289 250.619 li
859.271 222.661 li
859.271 175.042 li
855.813 175.042 li
855.813 221.192 li
828.894 247.162 li
809.262 247.162 li
cp
f
771.514 256.077 mo
769.603 256.04 768.082 254.466 768.117 252.558 cv
768.15 250.648 769.725 249.126 771.635 249.162 cv
773.543 249.195 775.066 250.768 775.029 252.679 cv
774.998 254.587 773.422 256.109 771.514 256.077 cv
cp
782.688 259.674 mo
777.705 255.404 li
777.629 254.079 777.301 252.632 776.971 251.599 cv
775.836 248.042 774.059 244.785 770.324 244.719 cv
766.588 244.654 763.508 247.628 763.441 251.365 cv
763.379 255.099 766.455 257.363 770.09 258.245 cv
772.141 258.744 774.803 259.34 776.324 258.772 cv
781.408 263.132 li
828.59 263.132 li
865.9 224.937 li
865.9 175.042 li
862.441 175.042 li
862.441 223.529 li
827.135 259.674 li
782.688 259.674 li
cp
f
667.252 302.819 mo
665.9 304.168 663.713 304.168 662.361 302.819 cv
661.012 301.468 661.012 299.279 662.361 297.929 cv
663.713 296.578 665.9 296.578 667.252 297.929 cv
668.6 299.279 668.6 301.468 667.252 302.819 cv
cp
886.355 235.921 mo
856.813 266.301 li
747.336 266.301 li
713.91 299.335 li
672.361 299.335 li
671.504 297.924 669.309 296.52 667.824 295.785 cv
664.475 294.128 660.9 293.142 658.258 295.785 cv
655.615 298.427 655.615 302.708 658.258 305.351 cv
660.9 307.994 664.668 307.352 667.824 305.351 cv
669.119 304.531 670.68 303.516 671.688 302.453 cv
671.688 302.793 li
715.332 302.793 li
748.758 269.759 li
858.275 269.759 li
889.813 237.326 li
889.813 217.507 li
877.137 204.789 li
877.137 175.042 li
873.68 175.042 li
873.68 206.218 li
886.355 218.935 li
886.355 235.921 li
cp
f
603.004 422.914 mo
603.004 424.824 601.455 426.373 599.544 426.373 cv
597.634 426.373 596.087 424.824 596.087 422.914 cv
596.087 421.004 597.634 419.457 599.544 419.457 cv
601.455 419.457 603.004 421.004 603.004 422.914 cv
cp
751.369 271.777 mo
711.314 311.54 li
597.076 311.54 li
583.658 324.644 li
583.658 409.433 li
593.552 418.072 li
593.029 419.65 593.607 422.371 594.167 424.027 cv
595.367 427.566 597.195 430.79 600.931 430.79 cv
604.668 430.79 607.695 427.761 607.695 424.027 cv
607.695 420.289 604.578 418.08 600.931 417.259 cv
599.757 416.997 598.384 416.706 597.138 416.611 cv
587.115 407.859 li
587.115 326.099 li
598.484 314.999 li
712.738 314.999 li
752.793 275.234 li
862 275.234 li
902.492 235.037 li
902.492 175.042 li
899.035 175.042 li
899.035 233.597 li
860.574 271.777 li
751.369 271.777 li
cp
f
655.768 418.583 mo
656.166 416.716 658.002 415.525 659.871 415.923 cv
661.736 416.32 662.93 418.156 662.531 420.022 cv
662.135 421.893 660.297 423.083 658.432 422.686 cv
656.564 422.289 655.371 420.451 655.768 418.583 cv
cp
753.084 278.981 mo
713.898 318.745 li
603.283 318.745 li
590.429 330.968 li
590.429 394.837 li
615.211 420.296 li
615.211 430.058 li
624.24 440.052 li
635.848 440.052 li
647.689 427.323 li
653.297 424.319 li
654.693 425.123 657.293 425.145 659.332 425.121 cv
663.068 425.08 666.576 423.568 667.355 419.913 cv
668.133 416.26 665.801 412.668 662.146 411.888 cv
658.492 411.111 656.031 413.887 654.123 417.097 cv
653.543 418.074 652.865 419.492 652.504 420.82 cv
645.549 424.546 li
634.342 436.595 li
625.775 436.595 li
618.67 428.728 li
618.67 418.892 li
593.888 393.433 li
593.888 332.453 li
604.666 322.203 li
715.346 322.203 li
754.531 282.439 li
864.893 282.439 li
907.967 238.761 li
907.967 175.042 li
904.51 175.042 li
904.51 237.344 li
863.447 278.981 li
753.084 278.981 li
cp
f
632.969 422.914 mo
632.969 424.824 631.422 426.373 629.512 426.373 cv
627.603 426.373 626.055 424.824 626.055 422.914 cv
626.055 421.004 627.603 419.457 629.512 419.457 cv
631.422 419.457 632.969 421.004 632.969 422.914 cv
cp
844.424 283.302 mo
819.355 308.947 li
731.203 308.947 li
716.221 323.642 li
621.4 323.642 li
601.957 343.39 li
601.957 396.675 li
623.42 418.418 li
623.076 420.027 623.613 422.488 624.137 424.027 cv
625.332 427.566 627.164 430.79 630.898 430.79 cv
634.635 430.79 637.664 427.761 637.664 424.027 cv
637.664 420.289 634.545 418.08 630.898 417.259 cv
629.518 416.951 627.873 416.61 626.475 416.587 cv
605.414 395.257 li
605.414 344.81 li
622.85 327.101 li
717.633 327.101 li
732.615 312.405 li
820.809 312.405 li
845.879 286.761 li
868.051 286.761 li
913.73 241.376 li
913.73 175.042 li
910.273 175.042 li
910.273 239.937 li
866.625 283.302 li
844.424 283.302 li
cp
f
633.285 455.978 mo
631.377 455.978 629.828 454.431 629.828 452.519 cv
629.828 450.609 631.377 449.062 633.285 449.062 cv
635.197 449.062 636.744 450.609 636.744 452.519 cv
636.744 454.431 635.197 455.978 633.285 455.978 cv
cp
848.725 292.234 mo
825.963 316.439 li
735.836 316.439 li
720.85 330.556 li
627.76 330.556 li
608.586 349.425 li
608.586 393.197 li
624.84 410.375 li
666.328 410.375 li
674.568 419.126 li
674.568 432.107 li
669.846 436.595 li
645.887 436.595 li
636.486 446.322 li
635.031 446.349 633.34 446.749 632.176 447.144 cv
628.637 448.339 625.41 450.169 625.41 453.908 cv
625.41 457.642 628.438 460.671 632.176 460.671 cv
635.91 460.671 638.121 457.552 638.941 453.908 cv
639.355 452.06 639.844 449.718 639.514 448.164 cv
647.353 440.052 li
671.225 440.052 li
678.027 433.591 li
678.027 417.756 li
667.822 406.918 li
626.328 406.918 li
612.043 391.82 li
612.043 350.875 li
629.176 334.014 li
722.221 334.014 li
737.207 319.896 li
827.459 319.896 li
850.223 295.692 li
870.059 295.692 li
922.375 244.552 li
922.375 175.042 li
918.918 175.042 li
918.918 243.097 li
868.652 292.234 li
848.725 292.234 li
cp
f
881.25 306.414 mo
882.588 307.777 882.564 309.965 881.199 311.302 cv
879.836 312.639 877.646 312.616 876.309 311.251 cv
874.977 309.888 874.996 307.699 876.361 306.363 cv
877.725 305.025 879.912 305.048 881.25 306.414 cv
cp
877.424 301.538 mo
876.141 302.511 874.904 304.426 874.223 305.767 cv
872.535 309.101 871.508 312.665 874.125 315.335 cv
876.738 318.003 881.021 318.048 883.691 315.435 cv
886.359 312.82 885.754 309.043 883.789 305.866 cv
882.971 304.543 881.953 302.94 880.881 301.923 cv
880.881 300.449 li
932.172 249.613 li
932.172 175.042 li
928.713 175.042 li
928.713 248.171 li
877.424 299.006 li
877.424 301.538 li
cp
f
631.547 390.3 mo
631.547 392.21 630 393.758 628.09 393.758 cv
626.178 393.758 624.631 392.21 624.631 390.3 cv
624.631 388.39 626.178 386.842 628.09 386.842 cv
630 386.842 631.547 388.39 631.547 390.3 cv
cp
889.525 297.279 mo
889.525 314.402 li
884.359 321.012 li
753.219 321.012 li
734.49 335.457 li
633.764 335.457 li
617.518 352.931 li
617.518 381.412 li
621.978 385.873 li
621.666 387.482 622.199 389.897 622.713 391.412 cv
623.908 394.951 625.74 398.177 629.478 398.177 cv
633.213 398.177 636.24 395.148 636.24 391.412 cv
636.24 387.675 633.121 385.464 629.478 384.646 cv
628.07 384.33 626.381 383.98 624.967 383.971 cv
620.975 379.979 li
620.975 354.289 li
635.271 338.914 li
735.67 338.914 li
754.398 324.47 li
886.045 324.47 li
892.984 315.594 li
892.984 298.718 li
956.443 235.542 li
956.953 235.037 li
956.953 198.439 li
971.934 183.455 li
971.934 175.042 li
968.478 175.042 li
968.478 182.023 li
953.494 197.007 li
953.494 233.597 li
890.037 296.773 li
889.525 297.279 li
cp
f
634.057 364.408 mo
632.143 364.408 630.598 362.86 630.598 360.951 cv
630.598 359.039 632.143 357.492 634.057 357.492 cv
635.967 357.492 637.514 359.039 637.514 360.951 cv
637.514 362.86 635.967 364.408 634.057 364.408 cv
cp
959.256 237.33 mo
895.287 300.341 li
895.287 319.015 li
888.973 327.099 li
767.529 327.099 li
742.391 350.729 li
705.658 350.729 li
699.893 346.694 li
645.938 346.694 li
637.307 354.75 li
635.842 354.767 634.123 355.173 632.943 355.573 cv
629.404 356.769 626.178 358.599 626.178 362.335 cv
626.178 366.073 629.207 369.101 632.943 369.101 cv
636.68 369.101 638.891 365.982 639.709 362.335 cv
640.115 360.525 640.596 358.237 640.305 356.683 cv
647.303 350.152 li
698.803 350.152 li
704.566 354.187 li
743.762 354.187 li
768.9 330.556 li
890.656 330.556 li
898.744 320.203 li
898.744 301.789 li
962.713 238.777 li
962.713 201.617 li
978.85 185.77 li
978.85 175.042 li
975.391 175.042 li
975.391 184.318 li
959.256 200.167 li
959.256 237.33 li
cp
f
1045.63 350.162 mo
1046.03 348.294 1047.86 347.102 1049.73 347.5 cv
1051.6 347.898 1052.79 349.732 1052.39 351.601 cv
1052 353.468 1050.16 354.662 1048.29 354.263 cv
1046.43 353.867 1045.23 352.029 1045.63 350.162 cv
cp
1033.97 368.363 mo
1045.52 356.564 li
1046.71 356.707 1048.04 356.711 1049.19 356.699 cv
1052.93 356.658 1056.44 355.146 1057.22 351.49 cv
1057.99 347.836 1055.66 344.244 1052.01 343.466 cv
1048.35 342.689 1045.89 345.46 1043.98 348.675 cv
1042.98 350.361 1041.68 353.355 1042.28 354.928 cv
1031.5 365.943 li
1033.97 368.363 li
cp
f
925.353 288.38 mo
923.441 288.38 921.894 286.835 921.894 284.923 cv
921.894 283.014 923.441 281.466 925.353 281.466 cv
927.262 281.466 928.81 283.014 928.81 284.923 cv
928.81 286.835 927.262 288.38 925.353 288.38 cv
cp
927.447 278.809 mo
926.295 278.954 925.117 279.25 924.238 279.548 cv
920.701 280.744 917.475 282.574 917.475 286.312 cv
917.475 290.046 920.504 293.075 924.238 293.075 cv
927.977 293.075 930.189 289.957 931.006 286.312 cv
931.502 284.101 932.092 281.192 931.269 279.767 cv
931.668 279.335 li
987.494 223.216 li
987.494 218.986 li
995.66 211.551 li
1074.09 211.267 li
1092.53 229.708 li
1179.54 229.708 li
1204.82 204.167 li
1202.36 201.735 li
1178.1 226.249 li
1093.96 226.249 li
1075.52 207.804 li
994.314 208.099 li
984.037 217.456 li
984.037 221.79 li
929.172 276.941 li
927.447 278.809 li
cp
f
687.373 361.689 mo
687.408 359.782 688.98 358.26 690.891 358.293 cv
692.799 358.328 694.322 359.902 694.289 361.811 cv
694.254 363.72 692.682 365.242 690.771 365.208 cv
688.863 365.174 687.344 363.599 687.373 361.689 cv
cp
1181.83 232.136 mo
1091.33 232.136 li
1071.73 213.854 li
1008.95 214.152 li
973.09 250.9 li
973.09 272.5 li
948.744 296.843 li
909.269 296.843 li
901.342 304.772 li
901.342 322.074 li
891.066 333.437 li
772.121 333.15 li
737.539 367.154 li
699.793 367.154 li
696.953 365.59 li
697.064 364.039 696.646 362.052 696.227 360.734 cv
695.092 357.175 693.32 353.917 689.582 353.852 cv
685.848 353.787 682.764 356.761 682.699 360.498 cv
682.635 364.232 685.715 366.498 689.344 367.379 cv
690.932 367.763 692.881 368.204 694.391 368.125 cv
698.904 370.611 li
738.955 370.611 li
773.533 336.611 li
892.6 336.898 li
904.801 323.408 li
904.801 306.204 li
910.701 300.301 li
950.176 300.301 li
976.547 273.933 li
976.547 252.308 li
1010.42 217.603 li
1070.38 217.319 li
1089.97 235.593 li
1183.31 235.593 li
1204.84 213.164 li
1202.34 210.769 li
1181.83 232.136 li
cp
f
662.584 368.617 mo
660.676 368.583 659.156 367.008 659.189 365.099 cv
659.221 363.191 660.797 361.669 662.705 361.702 cv
664.617 361.737 666.137 363.311 666.103 365.22 cv
666.068 367.13 664.496 368.649 662.584 368.617 cv
cp
1183.59 238.536 mo
1087.02 238.536 li
1068.58 221.064 li
1013 221.064 li
978.275 256.082 li
978.275 276.82 li
951.057 303.759 li
914.842 303.759 li
907.391 309.855 li
907.391 326.071 li
894.828 339.492 li
775.295 339.492 li
734.373 379.258 li
688.389 379.543 li
682.621 380.566 li
669.139 367.632 li
668.777 368.008 li
668.709 366.665 668.377 365.191 668.041 364.14 cv
666.906 360.582 665.135 357.327 661.396 357.259 cv
657.66 357.195 654.58 360.169 654.516 363.906 cv
654.451 367.64 657.531 369.906 661.16 370.787 cv
663.4 371.332 666.363 371.986 667.777 371.117 cv
681.504 384.283 li
688.563 383 li
735.783 382.707 li
776.701 342.949 li
896.328 342.949 li
910.85 327.437 li
910.85 311.495 li
916.076 307.216 li
952.478 307.216 li
981.734 278.261 li
981.734 257.505 li
1014.44 224.521 li
1067.2 224.521 li
1085.64 241.994 li
1185.01 241.994 li
1206.27 220.912 li
1203.83 218.456 li
1183.59 238.536 li
cp
f
921.412 338.668 mo
919.504 338.668 917.955 337.119 917.955 335.21 cv
917.955 333.298 919.504 331.751 921.412 331.751 cv
923.322 331.751 924.869 333.298 924.869 335.21 cv
924.869 337.119 923.322 338.668 921.412 338.668 cv
cp
1191.32 250.453 mo
1080.73 250.167 li
1063.44 232.136 li
1018.77 232.136 li
989.801 260.679 li
989.801 283.746 li
958.82 315.287 li
940.451 315.287 li
924.926 329 li
923.41 328.969 921.551 329.41 920.301 329.832 cv
916.762 331.029 913.539 332.859 913.539 336.595 cv
913.539 340.332 916.566 343.361 920.301 343.361 cv
924.039 343.361 926.252 340.241 927.068 336.595 cv
927.455 334.869 927.898 332.718 927.688 331.174 cv
941.758 318.745 li
960.271 318.745 li
993.258 285.16 li
993.258 262.126 li
1020.19 235.593 li
1061.96 235.593 li
1079.25 253.622 li
1192.84 253.914 li
1206.32 239.222 li
1203.77 236.883 li
1191.32 250.453 li
cp
f
806.443 358.259 mo
804.535 358.259 802.986 356.712 802.986 354.801 cv
802.986 352.892 804.535 351.343 806.443 351.343 cv
808.353 351.343 809.9 352.892 809.9 354.801 cv
809.9 356.712 808.353 358.259 806.443 358.259 cv
cp
929.018 348.71 mo
932.172 344.376 li
932.172 335.64 li
944.367 324.47 li
962.566 324.47 li
1000.46 286.318 li
1000.46 265.044 li
1024.51 241.131 li
1059.07 241.131 li
1076.93 260.25 li
1195.11 260.25 li
1206.29 248.777 li
1203.81 246.365 li
1193.65 256.793 li
1078.44 256.793 li
1060.57 237.673 li
1023.09 237.673 li
997.004 263.607 li
997.004 284.894 li
961.129 321.012 li
943.023 321.012 li
928.713 334.119 li
928.713 343.25 li
927.258 345.251 li
812.617 345.251 li
809.973 348.596 li
808.453 348.56 806.586 349 805.33 349.425 cv
801.793 350.621 798.568 352.453 798.568 356.189 cv
798.568 359.923 801.598 362.955 805.33 362.955 cv
809.068 362.955 811.281 359.836 812.098 356.189 cv
812.49 354.441 812.941 352.255 812.711 350.707 cv
814.291 348.71 li
929.018 348.71 li
cp
f
697.717 433.751 mo
695.807 433.751 694.258 432.204 694.258 430.294 cv
694.258 428.383 695.807 426.836 697.717 426.836 cv
698.533 426.836 699.273 427.13 699.863 427.603 cv
700.422 428.165 li
700.887 428.753 701.174 429.487 701.174 430.294 cv
701.174 432.204 699.627 433.751 697.717 433.751 cv
cp
699.822 424.177 mo
698.668 424.322 697.484 424.619 696.603 424.918 cv
693.066 426.114 689.842 427.944 689.842 431.681 cv
689.842 435.418 692.869 438.445 696.603 438.445 cv
700.342 438.445 702.551 435.326 703.373 431.681 cv
703.859 429.51 704.443 426.665 703.688 425.21 cv
761.438 367.727 li
812.984 367.727 li
826.24 355.337 li
931.158 355.337 li
938.221 348.274 li
938.221 340.494 li
947.582 331.134 li
965.16 331.134 li
1005.93 290.067 li
1005.93 268.162 li
1026.25 247.57 li
1055.95 247.57 li
1074.96 266.054 li
1198 266.054 li
1206.29 257.414 li
1203.79 255.019 li
1196.53 262.597 li
1076.37 262.597 li
1057.35 244.113 li
1024.81 244.113 li
1002.48 266.744 li
1002.48 288.641 li
963.723 327.676 li
946.15 327.676 li
934.764 339.062 li
934.764 346.841 li
929.725 351.88 li
824.875 351.88 li
811.619 364.269 li
760.01 364.269 li
699.822 424.177 li
cp
f
726.924 424.675 mo
725.014 424.675 723.467 423.128 723.467 421.218 cv
723.467 419.306 725.014 417.759 726.924 417.759 cv
728.836 417.759 730.383 419.306 730.383 421.218 cv
730.383 423.128 728.836 424.675 726.924 424.675 cv
cp
1198.24 268.894 mo
1072.03 268.894 li
1052.44 250.453 li
1029.13 250.453 li
1008.24 271.643 li
1008.24 291.985 li
967.75 333.439 li
957.381 333.439 li
932.6 358.652 li
826.035 358.652 li
813.357 370.322 li
774.127 370.322 li
729.398 415.054 li
728.133 415.173 726.787 415.511 725.813 415.84 cv
722.273 417.037 719.047 418.868 719.047 422.603 cv
719.047 426.339 722.074 429.369 725.813 429.369 cv
729.549 429.369 731.76 426.25 732.576 422.603 cv
733.043 420.539 733.596 417.857 732.992 416.349 cv
775.559 373.781 li
814.709 373.781 li
827.385 362.111 li
934.049 362.111 li
958.83 336.896 li
969.207 336.896 li
1011.7 293.392 li
1011.7 273.061 li
1030.57 253.91 li
1051.07 253.91 li
1070.66 272.352 li
1199.75 272.352 li
1207.75 263.732 li
1205.22 261.378 li
1198.24 268.894 li
cp
f
832.762 373.407 mo
830.85 373.407 829.303 371.861 829.303 369.949 cv
829.303 368.04 830.85 366.492 832.762 366.492 cv
834.672 366.492 836.219 368.04 836.219 369.949 cv
836.219 371.861 834.672 373.407 832.762 373.407 cv
cp
946.144 363.695 mo
835.93 363.695 li
835.93 363.753 li
834.482 363.785 832.807 364.181 831.65 364.574 cv
828.111 365.769 824.883 367.601 824.883 371.337 cv
824.883 375.072 827.914 378.101 831.65 378.101 cv
835.385 378.101 837.596 374.982 838.414 371.337 cv
838.707 370.037 839.029 368.496 839.084 367.152 cv
947.59 367.152 li
1036.05 277.539 li
1203.59 277.539 li
1203.59 274.082 li
1034.61 274.082 li
946.144 363.695 li
cp
f
853.412 380.589 mo
851.502 380.589 849.955 379.04 849.955 377.131 cv
849.955 375.22 851.502 373.673 853.412 373.673 cv
855.324 373.673 856.871 375.22 856.871 377.131 cv
856.871 379.04 855.324 380.589 853.412 380.589 cv
cp
1206.48 281.345 mo
1037.2 281.345 li
949.607 368.882 li
860.422 368.882 li
857.621 370.984 li
856.018 370.756 853.75 371.263 852.303 371.753 cv
848.762 372.951 845.535 374.781 845.535 378.517 cv
845.535 382.253 848.564 385.283 852.303 385.283 cv
856.037 385.283 858.248 382.164 859.064 378.517 cv
859.402 377.013 859.791 375.179 859.746 373.71 cv
861.574 372.339 li
951.039 372.339 li
1038.63 284.804 li
1206.48 284.804 li
1206.48 281.345 li
cp
f
869.316 387.769 mo
867.406 387.769 865.859 386.222 865.859 384.312 cv
865.859 382.402 867.406 380.854 869.316 380.854 cv
871.228 380.854 872.773 382.402 872.773 384.312 cv
872.773 386.222 871.228 387.769 869.316 387.769 cv
cp
954.215 379.543 mo
1042.39 290.793 li
1205.04 290.793 li
1205.04 287.335 li
1040.95 287.335 li
952.775 376.085 li
876.09 376.085 li
872.619 378.111 li
871.143 378.12 869.396 378.531 868.205 378.935 cv
864.664 380.131 861.438 381.961 861.438 385.698 cv
861.438 389.434 864.469 392.462 868.205 392.462 cv
871.941 392.462 874.152 389.345 874.969 385.698 cv
875.35 384.007 875.779 381.912 875.6 380.375 cv
877.027 379.543 li
954.215 379.543 li
cp
f
888.625 392.583 mo
886.717 392.583 885.166 391.037 885.166 389.125 cv
885.166 387.216 886.717 385.668 888.625 385.668 cv
890.537 385.668 892.084 387.216 892.084 389.125 cv
892.084 391.037 890.537 392.583 888.625 392.583 cv
cp
1206.48 293.386 mo
1042.1 293.386 li
955.082 380.694 li
897.451 380.694 li
893.064 383.018 li
891.453 382.7 889.031 383.234 887.514 383.75 cv
883.975 384.945 880.75 386.777 880.75 390.513 cv
880.75 394.25 883.779 397.279 887.514 397.279 cv
891.252 397.279 893.461 394.161 894.281 390.513 cv
894.602 389.082 894.961 387.358 894.957 385.927 cv
898.307 384.152 li
956.518 384.152 li
1043.54 296.843 li
1206.48 296.843 li
1206.48 293.386 li
cp
f
905.566 398.816 mo
903.654 398.816 902.107 397.27 902.107 395.359 cv
902.107 393.447 903.654 391.902 905.566 391.902 cv
907.477 391.902 909.023 393.447 909.023 395.359 cv
909.023 397.27 907.477 398.816 905.566 398.816 cv
cp
1205.04 299.335 mo
1045.28 299.335 li
956.527 387.322 li
913.826 387.322 li
910.416 389.37 li
908.84 388.842 906.113 389.42 904.455 389.983 cv
900.916 391.179 897.688 393.009 897.688 396.747 cv
897.688 400.482 900.717 403.51 904.455 403.51 cv
908.189 403.51 910.402 400.392 911.219 396.747 cv
911.516 395.432 911.84 393.873 911.891 392.517 cv
914.783 390.781 li
957.953 390.781 li
1046.7 302.793 li
1205.04 302.793 li
1205.04 299.335 li
cp
f
926.31 405.5 mo
924.4 405.5 922.853 403.953 922.853 402.043 cv
922.853 400.131 924.4 398.585 926.31 398.585 cv
928.223 398.585 929.771 400.131 929.771 402.043 cv
929.771 403.953 928.223 405.5 926.31 405.5 cv
cp
933.879 393.951 mo
931.189 396.062 li
929.619 395.518 926.869 396.101 925.201 396.665 cv
921.662 397.863 918.434 399.693 918.434 403.429 cv
918.434 407.165 921.463 410.195 925.201 410.195 cv
928.935 410.195 931.148 407.076 931.965 403.429 cv
932.252 402.156 932.568 400.651 932.633 399.327 cv
935.074 397.409 li
962.273 397.409 li
1050.45 310.1 li
1205.04 310.1 li
1205.04 306.642 li
1049.03 306.642 li
960.853 393.951 li
933.879 393.951 li
cp
f
806.443 424.675 mo
804.535 424.675 802.986 423.128 802.986 421.218 cv
802.986 419.306 804.535 417.759 806.443 417.759 cv
808.353 417.759 809.9 419.306 809.9 421.218 cv
809.9 423.128 808.353 424.675 806.443 424.675 cv
cp
808.801 415.069 mo
807.57 415.197 806.275 415.521 805.33 415.84 cv
801.793 417.037 798.568 418.868 798.568 422.603 cv
798.568 426.339 801.598 429.369 805.33 429.369 cv
809.068 429.369 811.281 426.25 812.098 422.603 cv
812.519 420.728 813.01 418.347 812.648 416.793 cv
814.223 415.849 li
932.9 415.849 li
945.002 403.46 li
965.728 403.46 li
1054.77 315.861 li
1205.04 315.861 li
1205.04 312.404 li
1053.35 312.404 li
964.314 400.001 li
943.547 400.001 li
931.445 412.39 li
813.264 412.39 li
808.801 415.069 li
cp
f
1170.98 521.005 mo
1169.07 520.972 1167.55 519.395 1167.58 517.488 cv
1167.62 515.58 1169.19 514.057 1171.1 514.09 cv
1173.01 514.125 1174.53 515.699 1174.49 517.609 cv
1174.46 519.517 1172.89 521.039 1170.98 521.005 cv
cp
1177.17 520.369 mo
1177.1 519.035 1176.77 517.571 1176.44 516.529 cv
1175.3 512.97 1173.53 509.714 1169.79 509.648 cv
1166.05 509.582 1162.97 512.558 1162.91 516.295 cv
1162.84 520.029 1165.92 522.292 1169.55 523.175 cv
1171.63 523.679 1174.35 524.294 1175.86 523.681 cv
1181.01 527.361 li
1208.79 527.361 li
1208.79 523.903 li
1182.11 523.903 li
1177.17 520.369 li
cp
f
632.98 486.432 mo
631.072 486.432 629.521 484.884 629.521 482.974 cv
629.521 481.064 631.072 479.515 632.98 479.515 cv
634.889 479.515 636.44 481.064 636.44 482.974 cv
636.44 484.884 634.889 486.432 632.98 486.432 cv
cp
1112.71 526.498 mo
1076.82 526.498 li
1022.79 472.037 li
684.361 472.037 li
674.42 462.095 li
650.924 462.095 li
636.822 476.794 li
635.252 476.679 633.213 477.142 631.869 477.597 cv
628.328 478.793 625.103 480.625 625.103 484.359 cv
625.103 488.097 628.133 491.126 631.869 491.126 cv
635.605 491.126 637.816 488.005 638.635 484.359 cv
639 482.736 639.41 480.74 639.285 479.222 cv
652.4 465.552 li
672.988 465.552 li
682.93 475.495 li
1021.35 475.495 li
1075.38 529.955 li
1111.24 529.955 li
1125.51 544.65 li
1205.04 544.65 li
1205.04 541.192 li
1126.97 541.192 li
1112.71 526.498 li
cp
f
665.523 670.887 mo
664.172 672.24 661.984 672.24 660.635 670.887 cv
659.283 669.537 659.283 667.35 660.635 665.998 cv
661.984 664.648 664.172 664.648 665.523 665.998 cv
666.877 667.35 666.877 669.537 665.523 670.887 cv
cp
825.277 618.56 mo
806.26 599.11 li
759.855 599.11 li
693.293 666.969 li
670.328 666.969 li
669.33 665.711 667.43 664.514 666.096 663.854 cv
662.748 662.199 659.172 661.215 656.527 663.854 cv
653.889 666.498 653.889 670.781 656.529 673.42 cv
659.172 676.065 662.939 675.422 666.096 673.42 cv
667.428 672.576 669.045 671.525 670.049 670.428 cv
694.744 670.428 li
761.307 602.566 li
804.807 602.566 li
823.822 622.016 li
839.795 622.016 li
861.98 600.839 li
1112.25 600.839 li
1138.62 574.906 li
1203.59 574.906 li
1203.59 571.448 li
1137.2 571.448 li
1110.84 597.381 li
860.594 597.381 li
838.41 618.56 li
825.277 618.56 li
cp
f
667.105 578.593 mo
665.756 579.946 663.566 579.946 662.217 578.593 cv
660.867 577.245 660.867 575.057 662.217 573.706 cv
663.566 572.356 665.756 572.356 667.105 573.706 cv
668.457 575.057 668.457 577.245 667.105 578.593 cv
cp
954.066 532.507 mo
955.416 531.156 957.603 531.156 958.955 532.507 cv
960.303 533.858 960.303 536.045 958.955 537.396 cv
957.603 538.748 955.416 538.748 954.066 537.396 cv
952.711 536.045 952.711 533.858 954.066 532.507 cv
cp
702.078 578.075 mo
743.787 536.654 li
949.451 536.654 li
950.486 537.827 952.24 538.921 953.49 539.541 cv
956.84 541.197 960.416 542.181 963.06 539.541 cv
965.701 536.898 965.697 532.616 963.057 529.974 cv
960.416 527.333 956.648 527.974 953.49 529.974 cv
952.068 530.878 950.318 532.015 949.342 533.197 cv
742.363 533.197 li
700.654 574.619 li
671.861 574.619 li
670.853 573.382 668.99 572.212 667.676 571.562 cv
664.33 569.908 660.754 568.921 658.111 571.562 cv
655.467 574.206 655.467 578.487 658.111 581.129 cv
660.754 583.77 664.519 583.131 667.676 581.129 cv
669.039 580.267 670.691 579.189 671.688 578.065 cv
671.688 578.075 li
702.078 578.075 li
cp
f
960.932 569.86 mo
961.332 567.994 963.17 566.802 965.037 567.2 cv
966.904 567.595 968.096 569.432 967.697 571.299 cv
967.301 573.169 965.465 574.36 963.598 573.964 cv
961.73 573.565 960.539 571.727 960.932 569.86 cv
cp
634.963 607.894 mo
633.611 609.244 631.422 609.244 630.072 607.894 cv
628.723 606.543 628.723 604.356 630.072 603.004 cv
631.422 601.652 633.611 601.656 634.963 603.004 cv
636.315 604.356 636.315 606.543 634.963 607.894 cv
cp
872.391 553.907 mo
753.389 553.907 li
703.828 602.854 li
638.643 602.854 li
637.662 602.037 636.461 601.32 635.535 600.862 cv
632.184 599.204 628.609 598.218 625.967 600.862 cv
623.324 603.502 623.328 607.785 625.969 610.428 cv
628.609 613.068 632.377 612.428 635.535 610.428 cv
637.318 609.299 639.603 607.799 640.254 606.31 cv
705.246 606.31 li
754.807 557.365 li
870.934 557.365 li
894.275 581.244 li
956.291 581.244 li
960.697 576.25 li
961.926 576.41 963.309 576.411 964.5 576.398 cv
968.23 576.358 971.742 574.843 972.523 571.189 cv
973.299 567.537 970.965 563.944 967.31 563.165 cv
963.658 562.386 961.197 565.163 959.289 568.375 cv
958.297 570.044 957.012 572.99 957.563 574.576 cv
954.73 577.786 li
895.73 577.786 li
872.391 553.907 li
cp
f
632.98 639.057 mo
631.072 639.057 629.521 637.51 629.521 635.598 cv
629.521 633.69 631.072 632.141 632.98 632.141 cv
634.889 632.141 636.44 633.69 636.44 635.598 cv
636.44 637.51 634.889 639.057 632.98 639.057 cv
cp
978.918 573.509 mo
979.316 571.644 981.152 570.452 983.019 570.85 cv
984.889 571.245 986.08 573.081 985.682 574.948 cv
985.287 576.815 983.449 578.009 981.582 577.612 cv
979.715 577.214 978.519 575.377 978.918 573.509 cv
cp
711.594 617.84 mo
751.07 578.075 li
828.064 578.075 li
839.588 588.448 li
970.994 588.448 li
978.49 579.877 li
979.762 580.064 981.23 580.062 982.48 580.047 cv
986.215 580.006 989.727 578.495 990.506 574.839 cv
991.283 571.189 988.949 567.593 985.297 566.815 cv
981.641 566.038 979.178 568.81 977.273 572.024 cv
976.316 573.632 975.076 576.437 975.484 578.06 cv
969.422 584.991 li
840.916 584.991 li
829.391 574.619 li
749.633 574.619 li
710.156 614.381 li
651.09 614.381 li
636.065 629.406 li
634.637 629.451 633.004 629.838 631.869 630.221 cv
628.328 631.418 625.103 633.248 625.103 636.984 cv
625.103 640.721 628.133 643.752 631.869 643.752 cv
635.605 643.752 637.816 640.629 638.635 636.984 cv
639.057 635.109 639.547 632.729 639.184 631.176 cv
652.521 617.84 li
711.594 617.84 li
cp
f
662.258 638.182 mo
660.355 638.031 658.934 636.369 659.084 634.465 cv
659.232 632.56 660.896 631.137 662.797 631.285 cv
664.701 631.435 666.123 633.1 665.975 635.004 cv
665.826 636.906 664.162 638.332 662.258 638.182 cv
cp
999.67 579.348 mo
1000.07 577.479 1001.9 576.29 1003.77 576.686 cv
1005.64 577.083 1006.83 578.92 1006.43 580.788 cv
1006.04 582.656 1004.2 583.845 1002.33 583.45 cv
1000.46 583.052 999.273 581.215 999.67 579.348 cv
cp
713.025 626.01 mo
754.816 584.127 li
824.279 584.127 li
835.523 595.081 li
990.189 593.92 li
999.139 585.695 li
1000.43 585.898 1001.95 585.9 1003.23 585.885 cv
1006.97 585.843 1010.48 584.331 1011.26 580.677 cv
1012.04 577.024 1009.7 573.429 1006.05 572.653 cv
1002.4 571.877 999.932 574.649 998.023 577.865 cv
997.107 579.408 995.926 582.06 996.195 583.705 cv
988.832 590.47 li
836.918 591.615 li
825.682 580.669 li
753.381 580.669 li
711.607 622.537 li
677.518 622.156 li
666.353 628.648 li
666.451 628.815 li
664.953 628.68 663.1 628.969 661.842 629.285 cv
658.219 630.203 654.861 631.777 654.568 635.502 cv
654.275 639.227 657.057 642.481 660.781 642.773 cv
664.51 643.065 666.955 640.129 668.055 636.557 cv
668.594 634.816 669.232 632.623 669.094 631.057 cv
678.434 625.623 li
713.025 626.01 li
cp
f
633.91 581.468 mo
632 581.436 630.48 579.86 630.514 577.95 cv
630.549 576.044 632.121 574.523 634.031 574.552 cv
635.94 574.589 637.463 576.163 637.428 578.073 cv
637.394 579.981 635.818 581.502 633.91 581.468 cv
cp
973.016 540.183 mo
973.414 538.314 975.25 537.123 977.119 537.52 cv
978.986 537.917 980.178 539.753 979.779 541.621 cv
979.385 543.49 977.547 544.679 975.68 544.283 cv
973.813 543.886 972.621 542.05 973.016 540.183 cv
cp
639.367 576.995 mo
638.23 573.436 636.457 570.179 632.723 570.115 cv
628.984 570.047 625.904 573.023 625.838 576.758 cv
625.773 580.494 628.855 582.758 632.484 583.639 cv
634.125 584.039 636.143 584.491 637.672 584.375 cv
646.129 593.922 li
698.053 593.922 li
749.92 541.767 li
945.07 541.767 li
954.865 550.269 li
969.051 550.269 li
972.752 546.568 li
973.986 546.732 975.383 546.733 976.582 546.72 cv
980.316 546.677 983.824 545.164 984.603 541.509 cv
985.381 537.855 983.049 534.265 979.394 533.486 cv
975.74 532.708 973.279 535.482 971.371 538.695 cv
970.396 540.335 969.137 543.21 969.615 544.815 cv
967.619 546.811 li
956.154 546.811 li
946.359 538.31 li
748.482 538.31 li
696.615 590.465 li
647.684 590.465 li
640.09 581.886 li
640.211 580.33 639.791 578.324 639.367 576.995 cv
cp
f
603.223 606.201 mo
605.133 606.236 606.654 607.81 606.619 609.719 cv
606.586 611.629 605.014 613.152 603.103 613.115 cv
601.193 613.082 599.673 611.506 599.706 609.598 cv
599.738 607.69 601.315 606.168 603.223 606.201 cv
cp
842.4 568.968 mo
843.752 567.619 845.939 567.619 847.291 568.968 cv
848.641 570.318 848.641 572.508 847.291 573.856 cv
845.939 575.208 843.752 575.208 842.4 573.856 cv
841.049 572.508 841.049 570.318 842.4 568.968 cv
cp
601.676 615.287 mo
603.736 615.787 606.408 616.387 607.928 615.81 cv
616.26 623.604 li
637.48 623.604 li
650.445 612.076 li
707.26 612.076 li
747.313 572.889 li
837.6 572.889 li
838.6 574.146 840.496 575.343 841.83 576.002 cv
845.176 577.657 848.752 578.644 851.396 576.002 cv
854.037 573.358 854.037 569.077 851.396 566.435 cv
848.752 563.792 844.988 564.435 841.83 566.435 cv
840.494 567.281 838.877 568.333 837.875 569.432 cv
745.902 569.432 li
705.848 608.619 li
649.133 608.619 li
636.166 620.148 li
617.623 620.148 li
609.293 612.35 li
609.205 611.053 608.881 609.65 608.559 608.644 cv
607.424 605.082 605.65 601.824 601.912 601.76 cv
598.177 601.695 595.097 604.672 595.029 608.406 cv
594.966 612.141 598.046 614.406 601.676 615.287 cv
cp
f
1126.35 644.031 mo
1127.7 642.68 1129.88 642.68 1131.23 644.031 cv
1132.59 645.381 1132.59 647.568 1131.23 648.918 cv
1129.88 650.269 1127.7 650.269 1126.35 648.918 cv
1124.99 647.568 1124.99 645.381 1126.35 644.031 cv
cp
987.504 648.879 mo
986.154 650.231 983.967 650.231 982.615 648.879 cv
981.264 647.527 981.264 645.34 982.615 643.99 cv
983.967 642.639 986.154 642.639 987.504 643.99 cv
988.855 645.34 988.855 647.527 987.504 648.879 cv
cp
988.074 641.457 mo
984.918 639.457 981.152 638.816 978.51 641.457 cv
975.869 644.098 975.869 648.381 978.51 651.023 cv
981.152 653.662 984.728 652.68 988.074 651.023 cv
989.396 650.373 991.269 649.193 992.275 647.949 cv
1121.54 647.949 li
1122.54 649.207 1124.44 650.402 1125.77 651.065 cv
1129.12 652.719 1132.7 653.703 1135.34 651.065 cv
1137.98 648.42 1137.98 644.139 1135.34 641.498 cv
1132.7 638.854 1128.93 639.494 1125.77 641.498 cv
1124.44 642.344 1122.82 643.394 1121.82 644.494 cv
992.063 644.494 li
991.064 643.379 989.426 642.315 988.074 641.457 cv
cp
f
810.684 622.662 mo
812.035 621.315 814.223 621.315 815.574 622.662 cv
816.924 624.014 816.924 626.207 815.574 627.553 cv
814.223 628.902 812.035 628.902 810.684 627.553 cv
809.334 626.207 809.334 624.014 810.684 622.662 cv
cp
816.144 629.697 mo
817.213 629.17 818.641 628.299 819.682 627.328 cv
843.424 627.328 li
864.17 606.31 li
1116.46 606.31 li
1139.94 581.839 li
1203.59 581.839 li
1203.59 578.381 li
1138.47 578.381 li
1114.98 602.854 li
862.725 602.854 li
841.978 623.873 li
820.664 623.873 li
819.832 622.512 817.779 621.166 816.144 620.131 cv
812.986 618.131 809.221 617.49 806.578 620.131 cv
803.938 622.773 803.938 627.057 806.578 629.697 cv
809.221 632.34 812.797 631.354 816.144 629.697 cv
cp
f
807.348 664.92 mo
805.996 666.273 803.807 666.273 802.459 664.92 cv
801.111 663.57 801.111 661.381 802.459 660.031 cv
803.807 658.68 805.996 658.68 807.348 660.031 cv
808.703 661.381 808.703 663.57 807.348 664.92 cv
cp
812.152 663.951 mo
820.371 663.951 li
820.371 660.494 li
811.875 660.494 li
810.873 659.394 809.256 658.344 807.922 657.498 cv
804.764 655.498 800.996 654.856 798.355 657.498 cv
795.715 660.141 795.711 664.422 798.352 667.065 cv
800.996 669.707 804.572 668.721 807.922 667.065 cv
809.254 666.406 811.154 665.209 812.152 663.951 cv
cp
f
759.723 732.066 mo
758.367 733.41 756.182 733.406 754.834 732.049 cv
753.488 730.695 753.496 728.504 754.85 727.16 cv
756.203 725.815 758.391 725.82 759.74 727.174 cv
761.088 728.531 761.08 730.721 759.723 732.066 cv
cp
760.32 724.644 mo
757.166 722.633 753.404 721.981 750.754 724.615 cv
748.103 727.244 748.086 731.531 750.721 734.18 cv
753.357 736.832 756.932 735.856 760.289 734.211 cv
761.383 733.676 762.859 732.777 763.908 731.781 cv
771.896 731.781 li
771.896 728.324 li
764.785 728.324 li
763.928 726.984 761.92 725.664 760.32 724.644 cv
cp
f
688.994 725.918 mo
690.348 724.572 692.537 724.582 693.883 725.935 cv
695.23 727.289 695.223 729.477 693.865 730.824 cv
692.512 732.168 690.324 732.164 688.977 730.81 cv
687.635 729.453 687.641 727.266 688.994 725.918 cv
cp
819.953 720.43 mo
821.236 719.016 823.42 718.902 824.834 720.185 cv
826.254 721.465 826.365 723.652 825.082 725.068 cv
823.801 726.482 821.617 726.594 820.199 725.315 cv
818.781 724.033 818.67 721.846 819.953 720.43 cv
cp
694.434 732.969 mo
695.119 732.633 695.957 732.156 696.744 731.6 cv
697.379 732.336 698.305 732.81 699.35 732.81 cv
719.809 732.81 li
720.789 732.81 721.725 732.394 722.381 731.666 cv
737.197 715.231 li
779.213 715.231 li
790.168 725.789 li
790.799 726.402 791.639 726.748 792.521 726.758 cv
814.563 727.047 li
814.58 727.047 814.594 727.047 814.611 727.047 cv
815.508 727.047 816.32 726.697 816.934 726.133 cv
817.834 726.773 818.857 727.365 819.756 727.873 cv
823.012 729.711 826.805 730.16 829.309 727.391 cv
831.814 724.619 831.603 720.34 828.83 717.836 cv
826.055 715.332 822.535 716.498 819.273 718.318 cv
818.35 718.836 817.148 719.639 816.197 720.531 cv
815.732 720.291 815.215 720.139 814.654 720.131 cv
793.978 719.861 li
783.008 709.285 li
782.363 708.662 781.502 708.315 780.607 708.315 cv
735.656 708.315 li
734.678 708.315 733.746 708.731 733.09 709.457 cv
718.273 725.894 li
699.35 725.894 li
698.92 725.894 698.514 725.982 698.133 726.127 cv
697.129 725.129 695.68 724.18 694.463 723.402 cv
691.309 721.394 687.549 720.74 684.898 723.373 cv
682.246 726.006 682.23 730.287 684.863 732.94 cv
687.502 735.59 691.078 734.615 694.434 732.969 cv
cp
f
777.06 658.18 mo
778.344 656.764 780.529 656.652 781.947 657.932 cv
783.363 659.215 783.475 661.398 782.193 662.816 cv
780.914 664.232 778.73 664.344 777.31 663.065 cv
775.891 661.783 775.781 659.596 777.06 658.18 cv
cp
776.867 665.623 mo
780.125 667.461 783.916 667.91 786.418 665.139 cv
788.924 662.369 788.711 658.09 785.939 655.586 cv
783.168 653.082 779.644 654.244 776.383 656.068 cv
775.293 656.676 773.826 657.685 772.83 658.764 cv
763.842 659.045 li
763.949 662.502 li
772.25 662.244 li
773.197 663.514 775.238 664.705 776.867 665.623 cv
cp
f
779.56 757.519 mo
781.451 757.785 782.768 759.531 782.502 761.422 cv
782.238 763.315 780.488 764.631 778.598 764.365 cv
776.707 764.1 775.393 762.352 775.658 760.461 cv
775.92 758.568 777.67 757.252 779.56 757.519 cv
cp
773.287 761.531 mo
773.594 765.254 775.348 768.648 779.043 769.168 cv
782.746 769.688 786.166 767.115 786.689 763.412 cv
787.205 759.711 784.268 757.449 780.928 755.773 cv
779.246 754.924 776.338 753.883 774.756 754.42 cv
742.428 754.42 li
742.428 757.879 li
773.166 757.879 li
773.107 759.076 773.195 760.393 773.287 761.531 cv
cp
f
627.904 698.928 mo
628.648 697.168 630.676 696.346 632.434 697.09 cv
634.195 697.836 635.016 699.861 634.271 701.623 cv
633.527 703.383 631.498 704.207 629.74 703.461 cv
627.98 702.715 627.16 700.685 627.904 698.928 cv
cp
976.041 785.721 mo
977.898 785.273 979.762 786.42 980.211 788.273 cv
980.656 790.129 979.516 791.998 977.658 792.443 cv
975.801 792.891 973.934 791.75 973.488 789.891 cv
973.043 788.037 974.182 786.168 976.041 785.721 cv
cp
627.969 704.793 mo
628.887 705.611 630.287 706.644 631.615 707.238 cv
636.252 713.781 li
705.33 783.156 li
705.834 783.664 li
744.391 783.81 li
760.887 802.252 li
969.268 802.252 li
974.539 796.178 li
974.471 796.117 li
976.01 795.938 977.957 795.023 979.519 794.254 cv
982.875 792.606 985.389 789.727 984.512 786.094 cv
984.283 785.141 983.857 784.285 983.295 783.557 cv
983.314 783.471 983.344 783.391 983.355 783.303 cv
984.867 772.93 li
985.141 771.037 983.834 769.281 981.943 769.008 cv
980.045 768.732 978.299 770.039 978.023 771.93 cv
976.695 781.035 li
976.582 781.057 976.469 781.072 976.355 781.1 cv
972.721 781.977 971.695 785.541 971.359 789.262 cv
971.236 790.641 971.254 792.682 971.703 794.174 cv
967.689 798.795 li
762.432 798.795 li
745.941 780.356 li
707.275 780.211 li
638.99 711.664 li
635.295 706.449 li
636.094 705.111 636.518 702.943 636.836 701.201 cv
637.5 697.519 636.682 693.791 633.242 692.336 cv
629.801 690.879 625.832 692.484 624.373 695.928 cv
622.922 699.369 625.176 702.315 627.969 704.793 cv
cp
f
600.748 635.041 mo
602.658 635.06 604.188 636.623 604.17 638.535 cv
604.152 640.445 602.59 641.977 600.679 641.957 cv
598.768 641.935 597.238 640.373 597.259 638.465 cv
597.277 636.557 598.839 635.019 600.748 635.041 cv
cp
830.93 602.111 mo
832.838 602.164 834.344 603.752 834.293 605.662 cv
834.238 607.57 832.652 609.074 830.744 609.023 cv
828.832 608.973 827.328 607.381 827.381 605.475 cv
827.432 603.566 829.023 602.06 830.93 602.111 cv
cp
599.55 643.865 mo
600.474 644.19 601.738 644.519 602.949 644.664 cv
603.129 645.322 603.502 645.935 604.065 646.406 cv
614.148 654.824 li
614.771 655.34 615.555 655.627 616.365 655.627 cv
680.332 655.627 li
681.221 655.627 682.072 655.287 682.713 654.678 cv
703.611 634.84 li
716.639 634.84 li
717.547 634.84 718.42 634.482 719.066 633.844 cv
757.822 595.652 li
815.834 595.652 li
822.326 601.752 li
823.002 602.385 823.869 602.69 824.732 602.68 cv
824.791 604.019 825.107 605.488 825.43 606.535 cv
826.529 610.104 828.273 613.377 832.012 613.481 cv
835.746 613.582 838.853 610.635 838.957 606.902 cv
839.055 603.164 835.998 600.873 832.375 599.956 cv
831.064 599.623 829.504 599.255 828.146 599.171 cv
828.131 598.269 827.769 597.375 827.059 596.71 cv
819.572 589.672 li
818.93 589.071 818.082 588.737 817.203 588.737 cv
756.402 588.737 li
755.494 588.737 754.623 589.093 753.975 589.731 cv
715.221 627.922 li
702.234 627.922 li
701.346 627.922 700.494 628.264 699.853 628.873 cv
678.955 648.711 li
617.619 648.711 li
608.498 641.096 li
608.031 640.709 607.492 640.479 606.938 640.373 cv
606.818 639.293 606.592 638.162 606.379 637.17 cv
605.598 633.51 603.422 630.373 599.683 630.34 cv
595.949 630.303 592.89 633.297 592.849 637.035 cv
592.818 640.769 596.023 642.633 599.55 643.865 cv
cp
f
631.482 759.074 mo
632.668 757.574 634.84 757.32 636.338 758.506 cv
637.842 759.69 638.094 761.865 636.908 763.365 cv
635.723 764.857 633.549 765.115 632.051 763.93 cv
630.555 762.744 630.297 760.57 631.482 759.074 cv
cp
850.883 827.898 mo
852.166 826.482 854.35 826.371 855.769 827.652 cv
857.184 828.932 857.295 831.119 856.016 832.535 cv
854.736 833.953 852.551 834.06 851.133 832.781 cv
849.711 831.502 849.603 829.313 850.883 827.898 cv
cp
637.727 765.424 mo
638.877 764.68 640.451 763.422 641.352 762.16 cv
662.051 762.16 li
694.164 794.598 li
736.898 794.598 li
753.756 813.49 li
810.775 813.49 li
826.334 832.074 li
846.164 832.074 li
847.146 833.303 849.109 834.447 850.688 835.34 cv
853.945 837.178 857.738 837.629 860.24 834.857 cv
862.746 832.086 862.533 827.81 859.76 825.303 cv
856.988 822.799 853.467 823.965 850.205 825.787 cv
849.07 826.422 847.521 827.486 846.527 828.619 cv
827.949 828.619 li
812.389 810.031 li
755.307 810.031 li
738.449 791.139 li
695.605 791.139 li
663.492 758.703 li
641.176 758.703 li
640.078 757.619 638.164 756.668 636.615 755.924 cv
633.242 754.303 629.43 754.104 627.113 757.035 cv
624.797 759.965 625.289 764.219 628.221 766.537 cv
631.154 768.852 634.59 767.457 637.727 765.424 cv
cp
f
601.402 668.639 mo
602.894 667.449 605.066 667.693 606.26 669.185 cv
607.453 670.68 607.209 672.857 605.713 674.045 cv
604.221 675.234 602.043 674.99 600.857 673.498 cv
599.664 672.006 599.906 669.828 601.402 668.639 cv
cp
606.043 676.24 mo
607.432 675.736 609.434 674.771 610.572 673.644 cv
635.816 673.644 li
645.178 683.045 li
645.178 712.207 li
709.225 775.869 li
709.73 776.373 li
746.014 776.373 li
761.355 792.31 li
842.938 792.31 li
846.893 788.721 li
844.564 786.16 li
841.6 788.854 li
762.83 788.854 li
747.484 772.914 li
711.156 772.914 li
648.637 710.769 li
648.637 681.615 li
637.252 670.185 li
610.728 670.185 li
609.857 668.971 608.353 667.731 607.113 666.732 cv
604.195 664.391 600.527 663.332 597.607 665.664 cv
594.685 667.994 594.203 672.248 596.533 675.17 cv
598.867 678.086 602.529 677.51 606.043 676.24 cv
cp
f
827.816 689.908 mo
825.92 689.69 824.56 687.975 824.777 686.078 cv
824.996 684.182 826.713 682.82 828.609 683.039 cv
830.508 683.258 831.865 684.973 831.65 686.869 cv
831.43 688.769 829.715 690.129 827.816 689.908 cv
cp
833.99 685.748 mo
833.594 682.027 831.756 678.678 828.043 678.252 cv
824.332 677.824 820.975 680.482 820.547 684.191 cv
820.121 687.906 823.115 690.094 826.494 691.69 cv
827.205 692.027 828.133 692.393 829.086 692.664 cv
829.215 693.365 829.553 694.035 830.113 694.56 cv
839.623 703.461 li
840.287 704.086 841.135 704.394 841.982 704.394 cv
842.904 704.394 843.826 704.027 844.508 703.299 cv
845.813 701.902 845.74 699.715 844.346 698.412 cv
834.838 689.51 li
834.641 689.328 834.428 689.18 834.205 689.051 cv
834.205 687.947 834.098 686.773 833.99 685.748 cv
cp
f
798.975 747.168 mo
797.627 748.519 795.438 748.519 794.086 747.168 cv
792.736 745.818 792.736 743.629 794.086 742.277 cv
795.438 740.928 797.627 740.928 798.975 742.277 cv
800.328 743.629 800.328 745.818 798.975 747.168 cv
cp
799.547 739.748 mo
796.391 737.744 792.625 737.104 789.98 739.748 cv
787.342 742.387 787.342 746.668 789.98 749.315 cv
792.625 751.951 796.201 750.969 799.547 749.315 cv
800.619 748.781 802.057 747.904 803.1 746.928 cv
811.439 746.928 li
811.439 743.471 li
804.059 743.471 li
803.221 742.115 801.176 740.777 799.547 739.748 cv
cp
f
1156.82 337.144 mo
1155.47 338.495 1153.28 338.495 1151.93 337.144 cv
1150.58 335.794 1150.58 333.605 1151.93 332.255 cv
1153.28 330.906 1155.47 330.906 1156.82 332.255 cv
1158.17 333.605 1158.17 335.794 1156.82 337.144 cv
cp
1151.36 329.722 mo
1149.83 330.69 1147.93 331.929 1147.01 333.199 cv
1137.86 333.44 li
1137.96 336.896 li
1147.54 336.644 li
1148.59 337.724 1150.19 338.712 1151.36 339.289 cv
1154.71 340.945 1158.28 341.931 1160.93 339.289 cv
1163.57 336.648 1163.57 332.365 1160.93 329.722 cv
1158.28 327.082 1154.51 327.723 1151.36 329.722 cv
cp
f
1099.56 548.787 mo
1098.21 550.135 1096.02 550.135 1094.67 548.787 cv
1093.32 547.435 1093.32 545.248 1094.67 543.898 cv
1096.02 542.546 1098.21 542.546 1099.56 543.898 cv
1100.91 545.248 1100.91 547.435 1099.56 548.787 cv
cp
666.947 487.908 mo
665.596 489.256 663.408 489.256 662.057 487.908 cv
660.707 486.556 660.707 484.367 662.057 483.019 cv
663.408 481.668 665.596 481.668 666.947 483.019 cv
668.297 484.367 668.297 486.556 666.947 487.908 cv
cp
1094.1 541.365 mo
1092.65 542.283 1090.86 543.447 1089.89 544.65 cv
1078.96 544.65 li
1016.29 483.707 li
671.688 483.707 li
671.688 483.908 li
670.676 482.679 668.826 481.519 667.518 480.875 cv
664.168 479.218 660.596 478.232 657.951 480.875 cv
655.307 483.515 655.307 487.798 657.953 490.44 cv
660.596 493.082 664.361 492.439 667.518 490.44 cv
668.967 489.523 670.746 488.365 671.713 487.165 cv
1014.89 487.165 li
1077.56 548.107 li
1090.12 548.107 li
1091.16 549.255 1092.87 550.321 1094.1 550.929 cv
1097.44 552.585 1101.02 553.571 1103.66 550.929 cv
1106.3 548.287 1106.3 544.005 1103.66 541.365 cv
1101.02 538.722 1097.26 539.362 1094.1 541.365 cv
cp
f
1057.11 182.345 mo
1058.46 180.998 1060.64 180.998 1062 182.345 cv
1063.35 183.697 1063.35 185.884 1062 187.235 cv
1060.64 188.586 1058.46 188.586 1057.11 187.235 cv
1055.76 185.884 1055.76 183.697 1057.11 182.345 cv
cp
1062.56 189.769 mo
1063.9 188.923 1065.52 187.872 1066.52 186.773 cv
1087.63 186.773 li
1097.94 176.251 li
1095.47 173.833 li
1086.18 183.316 li
1066.79 183.316 li
1065.8 182.059 1063.9 180.862 1062.56 180.202 cv
1059.22 178.547 1055.64 177.562 1053 180.202 cv
1050.36 182.845 1050.36 187.128 1053 189.769 cv
1055.64 192.41 1059.41 191.769 1062.56 189.769 cv
cp
f
662.977 512.561 mo
664.324 511.21 666.516 511.21 667.863 512.561 cv
669.213 513.912 669.213 516.099 667.863 517.451 cv
666.516 518.802 664.324 518.802 662.977 517.451 cv
661.627 516.099 661.627 513.912 662.977 512.561 cv
cp
668.438 519.983 mo
669.945 519.028 671.81 517.81 672.746 516.556 cv
694.303 516.556 li
712.887 497.97 li
1010.12 497.97 li
1081.43 569.718 li
1203.59 569.718 li
1203.59 566.259 li
1082.87 566.259 li
1011.55 494.511 li
711.455 494.511 li
692.869 513.098 li
672.293 513.098 li
671.242 512.005 669.617 511.001 668.438 510.418 cv
665.088 508.761 661.51 507.777 658.867 510.418 cv
656.227 513.06 656.227 517.343 658.867 519.983 cv
661.51 522.627 665.279 521.984 668.438 519.983 cv
cp
f
629.512 908.1 mo
631.422 908.1 632.969 909.644 632.969 911.555 cv
632.969 913.467 631.422 915.014 629.512 915.014 cv
627.603 915.014 626.055 913.467 626.055 911.555 cv
626.055 909.644 627.603 908.1 629.512 908.1 cv
cp
630.898 919.434 mo
634.635 919.434 637.664 916.404 637.664 912.668 cv
637.664 908.93 634.545 906.721 630.898 905.904 cv
628.475 905.357 625.191 904.678 623.967 905.904 cv
622.74 907.125 623.461 910.678 624.137 912.668 cv
625.332 916.205 627.164 919.434 630.898 919.434 cv
cp
f
602.941 511.912 mo
604.85 511.912 606.398 513.46 606.398 515.369 cv
606.398 517.279 604.85 518.826 602.941 518.826 cv
601.031 518.826 599.484 517.279 599.484 515.369 cv
599.484 513.46 601.031 511.912 602.941 511.912 cv
cp
601.83 523.519 mo
605.568 523.519 607.777 520.402 608.596 516.754 cv
608.824 515.732 609.07 514.56 609.195 513.451 cv
609.215 513.47 li
617.789 505.102 li
641.24 505.102 li
649.068 495.564 li
649.068 480.134 li
656.809 472.902 li
670.971 472.902 li
679.617 481.545 li
1019.05 481.545 li
1074.52 536.654 li
1107.81 536.654 li
1121.64 550.269 li
1203.59 550.269 li
1203.59 546.811 li
1123.06 546.811 li
1109.22 533.197 li
1075.95 533.197 li
1020.47 478.087 li
681.049 478.087 li
672.404 469.443 li
655.445 469.443 li
645.609 478.635 li
645.609 494.327 li
639.607 501.644 li
616.379 501.644 li
608.242 509.589 li
606.799 508.73 603.664 509.371 601.83 509.992 cv
598.29 511.189 595.064 513.02 595.064 516.754 cv
595.064 520.491 598.093 523.519 601.83 523.519 cv
cp
f
633.285 513.337 mo
635.197 513.337 636.744 514.884 636.744 516.794 cv
636.744 518.706 635.197 520.253 633.285 520.253 cv
631.377 520.253 629.828 518.706 629.828 516.794 cv
629.828 514.884 631.377 513.337 633.285 513.337 cv
cp
632.176 524.947 mo
635.91 524.947 638.121 521.829 638.941 518.181 cv
639.213 516.968 639.518 515.541 639.603 514.261 cv
646.168 511.308 li
655.381 502.302 li
684.352 502.736 li
694.303 492.785 li
1011.86 492.785 li
1083.61 562.802 li
1205.04 562.802 li
1205.04 559.345 li
1085.02 559.345 li
1013.27 489.326 li
692.869 489.326 li
682.939 499.256 li
653.994 498.824 li
644.19 508.404 li
638.51 510.962 li
637.029 510.177 633.973 510.81 632.176 511.419 cv
628.637 512.615 625.41 514.445 625.41 518.181 cv
625.41 521.917 628.438 524.947 632.176 524.947 cv
cp
f
862.209 313.068 mo
860.297 313.068 858.752 311.522 858.752 309.611 cv
858.752 307.7 860.297 306.153 862.209 306.153 cv
864.121 306.153 865.666 307.7 865.666 309.611 cv
865.666 311.522 864.121 313.068 862.209 313.068 cv
cp
861.098 304.235 mo
857.559 305.43 854.33 307.261 854.33 310.998 cv
854.33 314.734 857.359 317.762 861.098 317.762 cv
864.832 317.762 867.045 314.644 867.861 310.998 cv
868.264 309.202 868.738 306.937 868.463 305.384 cv
926.984 247.428 li
926.984 175.042 li
923.527 175.042 li
923.527 245.987 li
865.545 303.408 li
864.063 303.411 862.299 303.828 861.098 304.235 cv
cp
f
1133.77 528.917 mo
1133.81 527.009 1135.38 525.487 1137.29 525.521 cv
1139.2 525.554 1140.72 527.128 1140.69 529.04 cv
1140.65 530.947 1139.08 532.47 1137.17 532.437 cv
1135.26 532.403 1133.74 530.826 1133.77 528.917 cv
cp
1142.63 527.96 mo
1141.49 524.403 1139.72 521.144 1135.98 521.079 cv
1132.24 521.013 1129.17 523.988 1129.1 527.726 cv
1129.04 531.46 1132.11 533.724 1135.75 534.605 cv
1137.15 534.945 1138.83 535.326 1140.24 535.359 cv
1145.58 539.031 li
1208.79 539.031 li
1208.79 535.573 li
1146.66 535.573 li
1143.3 533.269 li
1143.55 531.671 1143.09 529.41 1142.63 527.96 cv
cp
f
1151.91 524.164 mo
1151.94 522.255 1153.51 520.733 1155.43 520.767 cv
1157.33 520.8 1158.86 522.375 1158.82 524.285 cv
1158.79 526.193 1157.21 527.716 1155.3 527.681 cv
1153.4 527.648 1151.88 526.071 1151.91 524.164 cv
cp
1160.76 523.206 mo
1159.63 519.649 1157.85 516.39 1154.12 516.324 cv
1150.38 516.258 1147.3 519.234 1147.23 522.97 cv
1147.17 526.706 1150.25 528.97 1153.88 529.851 cv
1155.38 530.216 1157.22 530.64 1158.69 530.617 cv
1164.18 534.277 li
1208.79 534.277 li
1208.79 530.819 li
1165.23 530.819 li
1161.46 528.307 li
1161.64 526.725 1161.2 524.595 1160.76 523.206 cv
cp
f
604.26 581.802 mo
602.348 581.769 600.828 580.192 600.863 578.286 cv
600.896 576.377 602.469 574.854 604.381 574.886 cv
606.289 574.922 607.813 576.495 607.775 578.406 cv
607.744 580.315 606.168 581.836 604.26 581.802 cv
cp
991.309 546.99 mo
991.705 545.121 993.543 543.929 995.414 544.328 cv
997.277 544.724 998.469 546.562 998.07 548.429 cv
997.676 550.296 995.838 551.488 993.971 551.089 cv
992.103 550.693 990.912 548.857 991.309 546.99 cv
cp
609.717 577.327 mo
608.58 573.769 606.805 570.511 603.07 570.444 cv
599.333 570.38 596.251 573.356 596.187 577.093 cv
596.123 580.827 599.203 583.09 602.834 583.97 cv
604.23 584.311 605.906 584.69 607.318 584.726 cv
616.512 593.922 li
637.258 593.922 li
643.309 599.973 li
701.5 599.973 li
753.943 548.107 li
941.303 548.107 li
951.529 557.365 li
986.816 557.365 li
990.545 553.291 li
991.891 553.535 993.508 553.542 994.873 553.527 cv
998.607 553.485 1002.12 551.972 1002.9 548.317 cv
1003.67 544.664 1001.34 541.071 997.685 540.294 cv
994.031 539.515 991.57 542.29 989.662 545.502 cv
988.779 546.99 987.664 549.494 987.82 551.146 cv
985.293 553.906 li
952.863 553.906 li
942.635 544.65 li
752.523 544.65 li
700.08 596.515 li
644.74 596.515 li
638.69 590.465 li
617.943 590.465 li
610.355 582.873 li
610.693 581.271 610.203 578.85 609.717 577.327 cv
cp
f
871.887 234.078 mo
873.225 235.441 873.201 237.631 871.836 238.966 cv
870.473 240.304 868.283 240.281 866.947 238.915 cv
865.609 237.552 865.633 235.362 866.996 234.026 cv
868.361 232.689 870.549 232.712 871.887 234.078 cv
cp
864.859 233.433 mo
863.168 236.765 862.144 240.329 864.758 242.999 cv
867.371 245.669 871.656 245.714 874.328 243.099 cv
876.994 240.486 876.391 236.71 874.426 233.531 cv
873.496 232.033 872.314 230.18 871.086 229.221 cv
871.086 175.042 li
867.629 175.042 li
867.629 229.562 li
866.506 230.599 865.463 232.243 864.859 233.433 cv
cp
f
885.438 195.809 mo
886.803 194.472 888.988 194.496 890.326 195.86 cv
891.662 197.224 891.641 199.414 890.275 200.749 cv
888.912 202.086 886.723 202.062 885.387 200.701 cv
884.053 199.335 884.074 197.146 885.438 195.809 cv
cp
892.768 204.882 mo
895.434 202.265 894.83 198.492 892.865 195.314 cv
892.01 193.931 890.938 192.248 889.813 191.242 cv
889.813 175.042 li
886.355 175.042 li
886.355 191.094 li
885.123 192.098 883.953 193.924 883.299 195.214 cv
881.611 198.548 880.584 202.113 883.201 204.781 cv
885.814 207.452 890.098 207.496 892.768 204.882 cv
cp
f
1117.97 195.809 mo
1119.34 194.472 1121.52 194.496 1122.86 195.86 cv
1124.2 197.224 1124.17 199.414 1122.81 200.749 cv
1121.45 202.086 1119.26 202.062 1117.92 200.701 cv
1116.59 199.335 1116.61 197.146 1117.97 195.809 cv
cp
1125.3 204.882 mo
1127.97 202.265 1127.36 198.492 1125.4 195.314 cv
1124.54 193.931 1123.47 192.248 1122.35 191.242 cv
1122.35 175.042 li
1118.89 175.042 li
1118.89 191.094 li
1117.66 192.099 1116.49 193.924 1115.83 195.214 cv
1114.14 198.548 1113.12 202.113 1115.73 204.781 cv
1118.35 207.452 1122.63 207.496 1125.3 204.882 cv
cp
f
1148.8 195.501 mo
1150.17 194.165 1152.36 194.188 1153.69 195.552 cv
1155.03 196.917 1155.01 199.106 1153.64 200.441 cv
1152.28 201.779 1150.09 201.755 1148.75 200.391 cv
1147.42 199.027 1147.44 196.837 1148.8 195.501 cv
cp
1156.13 204.576 mo
1158.8 201.958 1158.2 198.184 1156.23 195.007 cv
1155.38 193.624 1154.3 191.943 1153.18 190.937 cv
1153.18 175.042 li
1149.72 175.042 li
1149.72 190.787 li
1148.49 191.792 1147.32 193.618 1146.67 194.908 cv
1144.97 198.241 1143.95 201.804 1146.57 204.474 cv
1149.18 207.144 1153.46 207.189 1156.13 204.576 cv
cp
f
1134.11 211.511 mo
1135.47 210.177 1137.66 210.201 1139 211.565 cv
1140.33 212.929 1140.31 215.117 1138.95 216.455 cv
1137.58 217.79 1135.39 217.767 1134.06 216.404 cv
1132.72 215.038 1132.74 212.85 1134.11 211.511 cv
cp
1141.44 220.585 mo
1144.11 217.97 1143.5 214.195 1141.54 211.017 cv
1140.68 209.635 1139.61 207.955 1138.48 206.949 cv
1138.48 175.042 li
1135.03 175.042 li
1135.03 206.796 li
1133.79 207.8 1132.63 209.628 1131.97 210.919 cv
1130.28 214.251 1129.26 217.815 1131.87 220.486 cv
1134.48 223.155 1138.77 223.201 1141.44 220.585 cv
cp
f
1163.21 211.511 mo
1164.57 210.177 1166.76 210.201 1168.1 211.565 cv
1169.43 212.929 1169.41 215.117 1168.05 216.455 cv
1166.69 217.79 1164.5 217.767 1163.16 216.404 cv
1161.82 215.038 1161.85 212.85 1163.21 211.511 cv
cp
1170.54 220.585 mo
1173.21 217.97 1172.61 214.195 1170.64 211.017 cv
1169.78 209.635 1168.71 207.955 1167.59 206.949 cv
1167.59 175.042 li
1164.13 175.042 li
1164.13 206.796 li
1162.9 207.801 1161.73 209.628 1161.07 210.919 cv
1159.38 214.251 1158.36 217.815 1160.97 220.486 cv
1163.59 223.155 1167.87 223.201 1170.54 220.585 cv
cp
f
922.182 311.123 mo
924.094 311.123 925.641 312.67 925.641 314.582 cv
925.641 316.491 924.094 318.04 922.182 318.04 cv
920.271 318.04 918.725 316.491 918.725 314.582 cv
918.725 312.67 920.271 311.123 922.182 311.123 cv
cp
921.072 322.733 mo
924.807 322.733 927.018 319.613 927.836 315.967 cv
928.125 314.682 928.443 313.161 928.504 311.828 cv
955.922 311.828 li
987.494 281.339 li
987.494 258.662 li
1017.03 229.13 li
1065.15 229.13 li
1084.17 248.148 li
1189.65 248.148 li
1204.85 232.046 li
1202.33 229.672 li
1188.16 244.691 li
1085.61 244.691 li
1066.58 225.672 li
1015.6 225.672 li
984.037 257.23 li
984.037 279.873 li
954.525 308.37 li
925.256 308.37 li
925.256 308.386 li
923.83 308.435 922.203 308.821 921.072 309.204 cv
917.533 310.4 914.305 312.231 914.305 315.967 cv
914.305 319.704 917.334 322.733 921.072 322.733 cv
cp
f
1189 507.88 mo
1190.9 507.913 1192.43 509.488 1192.39 511.4 cv
1192.36 513.308 1190.78 514.829 1188.88 514.796 cv
1186.96 514.761 1185.44 513.186 1185.48 511.278 cv
1185.51 509.371 1187.09 507.847 1189 507.88 cv
cp
1187.45 516.965 mo
1189.87 517.552 1193.14 518.289 1194.38 517.085 cv
1194.39 517.081 1194.39 517.073 1194.39 517.067 cv
1198.35 519.581 li
1205.04 519.581 li
1205.04 516.123 li
1199.35 516.123 li
1195.02 513.369 li
1195 513.406 li
1194.87 512.295 1194.6 511.168 1194.33 510.319 cv
1193.19 506.761 1191.42 503.505 1187.69 503.439 cv
1183.95 503.373 1180.87 506.347 1180.8 510.085 cv
1180.74 513.819 1183.82 516.083 1187.45 516.965 cv
cp
f
798.975 291.482 mo
800.301 290.107 802.488 290.07 803.863 291.397 cv
805.236 292.722 805.275 294.91 803.947 296.287 cv
802.621 297.662 800.432 297.698 799.057 296.371 cv
797.688 295.043 797.646 292.855 798.975 291.482 cv
cp
798.523 298.525 mo
801.9 300.123 805.494 301.044 808.09 298.357 cv
810.684 295.669 810.609 291.386 807.924 288.79 cv
805.236 286.195 801.478 286.904 798.357 288.958 cv
796.764 290.006 794.764 291.366 793.932 292.724 cv
785.939 292.724 li
785.939 296.181 li
794.869 296.181 li
794.869 296.145 li
795.932 297.126 797.422 298.002 798.523 298.525 cv
cp
f
597.111 445.57 mo
597.111 443.66 598.658 442.11 600.568 442.11 cv
602.48 442.11 604.025 443.66 604.025 445.57 cv
604.025 447.479 602.48 449.027 600.568 449.027 cv
598.658 449.027 597.111 447.479 597.111 445.57 cv
cp
607.086 446.123 mo
607.086 441.919 603.682 438.515 599.484 438.515 cv
595.285 438.515 591.88 441.919 591.88 446.123 cv
591.88 450.32 595.285 453.724 599.484 453.724 cv
603.682 453.724 607.086 450.32 607.086 446.123 cv
cp
f
845.93 435.467 mo
845.93 433.558 847.48 432.009 849.389 432.009 cv
851.299 432.009 852.846 433.558 852.846 435.467 cv
852.846 437.376 851.299 438.925 849.389 438.925 cv
847.48 438.925 845.93 437.376 845.93 435.467 cv
cp
855.908 436.019 mo
855.908 431.819 852.504 428.414 848.303 428.414 cv
844.102 428.414 840.699 431.819 840.699 436.019 cv
840.699 440.218 844.102 443.623 848.303 443.623 cv
852.504 443.623 855.908 440.218 855.908 436.019 cv
cp
f
941.721 564.133 mo
941.721 562.223 943.268 560.677 945.178 560.677 cv
947.086 560.677 948.635 562.223 948.635 564.133 cv
948.635 566.044 947.086 567.59 945.178 567.59 cv
943.268 567.59 941.721 566.044 941.721 564.133 cv
cp
951.695 564.689 mo
951.695 560.485 948.291 557.081 944.09 557.081 cv
939.891 557.081 936.486 560.485 936.486 564.689 cv
936.486 568.884 939.891 572.29 944.09 572.29 cv
948.291 572.29 951.695 568.884 951.695 564.689 cv
cp
f
1007.82 967.514 mo
1005.97 968.004 1004.08 966.898 1003.6 965.049 cv
1003.11 963.203 1004.21 961.313 1006.06 960.826 cv
1007.91 960.342 1009.8 961.447 1010.28 963.293 cv
1010.77 965.144 1009.66 967.033 1007.82 967.514 cv
cp
1005.82 957.727 mo
1001.75 958.795 999.328 962.951 1000.39 967.01 cv
1001.46 971.074 1005.61 973.504 1009.68 972.438 cv
1013.74 971.371 1016.17 967.217 1015.1 963.152 cv
1014.04 959.092 1009.88 956.662 1005.82 957.727 cv
cp
f
977.728 967.514 mo
975.883 968.004 973.99 966.898 973.51 965.049 cv
973.021 963.203 974.127 961.313 975.973 960.826 cv
977.82 960.342 979.711 961.447 980.197 963.293 cv
980.68 965.144 979.576 967.033 977.728 967.514 cv
cp
975.734 957.727 mo
971.668 958.795 969.24 962.951 970.307 967.01 cv
971.375 971.074 975.527 973.504 979.592 972.438 cv
983.65 971.371 986.084 967.217 985.016 963.152 cv
983.949 959.092 979.793 956.662 975.734 957.727 cv
cp
f
950.873 967.092 mo
949.027 967.576 947.135 966.471 946.65 964.623 cv
946.166 962.779 947.271 960.885 949.117 960.404 cv
950.965 959.916 952.855 961.023 953.34 962.871 cv
953.826 964.717 952.721 966.606 950.873 967.092 cv
cp
948.875 957.303 mo
944.814 958.371 942.385 962.527 943.449 966.588 cv
944.516 970.65 948.672 973.078 952.738 972.01 cv
956.797 970.945 959.228 966.789 958.162 962.725 cv
957.094 958.664 952.938 956.236 948.875 957.303 cv
cp
f
904.182 967.029 mo
903.246 965.361 903.838 963.254 905.502 962.32 cv
907.166 961.383 909.275 961.975 910.209 963.641 cv
911.144 965.305 910.555 967.414 908.889 968.35 cv
907.225 969.283 905.117 968.691 904.182 967.029 cv
cp
909.904 971.287 mo
913.568 969.227 914.869 964.594 912.81 960.935 cv
910.756 957.273 906.123 955.971 902.455 958.029 cv
898.799 960.082 897.494 964.719 899.553 968.383 cv
901.607 972.041 906.244 973.342 909.904 971.287 cv
cp
f
1150.92 620.027 mo
1150.92 618.115 1152.46 616.565 1154.38 616.565 cv
1156.28 616.565 1157.83 618.115 1157.83 620.027 cv
1157.83 621.935 1156.28 623.482 1154.38 623.482 cv
1152.46 623.482 1150.92 621.935 1150.92 620.027 cv
cp
1160.89 620.576 mo
1160.89 616.377 1157.49 612.971 1153.29 612.971 cv
1149.09 612.971 1145.68 616.377 1145.68 620.576 cv
1145.68 624.777 1149.09 628.18 1153.29 628.18 cv
1157.49 628.18 1160.89 624.777 1160.89 620.576 cv
cp
f
1011.05 786.891 mo
1011.05 788.799 1009.51 790.348 1007.6 790.348 cv
1005.68 790.348 1004.14 788.799 1004.14 786.891 cv
1004.14 784.981 1005.68 783.43 1007.6 783.43 cv
1009.51 783.43 1011.05 784.981 1011.05 786.891 cv
cp
998.906 787.441 mo
998.906 791.641 1002.31 795.047 1006.51 795.047 cv
1010.71 795.047 1014.11 791.641 1014.11 787.441 cv
1014.11 783.24 1010.71 779.836 1006.51 779.836 cv
1002.31 779.836 998.906 783.24 998.906 787.441 cv
cp
f
1064.29 805.691 mo
1064.29 807.602 1062.74 809.148 1060.83 809.148 cv
1058.92 809.148 1057.37 807.602 1057.37 805.691 cv
1057.37 803.781 1058.92 802.231 1060.83 802.231 cv
1062.74 802.231 1064.29 803.781 1064.29 805.691 cv
cp
1052.14 806.244 mo
1052.14 810.441 1055.54 813.848 1059.74 813.848 cv
1063.94 813.848 1067.34 810.441 1067.34 806.244 cv
1067.34 802.043 1063.94 798.637 1059.74 798.637 cv
1055.54 798.637 1052.14 802.043 1052.14 806.244 cv
cp
f
946.619 827.635 mo
946.619 825.723 948.166 824.178 950.078 824.178 cv
951.988 824.178 953.535 825.723 953.535 827.635 cv
953.535 829.543 951.988 831.094 950.078 831.094 cv
948.166 831.094 946.619 829.543 946.619 827.635 cv
cp
956.594 828.188 mo
956.594 823.984 953.191 820.582 948.99 820.582 cv
944.793 820.582 941.389 823.984 941.389 828.188 cv
941.389 832.385 944.793 835.789 948.99 835.789 cv
953.191 835.789 956.594 832.385 956.594 828.188 cv
cp
f
706.701 974.81 mo
705.291 976.1 703.105 976 701.814 974.592 cv
700.525 973.184 700.623 970.996 702.035 969.705 cv
703.443 968.416 705.631 968.514 706.92 969.924 cv
708.211 971.336 708.109 973.525 706.701 974.81 cv
cp
700.377 967.074 mo
697.277 969.908 697.059 974.717 699.893 977.82 cv
702.727 980.916 707.537 981.133 710.639 978.297 cv
713.738 975.467 713.953 970.654 711.121 967.559 cv
708.285 964.457 703.475 964.242 700.377 967.074 cv
cp
f
743.623 974.383 mo
742.211 975.672 740.025 975.574 738.736 974.164 cv
737.445 972.758 737.543 970.57 738.955 969.279 cv
740.363 967.992 742.553 968.092 743.842 969.5 cv
745.131 970.908 745.029 973.096 743.623 974.383 cv
cp
737.297 966.65 mo
734.197 969.482 733.982 974.291 736.814 977.394 cv
739.648 980.494 744.459 980.707 747.559 977.873 cv
750.66 975.041 750.875 970.231 748.043 967.133 cv
745.205 964.033 740.396 963.816 737.297 966.65 cv
cp
f
681.461 920.846 mo
683.098 919.865 685.223 920.394 686.205 922.033 cv
687.188 923.668 686.658 925.791 685.016 926.775 cv
683.379 927.758 681.254 927.227 680.271 925.592 cv
679.289 923.949 679.822 921.826 681.461 920.846 cv
cp
675.685 927.072 mo
677.848 930.674 682.514 931.844 686.117 929.685 cv
689.719 927.525 690.887 922.856 688.727 919.25 cv
686.57 915.652 681.898 914.481 678.293 916.641 cv
678.016 916.809 677.758 916.994 677.51 917.19 cv
668.09 909.629 li
666.6 908.435 664.422 908.668 663.23 910.162 cv
662.035 911.652 662.269 913.826 663.76 915.019 cv
673.268 922.652 li
673.676 922.979 674.135 923.185 674.609 923.303 cv
674.631 924.59 674.975 925.889 675.685 927.072 cv
cp
f
968.666 862.641 mo
970.576 862.641 972.123 864.19 972.123 866.102 cv
972.123 868.01 970.576 869.56 968.666 869.56 cv
966.756 869.56 965.209 868.01 965.209 866.102 cv
965.209 864.19 966.756 862.641 968.666 862.641 cv
cp
602.932 766.168 mo
601.023 766.16 599.482 764.607 599.49 762.697 cv
599.498 760.789 601.051 759.248 602.959 759.254 cv
604.869 759.264 606.408 760.815 606.402 762.727 cv
606.396 764.637 604.842 766.178 602.932 766.168 cv
cp
967.578 874.258 mo
971.779 874.258 975.184 870.854 975.184 866.652 cv
975.184 862.451 971.779 859.049 967.578 859.049 cv
964.668 859.049 962.141 860.688 960.863 863.094 cv
932.019 834.465 li
924.391 834.465 li
908.334 839.063 li
901.377 841.152 li
814.111 841.152 li
792.932 816.199 li
753.533 816.199 li
736.678 798.795 li
692.988 798.795 li
667.92 774.531 li
616.553 774.531 li
609.236 766.477 li
609.365 764.961 608.963 762.969 608.605 761.346 cv
607.799 757.695 605.603 754.57 601.867 754.557 cv
598.13 754.543 595.089 757.557 595.074 761.293 cv
595.064 765.031 598.279 766.875 601.815 768.086 cv
603.156 768.547 605.201 769.018 606.773 768.906 cv
615.023 777.986 li
666.521 777.986 li
691.59 802.252 li
735.211 802.252 li
752.068 819.656 li
791.332 819.656 li
812.512 844.609 li
901.629 844.609 li
924.637 837.922 li
930.594 837.922 li
960.002 867.107 li
960.238 871.096 963.535 874.258 967.578 874.258 cv
cp
f
940.297 867.791 mo
938.43 868.217 936.578 867.047 936.154 865.185 cv
935.732 863.324 936.902 861.471 938.762 861.047 cv
940.625 860.625 942.475 861.791 942.902 863.652 cv
943.324 865.519 942.156 867.371 940.297 867.791 cv
cp
938.625 857.941 mo
934.527 858.873 931.961 862.945 932.891 867.041 cv
933.822 871.137 937.894 873.701 941.994 872.773 cv
946.086 871.844 948.652 867.766 947.725 863.674 cv
946.793 859.576 942.719 857.012 938.625 857.941 cv
cp
f
1057.18 894.902 mo
1055.27 894.902 1053.72 893.352 1053.72 891.441 cv
1053.72 889.533 1055.27 887.982 1057.18 887.982 cv
1059.09 887.982 1060.63 889.533 1060.63 891.441 cv
1060.63 893.352 1059.09 894.902 1057.18 894.902 cv
cp
1063.7 891.996 mo
1063.7 887.793 1060.29 884.389 1056.09 884.389 cv
1051.89 884.389 1048.49 887.793 1048.49 891.996 cv
1048.49 896.195 1051.89 899.6 1056.09 899.6 cv
1060.29 899.6 1063.7 896.195 1063.7 891.996 cv
cp
f
1173.62 616.565 mo
1175.52 616.565 1177.07 618.115 1177.07 620.027 cv
1177.07 621.935 1175.52 623.482 1173.62 623.482 cv
1171.71 623.482 1170.16 621.935 1170.16 620.027 cv
1170.16 618.115 1171.71 616.565 1173.62 616.565 cv
cp
1172.53 628.18 mo
1176.73 628.18 1180.13 624.777 1180.13 620.576 cv
1180.13 616.377 1176.73 612.971 1172.53 612.971 cv
1168.33 612.971 1164.92 616.377 1164.92 620.576 cv
1164.92 624.777 1168.33 628.18 1172.53 628.18 cv
cp
f
1190.02 368.371 mo
1191.93 368.371 1193.47 369.919 1193.47 371.83 cv
1193.47 373.738 1191.93 375.288 1190.02 375.288 cv
1188.11 375.288 1186.56 373.738 1186.56 371.83 cv
1186.56 369.919 1188.11 368.371 1190.02 368.371 cv
cp
1188.94 379.985 mo
1193.13 379.985 1196.54 376.582 1196.54 372.38 cv
1196.54 368.179 1193.13 364.776 1188.94 364.776 cv
1184.74 364.776 1181.33 368.179 1181.33 372.38 cv
1181.33 376.582 1184.74 379.985 1188.94 379.985 cv
cp
f
1189.03 398.033 mo
1190.94 398.033 1192.49 399.582 1192.49 401.491 cv
1192.49 403.4 1190.94 404.949 1189.03 404.949 cv
1187.12 404.949 1185.57 403.4 1185.57 401.491 cv
1185.57 399.582 1187.12 398.033 1189.03 398.033 cv
cp
1187.94 409.648 mo
1192.14 409.648 1195.55 406.242 1195.55 402.043 cv
1195.55 397.842 1192.14 394.437 1187.94 394.437 cv
1183.75 394.437 1180.34 397.842 1180.34 402.043 cv
1180.34 406.242 1183.75 409.648 1187.94 409.648 cv
cp
f
1190.12 434.918 mo
1188.21 434.918 1186.66 433.367 1186.66 431.458 cv
1186.66 429.548 1188.21 427.998 1190.12 427.998 cv
1192.03 427.998 1193.57 429.548 1193.57 431.458 cv
1193.57 433.367 1192.03 434.918 1190.12 434.918 cv
cp
1189.03 424.406 mo
1184.83 424.406 1181.43 427.81 1181.43 432.009 cv
1181.43 436.21 1184.83 439.614 1189.03 439.614 cv
1193.23 439.614 1196.63 436.21 1196.63 432.009 cv
1196.63 427.81 1193.23 424.406 1189.03 424.406 cv
cp
f
1190.12 459.815 mo
1192.03 459.815 1193.57 461.363 1193.57 463.275 cv
1193.57 465.183 1192.03 466.732 1190.12 466.732 cv
1188.21 466.732 1186.66 465.183 1186.66 463.275 cv
1186.66 461.363 1188.21 459.815 1190.12 459.815 cv
cp
1189.03 471.429 mo
1193.23 471.429 1196.63 468.025 1196.63 463.825 cv
1196.63 459.625 1193.23 456.22 1189.03 456.22 cv
1184.83 456.22 1181.43 459.625 1181.43 463.825 cv
1181.43 468.025 1184.83 471.429 1189.03 471.429 cv
cp
f
819.002 292.525 mo
819.002 290.615 820.547 289.067 822.459 289.067 cv
824.365 289.067 825.916 290.615 825.916 292.525 cv
825.916 294.434 824.365 295.982 822.459 295.982 cv
820.547 295.982 819.002 294.434 819.002 292.525 cv
cp
828.975 293.077 mo
828.975 288.875 825.572 285.47 821.371 285.47 cv
817.174 285.47 813.768 288.875 813.768 293.077 cv
813.768 297.276 817.174 300.679 821.371 300.679 cv
825.572 300.679 828.975 297.276 828.975 293.077 cv
cp
f
945.178 184.314 mo
947.086 184.314 948.635 185.863 948.635 187.774 cv
948.635 189.682 947.086 191.232 945.178 191.232 cv
943.268 191.232 941.721 189.682 941.721 187.774 cv
941.721 185.863 943.268 184.314 945.178 184.314 cv
cp
944.09 195.929 mo
948.291 195.929 951.695 192.525 951.695 188.326 cv
951.695 184.126 948.291 180.72 944.09 180.72 cv
939.891 180.72 936.486 184.126 936.486 188.326 cv
936.486 192.525 939.891 195.929 944.09 195.929 cv
cp
f
945.178 222.239 mo
947.086 222.239 948.635 223.789 948.635 225.698 cv
948.635 227.607 947.086 229.156 945.178 229.156 cv
943.268 229.156 941.721 227.607 941.721 225.698 cv
941.721 223.789 943.268 222.239 945.178 222.239 cv
cp
944.09 233.855 mo
948.291 233.855 951.695 230.449 951.695 226.249 cv
951.695 222.049 948.291 218.644 944.09 218.644 cv
939.891 218.644 936.486 222.049 936.486 226.249 cv
936.486 230.449 939.891 233.855 944.09 233.855 cv
cp
f
957.463 267.583 mo
957.463 265.673 959.01 264.123 960.92 264.123 cv
962.832 264.123 964.377 265.673 964.377 267.583 cv
964.377 269.492 962.832 271.04 960.92 271.04 cv
959.01 271.04 957.463 269.492 957.463 267.583 cv
cp
967.438 268.134 mo
967.438 263.932 964.033 260.529 959.832 260.529 cv
955.635 260.529 952.228 263.932 952.228 268.134 cv
952.228 272.333 955.635 275.738 959.832 275.738 cv
964.033 275.738 967.438 272.333 967.438 268.134 cv
cp
f
1043.62 264.495 mo
1043.62 262.585 1045.17 261.037 1047.07 261.037 cv
1048.98 261.037 1050.53 262.585 1050.53 264.495 cv
1050.53 266.404 1048.98 267.953 1047.07 267.953 cv
1045.17 267.953 1043.62 266.404 1043.62 264.495 cv
cp
1053.59 265.046 mo
1053.59 260.845 1050.19 257.441 1045.99 257.441 cv
1041.79 257.441 1038.38 260.845 1038.38 265.046 cv
1038.38 269.246 1041.79 272.649 1045.99 272.649 cv
1050.19 272.649 1053.59 269.246 1053.59 265.046 cv
cp
f
1090.28 342.572 mo
1088.37 342.572 1086.82 341.025 1086.82 339.115 cv
1086.82 337.206 1088.37 335.656 1090.28 335.656 cv
1092.19 335.656 1093.74 337.206 1093.74 339.115 cv
1093.74 341.025 1092.19 342.572 1090.28 342.572 cv
cp
1089.19 332.06 mo
1084.99 332.06 1081.59 335.466 1081.59 339.668 cv
1081.59 343.866 1084.99 347.271 1089.19 347.271 cv
1093.39 347.271 1096.79 343.866 1096.79 339.668 cv
1096.79 335.466 1093.39 332.06 1089.19 332.06 cv
cp
f
980.652 414.457 mo
980.652 412.546 982.199 410.997 984.111 410.997 cv
986.019 410.997 987.568 412.546 987.568 414.457 cv
987.568 416.366 986.019 417.914 984.111 417.914 cv
982.199 417.914 980.652 416.366 980.652 414.457 cv
cp
990.629 415.007 mo
990.629 410.807 987.225 407.404 983.023 407.404 cv
978.824 407.404 975.42 410.807 975.42 415.007 cv
975.42 419.207 978.824 422.612 983.023 422.612 cv
987.225 422.612 990.629 419.207 990.629 415.007 cv
cp
f
1002.41 414.457 mo
1002.41 412.546 1003.96 410.997 1005.87 410.997 cv
1007.78 410.997 1009.33 412.546 1009.33 414.457 cv
1009.33 416.366 1007.78 417.914 1005.87 417.914 cv
1003.96 417.914 1002.41 416.366 1002.41 414.457 cv
cp
1012.38 415.007 mo
1012.38 410.807 1008.98 407.404 1004.78 407.404 cv
1000.58 407.404 997.18 410.807 997.18 415.007 cv
997.18 419.207 1000.58 422.612 1004.78 422.612 cv
1008.98 422.612 1012.38 419.207 1012.38 415.007 cv
cp
f
961.309 630.398 mo
963.064 629.648 965.098 630.461 965.85 632.219 cv
966.6 633.973 965.785 636.004 964.029 636.756 cv
962.273 637.508 960.242 636.691 959.492 634.94 cv
958.738 633.18 959.553 631.148 961.309 630.398 cv
cp
964.881 641.502 mo
968.74 639.852 970.533 635.383 968.879 631.519 cv
967.228 627.66 962.762 625.865 958.896 627.519 cv
955.035 629.172 953.244 633.639 954.896 637.504 cv
956.547 641.365 961.018 643.156 964.881 641.502 cv
cp
f
811.504 779.861 mo
809.748 780.615 807.719 779.797 806.965 778.043 cv
806.217 776.285 807.031 774.252 808.785 773.502 cv
810.541 772.752 812.574 773.565 813.324 775.322 cv
814.074 777.076 813.26 779.109 811.504 779.861 cv
cp
806.375 770.625 mo
802.514 772.277 800.719 776.744 802.373 780.607 cv
804.025 784.469 808.492 786.26 812.355 784.607 cv
816.219 782.957 818.008 778.486 816.355 774.625 cv
814.705 770.762 810.234 768.971 806.375 770.625 cv
cp
f
853.098 855.844 mo
852.346 854.086 853.16 852.053 854.916 851.303 cv
856.672 850.553 858.703 851.365 859.457 853.123 cv
860.207 854.875 859.393 856.908 857.637 857.66 cv
855.881 858.412 853.848 857.596 853.098 855.844 cv
cp
862.486 852.424 mo
860.834 848.563 856.367 846.773 852.504 848.424 cv
848.641 850.076 846.85 854.543 848.502 858.406 cv
850.154 862.269 854.625 864.06 858.488 862.406 cv
859.258 862.078 859.939 861.633 860.533 861.107 cv
869.932 861.107 li
870.887 861.107 871.66 860.332 871.66 859.377 cv
871.66 858.424 870.887 857.648 869.932 857.648 cv
862.762 857.648 li
863.273 855.99 863.225 854.148 862.486 852.424 cv
cp
f
795.867 183.871 mo
797.777 183.871 799.324 185.503 799.324 187.514 cv
799.324 189.527 797.777 191.159 795.867 191.159 cv
793.959 191.159 792.41 189.527 792.41 187.514 cv
792.41 185.503 793.959 183.871 795.867 183.871 cv
cp
790.492 188.687 mo
791.685 192.415 793.519 195.816 797.254 195.816 cv
800.988 195.816 804.018 192.623 804.018 188.687 cv
804.018 184.749 800.9 182.417 797.254 181.556 cv
795.594 181.163 793.539 180.718 792.01 180.883 cv
784.379 173.777 li
782.021 176.306 li
789.678 183.438 li
789.557 185.095 790.033 187.268 790.492 188.687 cv
cp
f
726.723 661.211 mo
728.078 662.557 728.094 664.74 726.752 666.1 cv
725.412 667.457 723.221 667.471 721.859 666.129 cv
720.506 664.785 720.492 662.6 721.836 661.24 cv
723.176 659.879 725.365 659.869 726.723 661.211 cv
cp
751.357 627.328 mo
768.91 627.328 li
781.012 640.17 li
839.588 640.17 li
867.621 612.119 li
1118.33 612.119 li
1142.1 587.62 li
1203.59 587.62 li
1203.59 584.163 li
1140.63 584.163 li
1116.86 608.662 li
866.191 608.662 li
838.156 636.711 li
782.504 636.711 li
770.402 623.873 li
749.92 623.873 li
722.398 651.56 li
722.398 656.598 li
721.258 657.596 720.164 659.291 719.295 660.685 cv
717.314 663.854 716.697 667.623 719.353 670.248 cv
722.012 672.873 726.297 672.852 728.92 670.193 cv
731.545 667.531 730.539 663.965 728.863 660.627 cv
728.219 659.344 727.072 657.535 725.857 656.519 cv
725.857 652.984 li
751.357 627.328 li
cp
f
662.68 700.475 mo
660.775 700.586 659.139 699.133 659.023 697.229 cv
658.912 695.322 660.365 693.685 662.269 693.572 cv
664.176 693.457 665.813 694.914 665.928 696.818 cv
666.039 698.725 664.586 700.361 662.68 700.475 cv
cp
730.582 684.69 mo
739.832 675.912 li
739.832 653.045 li
748.275 645.479 li
840.949 645.479 li
869.766 617.693 li
1121.8 617.693 li
1144.13 593.922 li
1203.59 593.922 li
1203.59 590.465 li
1142.63 590.465 li
1120.3 614.236 li
868.371 614.236 li
839.555 642.019 li
746.951 642.019 li
736.375 651.498 li
736.375 674.428 li
729.203 681.231 li
675.582 681.231 li
666.176 690.637 li
664.574 690.549 662.426 691.162 661.045 691.723 cv
657.584 693.123 654.475 695.144 654.693 698.873 cv
654.916 702.606 658.119 705.449 661.846 705.225 cv
665.578 705.004 667.6 701.762 668.199 698.074 cv
668.455 696.512 668.74 694.602 668.58 693.121 cv
677.014 684.69 li
730.582 684.69 li
cp
f
762.852 773.656 mo
760.945 773.648 759.402 772.094 759.412 770.185 cv
759.42 768.277 760.971 766.732 762.879 766.744 cv
764.791 766.75 766.33 768.303 766.322 770.215 cv
766.316 772.125 764.764 773.666 762.852 773.656 cv
cp
868.203 742.914 mo
868.203 642.781 li
885.396 623.764 li
1085.08 623.764 li
1090.92 627.656 li
1092.84 624.781 li
1086.13 620.307 li
883.859 620.307 li
864.746 641.449 li
864.746 741.435 li
844.461 760.758 li
801.303 760.758 li
785.744 778.107 li
772.926 778.107 li
769.279 773.56 li
769.188 773.635 li
769.236 772.168 768.855 770.336 768.525 768.836 cv
767.719 765.182 765.523 762.06 761.789 762.045 cv
758.051 762.031 755.012 765.045 754.996 768.783 cv
754.984 772.516 758.199 774.359 761.734 775.572 cv
763.191 776.072 765.482 776.594 767.09 776.357 cv
771.268 781.565 li
787.287 781.565 li
802.846 764.219 li
845.846 764.219 li
868.203 742.914 li
cp
f
925.043 643.682 mo
923.691 642.332 923.691 640.144 925.043 638.793 cv
926.391 637.441 928.582 637.441 929.932 638.793 cv
931.281 640.144 931.281 642.332 929.932 643.682 cv
928.582 645.033 926.391 645.033 925.043 643.682 cv
cp
1203.59 642.764 mo
1181.56 642.764 li
1180.55 642.764 1179.59 643.207 1178.93 643.977 cv
1166.31 658.766 li
953.633 658.766 li
936.35 641.406 li
936.051 641.104 935.703 640.879 935.338 640.711 cv
934.918 639.115 932.422 637.475 930.502 636.26 cv
927.346 634.258 923.582 633.619 920.935 636.26 cv
918.295 638.902 918.295 643.185 920.935 645.826 cv
923.582 648.469 927.156 647.482 930.502 645.826 cv
930.641 645.758 930.787 645.682 930.938 645.602 cv
931.08 645.844 931.244 646.076 931.451 646.283 cv
949.746 664.662 li
950.394 665.315 951.275 665.682 952.197 665.682 cv
1167.91 665.682 li
1168.92 665.682 1169.88 665.236 1170.54 664.469 cv
1183.16 649.678 li
1203.59 649.678 li
1205.5 649.678 1207.05 648.131 1207.05 646.221 cv
1207.05 644.31 1205.5 642.764 1203.59 642.764 cv
cp
f
929.932 664.035 mo
928.582 665.387 926.391 665.387 925.043 664.035 cv
923.691 662.685 923.691 660.498 925.043 659.148 cv
926.391 657.797 928.582 657.797 929.932 659.148 cv
931.281 660.498 931.281 662.685 929.932 664.035 cv
cp
1207.05 658.178 mo
1207.05 656.273 1205.5 654.721 1203.59 654.721 cv
1188.04 654.721 li
1187.14 654.721 1186.27 655.076 1185.62 655.715 cv
1170.64 670.428 li
949.955 670.428 li
937.771 658.994 li
936.568 657.865 934.76 657.768 933.449 658.67 cv
932.539 657.92 931.449 657.215 930.502 656.615 cv
927.346 654.615 923.582 653.975 920.935 656.615 cv
920.48 657.072 920.109 657.578 919.809 658.115 cv
908.398 647.957 li
906.1 650.539 li
918.984 662.01 li
919.123 663.531 919.771 665.016 920.935 666.18 cv
923.582 668.822 927.156 667.836 930.502 666.18 cv
931.361 665.756 932.455 665.109 933.391 664.367 cv
946.225 676.406 li
946.867 677.006 947.711 677.344 948.588 677.344 cv
1172.05 677.344 li
1172.96 677.344 1173.83 676.986 1174.47 676.352 cv
1189.46 661.637 li
1203.59 661.637 li
1205.5 661.637 1207.05 660.09 1207.05 658.178 cv
cp
f
929.068 685.666 mo
927.717 687.016 925.529 687.016 924.178 685.666 cv
922.828 684.316 922.828 682.127 924.178 680.777 cv
925.529 679.428 927.717 679.428 929.068 680.777 cv
930.418 682.127 930.418 684.316 929.068 685.666 cv
cp
1200.15 674.748 mo
1192.8 674.748 li
1191.79 674.748 1190.84 675.185 1190.18 675.947 cv
1181.53 685.984 li
948.494 685.984 li
947.129 683.473 li
946.646 682.576 945.787 681.94 944.793 681.734 cv
935.244 679.762 li
934.279 679.563 933.334 679.785 932.586 680.299 cv
931.676 679.547 930.586 678.844 929.639 678.244 cv
926.998 676.57 923.938 675.857 921.459 677.209 cv
909.699 675.203 li
909.117 678.615 li
918.697 680.248 li
917.572 682.736 918.027 685.764 920.072 687.81 cv
922.717 690.451 926.293 689.469 929.639 687.81 cv
930.506 687.383 931.613 686.727 932.555 685.975 cv
932.932 686.238 933.363 686.434 933.842 686.531 cv
941.818 688.182 li
943.394 691.094 li
944 692.207 945.168 692.902 946.434 692.902 cv
1183.11 692.902 li
1184.12 692.902 1185.08 692.465 1185.73 691.701 cv
1194.39 681.664 li
1200.15 681.664 li
1202.06 681.664 1203.6 680.115 1203.6 678.207 cv
1203.6 676.295 1202.06 674.748 1200.15 674.748 cv
cp
f
939.238 703.633 mo
937.889 704.982 935.699 704.982 934.35 703.633 cv
932.998 702.283 932.998 700.094 934.35 698.744 cv
935.699 697.394 937.889 697.394 939.238 698.744 cv
940.588 700.094 940.588 702.283 939.238 703.633 cv
cp
1200.15 697.477 mo
944.09 697.477 li
943.459 697.477 942.877 697.658 942.367 697.955 cv
941.545 697.32 940.625 696.727 939.809 696.211 cv
936.652 694.211 932.887 693.568 930.242 696.211 cv
927.602 698.852 927.602 703.137 930.242 705.777 cv
932.887 708.418 936.463 707.435 939.809 705.777 cv
940.639 705.369 941.684 704.752 942.6 704.043 cv
943.053 704.26 943.555 704.394 944.09 704.394 cv
1200.15 704.394 li
1202.06 704.394 1203.6 702.846 1203.6 700.935 cv
1203.6 699.027 1202.06 697.477 1200.15 697.477 cv
cp
f
929.932 720.244 mo
928.582 721.594 926.391 721.594 925.043 720.244 cv
923.691 718.891 923.691 716.703 925.043 715.354 cv
926.391 714.002 928.582 714.002 929.932 715.354 cv
931.281 716.703 931.281 718.891 929.932 720.244 cv
cp
1205.04 714.086 mo
937.637 714.086 li
936.305 714.086 935.158 714.852 934.582 715.961 cv
933.594 714.809 931.896 713.701 930.502 712.818 cv
928.088 711.287 925.32 710.56 922.967 711.481 cv
917.502 707.164 li
894.135 707.164 li
894.135 710.623 li
916.301 710.623 li
920.201 713.701 li
918.332 716.344 918.572 720.019 920.935 722.387 cv
923.582 725.027 927.156 724.041 930.502 722.387 cv
931.816 721.736 933.682 720.565 934.689 719.328 cv
935.297 720.328 936.387 721.002 937.637 721.002 cv
1205.04 721.002 li
1206.95 721.002 1208.5 719.453 1208.5 717.543 cv
1208.5 715.635 1206.95 714.086 1205.04 714.086 cv
cp
f
941.656 736.719 mo
939.754 736.879 938.08 735.469 937.918 733.566 cv
937.756 731.662 939.168 729.99 941.072 729.828 cv
942.977 729.664 944.648 731.076 944.809 732.981 cv
944.969 734.883 943.56 736.557 941.656 736.719 cv
cp
1208.5 728.109 mo
1208.5 726.201 1206.95 724.652 1205.04 724.652 cv
947.549 724.652 li
946.156 724.652 944.961 725.482 944.414 726.672 cv
942.914 726.713 941.035 727.275 939.504 727.758 cv
936.307 728.766 933.639 730.857 933.346 733.961 cv
910.563 733.961 li
910.563 737.42 li
933.975 737.42 li
933.975 737.402 li
935.15 739.873 937.76 741.484 940.646 741.24 cv
944.371 740.922 945.924 737.553 946.814 733.924 cv
946.982 733.25 947.137 732.404 947.225 731.535 cv
947.334 731.545 947.438 731.566 947.549 731.566 cv
1205.04 731.566 li
1206.95 731.566 1208.5 730.023 1208.5 728.109 cv
cp
f
929.584 757.232 mo
928.234 758.582 926.045 758.582 924.695 757.232 cv
923.344 755.883 923.344 753.693 924.695 752.344 cv
926.045 750.994 928.234 750.994 929.584 752.344 cv
930.934 753.693 930.934 755.883 929.584 757.232 cv
cp
1203.59 735.691 mo
965.039 735.691 li
964.092 735.691 963.182 736.082 962.527 736.769 cv
948.828 751.252 li
935.406 751.252 li
934.596 751.252 933.861 751.541 933.271 752.008 cv
932.328 751.203 931.162 750.447 930.156 749.81 cv
926.998 747.81 923.232 747.168 920.588 749.81 cv
917.947 752.453 917.947 756.734 920.588 759.377 cv
923.232 762.019 926.809 761.031 930.156 759.377 cv
931.078 758.92 932.273 758.207 933.254 757.394 cv
933.846 757.869 934.588 758.164 935.406 758.164 cv
950.318 758.164 li
951.269 758.164 952.178 757.773 952.83 757.086 cv
966.529 742.606 li
1203.59 742.606 li
1205.5 742.606 1207.05 741.057 1207.05 739.148 cv
1207.05 737.24 1205.5 735.691 1203.59 735.691 cv
cp
f
926.896 779.291 mo
924.994 779.453 923.32 778.041 923.158 776.141 cv
923.098 775.424 923.26 774.74 923.588 774.158 cv
923.816 774.158 li
923.816 773.826 li
924.387 773.041 925.269 772.492 926.31 772.402 cv
927.188 772.328 928.006 772.596 928.66 773.082 cv
928.736 773.143 928.809 773.205 928.889 773.258 cv
929.533 773.826 929.971 774.629 930.049 775.553 cv
930.209 777.457 928.801 779.129 926.896 779.291 cv
cp
1207.05 746.928 mo
1207.05 745.019 1205.5 743.471 1203.59 743.471 cv
972.225 743.471 li
971.24 743.471 970.301 743.894 969.641 744.629 cv
955.264 760.758 li
937.637 760.758 li
936.779 760.758 935.957 761.076 935.318 761.656 cv
928.49 767.832 li
927.959 768.31 927.611 768.918 927.453 769.566 cv
926.525 769.781 925.582 770.068 924.746 770.332 cv
924.4 770.441 924.064 770.566 923.734 770.699 cv
910.563 770.699 li
910.563 774.158 li
919.355 774.158 li
918.768 775.16 918.465 776.32 918.576 777.644 cv
918.893 781.365 922.166 784.127 925.887 783.81 cv
929.611 783.494 931.164 780.127 932.057 776.498 cv
932.268 775.639 932.465 774.502 932.521 773.391 cv
932.734 773.269 932.941 773.129 933.131 772.957 cv
938.971 767.674 li
956.814 767.674 li
957.801 767.674 958.738 767.254 959.398 766.516 cv
973.775 750.387 li
1203.59 750.387 li
1205.5 750.387 1207.05 748.84 1207.05 746.928 cv
cp
f
947.947 778.096 mo
949.803 777.652 951.67 778.791 952.117 780.648 cv
952.563 782.504 951.422 784.369 949.564 784.818 cv
947.707 785.269 945.84 784.125 945.394 782.266 cv
944.947 780.408 946.09 778.541 947.947 778.096 cv
cp
945.188 792.31 mo
947.037 788.381 li
948.449 788.063 950.082 787.289 951.424 786.627 cv
954.781 784.979 957.293 782.1 956.42 778.469 cv
955.545 774.836 951.894 772.602 948.26 773.473 cv
944.627 774.352 943.6 777.914 943.268 781.635 cv
943.125 783.199 943.164 785.621 943.809 787.119 cv
942.992 788.854 li
862.307 788.854 li
858.748 786.078 li
856.621 788.803 li
861.117 792.31 li
945.188 792.31 li
cp
f
651.189 836.494 mo
651.939 838.248 651.125 840.281 649.369 841.033 cv
647.615 841.783 645.584 840.969 644.832 839.215 cv
644.082 837.457 644.896 835.428 646.65 834.672 cv
647.949 834.119 649.393 834.422 650.365 835.326 cv
650.365 835.389 li
650.434 835.389 li
650.746 835.695 651.008 836.065 651.189 836.494 cv
cp
1043.38 841.152 mo
1007.94 878.32 li
768.658 877.463 li
724.139 831.932 li
650.506 831.932 li
648.602 831.023 646.334 830.9 644.24 831.795 cv
640.377 833.447 638.586 837.916 640.238 841.777 cv
641.889 845.639 646.359 847.43 650.221 845.777 cv
654.084 844.127 655.875 839.658 654.221 835.795 cv
654.162 835.656 654.09 835.523 654.023 835.389 cv
722.682 835.389 li
767.199 880.912 li
1009.41 881.783 li
1044.86 844.609 li
1111.25 844.609 li
1203.81 938.453 li
1206.28 936.025 li
1112.7 841.152 li
1043.38 841.152 li
cp
f
780.412 972.717 mo
781.799 974.027 781.869 976.211 780.564 977.604 cv
779.26 978.996 777.072 979.066 775.684 977.764 cv
774.289 976.457 774.215 974.269 775.521 972.875 cv
776.828 971.479 779.014 971.412 780.412 972.717 cv
cp
1044.8 972.641 mo
1027.96 956.777 li
1026.24 949.201 li
999.623 922.563 li
881.699 922.563 li
865.275 940.74 li
809.566 940.74 li
802.002 948.342 li
784.072 948.342 li
776.141 957.004 li
776.141 968.065 li
774.961 969.066 773.848 970.898 772.973 972.383 cv
771.072 975.607 770.555 979.391 773.279 981.945 cv
776.008 984.5 780.287 984.365 782.844 981.639 cv
785.394 978.912 784.299 975.369 782.535 972.078 cv
781.891 970.871 780.775 969.201 779.598 968.195 cv
779.598 958.35 li
785.594 951.799 li
803.441 951.799 li
811.004 944.195 li
866.81 944.195 li
883.234 926.019 li
998.191 926.019 li
1023.09 950.941 li
1024.83 958.574 li
1043.43 976.1 li
1073.61 976.1 li
1084.12 987.545 li
1086.67 985.211 li
1075.13 972.641 li
1044.8 972.641 li
cp
f
874.582 969.793 mo
872.684 970.014 870.971 968.654 870.752 966.76 cv
870.529 964.861 871.887 963.144 873.787 962.928 cv
875.684 962.703 877.398 964.063 877.619 965.963 cv
877.836 967.859 876.478 969.572 874.582 969.793 cv
cp
1042.63 979.465 mo
1021.64 960.24 li
1021.64 953.604 li
996.85 929.037 li
908.121 929.037 li
877.033 959.67 li
875.535 959.756 873.674 960.373 872.156 960.904 cv
868.625 962.137 865.785 964.691 866.217 968.404 cv
866.646 972.111 870.002 974.775 873.713 974.344 cv
877.424 973.912 878.873 970.496 879.656 966.844 cv
879.959 965.43 880.199 963.277 879.875 961.725 cv
909.541 932.496 li
995.432 932.496 li
1018.18 955.047 li
1018.18 961.762 li
1041.28 982.92 li
1070.69 982.92 li
1076.03 987.67 li
1078.33 985.086 li
1072 979.465 li
1042.63 979.465 li
cp
f
847.869 897.166 mo
846.113 897.918 844.084 897.1 843.33 895.35 cv
842.58 893.592 843.394 891.559 845.15 890.809 cv
846.906 890.059 848.939 890.871 849.688 892.629 cv
850.438 894.383 849.623 896.414 847.869 897.166 cv
cp
1073.07 890.322 mo
1064.61 877.891 li
1018.72 877.891 li
1013.36 883.721 li
854.404 883.721 li
850.303 888.852 li
848.199 887.269 845.332 886.82 842.738 887.93 cv
838.875 889.58 837.082 894.053 838.738 897.912 cv
840.389 901.775 844.855 903.563 848.719 901.912 cv
852.58 900.262 854.371 895.789 852.721 891.93 cv
852.67 891.81 852.607 891.697 852.551 891.58 cv
856.066 887.18 li
1014.87 887.18 li
1020.24 881.35 li
1062.78 881.35 li
1069.61 891.391 li
1069.61 952.191 li
1103.82 987.578 li
1106.3 985.174 li
1073.07 950.791 li
1073.07 890.322 li
cp
f
805.498 704.816 mo
805.715 706.711 804.359 708.428 802.461 708.652 cv
800.566 708.873 798.852 707.512 798.629 705.615 cv
798.557 704.986 798.668 704.385 798.902 703.846 cv
799.094 703.723 799.273 703.582 799.443 703.416 cv
799.775 703.094 800.025 702.719 800.201 702.316 cv
800.629 702.039 801.119 701.844 801.66 701.781 cv
803.557 701.565 805.275 702.92 805.498 704.816 cv
cp
696.453 700.641 mo
695.098 701.984 692.912 701.979 691.564 700.623 cv
690.221 699.269 690.225 697.082 691.58 695.734 cv
692.934 694.389 695.123 694.398 696.471 695.752 cv
696.935 696.219 697.228 696.789 697.371 697.387 cv
697.359 697.508 697.334 697.623 697.334 697.748 cv
697.334 698.027 697.377 698.297 697.441 698.559 cv
697.357 699.318 697.039 700.06 696.453 700.641 cv
cp
700.793 694.289 mo
700.225 694.289 699.695 694.44 699.223 694.685 cv
698.506 694.156 697.74 693.658 697.051 693.219 cv
693.896 691.211 690.135 690.557 687.484 693.19 cv
684.834 695.822 684.816 700.104 687.451 702.754 cv
690.088 705.406 693.664 704.43 697.021 702.785 cv
697.853 702.377 698.908 701.76 699.828 701.051 cv
700.137 701.141 700.455 701.203 700.793 701.203 cv
756.693 701.203 li
757.078 701.203 757.463 701.139 757.828 701.014 cv
773.723 695.494 li
786.924 695.494 li
794.553 703.344 li
794.875 703.674 795.246 703.92 795.641 704.094 cv
795.894 705.164 796.266 706.277 796.605 707.248 cv
797.846 710.777 800.402 713.615 804.107 713.182 cv
807.82 712.752 810.48 709.394 810.045 705.682 cv
809.611 701.971 806.197 700.527 802.543 699.744 cv
801.857 699.598 800.998 699.469 800.119 699.41 cv
799.963 699.094 799.771 698.791 799.514 698.527 cv
790.869 689.627 li
790.217 688.957 789.324 688.578 788.387 688.578 cv
773.141 688.578 li
772.754 688.578 772.371 688.644 772.008 688.769 cv
756.109 694.289 li
700.793 694.289 li
cp
f
658.906 787.887 mo
660.258 786.537 662.447 786.533 663.797 787.885 cv
665.148 789.232 665.148 791.424 663.801 792.773 cv
662.449 794.125 660.26 794.125 658.908 792.777 cv
658.412 792.281 658.1 791.672 657.969 791.033 cv
658.018 790.656 658 790.287 657.932 789.932 cv
658.018 789.185 658.332 788.461 658.906 787.887 cv
cp
654.008 793.998 mo
654.189 794.027 654.373 794.039 654.553 794.039 cv
655.057 794.039 655.539 793.918 655.978 793.715 cv
656.75 794.293 657.588 794.836 658.338 795.31 cv
661.498 797.31 665.264 797.947 667.902 795.307 cv
670.545 792.664 670.545 788.381 667.9 785.74 cv
665.254 783.1 661.682 784.086 658.334 785.744 cv
657.563 786.125 656.6 786.688 655.734 787.336 cv
655.527 787.262 655.313 787.201 655.088 787.166 cv
645.15 785.594 li
643.266 785.307 641.494 786.586 641.193 788.473 cv
640.896 790.357 642.182 792.129 644.07 792.428 cv
654.008 793.998 li
cp
f
796.891 966.779 mo
795.48 968.07 793.293 967.975 792.004 966.563 cv
790.717 965.154 790.814 962.967 792.227 961.678 cv
793.635 960.389 795.822 960.486 797.109 961.894 cv
798.4 963.309 798.297 965.496 796.891 966.779 cv
cp
814.611 960.576 mo
802.721 960.576 li
802.523 960.576 802.332 960.604 802.144 960.635 cv
801.902 960.25 801.629 959.877 801.309 959.529 cv
798.477 956.43 793.668 956.215 790.568 959.047 cv
787.465 961.883 787.254 966.691 790.086 969.791 cv
792.918 972.889 797.727 973.106 800.83 970.269 cv
801.701 969.475 802.334 968.519 802.746 967.494 cv
814.611 967.494 li
816.518 967.494 818.068 965.945 818.068 964.037 cv
818.068 962.125 816.518 960.576 814.611 960.576 cv
cp
f
842.158 953.019 mo
842.799 951.221 844.779 950.287 846.57 950.928 cv
848.371 951.566 849.314 953.543 848.668 955.344 cv
848.031 957.144 846.051 958.08 844.25 957.441 cv
842.455 956.793 841.516 954.82 842.158 953.019 cv
cp
851.072 960.162 mo
850.904 959.762 850.662 959.416 850.377 959.121 cv
850.814 957.807 851.033 956.158 851.203 954.779 cv
851.66 951.066 850.623 947.387 847.103 946.133 cv
843.586 944.879 839.717 946.713 838.461 950.229 cv
837.207 953.746 839.629 956.56 842.559 958.873 cv
843.127 959.322 843.869 959.84 844.66 960.293 cv
844.357 961.094 844.344 962.004 844.703 962.856 cv
847.73 970.004 li
848.291 971.324 849.57 972.115 850.918 972.115 cv
851.367 972.115 851.822 972.027 852.26 971.842 cv
854.019 971.096 854.844 969.07 854.098 967.31 cv
851.072 960.162 li
cp
f
997.867 937.787 mo
992.424 933.434 li
929.894 933.434 li
919.853 944.43 li
919.853 971.822 li
904.594 986.875 li
907.021 989.34 li
923.309 973.269 li
923.309 945.773 li
931.422 936.889 li
991.213 936.889 li
994.41 939.447 li
994.41 975.012 li
1005.2 987.508 li
1007.82 985.246 li
997.867 973.727 li
997.867 937.787 li
cp
f
990.953 943.391 mo
985.928 939.481 li
932.438 939.481 li
925.975 947.287 li
925.975 974.861 li
915.814 985.162 li
918.275 987.592 li
929.432 976.283 li
929.432 948.533 li
934.064 942.941 li
984.742 942.941 li
987.494 945.082 li
987.494 978.416 li
997.688 989.287 li
1000.21 986.924 li
990.953 977.049 li
990.953 943.391 li
cp
f
965.883 952.269 mo
960.443 945.533 li
938.465 945.533 li
931.955 953.793 li
931.955 976.609 li
923.787 985.185 li
926.293 987.57 li
935.412 977.994 li
935.412 954.994 li
940.144 948.992 li
958.793 948.992 li
962.426 953.492 li
962.426 972.424 li
980.256 989.359 li
982.635 986.854 li
965.883 970.941 li
965.883 952.269 li
cp
f
1113.34 629.19 mo
1114.7 627.84 1116.88 627.84 1118.23 629.19 cv
1119.58 630.539 1119.58 632.729 1118.23 634.078 cv
1116.88 635.43 1114.7 635.43 1113.34 634.078 cv
1111.99 632.729 1111.99 630.539 1113.34 629.19 cv
cp
1105.06 627.922 mo
1105.06 634.84 li
1110.46 634.84 li
1111.24 635.398 1112.08 635.883 1112.77 636.223 cv
1116.12 637.879 1119.7 638.865 1122.34 636.223 cv
1124.98 633.582 1124.98 629.297 1122.34 626.656 cv
1119.7 624.016 1115.93 624.656 1112.77 626.656 cv
1112.11 627.078 1111.37 627.551 1110.68 628.055 cv
1110.68 627.922 li
1105.06 627.922 li
cp
f
1028.74 820.465 mo
1028.74 818.553 1030.29 817.004 1032.2 817.004 cv
1034.11 817.004 1035.66 818.553 1035.66 820.465 cv
1035.66 822.373 1034.11 823.92 1032.2 823.92 cv
1030.29 823.92 1028.74 822.373 1028.74 820.465 cv
cp
1211.19 896.445 mo
1137.57 822.104 li
1135.94 820.465 1133.73 819.541 1131.42 819.541 cv
1041.95 819.541 li
1040.79 819.541 1039.68 819.773 1038.67 820.191 cv
1038.26 816.377 1035.03 813.408 1031.11 813.408 cv
1026.91 813.408 1023.51 816.813 1023.51 821.016 cv
1023.51 825.215 1026.91 828.619 1031.11 828.619 cv
1031.88 828.619 1032.62 828.502 1033.32 828.291 cv
1033.37 833.016 1037.21 836.83 1041.95 836.83 cv
1127.82 836.83 li
1198.9 908.607 li
1200.59 910.32 1202.82 911.172 1205.04 911.172 cv
1207.24 911.172 1209.44 910.338 1211.13 908.668 cv
1214.52 905.31 1214.55 899.838 1211.19 896.445 cv
cp
f
1031.5 780.91 mo
1029.16 780.91 1027.26 779.012 1027.26 776.67 cv
1027.26 774.326 1029.16 772.428 1031.5 772.428 cv
1033.84 772.428 1035.74 774.326 1035.74 776.67 cv
1035.74 779.012 1033.84 780.91 1031.5 780.91 cv
cp
1141.8 767.734 mo
1029.85 767.734 li
1025.08 767.734 1021.21 771.606 1021.21 776.377 cv
1021.21 781.152 1025.08 785.023 1029.85 785.023 cv
1138.13 785.023 li
1198.83 847.877 li
1200.53 849.633 1202.78 850.516 1205.04 850.516 cv
1207.21 850.516 1209.37 849.711 1211.05 848.09 cv
1214.48 844.773 1214.58 839.303 1211.26 835.869 cv
1148.02 770.373 li
1146.39 768.688 1144.14 767.734 1141.8 767.734 cv
cp
f
1059.74 861.994 mo
1057.4 861.994 1055.5 860.094 1055.5 857.752 cv
1055.5 855.408 1057.4 853.512 1059.74 853.512 cv
1062.08 853.512 1063.98 855.408 1063.98 857.752 cv
1063.98 860.094 1062.08 861.994 1059.74 861.994 cv
cp
1099.57 946.637 mo
1099.57 868.816 li
1099.57 866.685 1098.78 864.629 1097.36 863.047 cv
1087.29 851.81 li
1085.65 849.979 1083.31 848.932 1080.85 848.932 cv
1057.82 848.932 li
1053.05 848.932 1049.18 852.803 1049.18 857.576 cv
1049.18 862.35 1053.05 866.221 1057.82 866.221 cv
1076.99 866.221 li
1082.28 872.121 li
1082.28 950.07 li
1082.28 952.279 1083.12 954.402 1084.63 956.004 cv
1122.97 996.633 li
1124.68 998.435 1126.97 999.344 1129.27 999.344 cv
1131.39 999.344 1133.53 998.563 1135.2 996.986 cv
1138.67 993.711 1138.82 988.242 1135.55 984.766 cv
1099.57 946.637 li
cp
f
1101.3 436.265 mo
1099.75 436.265 1098.49 435.007 1098.49 433.455 cv
1098.49 431.905 1099.75 430.645 1101.3 430.645 cv
1102.86 430.645 1104.11 431.905 1104.11 433.455 cv
1104.11 435.007 1102.86 436.265 1101.3 436.265 cv
cp
1203.59 343.405 mo
1184.52 343.405 li
1096.43 430.972 li
1094.4 432.992 1094.39 436.274 1096.41 438.307 cv
1097.42 439.327 1098.76 439.837 1100.09 439.837 cv
1101.41 439.837 1102.74 439.333 1103.74 438.328 cv
1188.8 353.778 li
1203.59 353.778 li
1206.46 353.778 1208.78 351.457 1208.78 348.591 cv
1208.78 345.728 1206.46 343.405 1203.59 343.405 cv
cp
f
934.402 435.407 mo
934.402 437.853 932.42 439.837 929.973 439.837 cv
927.527 439.837 925.543 437.853 925.543 435.407 cv
925.543 432.96 927.527 430.976 929.973 430.976 cv
932.42 430.976 934.402 432.96 934.402 435.407 cv
cp
1029.91 410.113 mo
1032.35 410.113 1034.34 412.097 1034.34 414.543 cv
1034.34 416.99 1032.35 418.974 1029.91 418.974 cv
1027.46 418.974 1025.48 416.99 1025.48 414.543 cv
1025.48 412.097 1027.46 410.113 1029.91 410.113 cv
cp
920.355 435.298 mo
920.355 440.074 924.225 443.943 929 443.943 cv
1017.57 443.943 li
1019.82 443.943 1021.97 443.068 1023.59 441.506 cv
1035.87 429.607 li
1037.55 427.978 1038.5 425.739 1038.5 423.4 cv
1038.5 413.652 li
1038.5 408.879 1034.63 405.007 1029.85 405.007 cv
1025.08 405.007 1021.21 408.879 1021.21 413.652 cv
1021.21 419.738 li
1014.07 426.654 li
929 426.654 li
924.225 426.654 920.355 430.524 920.355 435.298 cv
cp
f
628.332 900.367 mo
628.332 905.619 624.076 909.875 618.824 909.875 cv
613.57 909.875 609.315 905.619 609.315 900.367 cv
609.315 895.115 613.57 890.857 618.824 890.857 cv
624.076 890.857 628.332 895.115 628.332 900.367 cv
1 1 1 rgb
f
778.834 284.375 mo
784.088 284.375 788.344 288.63 788.344 293.884 cv
788.344 299.136 784.088 303.392 778.834 303.392 cv
773.584 303.392 769.326 299.136 769.326 293.884 cv
769.326 288.63 773.584 284.375 778.834 284.375 cv
f
752.584 332.751 mo
752.584 338.002 748.33 342.26 743.076 342.26 cv
737.824 342.26 733.566 338.002 733.566 332.751 cv
733.566 327.498 737.824 323.243 743.076 323.243 cv
748.33 323.243 752.584 327.498 752.584 332.751 cv
f
728.559 354.21 mo
728.559 359.464 724.301 363.718 719.051 363.718 cv
713.795 363.718 709.541 359.464 709.541 354.21 cv
709.541 348.96 713.795 344.702 719.051 344.702 cv
724.301 344.702 728.559 348.96 728.559 354.21 cv
f
689.842 380.854 mo
689.842 386.107 685.584 390.363 680.332 390.363 cv
675.078 390.363 670.824 386.107 670.824 380.854 cv
670.824 375.601 675.078 371.345 680.332 371.345 cv
685.584 371.345 689.842 375.601 689.842 380.854 cv
f
997.295 208.097 mo
997.295 213.348 993.035 217.605 987.785 217.605 cv
982.531 217.605 978.275 213.348 978.275 208.097 cv
978.275 202.843 982.531 198.588 987.785 198.588 cv
993.035 198.588 997.295 202.843 997.295 208.097 cv
f
1038.78 372.38 mo
1038.78 377.632 1034.52 381.888 1029.27 381.888 cv
1024.02 381.888 1019.76 377.632 1019.76 372.38 cv
1019.76 367.128 1024.02 362.872 1029.27 362.872 cv
1034.52 362.872 1038.78 367.128 1038.78 372.38 cv
f
1138.61 335.024 mo
1138.61 340.277 1134.35 344.533 1129.1 344.533 cv
1123.85 344.533 1119.59 340.277 1119.59 335.024 cv
1119.59 329.771 1123.85 325.515 1129.1 325.515 cv
1134.35 325.515 1138.61 329.771 1138.61 335.024 cv
f
703.096 515.908 mo
703.096 521.16 698.84 525.416 693.586 525.416 cv
688.336 525.416 684.078 521.16 684.078 515.908 cv
684.078 510.654 688.336 506.398 693.586 506.398 cv
698.84 506.398 703.096 510.654 703.096 515.908 cv
f
789.453 169.005 mo
789.453 174.288 785.168 178.57 779.887 178.57 cv
774.603 178.57 770.322 174.288 770.322 169.005 cv
770.322 163.722 774.603 159.439 779.887 159.439 cv
785.168 159.439 789.453 163.722 789.453 169.005 cv
cp
f
1004.98 169.005 mo
1004.98 174.288 1000.7 178.57 995.416 178.57 cv
990.133 178.57 985.85 174.288 985.85 169.005 cv
985.85 163.722 990.133 159.439 995.416 159.439 cv
1000.7 159.439 1004.98 163.722 1004.98 169.005 cv
cp
f
1106.36 630.141 mo
1106.36 635.424 1102.08 639.707 1096.79 639.707 cv
1091.51 639.707 1087.23 635.424 1087.23 630.141 cv
1087.23 624.857 1091.51 620.576 1096.79 620.576 cv
1102.08 620.576 1106.36 624.857 1106.36 630.141 cv
cp
f
909.408 644.172 mo
909.408 649.457 905.127 653.74 899.842 653.74 cv
894.56 653.74 890.275 649.457 890.275 644.172 cv
890.275 638.891 894.56 634.607 899.842 634.607 cv
905.127 634.607 909.408 638.891 909.408 644.172 cv
cp
f
836.928 662.225 mo
836.928 667.504 832.641 671.789 827.361 671.789 cv
822.076 671.789 817.795 667.504 817.795 662.225 cv
817.795 656.94 822.076 652.656 827.361 652.656 cv
832.641 652.656 836.928 656.94 836.928 662.225 cv
cp
f
778.084 626.219 mo
778.084 631.502 773.799 635.785 768.518 635.785 cv
763.234 635.785 758.953 631.502 758.953 626.219 cv
758.953 620.935 763.234 616.652 768.518 616.652 cv
773.799 616.652 778.084 620.935 778.084 626.219 cv
cp
f
700.793 640.982 mo
700.793 646.269 696.51 650.553 691.227 650.553 cv
685.945 650.553 681.66 646.269 681.66 640.982 cv
681.66 635.703 685.945 631.418 691.227 631.418 cv
696.51 631.418 700.793 635.703 700.793 640.982 cv
cp
f
765.768 660.484 mo
765.768 665.769 761.484 670.053 756.201 670.053 cv
750.92 670.053 746.635 665.769 746.635 660.484 cv
746.635 655.203 750.92 650.918 756.201 650.918 cv
761.484 650.918 765.768 655.203 765.768 660.484 cv
cp
f
857.453 703.06 mo
857.453 708.344 853.172 712.627 847.889 712.627 cv
842.607 712.627 838.322 708.344 838.322 703.06 cv
838.322 697.777 842.607 693.49 847.889 693.49 cv
853.172 693.49 857.453 697.777 857.453 703.06 cv
cp
f
990.254 767.322 mo
990.254 772.606 985.973 776.891 980.688 776.891 cv
975.406 776.891 971.121 772.606 971.121 767.322 cv
971.121 762.039 975.406 757.758 980.688 757.758 cv
985.973 757.758 990.254 762.039 990.254 767.322 cv
cp
f
895.057 708.894 mo
895.057 714.178 890.775 718.461 885.49 718.461 cv
880.209 718.461 875.924 714.178 875.924 708.894 cv
875.924 703.609 880.209 699.326 885.49 699.326 cv
890.775 699.326 895.057 703.609 895.057 708.894 cv
cp
f
910.563 678.207 mo
910.563 683.49 906.279 687.773 900.998 687.773 cv
895.711 687.773 891.432 683.49 891.432 678.207 cv
891.432 672.924 895.711 668.639 900.998 668.639 cv
906.279 668.639 910.563 672.924 910.563 678.207 cv
cp
f
913.268 739.148 mo
913.268 744.432 908.986 748.715 903.701 748.715 cv
898.42 748.715 894.135 744.432 894.135 739.148 cv
894.135 733.865 898.42 729.582 903.701 729.582 cv
908.986 729.582 913.268 733.865 913.268 739.148 cv
cp
f
913.268 773.041 mo
913.268 778.324 908.986 782.607 903.701 782.607 cv
898.42 782.607 894.135 778.324 894.135 773.041 cv
894.135 767.758 898.42 763.477 903.701 763.477 cv
908.986 763.477 913.268 767.758 913.268 773.041 cv
cp
f
860.48 782.607 mo
860.48 787.891 856.199 792.174 850.914 792.174 cv
845.633 792.174 841.348 787.891 841.348 782.607 cv
841.348 777.324 845.633 773.041 850.914 773.041 cv
856.199 773.041 860.48 777.324 860.48 782.607 cv
cp
f
833.744 823.869 mo
833.744 829.148 829.459 833.435 824.176 833.435 cv
818.891 833.435 814.611 829.148 814.611 823.869 cv
814.611 818.582 818.891 814.303 824.176 814.303 cv
829.459 814.303 833.744 818.582 833.744 823.869 cv
cp
f
925.316 836.826 mo
925.316 842.109 921.029 846.394 915.75 846.394 cv
910.465 846.394 906.184 842.109 906.184 836.826 cv
906.184 831.545 910.465 827.26 915.75 827.26 cv
921.029 827.26 925.316 831.545 925.316 836.826 cv
cp
f
887.711 860.457 mo
887.711 865.74 883.428 870.023 878.143 870.023 cv
872.863 870.023 868.578 865.74 868.578 860.457 cv
868.578 855.174 872.863 850.891 878.143 850.891 cv
883.428 850.891 887.711 855.174 887.711 860.457 cv
cp
f
774.771 833.435 mo
774.771 838.715 770.49 843 765.207 843 cv
759.926 843 755.639 838.715 755.639 833.435 cv
755.639 828.148 759.926 823.869 765.207 823.869 cv
770.49 823.869 774.771 828.148 774.771 833.435 cv
cp
f
742.428 870.053 mo
742.428 875.338 738.144 879.621 732.859 879.621 cv
727.58 879.621 723.295 875.338 723.295 870.053 cv
723.295 864.769 727.58 860.486 732.859 860.486 cv
738.144 860.486 742.428 864.769 742.428 870.053 cv
cp
f
689.81 833.435 mo
689.81 838.715 685.529 843 680.246 843 cv
674.965 843 670.68 838.715 670.68 833.435 cv
670.68 828.148 674.965 823.869 680.246 823.869 cv
685.529 823.869 689.81 828.148 689.81 833.435 cv
cp
f
647.228 792.174 mo
647.228 797.457 642.945 801.74 637.664 801.74 cv
632.381 801.74 628.098 797.457 628.098 792.174 cv
628.098 786.894 632.381 782.607 637.664 782.607 cv
642.945 782.607 647.228 786.894 647.228 792.174 cv
cp
f
671.307 905.947 mo
671.307 911.615 666.826 916.205 661.303 916.205 cv
655.775 916.205 651.297 911.615 651.297 905.947 cv
651.297 900.283 655.775 895.688 661.303 895.688 cv
666.826 895.688 671.307 900.283 671.307 905.947 cv
cp
f
831.451 966.063 mo
831.451 971.729 826.969 976.32 821.445 976.32 cv
815.916 976.32 811.439 971.729 811.439 966.063 cv
811.439 960.398 815.916 955.803 821.445 955.803 cv
826.969 955.803 831.451 960.398 831.451 966.063 cv
cp
f
860.92 977.279 mo
860.92 982.945 856.441 987.539 850.914 987.539 cv
845.389 987.539 840.908 982.945 840.908 977.279 cv
840.908 971.615 845.389 967.019 850.914 967.019 cv
856.441 967.019 860.92 971.615 860.92 977.279 cv
cp
f
897.715 950.07 mo
897.715 955.736 893.238 960.33 887.711 960.33 cv
882.184 960.33 877.705 955.736 877.705 950.07 cv
877.705 944.404 882.184 939.81 887.711 939.81 cv
893.238 939.81 897.715 944.404 897.715 950.07 cv
cp
f
828.496 745.199 mo
828.496 750.482 824.215 754.766 818.93 754.766 cv
813.648 754.766 809.363 750.482 809.363 745.199 cv
809.363 739.916 813.648 735.633 818.93 735.633 cv
824.215 735.633 828.496 739.916 828.496 745.199 cv
cp
f
771.658 693.49 mo
771.658 698.773 767.377 703.06 762.094 703.06 cv
756.813 703.06 752.527 698.773 752.527 693.49 cv
752.527 688.211 756.813 683.928 762.094 683.928 cv
767.377 683.928 771.658 688.211 771.658 693.49 cv
cp
f
732.326 723.922 mo
732.326 729.207 728.045 733.49 722.762 733.49 cv
717.48 733.49 713.193 729.207 713.193 723.922 cv
713.193 718.644 717.48 714.357 722.762 714.357 cv
728.045 714.357 732.326 718.644 732.326 723.922 cv
cp
f
744.156 756.152 mo
744.156 761.43 739.875 765.715 734.59 765.715 cv
729.307 765.715 725.023 761.43 725.023 756.152 cv
725.023 750.865 729.307 746.586 734.59 746.586 cv
739.875 746.586 744.156 750.865 744.156 756.152 cv
cp
f
785.705 729.352 mo
785.705 734.633 781.424 738.918 776.141 738.918 cv
770.859 738.918 766.574 734.633 766.574 729.352 cv
766.574 724.068 770.859 719.787 776.141 719.787 cv
781.424 719.787 785.705 724.068 785.705 729.352 cv
cp
f
grestore
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 19.1.0
%%For: (user) ()
%%Title: (plata_2.eps)
%%CreationDate: 5/12/2016 1:09 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6Bj2NJdOoo2cZSo1OP:^4+P4=-[Lid]Chtf`IDJ6"5Xn;MQL=HoG^fOH4!L^T9+k(hBoaN/n%;F<*6KigA'`5pgUGd<rFW1g
%4BZIu[8\geMl(&&"oaSQgV7X`ITkWe\lZ6f\#TDuW7fqm[&R!4]A@;03o-XLqN"7Tn=jqi^JkR/UIM$OB47o>WLctZd[#6i=`6]t
%Xj23g=7D(O"78JDr45P7BE7tTE;snCS3ZsKY=Hd/Z$G3>-YrRC=;q/tpMhiIWHW][9!@)dI_LT7V(GJthN-A*q1/`S.[]kC3Vp!W
%NfGXg7Si.tUoik,hRruFQnRg5!U4VXO!ZXXItmflr6#K]5lAAc'E<R9D"o[]D&)Dh,P19iQ8+.@%6UED\Fd,(3g`8J!&DTQ`"!hV
%kNta8(\(pZL/E%#Mt6o3s+hWC)/qstY_ipme$+d?(`%_M000mIgCK4>XW",#*;r`qr`gp8N@M?7UQ2\1l0[+&9uiPrL\bG_hhX=s
%S+RiiSB%j1cJh9n(,`%=3l#@&_PaFXb5YHn%P"$5W(.!DC@lK[98+LVj^nI>]CI0JiL+GDST`LFBYEB$/t.@U&n\:HE'-em0T%de
%J$d_@/pN\9ZbpTCrBFmV3M3OE!om^rGTIsI[7bVPe#AthRnHdQ3uE^D,2"?7H7bsqh^Sd"+!/!1B`Amgs/-W-gX,7Tbnq,C3a@0.
%dCrJ*Z&bkCR^Mh>3DQB.J$'C62i/[rXV:ACq@ERbL?Q)]/ds^efqJuL-3jJ:?SCNMi,H0QV]VOQ>5e.qo=4JJ^ZJ.rekoCk'30C]
%%\7UAY]KGrrc,+qa*_#LkZ"Q=#5pVt;lnL'pT>?pnE`OHq3CgI5NDc&:OchWOrrog!o7Ph&N*a/D.%(EB>iUqV-3$spkNCqmJ7ps
%983'g*>/gVhRd$&'!\fX>Bgj"1GJeS%CDb1R&\p,pS.W2h:GH$gO?b4V<tBD)Y=R"[76_^FMHP/+6D5.m<Whe,n-hrH@N@aB/oWh
%<(R7<SjE+sU0dM7E**;B:Bo[XoM.u_7*Smofi%WYH<`ErJ`Rbh]g=f(d]'TLld`jUVr'Wh*4/n/AFpJK-St#%nPAA:'9->JC$me]
%TA`pQK>@jcCeC<+Sh91aC*rdsRV%C8AtrBS8Tt2*?eT,lcO/(tG5Wg*1%,'$5AE(@h=G0!*O8>.;m/*Rr?'j%PY8s^=*\e\p*ff:
%Z;1i*;nM\FB46)[G$!b\gNniSID8iDDo_n#,OKIDa7Ue$`km2>hMY89Dk4@Go+q$q/+&/%3GuC"%d>$tNn&:9io66WeMQ@-rARMC
%b4T.*4\5Q)/CD5h^"@d*L(XGkY#f&p<'!7Hph@8mpXa\c8O"iU/e[<R3@#%MW*u[SW=657T%4jg:=S>?<oLk1WOCkXr298kB[`#`
%VIA8o=*UrFK/QN2NW,k5qPr([<'ND1?-o`W3L=?bK"0dV7&0?$-n#<YWnk1Hab.`C3RIP:Z;LCZ",.iW6_VK-Yi[0;NR9Je48VE+
%E6GU0(RCo"_c!7X=ueFC7^$.AJJB(TjBM/Mai%N#F$rc?ZPm,_(XhWlh+._l%i5ujpM*Zf.c"dE'7K<_k';2lT`)B^Z`_<Lfg"An
%p*tP[H.Yu44>*.mXo2RsN6&%slZ,)*H1KmZBg"*0^g:(eeqq!:7NRa<DO=AT>dS,7Z8Gu@nY:`;KSHqtbBJDe&#J-qLta\Z+0EOO
%?#V^)6DN(k3Yh5@Eo<*=*>_'>Xa[/d4ctgnSg2C#6=]0pp;+?,Q/uD??aL0K]WPSVK5u'==J!'D'8XrXQ('$5B!0o7\T6!>PrnD5
%aHgbWCt6/La-k-0U/.aAQ\/a[^>-r!S,%(\?Z,#Lc$[';m)qE@bEpD+cBS*EMq0cTk40ZMiVjgB3c!+b;.KX5;JZ4k]=Nk7%(h#h
%XEp:6GG*]kQ(pS/SBRJGB\&Z6$a6<prut/p`E)So9#',_=.3n@@lN(aEt35kjcPA,anDBCGuR^ZN4LG[HVD*EC)nC?UY[<P0ZC]=
%_miDeQT&:Z,FbmZY=edV^"@8Fka<NP4L%3&DJY'9OTUkl<:)UoSW1D<X_-),6Zp:P`eIlMr75)sDQiV0pn_99KjTj&SSl2`>cC3i
%eOi#_bVYs6o`#1+&B[cJ,*MdU#kU]PVMhTcjH)BcmL>XT/i4p1+"!mL(E3>!J]>IFDI`%AlHS1/^'N?-Y?T#\dLFsRDO=%kk9o9k
%Z^ZN&<@fp@3A,ULF13-Q-38.cKsQ\rC],s6BO%?u#D\3=+;l/hM0<:Plo[8[PDqpN'll3%%It/6GN-#=V,QiRSk$IVGKNj\'n>1j
%q3YVe4YAQF;i^n*k"hF`rL$4F[,c>ALcQmqG&f(7Sc"Fi4jW/TY%!^Y1X#>,M2lkPZ@(FI\4h3N1DbI6GYn!]k0_1pX4:><7+&bj
%>Xr,p4=7D%j&pT(;QKQ`S8d8&>_cOaULN,goZaO3W`]fOrf0W0WOVlTo&H(iS#oH_'NGWa.&dMp6Y9eDil0Pm&73-8$.bp31)"!o
%-1Be2jMU,+#WM#7S`@FqHMDgqY;C\CK26J&lns/-T8U!%S_&i`(?:Xnma%$M3d]\dE1;[8rC;.GQ`3hE3KTXE`A?TZ$80J>dCCQA
%G5IZUg@Gm+j<p$o$e9NeK<1q?>3/$3B;F(&/i@ZS5-:GXRa%e9+#WiB,'iUNL:W<O^V(UGKKkOTE0i:pRrZ3sDH*VJ5"5(;d[j'r
%F'bR!Ea0V[Kr:,`)lbUaVj[APC4uE/4;MYdE2"Z<`9X?A0t$8n;.D".po@qqI'N#n+Yh[@/_=-!3d9Y1gcLeo5&s%TVMFJY+EQAf
%;iYprkoB:Bg@Abs29'<(>bq>kLgtOi97!O[j$G&IFO6+A-@a,S>`%6$qf*e4Cc-9q?DUimTD("LYg6^S2'*Q;D@SG'jf'dVXi?&a
%-XpF3`rX_*FaWs=cg`8T-Wi/HG?X0TA0!TJ)j07O!*aaH^Xi1!W&4LTr5c]*A17("SX_$\ZlBlSNI!C\jENdcXYd'QXDeZ>d\^OI
%/1Sp@GqKuIn>fT/%19En#.%!fM/^hAf-q@Z%l2TH^6iK+9N$6r(M-<%Y@$UV#3MnK2p4We\4o@D9(b7,U?"UP>#`h4kG%#k/Z0j1
%,o9EQIP/dN:nH5'P`(\0R9;/b//RE_Tl"DP-kkb/>`jPW4`aJ@8]6J;;:d65,nDc[@SopJ/kW:QQuqc+Y.5t2l]d<j#FT;bqLA(%
%Af>`*Eh2;f8<%V\j`D<bbE_$D4,N2P:,+m:nOlq<c4sTbqLtcJ__Ths3W+XW7+8*LnjNCfQ%$_ZYjC(lI/,.jbfo/%cc@t^-J*9S
%_+_#VjP!;19ncj,kR_9:Y$E]%/]+4,UtSMBrGP?:RB^q;N4#'QRn:$fBrRue#T\raIXBMO,f^\uVcU0&FTFI3URu0DJ&Xr<[U@*E
%1H*D&N,'-_*!q"EoNn[?5-=4^XKhen:CHR@s,%`,NQR="0t_e%1g9<8kH,-8/kfL>Q?okQ*S6bsIs<c5f%#d1]lL7o)Htm8TluF\
%dTe(7B16N(@5\-TC!8\-33,Y--EO@Y-'W9d[8="ql0hY>)%RMub[nsGQnJ?h.+%uGe)0ft0%1>b?h5gZHlgAT<.()je*)++e*k'0
%k`.#T2qNi)V^@6b+$0F[C&HG"75=<catFH.ds?q:P@GqF5$(tOm8fQYf:Dn0Ep>lRBB'[/lS3Q].0X_pqp$gO-0^297UlfKjM9`K
%4/E>qc59:=*&q2fb*9`YSnoD;.$:hjlB%XFN$hpZ<]]p1l$:e%UZ/1D2u]=FR496QMi'/o$RIfm(D/lW[Sr@u1jeIG]DnGXs%__T
%mhcBB:)Y_1mXJmD^U*gpg&:C+rcciuc0g(bop7APB0G5YfJ8b6>*?3Rh[,9Y9mF<]G3:s!o:=_5rj8)W_oSf!+8<CpHE0UUZC-Kf
%L3ef:fR?5J7dJC$;/F`X:4(JuZ&/UQ3A;H>0K(F=Y@Q;3=iikVH>HVL%T2*O*0XNp(ThNF$($((Y%\Vt?R)D3)l$Ph/.$+9,%S"c
%fg"Nkk0UfJ0\N7Va^uX`SV>0t@BtC$:K]mG6rA#nXMee?FBAF:[JWP.eVJOpSZ'!Pl;X2ghJ:HsBB(DNP9ZM62<\C-j%W_3Z&/&p
%#>UP6f?a?-M`s%dOaqGp0o'JcFUgfU_pfN=DG"%ONGW7u9I8A]H//"7<$f_`Zgh+dm%.HJUZ!h8@tG[_&?kdTU12#G`b4XCjMkMa
%R+Ns;1st9WQk.45p1)O(l7DE[$bX[b0>@S5=l<j,GknOQ2%.&j8)Qgi=X<L2U+dR:R0?nDfE7ZJ?@F6j1-XaXqW.HG9E8d63DWQo
%6+Ur0C9Lp2M4\h9B*!d-8uCi*2Nan&^oZ2,ADf0+`?t060^6P'ngC/+^/hnTKdM9-V`_t0X7pcfoaC5mB$,+F"klX1:54ldl,rNW
%<+>\qY@OLQ-XWQ@NGb7d@(KYZR""%"B@W>\eX+9EVZ/GpMY9gr[FUtVO47FD=8=kV:<d,,:Q.k!p!;<4Hml:dj%H6(BO%?u#D\60
%5R*"Y-Cm:H?@'#>O1S7"gsCmm3CWMGnb`mWpqQ"pr12<MT$G-IS]l6T=SBs+]656aBcFObVU3d??fk25E*O=-FRl*rB>'T]%8F5L
%(G^oGRff'@[aZ-gWI.7t0l"aBe,HPi0kSCjY?;j_S&I+ZaJYI&3(@iriYZr[R)Ld,f$g0JStEtVAoWc$4.04k@i!+POuUJ]Nec2d
%jN>!Dmf(mZVc)n^)D>=f4Se-fn&kT"L*$dqeUKQJB07'<`>nPdN[ijuZP.cU8'Pci5@C/_\8]Vi=fL(=h]]l7,M,k/^%&UoC:<h_
%oj7<cG\AEjJ9D1j7P<IOXiJFZ3?hU);s$(N1=ogucO(-C,1Nk6)Tj;`B>o-c@5\/*H"OI0/j>l3fB11d?laGpkBXuf2]Ehc3Bhc=
%CZVhU>N<V1<\#U0hdgIJNA((u1M)2f<T*&5h`9s\82!_Z:iKJ6j8rT+s*QDbRkQ.^g7N`Q2%,Z2M.'YmKWeYE9M**&*`OIKh('!C
%ZXg8]\4T:$Oi*+6s8NTuQ?lW#A^bgn?keUd)iDt(SMQ2B/)2Hq&eF]IIT\`g?Z&C:b^?u$3nMTg\X>B8oB'ZAgru6,7cAjES',76
%?[$GV)Q&9-`>k]hVUV0[J_A8<S%3SrGAcQg%A5Fsk@X/;ol90MlfHFR6>&pG\OH*.3-=tXR(7=&iR5DV[;%([8ffj7h>OnMp<eI3
%%aV4!_t]j/jEs3W-(faXqRR<GqO"V#&lVn6@Z8B6+5un='Z_+e0Y0Q)S:%5^l)7IYSh1`]e7r'bp"kb+>bTtkmmeTuPZkI6(Z"3N
%*;e7T;,2M9KoIuVGZ2^QJ$2Vk/BBiN$o>4"`[KBK>j-2+HHEV[ra&okl6#<gRd7(&J'U3;QS@'%>QjfaBs)+:%J=0!`QP'5No4<#
%ET*8]$X<MY8hMnPds>8$jiA_3p,g<[C6TO:D"F%sq]DMoqg5qRUR1P$626lR]Y,;mL8"nN.qa*/CHFEdC$-$TQ%.E3qml+sPEt7G
%LK2Y;C@_9Po;Pu-)dthcmIJ,t>R1^gD5Gsae!eIr^[W+K2u[R$RSb\aDRdjm)a*Y"J&5M4mP6S#B;XMbTP=.!?]4n`H'XX@<+e\J
%F;RG&S*1r$aM*fB;f*5n&sOb+G5kKEB;S%/_<t[o4e,g-7R%;<)Ad\\0Lj>?]%>9di(Q$=(DV_Ii*]>=%XD$qfbcS<rj_.PCW/oD
%hE*l]EdafmWjLf/91!OGHb5R>KlNNKEh$Ng2H,X"@AHT.Em00RUasKXoL`^&Eq0sf9K,_]DOe]Po'Bk=PA9af)VHi.kOD2H0pNGm
%%;Y`DYHNgjk5qurDnSkL8YR_npIqj:2W]XLc7:_VN\V&B+iDQVU&I"9Y68l'[esbZp50ea"(t?@dX"6n]9d%b9sKr@k<(CMj0cuE
%'A(Dg\um>CIf527EUqK+f>q(<@?XK7Oc79F:aP/R7@D/IcH^q(4mY/=Iu9.Xr12l9K"I1]QX]\&p?0AP"C*7'iXW,&2;m^o,5A^T
%R<VUco6g7V.d^sKTQ7[lS2N!gH@u(*$1)lV;.m5l).WSSdS@;R3QcES;\>S-$99^k(u[E!_iL5:A!SI2rFU1j.`KJO,-mqM0FHF&
%bb!&"CtrQ5?@QCl2V-q#G&^>Ki1O"_G)u6B8RV[7rhoAYB2O`32E[nSNY\W6Y9c=>I>g3-:3e?I)D_oen'^MQ`U_WV=T5$0r8^A0
%DO7e*j)Cbr90S*K0GgD"Q`]C&NPZuV();3K3iP(2?[hn(b;TA9aD\\M55f\\5KlG%.b.]m;.6TUn"(;$<19)9W)M@5e7ahCrE,.g
%f.2hMrBq@2C3n6A2'1+oqpj.-5<lYZ.&mF_'%uCE!n8i)+#(3<L%dQLaL(aB2[o[Mm=506qEt(\eEQ@q,']ILnThJ6B9W?!VO[NS
%oM?^9p6eJ7-'8N*m!eoGh2%4`7UZQ%M:8!a^NUDXp?4_0f*shi.*s'-D4BT$(7i5J!rV$SNoO@9LM?XOlf&GuFM3e9E1O6&Y(U6C
%bc,eNn?6Ksf/J<[8_[0g;>Bq>.+E^@+8<Pp1inWlaB@LFA"B2YCljD:eU+`/BgfX@,fo?o0fFSkn<+g<0X+Bo1`R%iKhc:uN`t`'
%a#t?6gZrh:Qo5IW]_aWG2#G1/s4XT8g:Xu*>['i!S9J0)\bFH!4JDdZHYBAW]5&k(#u3]T)V_X]$on`7WAOF?PXrZGJ)('DIai+?
%W;ib'T`O@G1T3a/>Li^5GqA&LO#H(miI_sIC;iCn.[:"&^)cb8`S-4g-i3/D29\9Ab=-1.p>Mi[_X57O43d3P+-fTFq+;TW)WQT'
%II:W'h<[A(I]Jpu39Stk7]UhN?!6TO<t[GtQj<hUl:lY6mHRAGC.gCi+8&qq2E;?!S,\[?nXjaBV3]d$_gGZc8!#/9BB2);YnP"#
%$\bEAnr![YSIC)TT%/;!f/fN(nb5[JFK&JqPm8=%I$gO(ru6?lIrthDIsX?1Mj:opInful:Ose[2X8iY,K<I$0T3[,H%cKM;5J7=
%hYB>hbY->I0g#aZ>(4j/%-pLoF+&+s=-A#TGl7=gRWd'd_XL1iY0;ij78++n\LI-m]QIQ#NsS+2,g]_qFW!A5XWCUagX1"ZVc,gj
%3pOkG)=B=9L':4D#rM8JR4#nX+GD`dlSsrOPo?&qs1i*\s*-7WCFX4bMrqCt$o29m?#)i*%CGn")r+8j.rC\d+c4O,+k:KI[O]Ud
%IcVh)m'bXHG"eN\]P/>T(q"P#W*21g<,FKRktJs'kEYJg+KX"i`sc?'ZDCj+eHYiUgMZ[^>YA:T;SUg5lrCX1W)N_?1cR+_'lQX:
%hJG,"]r42n,5]Q`[;.d'OR,>:W-!>UX\,Kli4A@\Mq[p/)#:8dWh-Wp]u!@=Q#)`:2Cu3cmANtIf$F5Q1lF5V95)bkc$m:Q_/jo@
%W*Z7]s,I:sH?b"@J`jVQHSH:JTp*DFY&&F4M%]ZuEd)u4nP:]&gNCuO"$:39PNdCiq+%9nT@kIVE-=<?2sU;Q'b6tQHA.>^]iR4o
%2sS'u6_$)mpc%H)H;TmON5t/tZk,dF;HW[OW-asE+<PH/0-WaKCT!]eYg`'KM,Nnf@CA=4[0O3Bqf*.$Sc5r7s88\?3iY%1U3=<!
%9o%</aXA,VLpl=QC]+ifg'HqdLS][\Tu/90rXi.WFCI(*Kc_?H0oFhcg8MLFLuHh^7FZ9CbN]QC%;_3]IN6\7IKcWMfT,re)HVkm
%/D-m[UI)HABq;(]Fi_AE.bXd!n[-^h!heeQc;qL!5EAjd8_`W5[F,%PA6S:N%cEO[l<'.;?I:1dAa%E3>FYR\,::)_;$Y-0^Q(S.
%e'P0QHh@I-8u8"u5C16L_e3[(mZTVq\&b[T69RV$?G!S;2P"aaO6?nlUI/^UNPBcU.@2nMG;>D-nQ8JmK7bTu8>^S]J(2S$3S\:?
%RbYk6?<#4E[7^*COh55JDH\ib^YTmW-[L^&h.WiY-PeS&iuC)<??BLleomLA+"=tHQ>2B`8"*Y`Uq\N'PK_P?5jp,"m.ZR%l[L3K
%7JKhdSQ\u36-t;j03c-VmkH2,'8)U8>hpn0?'T?nHE>dl`C$?UA6)b,-\CO%(K%<k5M%17kBe(DCDBBW?Qi`5WeZT>\X,SLWRB@O
%(lu0:_6U3Hb?dZB%(4ngCpBTE'?3Jc%T;`b?&a9Z7`>(S2^/@U1,@2rBY-&K<sM^O`pWh%C^aKS[50T#-!Ojf2'0Fi=&E4[ab/*>
%H17qY</gK2))ipq<p*jp;Z/;rY%Z?/7F:9g/^?c*mdso9mTI5O6q;9@76<\u8u"+_/jg)1"JK7EeUTCJ>0K\Y-fCV0XeW#\EN>`]
%M;co&6%u1u@:HUd8V_'%5si6LGV;+8UO)CA!kTUk]Hei:hS+DYITAS7FO%J"j5ZlD`e/#:W;R>#b#%t4]:Nlrmm\SV==\M-aeU4[
%N&k<B?c:]ln_C(B]"LS<-=cQu-=f)^>VoOL1fs(-[dDd/WT-H(s!la1.n>ljP-j>L,AjnOWnh5*9o[Z8Z2P-eU,DKIWMpr)$QQJi
%"rF\k6mtQh"LY8%'+5QpA;S5VMro_W9B0?ZXf^*_U3/t1`T7Jnp)2#C,8qe=XVHkF'ZqH%FZL<M)u;K`\.fg4*8J;e>@"pd10@14
%S%i^J_0/1F^s1MA]g>oSU2Kq*3QgM*.5R#a0^@(@\Rk*:hRH0XL`#Q;R(?2*B?t')j[Q.mT%_:&26"$QFR2.Y.PAU@9bU0WFB%r"
%ZGrG=Z.5h;TiT;3La-+FPJ07uFoFO3SdmYg]5<5A3BZh'nT"t9NT084<_oK[najt8Zn!*pE<W5qC:d@AEJ^o_7b),F;Hfqe]m:n\
%Te=?J%]iNAkL^9pn1k,K@n#bA>UkucXGbT29*puTM=B(5j-$i=n\'6%AYGj[?DrTMhSTO8O@>N"i2[br40A3VD.%/0aZR/7>t7QL
%]5h4;]18,]pTanFRM*33\[loZa6TbF\uNk\1MJA]d5kQ)NlLof7e+lGZWF4cY)n+\W80IO%>TrJgNEB`#uB9M:9.%OAcb/kRN0jd
%Z<lCb)4a_<Fh#(!r)g77]3!>j)NsB"?85X$`-@OM_9m:`)Knn,jMaNRm1rko4iDH2[(c0k7ZKFSbTA/.s(W@VZ+;cF5L?JfAD*I?
%"\hdIRU4?;WCJNa22^8=L(_Y@U+%P(b@a8^XHN7?050$R="fasgnK/KnT0Ul5@6N`T]6b&#^OhR*#aI!*VZ&RbD8S*WG"YC3$L*,
%[aJt=G;#:>]@)2-T'KG,h!<sKZ1'Y4.]g,#orf)oc0`:%g&6#rn:u.KT6<tQSSnCc1+9+64Ka#%1+M=H,j8Mss)G"=QF:W&:(rC9
%lctjVp:<Vp7p+P'hR6Yg.r+E?S`;,@rE\f^5U&Zn3gCVb^-\Z!;`>/<Co5=?\CWXU"f77OinKNf?Dc:D@KJQe)X`i"VKb$)j1co>
%F-kraI#M,1+m(t+2&^nooW:mIml9p6'Ff$7/T2]5ZbW_VY)#Qp9\^].7`qhtS!'E<]\Z=kb9Nitghi\U?I[^T-*dc.-)P)%]4*7S
%Cu3LnE/n[NU&""l`:S:.@+&@@^5=olB_RR52?6TH@bHC_rqTEt;K'K/j=4-[;cTl8gB@ttlIt:8R<Bn9nq&E_K1r#[L&8k++mZ4P
%YdW@gURl;?8/!JE8d`.HG$=(I$@fKFBA9DZ2OZ\e.Ffr5+"sgT$cO./;7BUCDu,>6eVG7aN%U_m/h(KjC)IiX!ZrTBLkAJ$*#nlX
%O%))R9np1$McR0LZI'F3.]&ok+'2i^-Kd7T"l5=7<o3/rT?u6n/4@6GfNpY0bLf+CgaIUgD/"uq5,0CrW3/-6@Xj7l[VDTplGrQc
%-iP*dls8Rp>dRGp<]HD;egNn0oO\Q[Qu`FV<_mG?d06FiW<<idTg[2o;5La-q%7b\Iqt5X&m+LA6jG\\#h(m@M`^E?Dc[@KS2*RA
%hJ-(_57\*i*4.^%gAV0M^Z'_>E`L7D1n[KkmOZql\qmj]eR]'\!fo$bI`Q(VVaPm:FNdBFGpd2bf^FqC=QsKKrSif2da9Zhf3o\s
%Y&\P"5@h^>gK1dV&RA$s6'ptPEab9/XWUY_?KP!.C4d"aI%N@jkg*B**1W2A.$,0E+?uWo/m8TMK6UeW/c9l42%.J?+>0fR$a>HU
%EPL-Y"sXm5?2Q*(TP9uC;6<qCit)=AJ%O,^1[pH+^X+<k]Kd_Y6,(f!=G@61;Q2S_oqq@3BZBg6JL4+rBG1;u?4-j8UI(O#"=f*p
%7JcsJRN.k18I-L,/m_u8K"%1[^+)YYPF9sK6q;Z/FmD"m:q^)s2p^tk\p1K+NfB]HVr#-;g7:7@r0g3%SE*%t'.8\K(=K&La36<i
%Y.Q1-1dAK,Y*u:9;@HcrLK4Xs\iadACHRS52M?t=.rEDBX%/MrVLB`,Cin1l1)]jcZKqX0Qr._]r_lb#psp+61NmE_lEMjDg0`ak
%$J[DIZSd3DJ(o7]F6DT]b1h\qQRhM?T%S=2(=uSK:X2b&:7=,5D;JB^]=VCQ'YCief2"?<RnKfcT0.GY4C6b@FSEahVdK*U2lmh3
%D:<KB)Fh46XaIE^gfe"_;S9cUZI&$BG+VtLBU[K5m2MV+e[+,dajX>GX"-rP^KuEbW*1ehn"'s4[9\,T'Dgh8gIqO$-b])[cYLg]
%`J)`cCV*g)g@(TX5Or^c2p9LK[qjk>GMgh*j^[?(dE'^Qq;JUYk1.LJV1\I#Ru:q0gF[h[>rg[;]XlTET$N`>DYH*QT%&d7)W%[B
%YB2V_j3MZB[DltAh9tiIBlEt"s'TG^jQi@We_L/<](5Xa>8`54h-L&$nted)h>(C6WbpQo>7A7%.d\nGCs!sY<GHrN-N#b\?eqZl
%YNFD3S\sQSdV\m,r7]>JYOeg\G@,9k8,`=GhE8Dq\m2@<cL=n`IcG\M<2MR5#8P!P^\)`KroI:"X`=7.h8R\;Vg`?,s3>g2E,Tmp
%fr7]pGft"hYEkX-]BAbr?S"G2cTaRoqu269Z!HWo\'4ZS,r6FE>(5%N6TaJgNVp8o;-U'(5H)pPRkGi./M9G,%=e+WE-T-GHZaaP
%jlY<WL!W86L%<ebn)bjE^%Grcj\>.&P'(m<1QVF3H(.WVjP@S-A,5?%oj0M\<KG_VmWj_J5i:)"%J029(ZbmePrkHok!*rANJAUi
%n0m(FVD4*[hfAK6o8be2e6a_E2kE\>onAC/17Immg*-lQB?WSd['=#(+.kYp"20,mZ<[;#ndD(%Z=4_jB?cF6TiPsTOsPKNQXJ*%
%gdA-`@@2COXaJ4E9qqZmj*gF2<D*SYDtE)N#LC/'<%<*1Xa*F??\Q,$hn:Z0XKV#WO8%tt=205k3h^9=SG*8DZCrAQg4tYTF8jFQ
%o<,I,=oS-gE4u7qHa%mFIf!YsrV4)uHhcg*n*ee1l%HnPp[dRESaH=#2p:r1cXh=[]bV@`$1urj=7_L1<5&`4O1_-k\pVm%]l`bF
%f,mJ"?ur`HL_&NOk=.S`5&nrp3bgrsI&PjbZ+dA'/fU:P<c+^dQ*2^-AYP=a$hJ/9nB9a8AN*[Th"WRVHleo'qn,_?7c14YgJ:Fs
%cV14*Q21.Ef?LkdkJ`UhEq$oVGO*G0X<bD&?@OVe2WsM8n#`4.HY4;hgVqF%?AT3L[oh;LDq%%NX2J<,G6kaKpXW,82nK!/p%;Y5
%s'WM\4GVajNAm9AIt+c/\8W.B3gT7dHG3/'PR_$Lk"42f$Hm5>n'=J*Q^_aWT"OfYM0V!1_g:=T(abm3mcM4=`q!`prF!l7HL_g$
%1/cU-YNkZ?7bRId]Z$F#/:39:dl.XsC\bfupAMC;^"W9cU\Uce3]MP3MoL!*T+'*'=D5CT2X`3n+%pt$Vg#,pk<!J9r:[*&SbL:I
%GFs2ghU\Z^`/Q_ET#MD6ApF=N^tr<ZH2%m?rbM>N3IP+XICn4X[_#Jl48@G6^,6[-=Lt>T!RmhR>0i.m[BmDeI<4M,3N%`1%t"%$
%qR2K'd6tHX*;)8Q*e&U.C7]u`6-s[9s+D.)m12&[^<SBMFcT+C=)YZcB#!l@[/]gP])"98I9g-(\mD0Z?f-r-fY4\(Icql>pA5(i
%qC=LZ9I%XSC8\Xb7ug8Ue-GGD*q-0hIK+TSVX^b^ERf:tGJ6BCWN@&ac!!^<HM7>H8:S="7'Oh6%Ppo3\-JnYRoWM7kAr$:ER/Rq
%f=c-)3iVQ;$o3p'f&!3GO8%kADe3XW)Rn6RaTBj^+,HgT0+X):/O/Lim&X5gbE4YjFZ^!_Ju92SGt9LPhV,]Ze7adW:P8(f]9Fjm
%E7XCk[6$4:@.Wonf)8`iB8'O&ISBe;=OMDWkF_XW)K4]Z.r>r190_3[)3=?bP\r+Nae%)IoDR@[(c[@o)XGD,Ge[pkWr9t.nQ'4E
%7,"L;'V]%,_:6A\\-SQda20gW?h'6Cf??HF)gjO[ON/ZSn_qKrN`Sh+_u%D;n2-p69@2eFLj)8))N@8T.hd_n[G&N?dfpD^:27XV
%N9kRADA@gh50D*,nRU3pO+_H",Kh.1C`eCrp9Y^4=@R9W\q(B6;WYI'WO"mCTAAocM2$6QSKOh->&sIR-fN+0otNqSHn5V5fehi*
%b^RmmM>q%LJ;E-0pJ]Wi]O*^Eo=VWEH8dl-5N(2Bog`,!P4h#khYd60rR0hfqaIG@,<B!8@LHT6(>1M*ZdlND?_=FO^DsCo<6r;9
%&`'>;(iF9d@Wt>O7HWL5])ut'lgaIBb9r5B*fEb&]63R@Wq8(GQuR3?c/#pLrNs?6U&=iapGEtf[DSrMf.?BlmXOI@_74?`St"DI
%k1R.EH>,2G<u/Pg[K_50nGBn[jJ]e,Dc@M_*isVpetV;1RVPD@jll]`e(!Gf"6s#R9_V"ZB:jbrc+DFV$h@Z`!/HQYf!1TZ6NauB
%W7teI_2H!&,qKH/'\W'FL]>;<al0e7!VINq00).]fGmQjFV2]OA"E.O^RV,A9[G22SuQjVIJZ^+:%+[UZ%\Zb<BAX;F$/+4N]jPC
%T?>L3]Xp#<]q_u:Wupf6]t40Qa/604m"stffIG]W@Hr@'4YN,1^A4%9kMUSmo@+A:RSWl@NU;AHcKjX]p;EgpUZkB'ni:5R+*l`A
%KFaZU28#-6ll4;.WI$>3e7bcXjQq%XI.h:YiK#Je[Es9Krr"5RkEha+fl=JSn6oAc.UhqE[,4uVVsYqic0F0G*Gb?@NDR0l#PTIs
%Y;>@!i.1LZm,n0/V]/:9ikr[$"?mV.i?G)5g=_C0E`@4CSV0k+i&?$d40p!b8:O0DhH6eK2[g\VZ]$:!X_k4WHn$J<pmYVShnQ_4
%dHlKKXkVf[+S<'\lbUWWYAQR/HaUJsCYa>er_b>Us8I3+e][nME67,^hL;f]2Ri)kr`T87f@XsW)c+%,;.j;%Qot[ds/2clBbJSD
%>jZW.?TUn6hEL'>QArr.?f;!f)opq6Q8\M5HgU'ddpFoTL"G-"R<//uV%bOH?VGo.E5!.S-1TPE(03N35C9tes5&>pU?aBk5RXtH
%WN3_Wc,4le:4]IZ\oRG>\bc$Mr10\5q>E?g_seV/]-aS666/i<bKi6D^FDhpVOJMDO/-L,adLQIZ*EDUm]]=ER*AX$Co;9qbLp!%
%$.tWX`RaR*]j(4jr35sYN/EV`lN9N:L^%PQ^:HVQ4D&*XI'Waa_+g6>i5SD\JU?j0H_oooc'k0a_ri[gjk>!i&<l&-n)VbY2Tk>]
%Di/R=Cu'>8P^n<QgYP,9Q_L[-,.1EHG9<nDML-ZZ]&.%&KVjkl?bR"6D]F5:rK3CqEb"e>g6]?<Kq0R?7l&`/Fdk96gk$"sff4<I
%Tq8Z.=FPa1(LO02m1U=5rnA7VrN&2LVZ)Id&T)pK3BAFDAJqf:pteJ_hY:&jk/(1F$Ju%s+/o#&S#\'#?f*;NS_$*/\Sp=>9<[dP
%Ss8pYju:+8\"A'Af?VTD7lOgD_*!*AhYOa1*u;p=2^)>;Z9N+"_82[HqjW@"n%::qe!@*nJm/WEB63h0f]5W#!1OcP\'Kjc_V^]@
%Dsa0WR+3@f]%>c*^[E3/q@;]=5$[ujqW:h^QV>(ea*_pFlYURW.9pp)MMmn[mbTY+5!E+H@jEOjj16nX*?Qrbn%O*6[ba>bZi'ge
%rDCXIg:?f3c1:&Ka%r&0H?7tn=^Bl%BX/V+\Tc&5\##E=bOpjKed%DWUhc:ih9F8Ac?o<SU><:HfF60UbqA7H(T1a!4SIVp=b"!]
%k4&G&W4S,9NK7UJJ)@#b?N%$pNG9l:83?_b2/N*fAAgJBM,BmlhS[V,:KP\uD)X>6eNnYpH)#c"s0]7@s8A6Vo^2"0RZFm\UBl_&
%#.1kgWj]e]`t-DBcI0`(e`F3IDO.?2Xj!nj(;i<]oP2MJ>^KU;%_k3[p^m,d$uBYQX`O5eCk48.9<H[6qq/8,aWsn$s791#Hs5+]
%/WE^N4nS)<<"bdf2@`?.\B"=(@JT[u(J7l,L0F&pS"&`?cR54JX!`6iD`oqd9&YE/dc`$SqqkH3*,JV5=3<[C3@'r0rk>u92EFtM
%g7:S@AWE-i_n(&ac\lINpG=P+@fL"0=aAG?EBaEDJ+=<Mk50qqpW7.&,W.Nl#k>YR)YnPhp!*"m?Q8p*pT.^SmaW(SQX5,&dk#_>
%c[kifAoh6`h'@CF]k$(O@dT]X@HIj`2BJAX?bXP7*BEtV4Pf7gT76$Jb6ph0)_:Z#h0r'4q>U9Fq9C4/QtTh):?q34!uk([jr=[j
%k;M"4#7ntt#9E@?NT5)>'t:cH^HT3AH/n^8kN8+;q7+s(NhG-go]XC[>RnI%>X*[RVed(E2m=-HKQ"j%g:[+H>MZO=Zd\K/8%0_K
%4$l^e\(*DZ]#hJ*Rr_fA[r=Ss6!CoO7k7s)8G)(D+#1;QZL?,q$f'%u>;DM9Hn4TOCGpIuO3^j.*joqO9Gq&)oN1F2[ZO%'iIgmg
%[Bi_N(SAHoa=p+X_l\0_?T,$=O\4p5c0aX_eSWaaMoC#fp?QV<hg_n&kO<r0e1)Kb>qc`Trq#'B1$6QU1/=-AbhJpt&+85o`NgBH
%=(cRd"!hl5UIXZucn$'cj3:Xn>$m8KlMHTG?@CQ,*]ID=_9he,R\%0!D=I4.Ci[`aI.lNe[R$^D5-HjAeQ_BSW!cH52\Z2h5"*HJ
%dc0dh-c&fD<P3R&cWFs>g0Y*_I#ZQ2<IV;pA?=S:m<^^d-U3h6PmDRP2f[M\PkJ;8^%0%cpKDAuSb81XBClX/F(_9E]D%^USK"-E
%NF;5>TEXobl/">1e'#epGOCQ:s3422U_-YD$^0Bd76YZaF,?Tqr,uS!kO(J"iKqO,g-'aJr:p1*9ta[L2)S*lbl2d.V6P;A2p_e"
%gV9*V_9:`f?Z(O(=i&<Hl@'";5mbpFX<,[#]([6ebf^7aRnG9Ser<mN*]>'a,VZpOWrMKtUD,iTp2H/.\2j;"n]eZ@qRjE[/_rE7
%XS;/I;a:,-cK6EGkf;4%.m!R(i2D'uBa>Kh+'qs=OqH>%QB1o?B2B/Km[##/4d%m=VAqua^74(F)<:U`S#[o)m/-a6g=9a#Z"M9B
%!AEC8dEl*UN0KSDV>Z*J3h)?1c-/"<UDqb_mt[`IZ1pCS7;m^t83\u,2<V&AoA7.Zr$LnTY<Q;WrE/q;0%fWn/$J:mjlarkIS]C&
%#J7fIgT92`=C(q(ROhA:e\#<BI'8^[s):GBppaV`CUe:=,.[8^[<qAun)``YCngouC[G!I2,45*rSSb;p6u?BmGD/u=?^`<hcCTi
%TBb:.n+Sc^9tL@QF(M\XLbb)mM3s1>PEKWcj`BeFR=Da3s'Fhu"Brq1Faq0W>(N[0^@c%lNJK4;C=Rq_X)`]6Xg)O\4F-\[?'ER2
%\!G&6Urge58,^]9TDPP-i4-tUdpdCW^u<2X&)?*(%`jJH5?N;+VuM(Ge3#eV-?:^pj;7-P[A&trOW!m&fsP2`["n*gPDFS9:OcB/
%p9o)4g-8-;00EJ;[S=i8^WhElZ.!(;P0Re]h3,&6ZE4:.H,%quXrN\pf,msn(>_8_.g6;b)"13?fJ(o(G1&gk+!6S"rAMa:>-!s4
%Sj13-lcFM?KU#]hX5?KM6m%aGDd2,Wi]c#iG'e9TCt1JY]K:O9Z=i_+M"Y2hf/k(h.:KQrq<>c42t-F*>8pT2T"F^UhS$MXgj1j(
%%f9WNq\@cc0/i83<T!YWZ1pLB=``HRM])oO^FYn>%a*W)hY62u`t-:ESg3]>`QV)EN,nqApuZ8Sls]^2rV]HMgld6@r?iV-IaK#+
%X7arlg1#?.Z2Sp^$o"baT5JPl4^SS92S1%H>1sa&,3W>W,O4bqh2S1^%6##cRAiEdR!;fp89Z%Iq%.TAKfs/)W+G!F9,j/"h\Ji/
%a#A0#^Wq89^_EE`cYa^AklTn]&&0Z6m6'4rQJT;=,&EuJANLO@.Cnum5_'^Fh`[FeP9/o]Q>V/sQ*o\-L[uH<k!S.Bq$#cSKC25%
%d8LtKoptfYnFafA>N*\.Gg`t-VhjRR^Q]4'X$*QTruV-)4KPkc+fDQ^H(3VVR1"&TM0nflDX^ZZIP[tpi;;2::&7[ip@hg\,qFh"
%GSo>$G(YLLoH?]"`ZohWTV,>tdS/LOs.(>qp#]DPgFH</r?V+sIWN$L4=f>o//LE,gopVf^$%D$ol_Q0%94PiSmD4ScbP<?DWB2!
%^udTCo.g036,*#%W_W`U^OB9=Xe<J%&Lt;@DBJiNY;pK+0^fabS%KEATM\.e?Z23DB;G2D[2)`$6YcT]WF(C6*o^Zmr)KJ8J,]/F
%moW)ZrGs&0Z4*M4aT"Cn;u(K=4p&*nIS]u9IO5Hrm;N#>`h-K3R83lmLnYWOG!W1(N6.!D*sC(r")hhfJ/NgKR!=S;:jn/[hu;1+
%m9fVb]N]7>;AnMLQ65tu0JG]d6oLamZsqrr^>l4h+*i%WZ!<5)pdN4\I4Wo(rLt6cV?Wl2kd67s5^tFjQ<,n169bj#c(\d<%RV9%
%B@2_kdc-1f)%+_B"tn:["7;3LZ5f?[>J>UhI#c?i/@?bH1Q/\5ZrX$;G#/T\ja^MkTPYDpgF[_haF0VRm9"N9'GM!@oV?C,p!$r2
%EiX`L]H@?q.0bfBl-mWpFEIjfch&t%K;)(E0;Ho:^`oTQ^_pa]-)g,JN/1PWr/fZeY33rb?.6(r'KC]2>r2u=/Z`G\_kL`>!B-4I
%[9ZS:3e:I0dJ#fW<AQ0E:;BA5(W4VY[^8U1NL^5.MBV+;BJ)tS^dS<n["O@2=M2IH3j$1Uh(3N4KS1Z]O<G+d[0,8;U-k8*#mBCX
%7F0tQLnU,EaNj;sHA7o?GXX9m"523=l3QKcUX<9/["ErgD%*EO!BQ5[A/]d$4`5GQ'Vs'E6K@_bUSUKi@9_j,\Go_LPZa3!ZL-#4
%%1E+Y*Khp88#/`I1^.b)Z@3XBKIij+,.g,hO]^NJbLn#I!8M-)!X4kD5&ZBs#sT($'R^YE@bJ\G7)Hea*g)?c!iFiaQWP>'6^@nX
%'%;-u:[[Pr+Tk-e(Kt^(+I6l=05X8Dfefl7l?9EHg,6d@ko^P]5X9K)fIIF<R,rj\mg4b'o!/gZ#G_5/&O@oW/C0B<_m+&WU#lua
%@X?dA?DS,#"5i-m=K\iNb4if(\P%Q9ZmoK:P>LhS5Vo3q!HOk#J-7uRdt-EYho6R/ic]7%?Ub)KZfh`(\OC>G"rSbC%0$l=3]:L:
%#^YZc]b)*?.Z*&MO:@N[$11tg"O>YHTuEp%gZk2!Us]0G^*gP\L4RGTA3,IE5e]TZ5Wo1dYuG)YG-M`.[:dZ./@QH1Y]+/.l`7b&
%UR#^6MLV9>UoRK("&$/C0mn,LMG/cO*Pk",Dp+7rg4;\UT?%b:i^4+k$oNrN>G>dT;p5ORM^BViR_Vd[I#kK:76o>kSe/LF7>)jf
%/NSs>G6Xaq'&p8\+]7IcONt\LSH5[I/HNnR]g/pO_.UjK+t1hdoJM[pC_2-L1/O\ZPAnQY%Vub*ec\2(o)P#>[GaCdfR?rp*7<lD
%D/#"/!0HiZLXk)Z*J555$'[s]:oJg%#094`1p@,aBFT!973sq4%S.J+8ncXj#6D"aZtLg<3>::*(dnK'7/5JU`ZXpHI@3fF(m([n
%I4ZWtU0%l#c`9>T'RWS@_\k-lCsn-:7gD#*N2dfZq4p?j+M_M1*[R[dY(PLC.-gua#\4788Z%%K$:LrdDPU)iP7Rpk3ZN"IlTiUi
%o>[H'OF68IR<C1h&227dQ@cJX2/'Y:A@)Jr@;JFfSdSCg`onULAMds@Hq0@DB!X+@.^F%_:KoaA9>s"BPR&TEPRRqIiF?@K=s7%\
%b$9T[_Qo>t/kHcn<//;b(T@,5]h$e[!*ge,":)KB66he,-qOTkK2a&""-\F(FRHBiFV*&d&s*FL-@;41cs^K&L/:N$fgqeMptE@e
%8-rA<[k,398UN1q9GoIe!fpp#CTnhUcV)VMZo&FXlVH)[U?SppfC_Oo1@#%KO<tYB7QYO8auZe9Vf$.?Q::DtE\d8G\Ju[9MjELm
%$mjrio3nlh5fdaH[_3R:PHq&@,"X=9Et]7o4c1jI.ZD_tfG=fb*kS3cc:+"O/EgRd<!lL$3Xt!9h$f,#.qC@V:^XVL/'pbl7%<JJ
%.M2&'XkmV@PVsdU,FU5&9`o+YC=%3Rg2Jb^_q:!t?k+'ZHitu:9sKRai^&3dTNMdPN=X@!S&&MW@Y1ms^C9uZZLT2[oaT7p"7;2p
%)$5+*S.oE<)T*81P,,AIK`WNbTNI@V&DK>n=Zf5G>)/B70T:Qn[0/0k=^jH`F]ggBaU9lN$KO%4XqM)G3"AMh'5!nOAc'<hAL2st
%YQ5(:4&j"YblI0F>MAeD@kp4Td=r3`E,n[]S7q.rJ.M(K-IL(',QZ4b-7ee[<+b@i$<L([<e<dL+f!nUrK)J%%&A@S7c+l9VEoeX
%gTjC06H_36&J3(J&@5o<("*gBOCXnc8&F,7V2u+h!RqI2n/FZ<&5+AA\S]07%^68J61ebsm/Yi]9ID#jNs-ps/;)$,,&+h^&qN0H
%$^-:rkd1)'"1Kru;h>c&EbC`9$UbneT(5Hi1</!"<)AdL2qqBR#nV;m5tlNRhtT9;"<o)3[j<:b96=Q3'%@^n)i+X@+L]0B)NR.?
%p4L9fZW;W3nYRJ9P1]j&A=KH*)&n;])*EEdm)G-^+ef`Xa^ucc$C,I:6QF<9$YDblGD8U,g1QBVnKV0jVOECdkP,aEl2`1S)Y,>]
%*QEoAD$Q.S-5CA.S)A$7%!MVp(HiR]60g@9e76*bl:`=j&FUGf4`Ch;(LS.c+[fepk"Q3tNjJkKKH>*ne)ejD*(RRQl.Kn#O9P)V
%DTH*8T21lZY_cNk,L@HFe<@cf^tM8VL%N*X#rd[6i+V#V,n^hXZ"1mUP)O4EJ/pnEFKXSV6=9hG=U:I-THllu[XVRbK+]7,d,J.C
%TWop,VB43DlNj*_jB2NGG<I6t5i%"1XaGu8n@A<6h]jP[(bQCM+.t&`+<h::P:]PX[5:^m\M@XJ0T7SS)@ijB6*t?K."'jdk4<Xr
%7G=Q>%EEP^Bb@q_6KnhaO:TN7RZ*(r=NCYId1-73-XcI0+=mtrJ<^b.LPQ?_`-a&qMh$#W:i(pInd1Ia7sH0Z[7I#2QIm^:&-H@_
%R_^*\!AIH2'DD@W1GO;Fp5CREZAECUTscoqgDPSf7047\*_D(?3oc[g=##7[<p,@24W(R5'Kd+n,p`d-_BRJqAEX1t_L+)&j>sZ:
%2Op[3"5:CB827d\(_\<.Zp\boiH.mWY7=P?e:pWD(rCJ2kJAP(E&!k6$Wb*SGUt<M7!.BL.Z!F=0h?m#m!4]i@'`Q<F[t:QHUTK@
%`28=CbO-$8=U@:-5%:D\C`8^O6a2V3W1\]T0bBr32hnV4c\=7ckPM-^e,tk9l*Lbq.eG5\Yh"n\agF9CdX/-(&BrCM=UF9s*&Aj\
%%Z0'M+BoI[TcbNRqb2BrX)"3!<T1\a1^A+DKMJUK("Djee5rnu95Ir^H18D&&NTptJ=5J(,n#p#6AQ_'^?q'GVjm,\X%:_N#&OoD
%":B$/9]-TlcboB7-jBJb]<-]j#otN\3/5kA>"")@E+G=4[a7H*Y6$.;fX6;Rdu[\_GC=m!%A_7L6/r,`_o69tj."IZ-7&tRV$C$>
%'He,8eca_j0KXM`&JB*96\MeG:4SRcbN=tE@rolh?mRdE_t:?:49k^KX9#7D1BmGf7koe\=c%.[(`\8TZdng+DubdK?tQ_<,^!Q!
%K0kaNJqRGd68Cus<b<R[]010RKOQc"P=uF!CL3hh4s0Bf@k$EHh*>+&^4:$[`JT,/r?okKWsEj8>U\!,JUsaG,:EA(9!"+3'lP^@
%)AP;AldiM3Xbl.62MB/e10mt46pCkg2!;TM,N^dU5g/8n*iq/\RK]2bqbBIH/e<`l,SkNr,On^(f,&X<:kRRMZ[#/rZ#>;laQf/m
%%GE9+F=@pd-3@<(+p%N98f_.VBu02'\F+M[cIV]]:uGaVp8Cp3-o[;<NXA"<Q:.0mKG`CTh$DXea:5X&iU&^9>Ss0067.F9!=`k@
%85hPj(oit[FkEDhLn"e&0UBNundphCO_D2=j2`oKiJ*q;VgscJjP7;L/(T;&dAs;*kaA-uG2II0<kV0^!fG6r/@)$'C(N6-l=c+f
%%X=P!k=`o2aqf^F1BajkHtDB7ciB)_11!Oqb=r'KJb64O[>?Cs-WEp+.#iL1jK$fBJJa%#'d%#ro$dgV\Pc$gJMGgYZA=$1n-m#c
%^;6n'aCmJsKpk8p3*<60E/*"WoV9NVPBdfQqO/NS,MURC2dd%\TF)ei0SZg,YqB;cB]9q&_V3W[M'QC-Kk9>6#ul1%)(5Pu_Srl?
%=HL%R1"e-jO,0;+#.^sgZTDS"'!YpRP8c/1/KFroGo,-^"3>TZr3=kHKQXOR;t8%$[@Mls?gN@FC>dC,K2o:u(e`;iJ^4Iu!HIqY
%2f#X[*IH_9hu]hdK3ZK\N&L6S#(T'?XXj;@XH`\!=-JADfVD?%1n%[uKRmC9U]=bl"fAC)kXlsB*=A=X1#HNa"B#tP#RoJ1[#<$k
%)_D5-ZYE=E\7Dr\JK[EOn@qPDJ\(;^Ss=OZY.6Q%O@$Ed52s149B*Vn`,uiR8d$d!]L_s1`2NK((EgHj>XTFX1faAPJdO^!E5HOF
%]`c>SQZ<RE'_jDtZ*]ETC'uTF!.)O:Na=cVBgt-M$I\+fTM"7N[41ss<XM6af7kbV>tHQ'*J>ho_fQL3(^sl]!Q<Kj_HTAa#96-8
%`=<?"I3![q#^2'$bm,Rh:+IXW3"I2:Z9KS#NaBRe3`h8nP*I#B`P^d5>Q^"ZJ./oS.[l,#9\2.=@2Bk!DAj)Y-girH&kiE%<Z9&G
%TVj"2(eUSsjAST>K157f=uW!0"t<lbK\;NC[&%5^VP@iJD-@AeY:gnK`F9,-;9g;$ZROQ-JPZVS`cT2-8YOdAA1SQ-45fU[9nD;]
%a>E5a./AiWgDHYa("A<WLbN+q((QFZUd2X;q=4]V7><D(G`m9h!EFo-UjU!!Ou6#%E)UMM*!I!WfsoAt6eQnl6Iu3O*gWug6kGYI
%1JeTr$Orh+RK=(np<XD<;3jOB_WL*YA5"+M9@b&\YQ1=S;@Kd;:FQRG]5W+,nJs<9E%/,R4U'"H.M74LMYB>sW-f@Q1h\(*_tb8l
%dK5YT\MFLr[,hY1Ef#ht8Ocp[QA3T+FCDld'%e(r$B:$q)+TroQB:;=7*Hj()$Uun<t01o!".f3cp85E@3F<p6@DGMdYA4O/G-3n
%l+@AAqi!e.UnAtB@E43GNJGtJg:S=\?D'2]N5dQcRYPV*#cob.K_91Wa>5t0:-%:l<'DF5BhM2@g^\Jo`n)!kRYld+-*@=V<#+,o
%QlB!]L+"[]'Tc=pS1:n*ZAo@_\N3gLM^'X1lcZgKX`hJjKVP9=^f;b@`H0.9OJ"i97ofZU-AjI^F<FUO2Loh8*CWb^n/?Za2%mH?
%</B@D)O7:lfZ[5+*%;_@rol\o=6U7^?W`I_QU3E?**(!q;^e>7#Nh6X(#+Jk6!5U*OE`a$1R4=reiDWs!m(*WEd=_g*(-5<!?'&E
%9bM[NAY0#$,Q8<bl0Ng"Us(V-.Rp@S"<7R49hU2]*@E828XVJD<`ppP;PNiM\cknZ?*]URJk?@YkC0u3'o0U0)(u!$&XNW$T_dZB
%,.,jJ:(ZF]-<:q19Aga[5bL>$<D79:/EIT8XTZ7u:.f"eG&`lLFC7F:E"rdSiZ08B9ios!>)oYhh''8SjMH\4\k!*hgP`E.CgO7*
%$UMX=@`m_3VP-mcO[t2!N4Lrf<8q,&%:_JsA2K^E!ef%-%$dH8IJ4_(Z"*R!X+i\_f9S!s;hK-3=WsJ=TX(9D=Ar1M!!t93CbO(0
%J6oK\U7[J4-roXaMi6UNJQtMTdF+P^\EJYMJP=.46-HLNYV_IPl1ukSJl<^aOClT+J-_#ap48(=!_6jB,nL*CPRD)`LOdbq&ENOA
%dhfR4L8j/9/G9'AiY6rEKFF\1S'MXuT%NVu,Y=R1QJslD7+(ZENHi^9^5Q<iU'#e&Lb7QVPjj;qI#"8umD+j\+?KWMCeIrh^oULi
%&PB3F=mR-4%!.,OI(kQn*d&g@U86<DSf&r+8*/WicVBig.La2^L5CQl%ZP0F6p>EWl`52#Cb7W`%Wktb_#cS:+mk+bi1(hUBdM.c
%iWGZ\7(SHoPcQjnQNWEr#,IG.TQDKtfT+7QOJEc8!KICp99>;T.Ug;>&aa$-=+NdkJ@I%\LiDH:'H&3=\g5uL_i8s!;b>mi65I+n
%&M1>OqqrB58SuO39*XO7;PDAR0G0e0S0d9)iBiJ5aO-lE+k/<,-$'JNbubQD![-n8pW&)d83A+0=kU#j=TB=q@#E'M4ci8A+C_N"
%e'C?=!HBb?&^db<VH)b&FtH\%M@P<!-lLWuag%@i4m@"HB*J\iAt.CA;L3`j8h)'i\ZH?qb2BlSgJ_7T0U-ug'lrFs$Oe3mge/bk
%65V1&aH;iB>J#IIi^a'o7O"SGW@YJMZH;`]@Xf8rEG:elJ9_+M5d!q[0*dZnW,ND]W@!24lU+62>>$.enW(aU9@g3=A`T3[>t>\U
%5EJHMWgd]eIcu;=&8!+FO;h0-knA)nTe*4',\OrWN7;_7^VX@YLr9`46RJ>04c5deq1Aei;[aO>_F_[]0!h"I!GtT#G=@W+=^*r*
%B!Vb_g([$KND2r6K%gqmJ#`;YJ@U7oT.irI#ffU+8j&+<8S6FZC/*qXn[aM''7#5:;_!`Lg/R;TOqVO(Ed!t6c^NPMFH$ufe3uUK
%qC7p?I*!H9`O*uWFKg"ZU34H(&DL!g^W_8=5;GO3Q)('`adKkdCl'K[,`lO[_q9t\]4h\m%e7WU<S=WsUc&ELesRcg!m$R^WQm4*
%!f$7Y`fAMJ*9[NdkQ#lT*"6h+>@:!J/t@5gc&SK8ZljMDC3OV]$h"Jfm(>c57qD"VP2Jt!imA;U"PZC8'6dtI9K!!NM.9$19<_IW
%$X,;c0r+4T'%W/+_"JQX1T.H[I#.qEO7+ofZc`a1eq";Do>E_CSM0TOJ:oY8+$"BUmKM?OSDS67*>*U<_b=7_j'X]CJr:UVpt*6)
%+F(\1\/:*ArE15Hb*Lj;j_b]_R#VRe,,O?+J;>5_(4=eGF)49->^eM=X&L-D-oHXX`4F`)Go/FlMSrmM#F%V!GP#J8(a710$.OA5
%2M-r$cUdj-d7/;\=ApZ-4Mj(,c2$_'S6BTPDDn;7&N$?)jM$P2$=)(7$$(V.m^nREBNd`V/n8ClKr5KI9:L+cCF9j*Z#N!BE[F`e
%E@$L;F`bQKPT<aCK1f2i;C60M+mDn4Nl47"h[V$oViZ-46T>E+j/=6P_83N+$Z^K:[cH\7^-UNoB.!F:L_M#!OlM6[!sc$K9M\H@
%B`_p]8_fp=aMVXkZ_X)V83k@LroHV`jF941kfRMPa6$^p_SH2WR2I$,,4hl<gP8n#g=emMNk5*+6>hJS_G`M@SciW0YlIc>W%^0%
%#]N,&$Qk"B!g,rFB9.-f0cpI>PtQan7Q89;iZ!5JN9eDS4B*,"aLr0aNVnS,;%-uQ&1Z)K(XgB'@1PM#$$r0Z>A?]nFG5)3/BJPc
%7Eu_KncJK[#s%uKbZqg.0\@pBbV9BJcTQ)!1Cs$fi5g4fCdm:A$E7d3-*J6K<<ShtFad,bJ0]/O7m]q+.4Lo;'^3(?#\655;HFBs
%m\)Z^f,#Iq.48;^09K4i7!2@LS9sLA8+F']`;*DBQ(Juc,8)nF3S0mH:`a+%"KjsGYKB't$Doj-8(-aLI*QPMEA%qSZ,N&XXs[9d
%]Ms?5KT<tbQK'I"KeT-WKL7(!689aNNAXfNn\>5dr3iaA=:Et+7<P%]!ck$f3M"+IaLMOkL#3OHJ`ImQ'!d,o!tNNYRLqn>[,`.>
%ap0970SPV]l6T[RWl/Gb7+lkl'I$1O&6:DBY+`Zp"CZeHQU!Ud.r]6kWLj..))@cq?aBs>874+@ErnJ^!I5*I.'/8(<%<d`1_6?&
%?REm_Oi<8-BW+7)S65jooMg&di=37Eg6s+\@CnXa\Tl+"T*.'8lcCmQ27F-_U-Ccu5X$6\,7FH1lK&2:<D41,2+quZOGFfY8n\D5
%SJ32a/2TLP8/fKcPTO\@`s8DQ&-8J1ibS_84lfJ-/&ohWp8Q\XW,gV#-!rt)apcd!cO_,7Qi)_X8Rmo?aUAkTYoMoDA=fod(rBBW
%435UcV)kspk>+1L8-^ZB3O+TULi8^'M'Z`PdOn7NFY"9K8omoE:aRJhCD`t\3ZNK$X:-MJ<eHisU&1FI'?cI&OK#/&CYFr3Y>U2O
%\HP>0*tDR-YmFrtMu[<2Wr^(I?BrXq#@bZPF57m_g*>'?H-=$ER5E@qRV%W?'_q43%LSED((G!j._*+=L9m+Xf&jA<Bq=C?-I=Sr
%1`9$jC%LUd[6ST='TF8`8#^<#hP'M1^?P3"X%)_91s67(!'q5N+S%PRTE??"KoS/c/T3@,'ttlb/+<L$>8bfubTmH.&gInL<]G=H
%lUm$XUlE_<F9iMA4^VL`3ABB"55M.&)3@+^,;,!e[%s+nSfVAieh\aCRo'9f7q3rH?nkO=%LQn\l&>*3!dP38N(XY+3..W"-\L+V
%+k%]D99GgbUJ;Sr$o'b7KX=n5G(=k<$H2Gek_^rklGA*fM.,W+:clKIHk#9aEJ?V<1(o_/XoSU_&`B,Y@3gGbdZIr*!J,@0(]o*`
%p]QdmSk;+?L.WWCN#GODQ&ZP3I2Kjp?"WH5&La-t&qWo16E),GCj8&P/nKPQGZG@)l**0Slla\_V1%@+P;><V:el]'j?FF5.S803
%`*s_k1;VmC&U\RN=Q-R*+IVNS)%T!+(CL7m;-9)'7=!8f/orUnE@p]8a,727ikcQ^W%.&BNZ'Qb831#KF]GOQ%A_7;6;:fmD>C=i
%%3\\Y6YY!nId*k)!dK4`KF5m!M?IKF4Ws/[^0r09<-Z8Z%m)d\W^GGQ=/foJj*FiVDY5=Ih8-u9;dN4Far/8#@:C-0lNa-=6`*-D
%i1V)'MXBnqd[#0EUl"EcD^8;WZo#rF]-(!SjW/>'-dE#nTXZHEq+X$$L>h>-+q62Skb^Wt=bJ]%j[eO>2Jil&8qORk'[h`-(Gf>P
%S-IF(9qh+Rda:r<L9S@]@6I6hP-8(\D=WP&^hnO<M)YaHVE/YM;`U`X0KEttO;FMXSN65p_5eQBXC\asfSG>,E-pVUa0_8<!h,-b
%8cUHR/ogYX%Yp_H?AG.."6Lfo$(<[3_++\3AD`gn>X>\eC6RobfYgVOctLeAOr"]MA&^l"2Dde_G]E?tf;_NQ)H:V#]hg-n_c1Oi
%ib&uD-jq9?(*'jL719ncK*t/edof(a,5#d*6VTu-l'AHWj&-KNWgju%8E"!BYKI7RA-Grf.$6Q.T^$-&+DjRWC5B=H`"Nq$1-Bt[
%gkH[rZ-,Lg+AlB-<u/V]-)(`V6#J2LU`g/2RDIQM&5Uf,hlj@/i!N'1nL_A?egV<T%uO=GJfkpGV?poi!(<j"A+9;p-`^CK#EM.3
%lG9j6jRh@pfs/pNUM;J!2*3@C4;TgeTHoI(mdWsC5^4)H1m#'%$,/KCE(c,\e0'bcri!-&NIaKH/jc=p&42,C]VS<408<I%)8)`o
%Yl\r'.`TV3cd4Xt`YK,#'NgO::\LZXK(t3ShKfWP:!S]PC)f6#?DE;dN4#b"NhMm]G#a]l%T;8\XMB!b4s"PtjQjUaeY\<l=a?Pp
%9Z:s5RKh/OeY)I'da:r<L9MD<N=nqE^`bYTOVA"q\JSd(.3LBV>Z7&H+X1eB`"pY73N#,DJk7e`jH5#E=EHo".G]qU5%-9IX`7Jt
%39^Mp%^Ce<b`\c3&9-R#5/qeLMPh#&)(@7G/\*2oCoIb26\o*P^ejeWNq41[X??`)o<eoq;HV4k@_X-XLEg()ZB;ZA!HPa1iKe`a
%K@l+.]YJq9N^G>+!>&6L"#46SQN8qa#shr-d;=J[Ot#I:Z/*Cl\KoI[is^1Q>ug8!O^gLQ@+sU2""3<:`PlO5ad%JkS?BcG0W^fq
%fmlcL?a8X3*=hX4iYUI-0e4^!oK_,$&JSHc`4p8>lqf:)"'H2ETd26ELA$_Z2%li.6/qjTlMVCB&!L8d-032T$T0'tOl+&'#Jt^&
%!`#G#.G;R%P)(`9c3g6-\=bh'>Jo[;Y=Jm7%YWT;Wo.8P3@sNA.ZXdB;MR+<WnB[-,'PLJS`qFD>22Q(,KmeTT(q7*]'M/g4[,LU
%!/@6M@W4h+>f-lb^&#:P;H''D_?nBY5Y2V*24$'pfH.K?&J!]\QU!*R*>PNs6AaX=MtCks.PbuW0.%I_N:E@\`1=6E;#G(YiB9(r
%1r42MT2;PdR&I86U(]tFOKF49Eg,%KhA,mP,P_h9jDe$+,6b'b"6mrY+jZ1Te9K\X%ceje-En,L+7l^JL5+EFotHrca,We(k:>;e
%+:?@4o$%U:K\pY:9)(l3o+"*tU.Bf^!-[_!>..rrF#&rYU=U82U'aNY#/YJD.nDba\i,*0r>45=W)^a%]==06eDiG>gW&$!e-HnH
%-o<)I\JPJ8""??)NrW_4N[%34oN]qn5\1WTcUdFB(drc#M$UGPL2o6[h,Skd<U((.-i54"A7,q-*Db#!@r3'lNl5@k>[sHo7haV!
%jkt4j7RLtr1QYZV^fN7qAP't*qa(9cna;!]/43G2A&fEh%h')mN,*Y`$c3*6E)LNfij^HaFdTZ11c*X>i)3\fkF?m^K8ba;<sVp]
%JgNU-ToT=CHA#4VP-0[?"7_e,?S9QFO<Y"2pU-3?T@t9@\q;ZDKim>TkUY5qnr"19e*#(Ca\%;l<Hk7GfCB1Z]C)\DNQiND@hhtA
%$OI(eLFONfCkU-T=#Hcn/lE?5Q8#`Q;)8Sl%*2:`*\[o8M?a#M!\2K];d5[`&B]0`p(ULMGK],(?D(NJjC]sK-1pR@itmhK3g:JF
%V=&,8VB]69.m#Kfh,.'1N1Z!;aH8A\h?VonJs@1q)8?#(T)E"#8SHgU2[KJ(Fd]6lF_-C]:gEH4<:>LEJ6^Q(b`%cM^=IAqUO'/`
%'j<RG_F;EV`,>&[=6du>Qjte>pt[)-]$#)*bDAU_SCpJ1g@'PbX2GMK?0&@:]9P/_*F?&1an669[6=3>gVm)_cJHO02"iA(4P1)X
%KJ0sY4/Y@qFWFj\5\\Wb0a?o(!9/_dJhp4jeUq+K>pjp^NJJ/_ERKEB\G0N4n"6$d(I0uN=`/N[AdVs]*QZ&cll2?c]VjNTel:Lr
%A>!n#=J+gUj`1(R<$Oq)GANA3,A.QYicILoN]IB<?m@<'KVN0O$2ThE*rrQ/W3/<0F.I#u)$bY1R3;'pq$@EOi_kEAifGl.%a9#u
%W@:FW[jD`l_5VG`Ol%q#i!"pX@aqN:4IgT*iftBP!@:kjd0MQ%0X`40#%@,=hK=sIi##&bRCE5L]LJ1IC:UV@PC[b]K]rRtoPm.K
%F#]aV5[Qk5;O/0n")1%6:nA^pEIBrs*shGK^/Dpa"N<eq$SE'U`%r$&-AnNTN5HkWNpfS_:c`G#6nJt_XA-S\A?lkOZ.k^@bI9BL
%FP2ag$Ol,%Aul1'(h<b!VC71pb8s2&@:!2`o<,SQdr&Bq!kH6Y(5`@","#01/W^*S4QI:Oepr[Ws5:0cnm&?c"s@Y-=j0Fh:d^m(
%9uRF3#m"k',`>?H+ElpfPl+_P49P7V:a>Z(?!k9(:YkC@Pk"=nL5GYr%[Ve,Gr'>%d$!/3F?$c@^71NL#$(>hL=S%I/fnmIhbgJ.
%J2h2q\L=&#HWe<[I*9>fa`9WQAWJ>b0iZi*r5?WAJcVO7REW(\q8SC[%bHe#<:0j@E5>YApH/XENd&$WU1s.e*-iL`P-?dV:u:f"
%gZ&&ZdBG+hGskrSQLQN*pa_abfR1l+K"BrD\bm".SXUWLLB9QTM;UsFANi_0oXNa6hu:/7!#Z!_CEALK0XDZq<*D!\JOi8?TunQj
%kn9@Tp*3Ybj^]1ug#\J<`rf=5'-4U(^'ZUs>b%N\&Hs\HYJ_)'],US0#bQEoG(A<lO&]fr,X"5oBJSW?h7/IlnE#N;r(>NVH0*-E
%1o]WYlh-C.BrU`196.*N.Q-P]$B4"3=KE#Z^r=+>-3ll5<I+Bb^)Y=J:t74#RiIf)Xn.r(7`$8u^?+?"9"'WZjhL?G;RO;:PgqJ!
%UDO#dY]([#4-1im5QBi6].O_(/QH!Z3lPVIX$`RZ\;CeG!dk1qd57#Bk&U,7%L"mcH?k7F'ppHc&)T,2quNqZOlEbX:QN\G#VX(F
%:;qP]b%MNl@B;%7S?%N#`=Qn?<3([E+_Y$_on/Vk;QYO[,=tI6e1G^OTd,tb=>E+6!JFDAe"X>,#k=ZlWH^=Z#eUPMPp'`1bJ4OF
%T:N3"_]=U^krp.D]ic^r5`Lu;HDN@;8V'M!7=:7=Ak/VHm?)KF1?sfSk60d<e2`(pd[9`mPNbsVaFN>KOGu;J#)D#>9d+f'NA4.3
%;[`s\UQEoYM4R:odm2X"WBs2mQn"mGN?N[&%C:@7BELaS(W*?iZB(^%;!+L.M]Ua#qW`>__WH4RT7J=J?QNS(QpCdb+n*7<j<=sc
%g\;En*WhNX*WVuUL,+mBk7;MKP-cg^rKP22iH)+0LW,o;LSYFnI^6Ln8d;"aRmOA/Y2O%6jror3<e]J]ZuDrqGqfg>'8+Hf'ECeV
%E9F-I!7BY[eKId1J4O=!0oPSp'HI32WVWOp^\NO#SqZ1!#nB>U,p,Z'\d4`GmBG]+e*qe?a]`#B%GgJb#T^/fRgYQ/KH>cOKUt"o
%WB(nl"0$Q%K[/Z<ECNDQ*9bQ;1@rMYN9-ln9[H=b)ohVm-:+l%6tKUR_rL3d,Z$Z4;dTBJ#]b9l8f_r=pc?9E[qj*T.Z%8Z+p0?W
%Y?$H&i,Jc[<SmiqiR$B`[I>A2.Q:#F3tD\Ok1[YS.X@0@M^opalLXd7!S4.QZ4WUI<F;GHpndL>6]t#;.M`O'fiI/R9959Alp+pa
%hUbg%L>lqH\rDRY0lsn6Dt<3RQMnH1a1##f,o*a3qF!nMor_Ysg6#5!"E`*aCB!f!XpW&;_goOeKoiT]j[FOSGrc57BfK0Xl)XN2
%bD6`E<I(7u2%[OH1c'P'qV9#PN@3]U`-+FR8chW:XS6i_GrV?>Ku=?:`qBa3jt_N<;qIAY`$mNDk8_81:gVIK'qes`nRY&l)TEhu
%-guV</C\6FVJ8<3j:[O%2<5Ni>K%Re[RP5($>/8VGPi))6*Sc_nP_n671`Fpd$qlABgDJ'10;%s!tUa$aPTJ"c">+BEVF@M.j'uV
%@jZBZk8B*6"ldG<7Q"7P'-!JaYkq#"2SL>RnU/gF.&!=US%JS.`K@rm'MW]0:PMh[&*,a[McWjD^5&:h33824\,kT91)J%DWZDKP
%nG#j0T_pL.O2Xccb2_q8A:P4*L*'Kh%HSNZ"@[.BF^gD/I#8?^#iot.;$LYN>D%;^)OaQ$)B4SB_Z40VAZ;\ens0Zq@n72D9<rRE
%A<OTFUoLM$<8`iteu']s^,The8upr\f)3ApPK8/)d]U+j!OgNZjYZcu=m*A$P_(-^N^SkoA8I+1=n8e^>GVL\n`^qbO7?V;5=1">
%enTc-PcbjSmg+B\dhapY!tu8J.I;R_*_]WVHtZ<=-'@*1[AZ3r[j5?j@UhfakYOCM%TsJgd5U^A"R<5iKM[?@O0U?;gtIB,"mHJX
%Uj75,hRD.;m_'hK_E8p$I`_T)X'GHA)DO>@H!!=C.sXE$6hgl(<]Pb'1FoVIL9X'S"<F;aWBh-S6p"UY@<i,t3KC(7lL@rMr:jle
%_[Hr2\=KZElQ42*6[s'W+J7?&1I[&$97@^*'[r*%_1u:mi=-&7Y7<rK:5gh)g5F)`En$$9!"[[%PrZaVS0ebO0%;28BVG"$6^5GB
%jch>iPu7XEYYdh*<TVH?_fK\fjg$&Pd;Qj_/fVr9j0cKJ`>4W;fE=g4WX:G,Ck[UP#)&H`6X=9"ck(I1Q?KT-9SgPVf]H`$(fZde
%3f+km%3=QnVo*3kD-dYi0/+D!6":bh;9WWnd:,-?4F`HG&l2MH&YMo>cJ/X:%Z#lM?D*l)!><kKYFZaH&6F0d:k2W_qB`p-H(S,i
%P2H2G/jP#Uj0MVFa#/8HU]c:]I8qb51#V8`a6D[UTsI#TanYEfLb%ir#[)G9=IfG?Id3s:!,diXGKpRV1JS"VpacJrM*Qi"I"R*C
%K.gqYNB9cSpC\lRAfb8+o7_m:YcGT$bYVlGICZGb\3cpcM#"Pq^aC13,`@)HpP^Ufo1D=S?V3sH0YNQ`3*BEdZD(4Z1TAhNF-*Oo
%F]kjT-XYEq!\U24C?s,deI^bV%@!8:<'I::pSoQ."kRd+a,>Qm;VhX[\IuqRT\04QSuU,9FHQZq!!@Uo_39O%e@`bK*hB6f[uKq0
%dhE<Sr!Ln@1-Ro&$h-@+-JKAu$X%g2`0AuP9XLrU5i6_[-)Af]ZQL*J&9`UhU1anuO[UPAglueH5[-'qV_U<$B$'on#Z;(Y=6SAH
%j;VTPW0@fq;Fi`Sj:`ZZW_d_5p`6D`&MQInL?adq!,MRa57Qkqad$!EeL_'E;$E+J,%Nc-!/L$\*-HjTn>=]cjbeI)."94&oMr7D
%dMdn`ha5jZ#TAIaVD!G'6)&#G,lE7gTW]VqUat#Cg?L0lg(Yta?H=h/,1;S=b41;'i>7pQe1t"4klBFnWt9+Or4,g`R?36D=)\!B
%JFj"LKTVs7&-]#5%JLYWQn.A(GSc#-KGPF1#K68jpna^4SIRpYa)H-pV3%qd&!RUROU5<#9&SXLXtQh07$Dr^)aCuWPND0CL*M@3
%9HVOp-3\(>It'*()Y29:*sK11\.WBT`Cj!2/f%;98A#TXp8[s3XXRI7!;'9G*C0e'P*,-bL^tl.q8f+Zj+-][ZGcgK19!l?5*Kc"
%qj_rP"o.)<h>&I?@j:.E;M4(MVJkCm>SjK][S`G)!Sic<K&R,,TXoI)eNe;I-.=2^R(gLs;.!2%$W8TJ+L!Uof)(p,$BCdVGikM(
%cSr9rB>9N.2VA36\,)Uriemg@$].Mq,Z$B_6fg3%#TYFLPQE"UI8r0?-2KUE+>>e^3?3Qqr6Zm0M[)f>Z\3,t\Nq"P,"V"Z$'eg&
%1uWdQNI$SgO?+;YRVft'VV>=FG@u3,463%B1&=Xm"ScA:aQ5->V<^"#MO(/gea^c#")fD)\.1fe$5h`*=!%Sbba@>J3P\Lh=3t$3
%JC5b0I4Z1NdO%OOnOeP?*Q=\mH=:ju[^R3R@7c;9+7`7-7L]\t.m=0m,&nS.'Z71+5Z(:D*V#&]^;Sf#>]fM&!m!DIRI8a5oo*[+
%YoI/6K\C,1q,$Y9&4B>`^4P!P61Fpd3th#pe+&P+C*R#C^I/(4R-=pZaY0s('Fr"d#\<)X.6j<+g_[-!mrE,k<GjF\_[.Uf/1'-q
%Apo&gR5[?9YhkWeH4.$EU+=8`=0Xq]Ba9U3+nn)%K!?d9_+_#Sj4P?8:W61f@6T1Q,X/73b#PK0or,`k&fC^VTp^Iq"i?"F3PR.G
%.bOM*n]ojOHaa]ffaMiKpsm`)+;+lqojTTu1e?jr^"jR!5+PhRZ\<<_E?5<JLO:^sh.6+_>`^/o(#"Faohl@9:1EkUY#Qna.(T*)
%5R1nZ%cZr>H^VU<X"U2*SHRid0d+f+Q)'L``HkTU`PU%`1f1iJ@;JkSKe!<4m?0,,GHR*f3UP7M.;YqA2CT?*HTakR=^4SKa/;Ei
%<H](2V?htd1m"F\53u?HJjq1#^5l\/mI<PH">G4YlgTcF*N6/hNWu6;PZec#F6jRZ0KA2G`:0Ech<-.>==UK'$U`#p%Wt#ROYmuq
%_MGPV#,$^^o^VHo(>H2$TFc.#Y-V+/l2\g'SbV$/-.O/pFtMeL$^DrX&ibHb4]eAT.8]2_=A4\Y+q<.*a(NDkGCe*5Ctokr4oao#
%'"Da<_&NfD$gL8o#Lo-*Uglpr-^7.DKU'C(.=D+_NFt!Sa_M4f\Qg`8N3+^M,p!Ku@N\(b)0Ye<+PsT460X/0_B!bA6`%"q0Xs]>
%c;55mp&e7t$)AiE]]\kU3PiLr8rurY^rIgT$rurPNB[F2F%-T1S`;6c#rnP,A/:?[M*A["M[Mg3lD*X?E5_N*3K\oQ7l[c.082<L
%"in#!j=B(rq,eWM6+X"YeqP!>O&lO[a,k;e0fg:e/2GmSKG*3q=.rY/7qV/.&LF7mO`=mH>n/GK%o^n24]^&rFqra@+*L+iqW\Ge
%^mCQ31DZH'-[T6>fKr$s?G;<6EKCt0proSA!'m]^b'0k@FF`m-.YrV]ctN\O6I7'o!B9,U4cH4`9(<]7q6!:uQ;o;F-XiKm\9p8>
%M<"\J)tIDVPJrJj8`('`02R`;*]Q#hQk?igZ>a22Z!n5?rn3ULF-c$[g(\M[Xic6:6Zn$CJ`8[Rqe`"r7&ZtZ+6(OB<J,r(ce$q<
%8Br_[Rem-"HcY;B"*G`CPXI)."jAI*KB[4ted:uGmsjts\W]u^<9)m:q-&LI,Orh=F>jRt[`kO1:F60tmNER1k7rcW;ir^!",&U)
%Tb3LN[Mhq-:9S''\ZOUGF-JL'iH8],7pX[;^8DV"TP?^O^ra09Z,k%5N9&*b@&a[mE!b'bS.%D<:A*skcT()?BD>D\^'c;C)h:&$
%mhhslZ7d7.`fI2l?2';?FOo;O*C=rjIV`Sc$4T05dO[5VS3Xi].)BM(B,j4=XW;?k(XRgjbg*UhT;,,'Ir-060u&t$.S&BTDD`,Z
%)\E)sB4sg.;B<qI/=CB<m]Y$!7K]0@2ELdWrre0sgTB`uNFIsFr>1o4qf1IaSjh<\q\eRf,\4jQ^(5DSCPJ(,=MCYFYu)^j?Y<;C
%$HbnOm:0fk#^q;f<q?(QQ,ib@[<%tCMH:-UG>XeB";M6+H-H=S*87;0r4';DK:Xh`DutCc/0WY6kP?ns>*Em`jV\r\-IZ/5l[A*?
%g\^lT^<#AE3Tfc)Wki\g"c3M&i4a?`<-;j]WIS.jT;$XDLhT`8F"SkG3@pED&'NP2=dk\_E?d(P4*1r&-^jrh*[U=(kWO?e;IUqQ
%#iQ49bR*aG_EW6_.l@jI25AaU!k%[&,)a9XBq%ZgFrb%^SAF9J/bH@!WGp<*,tbD'*-4PJBHsqf6P@I@,`^O"G4ml>1[<oNZWqY*
%Ck-Bm,*dU^Rpjan>G'haEHNZ,B2F;;);%0Q$48<Mm5mP@h.3]f?]1*Tptj.#o:hp9%sp^2PtcAq,,RQ`-6&n\;i/_<aWp,H&Yd,Y
%C(fZG(,?H\X:Du=INJHp@[5GT_2kUudds3T]g_?p9d9'R>2.VhW-\q/nWPhYn.P-#]Ztuim\cHRdJ"t\8JgXR;e"YVARf3\9=&`5
%$X6<k]P$@_E6'Io29Z[V`>hQq"_:.I]_F/`:JeC49t<8B5?c3Qi.\4_(=m(?PDK>m3"9'reR3-6V[EX$hO7hWA,lm5pm`JN7R?_m
%MO-%\KQ-EoQb7@)"6jPm&3Q#*7(Y*c>=ZA.H^Lk4=4f6Yf3*QUQ3"mTg1^)W#SbXC`u:nq)i3kjLb`dL3K["&/ii"cPDcE:=I^M5
%V3Ff""1`:K4\ZS;S-cmr?N2\f^Fe>K0dDjTA++#h0:6j)i8+pap,5b#-%&W8S/LNso1D2^VYsFEL!jifs!_`R7!+q4&qaii2/PHj
%W\%%/N`s116T)O\UmubcRlOtDNuA63SV]U,^Z*epSfh695hgN=%SA5VAG=<9X(Paq$1d'P6GfM+I+G1q=lK0GSb3,-Cf^PW6S;Mu
%=$Cnq,CW[(Fg^;f(W:h?A>c7\5gTFTI-Ldo)H'+R$A([s)UK?:b[2aCN\+N!Ji:<?VD&GQ_4_K,`u8%./P.NZAQ0&kj*03aNQB`U
%RdB*I-V(dX',":=4O]hg7@kN08]bV+4:m3p5p_uV5[0-nmmfW`N97Ha+2QsKLHp"aO$e(7HAehRZrm'WV]rKLJ&cq\YoW*U2n/2@
%E?';rCLB=>oZu/6[a6+#1SBk:5@1VVMhT;*TRl*$2_l]F('A<2if5.Ze\JN?WSqO[_I2grLuO:T"6A!#h%&2;:S&?X=Cp#rQL44D
%GK?))NhC7VcRR^D5(NN;guNG6iYKUd@N%h2dMMLaY!Aa%414^*)+;K"><+u-&qTcHQDHkJW/)'09-Q,P=kuKc&#?1qMe_i&h0j@G
%j]INFTXMd5OVMAVjHn&dr:$bBN7mN:b\jA3Rq=7!`=`o!f]<U;gcWqcb5,]S<7fdqc@iPW`3\H]Z&co"E=;2$T]kfUV%c5=d]7NO
%.)$Zi'nL1*,.bg5>::g#[<(\[:5TdTgN4DNJRggM26pqHmXZH3?6c6Ro^HBoK?=Nl2]At=Hu[Pi.'$Q9>@JV/O?#VL1)<ik&Jf!f
%OJ"\ni-t(@4C,@8(,8\*.76V[^liJO'A[0"jbpI=mG>F%N%lF$WC?dVUKd<mAO@jl+15en.Y!j^:filnmkRD:,GDE_VhHbKq`1uK
%?8_;U*%IXJIMfAPeu:BPo]&k2PdhFgCQO.D(el,[N"D9CJ/"YfC&+j\BgGMuLiF@)[a2b]c.<gAe:KTB6jm!q\^6chI:j+bT/,6>
%ojOgQ6/)1]1H'!0oIH;F>eSd3,ctdqnNp<f.Jd)gpKmGN>9XSa",O`LTGfJ[L:*kAobu0-X$:@X+?;H)4+*@da]L%KV(H><ac\Xs
%Ehb0ClF7:2?YJVq@\2s1;<X3`gO#ZIKaWr0FdP7SejRu6Z1l70(d`CEgBrqF]Ou0[>rWC83eFdd(Rj=XZ%T=3,_)=9U,#K7^WrR3
%HL[\UBhU#^ns]0/Q$)Wd?McX,`7=^PTm)*/#<r$-,>7sC\WU5QS),2CC=bYu@M=T2l]s&IZXi&6_4s8^5OKF()1j'")`2F7g!W!<
%<XV3.2_<@7n>!C4/C^>t:udtl1ftti8'hj/`mT:hk7`n/IFhGIO.[e9OH$"@&JF41YRQc#%niNo/NgF:W+)1r*?MVen8/&#OjD1N
%Y>lI=GXo@iJlU/9p=m%M-Te2M]'#:NBaWQ-3nnnf/n+#cf,6g.r@KWD:<k.EgM?%d<241+lC;Q:9kg5UJE#,[lSf;$]MRGPJDLsf
%6blQ91;d>Lr-doh_M#,Ypp*C2$!=mmcC$1Rc6/dai)a8QjFHea)^gcC`aJG9FN)e$#NHjQN&7^pBVSU^!,,o$VHHD5*Tk\UqaTTq
%.NXTBNFS=#"Qp[3F?5r"e'C)E;eNeTp(iEjn(R-3'dQ[a*?K4lGhO3YgeFPpF^X%b`4G1oQdoR$j#DMV-fJOk8tMriee]cJY6`[]
%$$;_X[Zu[lS_(.P1n&f9dY@n:!"Sf1D/?`iC*6ELJ,0ibZrfIBO;?KdZeaD#<Yas,Y'Bjn@b.gciV1o3]HNA@Nc8$C<.9J0/\p-(
%8?Ie@JRD*'>Xa"bN3XF[#kh0iNc0(G3'!Hgn$V$b2ZkViEDTBc9pOS*muKZ(fe"QBjG\F**G9k<!1:H#cM6G,cE,-;-YSQs[f1*U
%m'_[*^rp-k(,$6JK,j^`i93&&CjOFlmHDo1nGFiG='41C?1JVT<L/p%.X>'\s29oNAW,Seg4a=t;&+kD"0OLE)VUVKBI^l%_`gc0
%?a&nXjVHf*]`*fp]dnbQ-&>NS<aYT`Z`*9M3f4_@OWfPel67W@QWE1G:D^Noo1"W3ChVFLKeY2$*>YZqZYRurdMVkV-]$B-U>1"e
%%&]&Um?M(1Bf1S=*IA76cC<5Bq,-hP&=OXW]TTj+]Jm+JK=Bp=VBm+^/U+9SqMo;e+!sLkB1:l3jQ.Ksju9mH\kYHf,N@#G(\n")
%?05k+PqXtm<?#gD7;aN"WR6V%<:IUS4U8@&nD*bNj7QPCmik^uY)3P>_aL,gXidN#0-57tYAn<aoTfo!1jODS7LI>;@Y1m/n%JZR
%P.+1Ch3snh5L*HHNsuctr<-3V2+"Lj#k2XV[@bVbh):c8Z4@Y9Hc4fI7q;V'nZ&$1JX$+jR>DHaSRGLTc[44US"[a3*o0.YYd%W.
%YTkP5NGE6;W\uKNVeV:!-RY!<XD@DsL^UZ/[\m0O"Ke)X1-\D)fAae$hQo/['^LN*M+lC_ft"T7#[FQX/KFD^f7"B>SoZE+i\,C`
%^_53<&i"m45efO3]/_!]%uM>aU6;Gd/;lD>Gie>nOSm+Og$!B;5DqO"b]O<rB3F&7\b+)fTtPG2jN%4F:^SuFS84LbhMut=Reo^/
%$<M1-"FFlP8)ARgnQ$nG0[0fV"5=$+"KarUq$tti"P(VRa=XHk8VtMQ*KP24lpQ[`bmE2=Vj.p]$ipS<F2t:j-dgl&YoH7n<QH_Q
%C%_&fQh^j)_.Z)7.3]tk2]\[M)JK1tG)N`]-@*eEHZE<,5ka]]4W]l;PD02pPB,O1&qk\?:L9LSft"`f0I6oV-%[mN+d5u?X,Nti
%fen)r0r-0R^W6)hYOj?fk4GM3IQBY=!j6'No6tgN59\Qkk4=dJ=>d[pCQSm3H[^a8jZ"=.(=HTOB?-Ig/"*&Han0DVpuPgo-'o,^
%F&P-lf%Z5npm";]FC]$Gi'86a;otcPX!!cho3.4A:j`\50LV/9+IL>CHdM9_,]6gE892)nJiXj?n/H]Y+mIA7a0P;NK7'QAi,XOX
%q7*Qt-@0f*l(#Ccm-fRB^eDhFV'rY9'c[fSR>E,d$/uf&23A=lne\`\7JW$#Egn/e"+m/bq+T%kn94G^"_<*R.0B)$,Yq&L[!uSd
%F$`t"o_^UA5re@HPY`&9@+LH=0qh,(MF,q-4<Q7g$/VYAc55Qr[Kd]!B2i<6=&?LW7X^2&CE;9'k^)lO)Y2H"<8!&MpW#QVD^@ne
%H7=&.q,opOO%`J^V<;?V[Z'[VW19t3R"7$SO`0W+02QNMN%_)C.+:r73nq?2ar!fB?&j<`;9jQnI7[U%&SR>0V[F/8lUq9c8<L53
%ZY`gNLhABt^IU2/U0ln4n3_+Y9flIbjO@,r=[WLQ/4sb+J3q5'cfeNAW:4d?Ar2>qU+@p%+T?CBr!>`/0bX#.de;=s1deqGPArs;
%fqr:&*S-?<>'E1L(COFuV(]<s_$oLqq2=_m\04+J>eqV]Fe)%A61QeY6MTs\1I$d'/f\PubR&9+^qS@[_('CNg&NN=`-u<3%@%]3
%POr2T'pMt8CP>FEoMk0b',ZrdC[`sal=8QN`%#)N"eU#o=7_88rj6S_6&nFm7'Y6d4?k76G=I"0prr?J+=+pMj9k?0T.[gB_Y&m\
%qK<Z88?BIoLH)$mXc%XYA.m_r^"hF_Z/n&*Mb+A2Y^Y6eCa8ML/kB=j:Y(.CB14EZTPIQe"%:8/??._LW6+=:N!aX`o$oiP#VP];
%.@ZN65BQY;bRg$B'qdT8)VlK6mZJio`.&.u96OPj;;oU'fR2e!adGb-0u]5^^QmC/T0aC]&u$o?RS,J8.TMs@Eh,dZ`3IUN&GDQ!
%(Em=7;I;PT9KC0Bmn4+5kJP[*)d#(mIB)QDcU'E%_WCU2]#9"M`L/&s5]aUP$<+n[Kpdj\Slp)Ye@HGhIB(jMLjW#DQUaRuer:u;
%RG4S70$21?JK.9Y-%<ojVOTs+)-kpShkYo:Pn"\1"#]idpF,UAi['I*!61&R(:CNb^#POC!%n_k&YA3,=J>TG7Y(F;X0R-e9h%3M
%c7D^q)^B#V9ssirBin(CYp`Pt6L&1<AB]mDB,qg?hp.!*.1&%&9p#N2Z[i@+KTu<]$ggT#MarbX]M.F'$blX7Zrluue:=DG-a5P3
%(Y7@@]9aV;h\B`1(6J<Uoe)+:^]/*WcuO@`K?r/+S)OdX?`<arY=.iUAiI;*C0k01EqM4PjD3[:=i3[\DCP*B9+Wdk'K;$KN"r-&
%&X?SP>*?1f9tJhG.ZET[$=U#XZHkc]R4<>r?"ZeM1o.?QZsAaBX-\&OHF=S7KV)Ib-q294dPjTZV`8:=3O+JOPeQNq9;)i!:G!.=
%]ApK#!PZ)+<F*5iaTfo#-o%YHD9Ar7.=);@AsPkkQXYc.@-*4t&N%@0\alb)1FT[j_I9gXl70,ok/S;@0Que[m/+kkVi]CPC4&#R
%L]@-,K`!OA&Xcli]'(dnL"[hXY2pP`Y.F;6/s\E/IX]Ai&PK_YDY$LmJc_OG>HF%dZ]$Stgh$0J0UF:aOgmdkj-(`q2lL/51+V(.
%V3K8;b@X(>6EOAe08rEirV\RBC6HAo>HA\fc&O*'W)jHZQm^cI.akO6nggX"9`OmdiNs3D\ln26EXq9p1,qX8=/+QL#A<8M/=?./
%a*J"pE+IWgV&YdCl0,A8C?$Q-;jLN#o//Yab((-=4NpQ%lt<-D.D?:_4N/lf4BUaP(WSTnB.qiIdBfCVSqF1KmNDX>nut#Dn*YoE
%+*6XKP7c=j%FVRe8kZ+$:dfH..,I5=]7bC+LkEShbXJ%'>.NS&?;.^p4a+X4"f.]TW+%5Xh[J575k\>-RDMq+oubNPA@rG7pT12e
%1N2m7KB^H8PP2.If.GWHqLJD@3/m"!LHE;_&ke&-rqQ.Wr_,qi;Mbslqi-`%c-"(n63'="^>7#[:mBr@T;?:ZN&.RI!`cTC@`DC"
%)YQ$8XXNiq=/"4ta;RBh6[%$:*`_n?%2M<5N2%A3+lHI;VA0@\Q1I@U5L-kVhj8,TURIsU+Q'+Z`:XJ&oC!RQ7."h(mNR@/9tYQ9
%!fR45MKNr'#=I'kih@RL]?bh`-jCs"'ejG#b_k4HQQD@PV$IP&fd0(\Z$C'Dp;LarZ]8]dloh1RR66W`f?i*o?=4VL1<Qc^W"E0s
%\h5L7cq<i0ACR^sT(3NXo&ulGF>jDV4iXVu70V:'bmWRMqD.?+Gf@b;+J,5Sr._D(gFKPaEcg#_Y;T4)3:#NgTVCaY*Z&8Lfm]VF
%pVN$nWZf2>nOJqaduGa5hI#Ian]OV=rS"i6BpoH9!?XrS-gj8o/'!JAr]#r#M+;I[?K75A6KcCmVb4\'."L@=ASf2iNHfb<"5R=!
%d8IAu-.+*R4Nk`G)+*pr=S"<HQ.B1S1Jm)Yg/ZlP'4$]c@9OjEDP!+*j<gd0`h'7SHr4GgdZTi*LS]7ei;2![:K*=df$HsI)WITH
%gl+-MWrikH@1BJNI!am\0]2lrd]b`an$'-"cR=0f19)J(doQ$V?<K(N5o$mO:nXFArDrr;@q!4j'IjeSPShh]\4XX@ei`At,YY$/
%9[h6<:MAbW*iOGh,.S0e*2rsP&YJ>_8=h8MEaOkL?D/f<E==+/^JL>cX-IqF)Q\WbquI-7GY*Q0L:inR(RtL*RW?i#Y.Mac*-<<4
%7GTTaS1Lf]#0*+MjYI6fR-F*Cha:%YTW$WL4(WE+l"XWO8Zi@OOn6Cce)Cj0_iXQe;t/jR^JUDr268)$J-qA^B>'Vu2bJ<eR(Up\
%.>r\K`%#CI?tAhKKdD.L%V_R>'!`fA!J98F?cqa!]DVPBQlSH%`>*;">Gj<aK/VKX6:^QC#!"gA?5NYuKSuQ.D>$5=n*EtmfIY\5
%;nWLNI%"*anFX=t'W9@`1flcchS(OXFQ0F3T@OOi=ELOAI>/l,++HrXMsX]Kg\6Z$MKS']![14C:1A?K:\9O/7Tj.O8M/%]4bA(i
%a+8Eq?.T'XYn2j\lO`11.QcsZ]/#J4JmPnOZr'AZ6DgXd8Y`e-aeK.d7^MqsbU@3$U<-Y,-QX=YH`9KJ$,,,+$h]N%,-%:Y@#>VS
%CQT#3iUV''EfTA)Z_-2a!qL&d2N*Xsa<';G6EZePC#X_UOJ/DU0&bRL.-phgSZD4%Gr:n6RN*(RZr$1Z$ts0IBX`Q_@]rQ=kE#uD
%DNod*4V$cm9FO^=RclduL`H+1kZ)K.Ia:B$9.?S'NrsL4$'m`^Hl28e*Yl#!93hfgk]\%t+O(T)edSZAiTmOfO;r.&g'^!4#X-]U
%8;md$@#^edYhQ%\3],GK^tuM+=RX&oIX[[-<SXlX'23D-T3*O"#ZsC0("^:>b_NI#[d`#qhLLD`470=:TV19'O2Z:oFWO^Gc*nC@
%Lh[s`mLt]N;1QkGE_*cjnY9_nlXuN>9OG?C%qO!9LKR%lRV9F&3Iu=n4q+#g,,,X4]3QU\K`[2u=<5`,d/bEg!Pu:s/@5=2T=/]Y
%M+0d9M/+ASQ)iX"<p*8!34)V=`5UuNaM5!0L-2iSG'HP*=V=V]>+H_u#-DOJFt*o-$KQu::\s)^oJ'?jcS?>$UG2P@qW%AM:f*01
%]T%eo!\%DQheDC*\\*hnT=m4KQM9J\7_\@X[T[[2-:8'NIkr;t-:ci"NfUIk3@tg4[DcS$S"ECq#tA.TcHVWE*c=dXMog5r:5A#c
%:`WXs?^/:;8k9k"+8!!]q4O3E:P=h%r8-$[M,9m&$UfKj8/PPFiVN6@#<MZ$V@l(f;[G65c1mT<'Ij`PR^m!l-OR+DE@?;U/_-kV
%c,jH\iP<:ma3'%BB;U8QA8<b?-$r&f0+sKf*KiWdc*2hA,9a$R98+_2UYJdm1[dOZR8-"]8u7rLWS2oDMaR2ig9.MohPC'`;n]b6
%1Q-cp2Qp(f]F>oc]IP.k/PR!@Df+ac\N4DKbU30<J&ucoERPc6=HY2$F)fs#IS:gHj4iTV($#(%P^+m*qfA'DYRNar&)V`&O*"MT
%K"ei0A2Okkn-jE'59*U\,cgp5+QP)s)BWmjU:@hLVW.+)ir,809h<U5On1X4E(L^i'K;\qhN!U#p>SP#hYR,k9#XP'3oRIg-Hjab
%pPKr*;!eX\K9VsP6!UL.#KCVOl@9d3ZFXR.,LQh2`&"PJ6YGr+',n5Y\2l09GG1IIKk%-XVt(<+_Ra&IX)XMWnqj+2\qe8:a,-37
%p8^g5nAs+u&ig3&MbW,`(2;h8_s+oe^7@G.3=-BK>.dU^HXoH&J7!Zc)*IMi:a=[fBEd`><@e2,/>TF?):Fplg8cI0LHWGX*)[Y$
%kQ?D\VqZ&SFiC\1K$`Yg#"p_si'j&2ATLP!mZnl";hD/E>,BA2/(KbJIr4+6G#P-m&!Z:MXb@!pcYsOm@1gpPcqAOp3;'g9Q19>U
%Ogu%%R2nPXhl8bURIu/>q;O0b?A8s'lqI,HG5Q;NnY(lj"[]:<BO.0F*$7&ci)H2'A*'T@;nWLNihjeJaSgmUNl[?++c"8G>81Hr
%nh#.JbRr0gpGN,3T`PDZ9d#=%<A8d+"V@W]FbtD\-]U<TMCQ6"&D&mr(0>#p$B'qg.q[c*=Sp"%P\-rd;K%cnCRX2UJ%^5YoF\q>
%I/7r3kp[kf"u=`W6-/<*.-$m#Red<XiYm2O87(n%@Yk=,]ZCO.4kf%te/T(P'l"K3_3ib0Op=O/+-A_/Gp5d71hWVb&^ku[A0Ko9
%3D;cN43(=H&qf9f7[gb.B.U>5f>AN,eco%!88nSDObRX;-us8']]1sWKp(qJ5BPL1K-B])+(OE>7D^nPne`48>mF-^o>m!=:rL2`
%liIYrr6lLI]s-VjU--to:l]D3[Z2G%o6YnM2P@V7$17-G`V!"(mV9Cd'OGp"Jn%kB0KZ-]6,p<Nr.t,T#QgJ=8S.)[:N1=#hc,u!
%R4=6_?>2_EeSE*1NZXjla$,BMTMb(ZB(JK+]aqliqIp2s@ScNNe0mY:+$8h;?3XEX-C7HCi?dqRC=l@p/#YtQg)T:]?(L!dYL&Gi
%3f/`"^)h'9QmJ@K.\53[#C)EC]rh6n>s^=pK!dnk:;B87b!'#G#G%ouC7SbO*@c@0g\[MC;^,e>Xi,tXkV#4)H<k"T%O<G>\U'3K
%[j[':C!$YE%\(cs/YFoZ[>CL!KPrl8F:WM!\ob$BgWlcFSlV:V;O!;>p^jXe=`Sl^0b`4?`<9Lo:dbqhWs+hKX+L]>?`h>f>U!=,
%\54mrCn-t/Vkf,@<_]6pLuNu6[s;WC>3COV,RG*o9ah2_4$9Yu%q(qgV4/olI=HiC%doG5DFk+*."%"b]n'JqHO!oJU)RXU>e5,@
%ejLP+U"D\@20FD].^'@s@6Q09dW%Y+EVf(BNN2H(acfV[UMej?6a.[aER!n(OAO^=fs<U8n?e.^MBhh76KW#1[+K2h[+O><k8/T7
%K@AtZE@X,iRM__TbRLHBbER3R/>h:2lk>R7mXkr?'@PHCg:S\,!T0g+cR%0VnbpX)=ggGeZR^d3"4%/\d\98HmktZE,'[17:f?<H
%?FWC0d*#,n6A-Z;8ElTa;.@%m!WK./Z#IVS<Ln8VH!/N]FU"gM8,:Tiek*_.E9>Hm@8=$D&rBYeaiq_@SkO4=>G#96nDB<&GJmAR
%4OQllTW-WOc1[.FH7.Qqq[Y'hjXmu?3ik!MD<A)Oj/bYc!q&%O/f1e01)iYP^sYQ<lQ1>t\G%!*9()&B!#>i9Pan^p>0NGD`)5G:
%HA`-73'0b3:Nnsr._(m,noPB!""!:n_MLqMN&r<k,`"n[*Ab_DYq.=&W$jI/=>V4re#YLJGsu6tKHI</"-PZ6aKPa-*!!^0YkH.o
%c8b-/`$YkYkbLbU=IX#-'PlhUgD9$6Z:%;sU6D)r]57on.P/,a":Cl3I1M6e(@5+QpNjQcB-&W3PA5)2')O+4;8m5N#ZIm$gZ4.c
%<W`5k;&7t]<PWW-Od1'XFS:8l]\uD4!8WpBq\uq(nV)?4@X9rQQd$aKaXOgF>P)V#Z0gZ-$YLblA2fXd<<tjT(\luVPtWh8Qmni6
%)Z6'CM2*;uDY,crT6u2n[k8G;dQ-/3^hi]8)(urPMj"j(rbDk8m5b><%#puffL!6t6bjTUH`,l_HShAjot@CN:iBRt$A]?(8HW%P
%'19'00U.2>N)XhRg_?Tq/tmN_oNRneW3)MY8T`IelKXKD,e>d8P0",1T_nT4gK6FlP@5U`U&oH[\>_eQ^UUn`p?]hcCK\p";d[O,
%KUusMg51fr>^j%go^Pe,mmS7a.3KBa?p(74gA:OoU"dFIZrq`YQkigk@KAN!X\('<"]U:Fn59B:!ST-cFr5p2jaHI[a-\2ZE8Y0^
%S4f4MQ:dr[SbR4oJ0,"M76*(bFE,'%&T?<^RW4?GPulXPgb059/>q[ROQC0C37i3Gg&!bWj,M<;:E?hmfR4(l"d(2.;"aYGkbH6G
%.!QRYp5J<8*Ua%%3bO2*2Vm8sjuML^Rm-ei$;sdpCKnbg(9th1,2P7?(L!QY"f?tMF)O4O6k09udX+k/YW0pA:u/SVp&;,Wkuk$?
%Uc(uPbBdcRo]E3k`AXNRiqOhknE]`sdu8Xr[e<PJVF3ne8k!X,+P.6X:UlW>8CMf]_$(DoC\e'H&<DbmI2L\3TP:"2fBLcO4kB5K
%YA`h^\gSa;`N?>1?\91ohL#*->S?!lSG^$A/+8@R6\>rN@m_\7`UZspbN=3uYpNV3K[sA):U8l9Eni]^c.S<-SS4+Za-F@k%Tst'
%U_)qZ93c>GXS0iec`MqG(=AorP&W&_G-Wpcob12k-0_qN^4c7s:V'imC?!U$E#DMtkl1'u!Zr%\/J=jCJk\2LG/_?jAK_(#3'2/S
%mGXhk]>Pg'ViZof+?3<V5Jf6b=b;l"d1h8G.s7861t$P+'823jctT\AW+`](4fpcQ3X(m(["d2X$*K96iN7g^[<u>N))[ZWCJ#NX
%H#C7OTK)UQkV4/D*^(F\-aXo&2^`"He4f>`4K&BU@Y?;_L\mUs]_DDR>Wr[V[ac-gqH,pu:K0[Jfo_1*X*?@!XG'g[NsOD'cc3n/
%[j=kUD_U8n+B9T`gib%p-q*9R@`/01KIKhEG4bd\Wt*&N/0VTnf020SAN.nBh81>L,EuL-?h37W69-uBEUa_JSJgKVW69;"I1Ae(
%e>bZpk\#"<^6,O!,]SK[m,[O]RO@sSg/YM_m%Ju1d3t5#nT`)BY$NuEO"6`/43O#nJGU]=hF*AKIp,n,a0W>cGDWp8@qKEI$[a$3
%Y@gac@f^;T(>p8f]8gBqos`36`.XlG\Ht;QloC\t6">%uWY"5;&eb?#1,33"]6_YV,s*V[,2dla8r#m*Ve<VK@T5*Kfp)71I[E\p
%3SLO<ZSf3Bnp,$?He`DP4lj^,,[Xojoo;BK?]k[UAGb`g]aiqZU9Et:bQKfk>-JnXBm+teSH+[#UEh3@6U1V;g\j=qC3:Hhs$6+<
%fpPccT[X)cBDBFP=)3q=ZcY"r33W]8D:QIPbe.^!iU-e[6&BSGd$f:#Eq"s"7,4Hb^[Ce':+pnK/]$ob:;tZ?YcMM9Bc6>SZ[7AP
%41!6rSgD#JFGWG.o0sG%LVIY(`#k%XAbrhgB2(l:MnE5Kj'"=lM>EIOjhnTq]g7fBdmmS]./>2W/l@>.E=kqm^a=mY^U+KAiU+fY
%?`#5j!lhrl:<K$!7Fp,`,U7979g2Rn:h:H5)D[uBi;$O?ZaDjE0d553\%[<Y7Z]0H$0I0h7hfbR9;n'fBl[P,n-O).s5m/7ku!Cp
%eSc@`-?Jbn;X3d2660UgEKT&_R44$6$EK^>`RQ*j,=5;N-2$7Bpi,`GlkOfQ!O^)rE%a#+-&T/#@G2lG>O&j*0>j_H40'.+a@,1[
%FK[^Ff@1,t#$-Qs^V-R[>Z%^C<d?iD;#$62Y&#<dp6+)4Z'&&E-]!u*5+Y`;p,JW,Leah`">pKb?IP)@Ug5-=0l"Mt`)Sk+UI1fi
%o<VYAdZ6Ene6DLpf2(F!h#>SmK28P:^E;?j:*Y":,c/*3!@UPShBE8@L57fjdjC$l!m(-rp?O&mZjA>S;ls5kN\42s31Ze/#e_FV
%0LWOS6jti2G]DTZ*m^u<N'k8tZ)BHXIAl\B8d*Dq^<DTPQ#+UA\25OT5Z"U7^\dMpIZ:Bq.4%.In])ZUWDO@)#5'HIUsYkG*D2nE
%O1tNtI)!uji4=_SCI#ktPiGWXM/#l&N[f#2EE&PK18*L`a0SE7BC'aLW41ii\"ABjA4psnY`DGu3M^@'k4M6O>,&(QbdD<1Pl2#:
%9c`DXLs>k@cjCRg#MGfQEN2uT*5XHis/^Amr6ZN\K]e7JKqk=Wo[mJO;6Fd'2nJ.^pkZj(2-ZDa/H34(ReeE2W?`$l5tiKb&ZcMl
%=u-0bC0*)43_h#"IQU99TE5L8c$`KC,&fftHaoZ4caUYj4khL?j$H]jbdq':p/'3:n4i%BN71E.Jt',k6`cjbEVit)9u!*A3IB8L
%FC"QPoerg;oL+I4(Xlt#ZHK4-5:DP_i4A;5&C%J8aA91<6W8W8B5tC@dlcr`ODMsa?U%\s7+$k)UWC%[U`290]G!lg!^\k4-*jGQ
%2#XB8%BT$K%c:!\.a-sK9XLYcFi8GQq1-Fh-`2ZK4BqBn=&)%t1@[3.20Mo#>mQgR4X?1F0prbDUu]9Y^E9Bg46!9G,RO>]c0-$6
%eK:N+WL7eO[2UIgeF%]i0/Jrr:.dlLP?64?!\PJ`1HrJ8fc7rk=8[Vidn!sF#s13),tFV&U`j?;mKc>7]p7j(p^6_m.$C)[gBiI%
%QNYRt=e%DF"J[nQa5-+bL$ko`"6qIe4I^oCUQPZNVS)Zse'KAR?2&Y5#V0Xb6ShX@L_BDe,Pk/M0N#n8=OUs>1Or`VdQ/].i)qC]
%>`;)b'&kj!FA\;$C@\!`kDANW-+0_5SA(U9(GDcM;j6BWb7Veg"93)a9;upRV-[H^M+\2j_JM(&poe[$lfe'V`EQ=.K+RS#onFMR
%N-$T`\_Hd7c&U)m0p0`X]7,]66?J9%XYe.LbcVV_*Ifte&t?$Dp?_l0J?hnq`p8SJ!=4+Ns#MaU5!OcrFfma+Z[BkcRHGu&OjMV5
%kul$1ia#&#'=<7;kiJ^:^IY)$1blU0@3fB1q;+d_bj<298:SG",-htIWpD4<X@4*XK<iM5T"Od:3>%6)7o>1(K-+PAq#]LE/B1FB
%S]B]64NSpco2GoShLCKZ<I'sh#?m[GN#1>bHO5-oqUKSY8g+\2)-9$KmC*QXiHZ!(ctYF*!lnU/G5)cmBh386+GtgGA_LQK;b9i6
%S@)9kKQY*WXqm#VF632cE(O^b9T5ad>nX'8`U@[62;P2_&OeDKEh[(1.13a)5K^-j[BN9cqI#7r_7LoNT9;N:[$(2UnNA=2R9/@\
%M9Ce=,D7]CGg.-$3.kIf"9HuKp3k]2p?6sU)1*ef#3s*$Q?,=07rk"k,:3Yq7b\Q$_rO"RHf^L@#N1'b,Pbc0cca.e-ZH4Z=E1\d
%j;Bnm1$Z:4+mOGAi7]m4_#uA#rYn:G2Sh[>C/!]b_.G:n%e:4E_du[Y12<>pCfi?j2u]q?IK;L)LbOs*ZT(p:"/,=>R>)p>=:*uo
%"Z;st,iAE.9R[R2rDB?r6YM(];HW5V+<`,KXYNlVA**i,s(KE&H?87^l!7+-725phm<Is]a$'9VBL;WH@MoO4521r]EW(\X:OE\K
%`/4kNj1\.`Q:e(2YKk/NMc8'NFk=V+?qQ;^e9CT87^Fp7>Mr.rla2R!*p)gg^F5SGHa1JN7s#Mnn"P/!Xq:$4j4Vk%ab^JFD^F7c
%B>bnc9aJ>#4a_R.qAU3H[O':$f<@H"ShmAh*6TdL4_o.i`.'=1k1>Tq,P<D@lp&kd,3r8qCqhbO7YU-?>8a#I;Gd-N;5V0u+0hoj
%R]'`GG:?TT4CqGLd2Hn1EK"WKPqU)f)%,iMiaGUC/jnq&;Bc`KL<A5RHf2.Sn>XL@NKQddc_!YEG0rX%?HNo0Q']M7&JhnPnG&OM
%RLi61YGC,(lD_!9I.:h[3bK+ZjuqMfZ+.sfb[#jeI\=*5P'3DVMg/8q(0rH<4sHrq8AFomP?G/_6&iBkQNNY)9T,C.:P=2%>45+#
%0q<pX_%temW\e)bINg]V8mirWs.Puf/#Eu?ZSii`>U;gR+&4Qf=Wm]iQZ/Cd(pkq<VbWs5E4a=:reV;Z^-=TiX5cDD829Ui@rX9Z
%>ma)u1Yc['6N-U=G"?$,J_&=id]k)r0NZX[DbAY3p<\^1=>@=;MC>37gq*k"H5KtmNA!oR?s6u4=7?Y$846'#ZHi!g:6.6'-*or6
%r4HF6$Elr@*&`a5Pigi;i9Y`>;ad>")UsS0r5;[gc'I!)M;4=2KjlVjk"cX6gHR"\cIe%Ua^^g2C%6Va']qi>kg,/*%He\FT&Qpe
%O4qt20k:SkAfX';#'IU.B'^qI3(*1H<c,2&kc@N'h7@6N,?<q0Id$-r]n;de#@TIp"gSIX=02a/j\%;(Pk0;l/s`[72hee'2lSiT
%j5id,.hm!;'IEYY*Lb);Yu:$V5sh^X[.mK+H=P6[9.*@Ym"EnN\87#j699j?RSa#7X3XKnYGn*D$<gCk3]TNmqSUQM]Z8$#eUhBM
%4<]BcOihL;i,)D35S)-podhT2n*ass9@kaqC(S0tcAP\>7oI8t]ol@WOMVU1*/D6sJriK7\]*qOM/HDW^.Ht8fUu`2+LTZ?jlf9R
%([Bgh5&*:C/``D"+sT-9R>Q_%)_T18@)H:%P\O+W-grb!YZ/M',d4B^IJl.,Y4)ogOKPYcNN:R\J4[H=9pb>`,#b/l1"8mlImfC!
%3jloF6\DNCB(G6pXX+SPY5t%OYXts1nM1H:K@Z#o4Y=il+CAabAC;M)ck*dd#(tn_JkB4jhchf3VkPm4Zr$qZW/X)Pr?J:+&BsID
%EQ!oA\>jfN`IXhse(],r&^ZU)&tWW=ad[bo8K'7/dqnpNHDHD:(U<%7j)S5Ve*jJi*j-^51F)kXnaL%1^&12ULB')NSKf7##S5O6
%gX[OQM)$J;n3u&&e`[&<0?\uh3qV,h?FQ##7a@b#nS0+NM,Hku"(I2+&P%V1\9X"HZN<0SPDX@^\-B\UR&&ubFXb]#+Je<YoW,Hn
%#4/q?WVP=:lS.1P2t^+NpR<P$0((;_mr'0hBbHJfn5_e];-?+)QO#,[emgSdf(%ie2^ZucK[q'HB4e@gOcoH%UI:YiB*\L"]Q?/3
%HqiV`$'_6dWC'LQ=WF85K$8,E'7Cba$.%h#$F<-VB(YWoVjO_>XdRLC3PAUFqgdfHX5)Z)KjbM$jN\1*7uE8c8_uhBI@qu;m,hj5
%7""H:]W3D%&+mg8WKH2IjK\-]:G)D:m:FDj%qm'\&Q0*\GY0DG>!NO_X0kUJJg.P1.<`h*FEbGV:s`;dX4NfmZHR\eG-2Q`\AGZ=
%+maOGNkLLsa2V&p_b/$Ca,Z/"=#]:ScYT>":u&]9GW8-KB#q[RihP5.Rs&D?f\hlrp=,Ah1'aX?m>i"b-RNdmCMl6Mi'iW[5^'0s
%dRtAkPYFO3&-7s:f?5b+,VoiHDuIY6KUtF!O1tA^;c"M.WOOU]mX2%VR`&U40Ir!qM*CJ;OgiK8gtJ:QZA\1Y6;S?IQ/YeTfN$Rf
%=:^5hZf6DplAe\#S5pi,<<]\:'d%R&4BdfG-ts13<dAPbK`6n5=3Rq9RS<5I?8MQ:@Hdmr.NKeOHL.Z"dC!ON`dCHKDoa(W'3N`*
%XJh:oH'mh]q\`ZEc"K7lrcJFk&he,drBa7/.q8c<M^.'fY4!K1g+H`25>`Jc#HUPc2M1ZW[Eh6F.jg#D5Vo3H2?\uJKT_H/&$7f>
%KU0T1T(.Le8%O-d6&u#YS.GOuJl.#V<lKFW<=a=;E#X-B<[D2B%YV0W#Z**C"r'+M!)TcZFPQ+BPr4U;MdHWhLCAhER(pl+XAN&_
%\_)+2Q&V.(.BG.ZM`^TuS*^)=;hFVMnkp4)<$AabrVCkb5>=36%i%-08WS!<0],h_(3Tuo;.<U-\m?Z`rXe%3$HlN!?B]KDB$;_p
%*CB$+[r4SE.1+PG/5fMA9b-rbPP$MQ=OI,aBoIPnd;>.IBi?e6'%(2h4HknZ"?"!W9$hSa@KU9$="Geb+pk6Y'RX*+(Ci>5T(Qs7
%hZ*s#>H79%')gq\pG<D^/JCZ*iTOgTr"uj5S<g>5q@uT,W"<';[nmC`jAG'!os=q/TZfi[T35.:>DcBVM6<_@m%bd$WkeC'VoUhG
%3j.#I8=G*(OjAgC68)OY(l3Qj0/kn9PsqQq./2L,DlOB-l\F>G1<UO#\FS\_hq'bQoZV8]9tQ7;_sR^TM6=gkIh#^":]7`r&3\Kh
%MBA.hY!A%W.,oIl"^u/\C(J6i7nEo9qGB?Eo`i%A+$UQ??u)$3,9-K1E\F42@nMiQNY_(!a6a+8P62Y^@_Je^P5HsiEb*'d@o8["
%WXE4jWZ31[UR#cjPWdEW]/>8.>&)St@d<%IT$_%,o:5"Uf>r3!oSe)>:1Fd<MKU_Rn):l'7Aju$<)>JT"HpuAT>H;F(ujc+/SY#O
%4I-\FYNauuW(X$122AR&CR\cWc`TRM.YlLFI<<`R($pl_ROIuflm=k?n^?D79OO^+G\LfH8WiPBfNiJ8LLq6kn3&uKLMM#DB`si<
%-+OGP-4V@eq0(cNM"4r=6mmaNHk<*/Eec*^e&=W?JJ78/kg5.[,<i"t?786[1^P"F+$0:=3\HhC9_d52e=bdWi;ujmqId(i-7PQ"
%r1+m^)_FDX%Z.$>EM,9*J;$E6Bcp'iIa&C4@BS]hK9Ra,4)pLJ5+Zk#<T+ht'VYu_M=HB913n%$Oua=$-FjZ"*m3aHlcA<U/&uH>
%"4Mt`]Yi&DRp\#m.pp]?aAh9-/g8DYn@:jXlg5EOmekLI6%7m73qf0e/1&D9r%]Ti6#O`poW5!1@PuA65#E=450C0VD>mgr>,8Vi
%*kgRS5?0G2hN7_M[TLlL3lpKtkMk+COo`8hp63i%]$(0$7$G,?r9l[%J(g;nkLZ^BGi^jN:5g2hP*7!1ZV$M;6jBrmda=6;lk_8r
%krReY0JAL>/1q;l%9,?;-8"9UjSe$ZkRtNYh`cK\_a*=HJAi,C01"u.RSTYN4mMKj1ZaV]cEPt>U)WbP;)/n`EE"F,M?K0Rr.T[O
%&mp;8PE2j;U)*`O"V]usD8,6ooLYRkJt7uk.R-d%8;9rrI/?GFG8/9W2*Q[MjLVNkJs+_#14K!oXCaVg/K?VGg%6'F5gR'(:Lf,5
%&GPS^X;KrXF@Tmg\p7Pqk,*66[!@,/V+g6SA3dgWDuKVkXuRVp(0/)=q>B9'744m6-T=GnPop6WJs,gA=;kF%GQKFhYS*/`N:bW$
%>`Y,I&ZH3Gj=A5Hk=R/=])l`dMX-Lek][!qoEFUkmJ`f4hCg1XRjtr6C_s4CTZ=pWL70[-O43M!qIQ3/I[&nB3,*<SQ'k/#IG<1?
%CBq5Bc5+m0.r7!ESZ?nf&f&[:\XEAMf,>Vrk;'ufJ%b+BcA2rlG969f*)o._h3FoCmm@[q/'g,39Q)9N"?P,8X'TBf'"TH%"\V%5
%.HUc=';b4lq*k[6JhDCB'iq@Q#V&DcBosKM'R$d@#Z>Ol[2u@hkb,b#L@:'/&n5CTXd6.^(AkeO+.(b$"=N[E.DtJlKATN]MEal!
%gu\-s^tUd1!eJj5C%`hFQu5N<.'Z2V&UXHX8*D-%fbG:t-IO4L-3]D[Q'a\8&hAKaaJIO3ljf7+:.^e">WiYV-!.[p/V*Ip>_6'Q
%BbO]Lnbl&?EYB(E7YgqQ\uRp0B,?J70YnhCR"35^8N'L%bY@Et*]d.R*BADel+=KepIj=jW;?MgWk[_^F3'$)^*lWE^@J,a4'2/_
%i3*DoG-2OG#1BU*NkP%GEp)@_4=QBOgY"t]G.7lbSq5D<s1*MSRhl`2KW2.jGjq6I7mG26C+.%Wh'bW!RZY3u?+Ld"6%Dk?m9(B&
%Z15H"?_&3IF3&?@ZZP[/V'j%t`EM+b\YaIGim2;(nGTWImjBo.Ol3X5<REmS12t/;f$0AZd,Ek963=i0:REi&mO\*-!bgK3[FHC@
%'B-RupdA&k=M<b%Q7<B%i.3tA;HNdPjiC'=4U/Zk+HG2bV%bS,3#`+6m$9M/8BfrD)F'tO;4ZIp;0cfHBFQEQCCL=UhO"tl/s.@<
%"knlu?,WtW#$it_)]^Kn[e+X!DUPpSD0lgi]taU#Vm;(IJ-nK'U/#$k)D1I1iV4Po;*hhNg_M`0Xj\omMM'Jk9m.]:\uabHPD9HF
%Qb<@NJfOWPYIN\L4fs+k<$Xbc@r\DWJs`ZBh=K`pBQKap7-?,g.^/#3qjJ\mXfn@WE*.n0+Y-H*0c>A9)E%YWbfN?NMq##BWobKI
%p,,A(n`[Ldq-YsY6'\cmX4]SZ\(!CSLjXuI7.H?tr'!"%K")f&])5JF=&pj"QH!]!<8oajaC\*)Sq/M7BEVu7'"gI/5kE5'C=TR,
%L#pLB2Jp-D:RO4<f@D4Z+WF$C[;PR!:'jZ234ZDWdqrAgDPBt2aWgr+fDGH;9joZ^F\'=h;caV6E;itFqC5rM83q?e+c,^p0@#:]
%c^r6!^SG5@O\[@=]H^2P>>RuWSLZRnD*bu6HG&2+@99^b(ubIRGGp]h:S'kpanl]L#rP\,YCt!ZTc(QQId?8H9*5A$D$*KmF,kO<
%dDZeehbIt@Y;8A4e?O"pg"jpiQ5PDNX1GK&"s00FFlaQE6Sf^j).2nj2T:Y`b\M4^EEe?<XdAK9XGboegittINhgSS1R5LOSaap\
%S3E0nH\41TlD7.MX7$Ohpobrh5<jIOZJos@H@8%j1Sf;OXm5oPUU,k8#,ZUM#&BQ[4RBm@UpZ_\3Tk!250*E<O#5N<4CbAqg9ATr
%8<o,"<o1"65=#mf0L*0mc"g&X-JRI+9*>;d!f*%8cl$Y/cUV2-@SLtRW4-;")bkeWg_#e_Ju#T=%I(Z4?U(^/R1MeJabkZKo0f(7
%'Q`PCPX1pl.=&\*D1XTA__@R/\1[;?HXS]E[DqKKPk5ii$B=%g"O=R-)teA&VR[DG&fY-?Kmi1N]K;l*@:DqDE6/(SH(oYgG=TfV
%@sG2D(G/jX*R_RPXPu2;%S?l'15sWc'\0q1*@/4BCeUZc>\^Fk8?B)L\GY%D5qhN*WunOmNpnbqk2c)AF%53\<s]`kG9FfmdKO_e
%$*T"g^-_M84+9`-XcD;6\-\%=F[=[-,8S_,\-(mnj&'_]Wjapks)<(T(\ceDH$FE@/IMXa^"A!=1V2l>?$+f46Er5H3\+9e?8gt`
%X%bh6i]&t62k[,DAL<g5,DpChNbBYBD,\+S^!*Gm%3.SPh<;hkp%Q?@WQi@9E]Dq]G1d//V@u$WDLob`FqXFshQ,<pp0\hfM5DQ7
%C4FY[C<-!lgG>VE7.(;bfJO4$\/u=<f8H)Z;<%Y_@ABdXppWF^_ZCuXqmJLU1^ER%d(gYEV<`17\g995$!At31^++d=Xig#3Jsiq
%^)T!W69j%s2t&s=^5,Y95c,GI0H)j,b/V3jn\[m?\jFfjkUY/"f1;8o&\*3o29[6MT]K:j>*&f/K^B4=[K?=e]#qL_%hiO!85uQY
%43DE49VkT)f-\#^8$.X'O,h6QTCqnj=mt1:h/g)A,oV(ZA)>-:'=^'0C5"7"422_TI-#L)/X*tCEGGnR+$VeQe@6;O+\S9m"$74$
%Ed`q!6stI;[0<5tf%UnseF5$R]n;sDAE`)be>(p+`$NJ-/nQD6$0L_W#$D4.<N\sK0^WL<1p*QE5lVi23u3Y9V+m%eI6!]F_4\4X
%L#J&X@6,l4Ldsu$`XbQ]ZF%*TcGP4K/=i%Y;XgmnJ"A(17V#aLf.!+-8:7LLMsD^m6Y]MYUmC8#7iW(1@0<Jl-?_iha"Yf8"e5!d
%D*WEU2_TY>FWjD)n*A"=<2qVF:\eLEY_i%m#?D,^;<ABO6/r&C@"+89>5rQ:gA),c4mkb:+1<d[Oi:&AW-/6KH)%b'M>,l@SnAYm
%RJ6IPj7AAM0?2`ncCgtHNo0O59cnXI@k^TQjbT>)SVC/Q?1-s$Hb-&"@0;oIS^;3/-nN""hUbP9OZb-0q3;$<3K*6>jHk!gi_6p.
%KP=_\0/J9B4im1Ao^[_7<#kW?\of+f-DYusdZ!@]&W74d6l%[H;lp_%c-*tM(Z,$M]3^;rg,mc/1MP=HLToo+[lq.n+<ka`5+&#.
%lX0lF%(+Z<1)IFR7lo86G+)+'<0k&GaWH]4[/-4>MjpB=h?iQY*6%Sg]_2$Jph0dkl';jK;$`&/**m&@kDi.a=9FXm.i^hg1::tL
%QX0&Y=_I5-:R*9&OIf9KRsrGLa]dlU"u91>^hhaRX*<L8Vt9-1dS]g"f+AWGH4M<,/ficdeERFq9O=)/_RhquAp!XTF=qHfjFsSi
%JFkCW$2&Q@n;;STWOMuRoa\>fE"pp9n^cUtmH@A3ran?o$"[XUeA7Rf/kj!;;S[;uFQDOc+uAGAhf5j23,'X2)c0QS!@`jHiOBoI
%[7+p%UXfG;7XF+c=&Zl>W;!I?_h7/%AQUerhCWApMC#jd?OE.Y?!lZjgaCuX0l7Eama0-UbSQZ,LJUdsp*ag1U>G*1U*\C);;?$2
%=2hD&H5"^CkRALr*8S]qhY[2b4/k-DfiB3PqsgtEr<V,e9#*kP+goK]9ji%\`@-VZ1M4J%0p2:-g;/4@m6sajW,Vm6@ABdXppWG9
%3iV*]e@!PK;XIjVK&V/A:;d2=;S(b/!m*sBcOEfM>WCP/a&HOko1=*&/<?I;W!O>!:1,np.OlA:hT&E@Xd$.WBW'p^;dum)N5(qG
%=hg(;TgY%q]-]oepBV/j+K\R-BeO3D;'F6plnI2?-qTa;Ue:=f'@E>kFsT-@-]369iOh2ss#CETD9H2*"M&kUNXil*de&6SM8[Fd
%3C,^#F\_1Aj%!`YW/cHjP4c@!#mR;P(5-L_DPh_sM("H0)qBErHBSNGp$^@=:j_X:[l0:H>s]="K48O-rK!qeY6h`t?U=!![Y'?(
%1O;o3l0*`(f@Z5;6uh'LW5^.1e;KcW;<%Y_@D/Vrq"HsIUHf,0-/PF1T6LCUoF1o@kGeZ.?>mGmg_mY8?S`)8"Psegm_)q+'4Ja`
%<3J"g*]tZRDu;/QYYin8VA]],%I6IU`kV3:PL\%CR"A\KLa(,)QJe--7g:aX,f9%Wo.n0;#EQtTMV&#JPJ+t(*m7*+@tD^q"u=^g
%J^L]!<&X`hO7R\E-edFI(]H4fF[BTPm[(=n#"$6o>bt,%Z!!4n8_%UEVfa2EC#+9i-ZLeQ+B*\/m*4faoqoLsn'dTLY72!$Y-/bh
%rOb&PkdVisaJl\Pm/cT[ctPhIXIWk4-95gt&<]n/6B>oFn\]hQ0o?ps>jm>X"%R@E)t3`R>]o,8_1>"qEZ>t3jSOXkNa%;ASL3U8
%9[JfZe>8NF/WSk_Md)aW51^b#j18^r@GX^P`=6L`GG)X#UU]0?\,Lgr,:+17R?:+nc+Gel=$(/"W2?i2KRht`eK+iTUZ;e2-*%i+
%.LS-%F^/iOnQ$p70`;RN`gD3Xg]U@E:1uP)'\BtehVZ?jWKAKQ-uYpX[M3$tb8M^b5*!OA=J6GJ3CA%KS:WkuG`.fI2i:h0k<.A.
%o[IO5jXg-[rNJ`3e5Y4Rk'@9d)`W`@h0A8SV_LLnO2:r9L!kSLH([%?8k!IhfB+Mg&#kJQ?o@21Cl9!T)*d3ETh6H3(H8"gQY.[f
%%3;9B*#!hZ+8$u!Z_N*MLK!BA\G-!J@mn$NimSC$+F+uqd*pr47BW=IQ51A974sd%-:i'M"B"LW6UG=EB5n$2H=)\u9=0@-el3X3
%cI]DZJFr2A@/o3L7PF23^Ro=<ZslE.?gFACSC,<B_%l)dD'>0%MZhG-/7,EJ%Ufd^-YR4UrkiaZAa(U\Jd-kbN*^*QRu4iF9SK08
%od7V`UOiB!;`D"lp\rHmW,u()WEQ@%f7'<)W4VOh;lX&e*7]%q/="r?-:k7j&jZi4j+f5AcVnfcWh&]t7LuhKcG_XSDU%hYUh<1"
%q[Z1UH?!m%rNqT(`YSYKOn@;oR5:Pq&X*F41E(8l&P5`f8.]#QoQ#><4a\8=9K/4>U:;(uHM-XO9rO3<3/U(;=5#'thLo3q7u7HD
%+-(5LE?G$=Y9Spl'F-(\CULMX'2A+@P(==R=-7>X.HXqKYIPVdUfIY/lMO#*U"Zi_!Ca[T7g&uf[,#WMh^As$)!R0BC(knRGV[u3
%Ib9"p97-!l5=UH=V3lV8pjO9_k%:.cW#0GNX;M%<*I<\FWfE'PW@VgOZHh&A.n3k>#(L;>MbR`#O"(fhc*:a<LJt[VYR`nq2)ZF&
%jUD#iF)1t_0+/ion0uUWdPaSm</4e$!7g_Z%%!DTlVLXZRY/SZpef0g"cJN2Y8HE$hLo36Yh8T[dC!<7>AsOMWS3+9]DBs'b:69:
%+92po&-,7.Oc<k&#V`s/$CT7UQN!jC1kAfoVg9!`93!R7IL)'Ak7`&Z'/\6$d,)Q8>jo[ZIt(V$OZ%Y'Y<ZNqMM!iB:1pP^Z?]*5
%Tr"Z`9IO$t`?AD7X2-g&3XRI=9IPkL?k=AD4N"rTATd'2k<OCSH>0,^Da"%U3fY`O^+6aV9,M4BUg3[L:';NTO$WELUpJ@&S`g>r
%_nghc'KU]pp>BC#V+m%eeY<GV3@G>VPfD(s'hY[;,I20mFlR\Z&#6M@^<Qi@Cmjc&-3"]QBL<k<j:-sO@tp3RUi)lB)hMhJC;7Em
%1Jhn1NZ>a>$BZ/3Stk!LWBZdS1Au09Ib.QS"ASQ4[(!6*2ELBbgJ7hg`?[^+"&phfcNC7XVceXtkQW4eMGt]gC^-PJj*R1-iD0DQ
%$e^FhBEFnhh&%Go?5A"/;%b<r\@['8$/c0VX\*Oh4A1"hhrE;d5K=E:[R/1-1Llob!QeSCg<"3[Rd=BA,[ri-`3(O\mgX5q4G7%h
%!2;MC;ZrssFla<M3Uf$oq:9<h5[b/UVYj<"\ejtMC]A@2/(\b>p(QXcL+OP@R/U)3O"$3ul/T*s9>#BEljE0b/851*[hrM%Z;FMK
%ektDuogcV,*)4bRhKq6>Nud1FT0N>Y``FAjaAgR_@C_0B!Fc!,*.!h^f>63`3-<'kMjfat<<eiJDA3gmG>pPV^h?dJW40F+o@Ca-
%GXCf\fHI!D\!EU^-X1^mP#/ci]?%`qN?8_bQ?uNj%i!V7M.NGA\T$.Yq,]VAr]AHXrkl;NqoC1'Ju3i!g)E#/leQgSmk7J8'Cg6d
%.$D<H,`,)_0`_ti0$V7Ch9Q>53KZ0]TntDa7@]6f.C5W>84L9!KbY_ZrqV=8%5eq\TXip1p'16M7Q93#qdGFK%&Rm%r$a@9r!5D/
%o8XsPHi5:3=1P(uWZkJQ6K7S5n,6XG&8UJ6p"RlmG06?Ymmd:'BEYJI/W2OiC'luO:Z[52`rfN356'r1ipaZTe3*M]d(!+Seo:n<
%bIs+:n-MAc8uJ;SX]#X'k]*&,AqamHpKeVJ)POSGg^d`NN`i8%+lq#4Jd*u13.]U@mT8Z?3pa@'a3W$n79$?4mi12-FeVI5qDU4Y
%/=hu&]PUmBW8+"aMo9Xu&ORBs+_YC-._gVYS.++FoI#e^=.X&e2'jg[XtlT'dTFG4YcsSc#3L8DqC*S6%DJ;W-u#`qqkgm4qakUr
%kZj%YcQr8'K&#N9A`LH7fJt<q=b:>^&1PS9:'KiiS]?sC+1FigKR5O9R4!f$n_G>u1E%.?;fV:R&4&,&Rh4KPMQOOD0WdqoTbfU1
%UXB0Tj$ln@#B*oH0YM,q`N<'5nN&8'R\4#hM-3XTQ.c/=#qbZaX\rU=C.g6.Jqsi2FXnf$^Q&CS-#Z;g*RuY9o+$pTR.@&>q&'K\
%NNJ`k1Xm?]2-b3jqi+S;Q6HO!&H^])[d`h=!7WgPQCGrL+^%r@W]0YoiYU/<X'#D%Ua\>Ms$>jF9IRie`;#>O&1f<_UY^ZK(2Xp2
%`;0ujdC;Ycg0HWcnu=,/8-.Df'*YMX\QWqkYHAV5>&j!)N1HqQ:g$aUcW@&BRRg#Rc"km5j$((]d4,W8MB_H/hZjBkU>I%_ek@1e
%RA_MfWal]6Ld53jW(L$bpP8^N]D4a*k]A_'I'H)5oTXr309/Td>oGQ5hLtOPpX!9>Ib;?lUUU>!ohK0YE"pp9n_W/!-SepF+s)gP
%[$qI"$Di_$KU9LP-En.f$QN0DFq6/QNtag6XX&?aU,pWM7i([DN4&:[#78%)V6`Hco7$'_!Xl]4L(egbfG[2DO9lma-M!=7IHX8s
%T=+.gmj/TsgD*->3u@)!iu-1b^-mtR#hD@"jE9]m)]@HtQN7c.fG/0P2QB':EYE-ggo.fEp^YX+DO/hl:9&70CRlXMh<9H(M:`.)
%DK7'+*DD3+he="`/`]"^Ir+6\s3WY[K5_(M)VGN\"Dgm7:.PXHnFd%lYO"E_VP7*5%]1-HnS8s:m.@V""E1'6JP7p20H2p-b/V3h
%nPd(0hI:o`j*oC09Bs_[p9eG*Jn-AoTj=[D$,+P+@CE&tLFr9R(%JTI3Whs?En&e=%`7f9g0\^uEhYqh[FCgs7A&)W3+kYVXBY2A
%+1iq7%ma7'+_Kn$8%??tl*o$_?>5Vi_.e(o34d@BY05:jmD%%!QqKIinjVG!hcBPQcR4CH0*m7Z']G,Gr0iKV@><DqHG'X4EpU>[
%bWf(Mf=:)aO)I\40TaSnD$3\:iahhIi#\k-J*kR"-oh/c[_ls=)'q/9)a,ds#c+"i2pI4u/lGtOHlJ4j=1h`c12R!Y0_]B1Fh0R#
%Y7[nD`?nC5eZ*.okX!fX#hP-%6S,jk^Oh2GP!TE)_C@:&&t.>?!>h^8XH>ZnTtf0c\OY?N6T2KT;s?36J#oTD;1U.QqLgIKoA(L-
%6J9t5l-W-K+cW%?e/HD8'+[D?fJ1&BXG&O54aj8IP>U]ZF<^;bCSKHnAcaQNGcYY!<<+IGipXpu4"YIA_O*oT_3`hmAImIrJX69$
%5@g`@aa&JUl_?LOF[l*2HCB^Q4CRE!"4FN#!q\t%%oX'a.W.Lm]`[X2*6%Sg]_-KMGQ3Sfir?.WhgbYJ$<f9I2S7Uq,2^]T@OP5^
%[bKUIDknSKOj9,I9h0;uk?,Aki-%Oa=taS4=eXEi%PkL.%@0GRVPP7I#4SoC:ot(<l:_o`hS"9[r'13-&c;Gg_8^Unn.nX)'8hAS
%-de2mDiHfW'bO$B6J;s0mXSV=WO:Z48$C,$:SY:JA?Bja$F$1`i@NS/CW2#O?@,Y?&=&:,ocHplbMqA?laNN84KDXgTk-stJ3[<E
%J1EP(_Tekj?L@;hS*\6,]t@gD-$fE-[Jt_+XWpt!:C_=M_15AuEMU7pWR?H+&LeU'deUe[B3F#:B4EKcMP8#GH$D%Z-M38%5kM4<
%/GS]s(2E]_47mQNYB`RW&(,]f^j.SM+DW&,"!kee,4)9[3=kr(UXFg%:(E<8N?@jXo]"^h)fMFNVecL8msYQVGku1JhYI.L,a9J+
%,urDl%'`1'i52bEA,i7jHSDBgE>.DJ?Tqd$Li"`Gqd,`^_PA+$X6gJEp@aIfNaDA;hKg,ZJL`9ga/)B4jKdfWTST*pjfb#46%uaY
%5B2b+)BVKe[inon+9Y0F(=&'I&/Fb<@X(H4X`kIX6BYa+QAGJkdAR2GQ:FdoHK_MM&B9R!Z\UFfNk,l2;\gf)S0^kuNR&TPpIW4a
%TpKJ79bfd>Lq.S/,;kCKTVYSW9IPQm0FU^q5s\(mbZ&LI0,keV_#D7!NF(CeJ)`t&pN`lIql^ejU"OJ*"kCYO+QJ2nmeJ'<F(kI_
%mWMmgpX07$]nR$jArj6Dk=2<>>8XL.59,+8`P$IRpP+hs;O46Kf*m59oe]5V"Ee]e_mb<_JVW2F]M0#mn/Z]P*P>g$W/ne"PdTf0
%J[.'E@bH[o["#MBWpRkXA"dOSmT:7uhUcuYj@\`k7]u:ce*bNq]pr&S%=#kCJ4K7'BNT(G!UPncJ;t1\*^?`&(;_U_MOU9;2f=ZX
%`NDM/F"0p>;?W2EH4tVXk)BT=+-(72injPOlQVLm*[Sdo`BOm;=f_`uLCiF!(N^<07Hhu)8GaAe,2>JC+-pFL+2prN<3'Xn$3<54
%B2`e#;GH8?lV6SScA>L,cQDjeo[;SW)_XLAXGUED:qJ\UCIV))WNOZ=P#fN3\ca9?(!b\K>(\CLQ%Aoj'JA5,?J#BtUE]m&bE=tA
%8jeIF6C:Va+ppp*NU+=u?0I!UpGK(L4_$C=ZmKT?Fmr^5QE=D$0T#QumWpP0FmI1k5[j2i&YPsBim3b#3_C>feB4O"=R6'W8qYe8
%EK$mNKJX7GH2Vqca0N(]^8A#3_N.N%@uUl\$'cS.ejO:u.''jE*/Tss6kj81mZ8t@V!%5ENZXjsm4kJ.E<F@0?hUBF)B'o#EEn),
%Yr1($d*'(^dD5b!WH24tH[g*+?tWRmB-Xl@B#Hs(DerLRGsnusif1q8iUKqI9ntPdQV\215O>`kUUUVfH8R'2>4X&#ibH3G;/\dI
%M7nK=LSGg%\G-!BMo_;5EJC,\knjdD$iqmGY>WFiHSE\<H/'R&cF^sa5hEVNj\/fY(H8"c<K@WO/o=ro@;G#uN`m+Eqs2Mm590WZ
%_L?\cCo2:"4';Dg_*^8YLFIg6]k>`LTg#bJ4Pi:nLL)=l.%<(8o8!;ANoDB6l@$pQ/PqMaB8$+='o,n^A1L-_$-D2l%I?;!h<;hk
%pGZC]guYcMlgZQj2^e5'p"^o#fK8i^MX\V)!?Iu9Ep-:`m"D+H\/C0M?iMu<O.mK(XJ\'^UGsk`n:=@--6ru32_`XY)d1sOreB[U
%DQ5eC;mHdnBJZ@FD3-<\9KpoV5Tt<CCWR<0<h/I](<f\9lD13-FEP4(WO*P#C1!hI%MUcV,T<T?n=uC71oj=rCsQd$s4um,0C?H^
%nJ]J%d2pirW4jHO?p[6EQ*B8@i]Y/*5&pWboSO&REFOtN1)C\l5Dkr'W:q%[I7A!.Qg7TjaWHTO:%]k*Enk^mYlAZaUDN[]hg?"n
%`:T]2;1ua2")Vgc5$eiiK0%.qCef(.WHa38ZnGnP+$\8C:)"8Q\,g0S0Ah4(\si1u.Lo#VR)PtL'7)ZT.2pig3-?j3HgbmE.F-:M
%OLe"Dj%PU!V1H`3J4qY"+4h^AKHd%q]c\>YD81e?8cKh/MIo'<V0/_<X,f<g@\)gk>(Zn_IZmWELL-,;G!+-^CK]A<Df^>/K2966
%+[,Df6r/s@kn[6258]6R>J`7XZfX:_GA`nfC_DHRkTUqKQSp'clc]2r7Sd8;#@_A[[$.YoCRM3icms!J*>R.TfK7K=qp=*M0+-rm
%X=da9Y84A\+O7%j"sU4D/;$C6&emIThcld:&:%NL@h$K)mcA4]%)jW15[!9naqfhOQ5-#a,Ee'+Q`8Ph?G:iJf(C,FIV!534\]EI
%`>T\%X()O`@n5io_ARML?`IiA+t"J-eln@[$=ip7]uoFIOl4pe\[7B-XY3n]"sN8$955qlgO7a7<LQa#e'Yc+_pO6Ggj<]*J:2Rb
%NPi%`57`u<I]aAdU5"mtbGlq(#0@]g&*RS:`_0S/rHEC@+MUe-J?mmqfbG/hGRt=W?5fo?P,oS0-6sP92fJV5F=g.4mqkaRU[-*1
%fPj+[dnp7fbXR?4KKO_shIneN/KUM)b=$dPPP1X!UG&<D<el!t4?B0o@mrn%][QgUXC0W5+W7K:](*\;B3F#:B617]6<a#5<2A.a
%5G8_)<mYkH%rWk*"dB?>:8/6;IOBX&oL"9DRe[K#\,g0S0Aj5d>0J]\'h;^cPd=<%$,)j9'FjCnS3!"U^%XJ;L9sXN`ca?.DkNF`
%EoA1P]'K\Jk1g:PgUBO'Z[FG=,Tf8;+b$2r%eY-TF"AH+&:'=6)W/)o=20st-`#:$SLbWXE9^Ylp>4Pk't?b.mE+'k$1eXHAYa8X
%!Z`fr`nH%4Qf[!EO;a<V2'$76$H\\eDLtjPbDUC-MrGYPU=S-GSPu'c]e!S+NU&g!HKES(p[e.('S5ORFhmm5L-Y9N22-uG@H>nf
%<'np3WW'eajYVjaTW%U)2h`t<c0hPjPXW*MS*E`3EAob(34dLqHge.F6nKuMN?jk,B);*aq)mGm<rCVpe'RhTB:olp\NM&fd%TE\
%>jV5/EAP?+cdFk;[IWAYX!ur'ZA>q8JT@bI+W_Z+lT^ncQGpO]2CCj"!C!e$pVXX'1O@@kA<!j-Ude80?r79ZP(MGF]Gt^.J&-7o
%M-RS*/DU]'Tr@YG&=5XN[C^mId`<>+AoOr],@PJhET:],#?fW):NM"F6_9T:/;74+4Ab20ENH`AYiZD"Sn)Fg\dt2XM7b#56tpE7
%B+i4M)I+q25Zt'ELOh)'Lmq"(TT6\;WRca^4sO7_IlR*PMgOooha0]L7iW!eQQFGXmNBoikB`bSR'2DM\.<Y@.lt2baP@[Q#hm!R
%Ga)#9lU>rlf>rRHgjFItMlI6NZ2GLsG3#Jbon[K\E9^:7p"m_+!I>K6*EH_sf^V"t]=i`2hSF;b--I<#dE>QiG!`B'dhhE9pu)i_
%4B$55'_T21T,oCAR&;,?HZ<NL'qmst2kdH.U4N8uUDpnVp\r1pnF_;2:K,:_LHoUk-l`-/+A7R."C&f@Sli>G[V_A+c9%\uRJOc,
%,1e.DW0]?&XAEMM#>)sjjfB8pe!4B+UV[.Y"he%F:Ap$4hL##q@+W3KA^^$;c_8:-!N0#HP[%0X6TQpq]RutP=jfR@_FMq;ol@-4
%cOgMG(H$Q2^n^'!:Ap$4hL"IXl^YfNZ0r5)R#Y^-nGX'h[1X</adiN_7Rdq'[OJkpq'tXT-#(YIqUm@=aYaej6!5Lp:+497`)_oH
%FPh=+C/'NYef0t6e>k"a]q=iV-+L`r/U&"'RJ;'%Hc3]?\^6G#Ekf_Bi5ij!&HJ:UEK*R`aWEgoX_YdNcicdsHEs:OAO96O'o)/u
%EVZTZKQqYsXoE?^TGR@Z;nmqapV6]glg+TK^V9^Es7cHg^F@ZpKgG7b$[X]k?H^rP@u*5]`BfZXM_^\f+X)#7D+C]kocF*6&QL<4
%;>tN*@[.W%#CGl*f:qlorkX>Uhrnrd>FL1IAR4PtZ7SARs$n9[OHB(8U4N>P4.OQcAs2%L?lp87=P,$6?%`7uJr^*n1'tn_;<@H?
%-k_>9@05L+_WjF)U[kV<P5C&Tl<-]5X3&>iDp\H?T@@0,JlInb[:KL(H)MmAJ$W<?mk7H`.'`urNRM)PnG]);E"Zb,PfUX/-tfA^
%+hQe%2Za'+oa0b.RI_6_Q:W)d4ja/gO1QO$r#b9=,r5k]*NXRT["N)\K,\FGD=jf=lMbZE42!WX#;o)'8p(p5i.WTGIZ$^KGD`RP
%2j`f+VZ\ldO.5r4O)B<OGB(im[-6utb2AT01<n04B?4HVXfnr&7#"1BBk%1t,TQ)kH2MM3N_pu%[JMNs'&]Y'&!S'TI8pt3K$osb
%4'9`joHnZMYXUPV@dRO3h^IB@KHQsi"R&'Ia>l79J1=CuXYf?O&t,Q:pmp3i?+S,\HZ/VpmgN$<A'(fcqi1$REG[?^EHf&G4bFUR
%+jtC"@f"V!<DD=S1AMHP^l8F?3ZHSq7%(5K,s%*p`rk[eW^BoaLGe=3ZiougB/^>H)S_].%u%K0<V.c#LH1*(Q!EW6JE,u-Maj1C
%eR+ou;/grt^^2<N^;eb3]uWF\h':???hUe&l4`9%=2!@b3FkB(Pc"[Z+)'-n#THH7r9X0N[q/UN#_&N=DB9^Q&WHHLXjk%04b1)(
%`.ri8S=_L><EV&koGHND+,Bg%9^n&f&G6;(;18-[Ig\h9-koZ$@Fhe4-\k,XO-LVLXc!W@^5Wgmp%9W\bfFsR[32mk%;Wr8lHpng
%]nhNSr3mM?%ZPTY0%'rL8+`aEN7HS2Uf?sP@>cP37Yu/G"iZ"?lfa*]6AA`B+>*K/l=8;"O'$*>Rke1!QD6f8`qkQ"?e+q_ro4`U
%<8200irRHC;g4.<kgl9+1hJn-2p0MhZ^qRG?$8GErLnR"NT-K$#>?A"*:L5*B>(e!Z^rL]i[a;X^(fA0gH=f`YWUKDZQ>9a<PaTA
%ee@/[GadcrL]0i&aCEf=]3+>\ktAFao/,\>herBUl-&3gO'ch5UIaX2W2OXbE^6j?EA=AZb]mQ?Ok=o"^<OcD7A`=?C([I\E^<bY
%=nET6%fH)H6$,M0B(.fj:D(3g#,Q.m]ZVFEX6>*h#/<B_b]t+j=hdMkI@eF^D>*(YV_QPEXn,f;j0WGIHHp*W'J`&P>h4.*au[dY
%%9Be%*ckKEFn=P`>SaV\PKgY^UR+40R*)EQL367&W4EthhP]pkB0T.&nuT=AlVL'AVXbX8F^>MO40^rb6ZOhP%(Rt`NM+ZH$4Z<1
%;bV;aQ&M7#W6U_SO%nn"b.Eb4POdPZ477N@-\WOLGq#095qp9O4Ej6hh^:X.lA5oGd]>\cCGRJ!NG4tr-TlVI<#-^fm\7-G#[u\j
%:kZt5oLkLpa&t17,lOf:`5/Q]E0J8B]F^SokdTp4BTDk.WqS3Fl6"j1&9^g^Hf7rEH]d,.cJE><Iu+E:X*-gR(eFAq!mGf[DqZU8
%8-6//bhtp)T70sq<BkZFkg#--:"9sO%/3GR/[;(3a[g+"<rRqnEm6[#Z'F8;*J<\Tj,fbn-q^A;:,d,P^nC8Y="1G75:FmCqgEr#
%.VeSnS7+Olku<?b9tTbbL26anFhp&rCCr"r3+`/N_[M[e2fNXUR4jWQV.-B#"nBl)Cm2[#d7unUIMR?Y$!aN/aUWW!.q_r.BLbC5
%D-nC]qJhD`-25J/;jnM$PbIGL%+6$%/Db6_l#Pk]\&B:nYFGS(_%O$F7%k/=m6=FDir289HoaAZ`GKlU;PMq?9>$ShMhjT'qe3X#
%"<A<?)OJt=V"c_+UFKGRV=Sc3W]YWQ:r)oCEQ0hI4-XH4n2;*Fn?_IX]a0cD*as^/Wm\3d"m9#h>ofK7jPJ%g0-K([].'P&nZ3"?
%eE2rNURjnLf/[<jU#iNR`6uLQ^hSB^7Q5/D<W2%4P(R_&JHHY=VC`jgRdSJUgW^35$8]bC`R\4q2)a59haNq[.7:s>F@M,0Y$31O
%l"rW2kL>2bU&5S[f!%PB)]f0"qDf8)57Z%S6IU#3c?k8#<oM);=90D124=t>YpO7?h>OUTI\I,sp/la6bn2ZO4ps`=jR':lr2ob=
%(p^EQnEda*LcS8$Ue4B%l@QH-(@QU.O(Yl(X3Fk*;1[([mTtR\dZWng(k-<4`jbAb4CqmF*P[BIBtO;`cCV6FlX=j$HLs,:/)q<(
%0F,(Km7KT?+,ck(iI0]Rn0!H+H7uL)*4Z)Gc^n3\HF+SXo\tP>s0A5W8,$bD$9d,/fMB-<)P"=Lc9_>92oF/+kui>EHB>"[+7>0F
%I]P]"FE!gsn_S9Q2g^F(.*r$YW5eQH-S#rs"^=4<a7tDW@,:g=ZDbodQ`8)?cqu\cf([3\3'3EA*1g@$pWZRQqS9MRY2V<q&%>j`
%0*;R@Wpso<C,t\3k=\0i5\/d-a/o)>Lg*"<VE+uH-J2^@aae]$k=<.JCK/]TCrhCgIbMkH5?pO1GZp<mSh.CIeZXD&Qfjbe%5FNG
%Q@R,PQ(NbhgSGQ6%q.;+U@+/\LlcZK+[B!qp\3`d+=n*qc7q+Pq@uk[U"/#l'2HO1DiI>@<m.68YBkM!"#A[5op2?WCJ:u7TR*?J
%9o>,GL#tmVaH:e8VKGJK%Lrdf*]X]R2laA)g)N:87H?)hDmXfYaWq_hiB7cAjAp<Jm]L.kO-!?:!u8[a7^E+ZjoW(,lJlMV@=0?<
%`Na>5*nOJ;h1#.Uo=fb*k4?/Nm13JaSZmLpc3GY"*L5bh!NLc"61.`^o17O.Qlr',n0"$:Imcm:B.WotbWJj?T8]FQNRrZ(7P;%d
%qrN*Hmh6l9pVGRF:F:Ej'RKD#OoCl(1uAt'_X+V,%oURKd+M4,!c^I%Y1r^,2B@\[bGZ4';UZdNPj*/L8U!Ym'7)Y5dtQ#VldTct
%q2MPf'uDKF@>UaR3[@6'nA3*Hmb0gB?9Xn35L*taAO^&2a2#R)LFbmW\D;Foe$F"PH/n'+JSVOlEF_8,E#Ht;,mQELG#X's7>[ni
%IlWs[!^"eCo(16Z:@um\M:J2m?$^aQ'af44*jP8<mCjcnU(S.>[TtD%eH9?EFJ$P!F*Z@(U+3:[;!oP+?#ah"p5D_E9GMV4[537*
%^>K<,XH#KAkZRIWjs*K%['oVqa,!rhW<g7'Nl/mDmBd`V.\,%2+%K[*GeYb.[iBY<<V4]Ab(83;NO+ddYOIV&K6((K(pRPj):*W=
%HM3=j1h'6$aSHf6TP3ofd:Ti/\W2??QMg1<Vk$PoJ.FK;"-Z,)\2mAeg!aEeL^T.&gs9=U<*m//+9ad<n,obLs"Wga[hbi),*Qn)
%m:QT&DXsDL((:m:`Ki.14Y5`:_-J$fieFHnq;`LOIAU'-T_s8G;X<859(3>2]*"?fjZ@W6/gN7SVr+%b*2'[K)&^f"G"*:3Pu*of
%,Mb;K\>*6G0DG*l?Q%D2SL/n4grS7t9gH;O<\K=igc8^SKDh.gHAZHnf6WlNiHn%Zi=[Lp$?^AG8Nc`.+*2o>pXTH&[lEt0j5-@]
%A]W-3`QE5COQJ$ffUY(Ma/%g+!"n@CTZ"b:H*qZGNk;JqEX[DH*1;k7NT+=XNK@rKrVqi5-HHs("h%nj#A1hep]<N4&d*H*FPkhg
%H2K?)bYd.(7D3]QOm)(4Y,Sr(b3P$nDaJHE&e.NVmR@obTt_[^1MR;<,/T.K)W2>SR9#m<I:BU4qb?m,@Rg*-M+fW-1ddAu6ugTi
%ZV3[<[%V1!3H-"R;7k37I\`DB<eQl636n<r-&_eS@]GTtUIck'%ln#j\;.*V"'_EU>_SGA3It$=`6$F>Je*3h],CWZl(0c/1(*\j
%`I?B\#dKm]ll1`8\.U;oYF]FN;S1)"a4+(Q*Xd1UJPXkdOW2;D%m::jZ6Sp/C3Oq,jClkON`d[>[*"_M1+O%lj)m^*O>"A"]p;o1
%(u"&UaucehKBj.`O(!&NVhhe#$m:bGC5(KD3W/OGmh_sm;C&1.Q.3"0i-+M_%ocjlB6Q:SoK9rIBP1g8=*LKd0e`KVQEX0!EsY#M
%&M,]_1f&K<4epZ.H;-*Je6J__?D\0.H!jh.2bB1c;`rEP6+U1+Qg:9Bm$h0gR0l9d5.eNnbd_qX,%O9:1Z"2F6%=8(TVr@&o`PGT
%&PnSm65SGON7iA(0cd1a<_E,1lE&.'$Dh@!8]O#8ds"0.;%/#3EReaPfmsl,;9,'"3MVJ8f/,PM).epj/;-WBV622mHehF^UpKh4
%CH$_+l_e4oll1,V[plTV"g)#ac'3iaO'ok3qfUDA1?CF!]kg!pruE7$[c(h_3sU`iZGNg,(O0po\edSlS551+qu;#;9<8DWp\mO]
%@cAKKJVMX:[EYT8_a<#L>]mn9iJpSMZ'2j%?\=[,LL!emSF`U"P(I&mfeAheWS.YQ_h9jAq,rJ]1?tD='5iX#oo,"^*XpcXdSphM
%.$r+@5QU,rW;)>MIVY6_fcAH9rBTi?hU_H%$IFm2ar;M$m+^AkhhaHl]XC"2XddjoF_8s(Ym1W^U4!l?m)HDfepOaOI6t-FHY7-@
%WBAPJ@K:E2=mEaupkuaGieXhH*8TKoa8ES>5Y>cXjOoQ]d'R;)s0Z0sH/]@CSkhG&De;5PoKu/7l8]Y>6,T:]d53sTESW_pp!.a)
%BOLl!e;Z$I]tYZ@M3d!/ipM[emnKU[3gRT)l.$i4#eS;m:^$WcUh`2(CHLS%idjFBe=7#D,d$VF`@GnQojP#X1LHj9iemZg=+"Sc
%ks(k4!nbFn_h7PKbN@T2mg)_;QM9$R):?##HCth8l8B,UnWL^<ZH1WcM+`s<VAm]i%2T5]rHf4`7n<btE`7I4!NVn&_s6?F2lO/"
%L,q]@&n%ug-$jmrV)W$I4/AG%ql/;&+uI4ZTBV-U!WsoI7n!TRaDL[M\)`hu#s'i)%O\-SDjQZNJaC"3N9"Cc*t6B!S*XZ@47>Ok
%K@ZVB63UNnF^VJXC-pN[WW'>M_;V/&Cu*ZECa+:Hbil`Z.I[e+6()Etn:'URLQRDS`QlF;eS8=Le/bNVeg;*E<AU>2>'-QmZ[-p+
%Ckq5'b>=bB/3*NtpOlj6JFE1]kEU5rT1^@?+2:OL"M*=PZ#gO@qoUanp\2^"s8@n,nI6mOs-J@"&!::k"645Y_?&%JEUD&uD&Gc5
%dfeN;%nGe2X'Q-USSAQY#-BO(`m:#Woi]dp7[4XS9cJdtqql_qBm#*u<BCQ%Sg:3YQe6b37;3>VdEW[#Psk`kpG`?IVoQi&*bG[l
%Vj'O0/%QqM><Z(DgMO[_j]VERMB%E^n59U73#!PL!;6^h(RF,gD;onLK7U6B9-)\iG?*7gC![DTeP/.X\_Fja=\!kejSQaQOQ3dg
%"cD*0$odIbp'b??MTF;(6=(l08VT'gE"dQPYLStYQW>Oq^QEnIIE3;i@p!dZ>.9!UMH2_(I2nkP/:>W<SnS.[dqGX0HILpjKi(*r
%IDMZi4rbbu,5Uc:6K$>Q8I&qhUaomR2f]@;QeWQ<6j&Ha,.Ytp6[[&iL)'BbnV&L[%>QI]+\pC,6o:Sj5^>7-UkeDs?LFZQZsjV-
%gX)2^.%NZG*Z`"AqsfF"b.DO8gJ9nL#DtT9H'7_"f,RlE*G`TV,_O>TKg$;RGgV8gD#*d>EumqXS5K4<ZB1adO_aEBEhBc93gCqH
%K69b!<#Si254CI>*``^7%&c[$(2?L(n312VhTLZd`rb4Q$1"*DoHhT=<\Do4'0bgtoSU%49$AA,dW:6j:Yf*ucrBI!mj@A96uh([
%kur38CTk4ts+EuZQG<S%KKp-3BfG\.6h80n-QgM8h#5e>:#_L7)%b:0:%8)]mfdfkRfq<h#YJ-bC1sM1M($uo"%=!@Y->#hY:ArK
%*/O/N$)_]!<\-hd5#CZtcFAeBp*52=+:lWF5\u$'7h9fX8!T#G/rR(!fsG5J_^@Ju1.R7(r=:_B03).@!bHKe`Y)?."+>E&YC$.j
%J0+e*k8%"\D;%-2AaTRM3P07L?#j"APSf>__eu_*IDVqWJY=%>%`RDe*h2?QLE)#77nF@.<PE::#MPWmqGVAF#X]1`eXMYQ;Wlqr
%`qPYQHhh*$\qnp6R&r$\/hbqKLR\&Tn#`Hd)it`59_,j/C)0k!)*%TiOF'"Ap4:d9^WRq,5Lq:"4KT1t6t+;'1?_Vsb>AV:/M<H1
%&!WA1gk@2C.80B`XtA!f+hHX+]T$mIQ\l;sRKGhP3MOf7fX)X5YPGNkc%-B=`(aAO(,L7r1L2a%g@C</;PmV2MDZpP8&l,r/uim4
%VNhsc#7[*3f"+7k=5d1Hc8bSZln[QY']&m6nQ`%t,)aQqKu+mUrQ=0Pqp,D@)*K]XF@fi`5N7`-,*7!Q(%<U.eoYY<[Q:M^M70WC
%iA46\l%C7)*Xh.Rj>J5AC##mc-jgoo'u)Ba3bWrY4o>\Wf:d8][s^Zt$.^n5V`nUdY^Z#Td%!Ue'o-`FNDQeK3=^eY_uX!]`Q,An
%3N*Y92+*;2d"k7(PRuLlQWYsOME<iL8%f5j&_=SGpgGLj9Z;/<;=?bs"+,$_)fP]RYkG/V'dH[[Zh5X,Fr^NjYfMaGX1V:LcUiA.
%gX),.C]>:D'ZoPX\fu#kKD]I-V73AG=YQ2T2g3--?g@_4V$m#OX'a+dc>Gj@pk+!HpMp#s'L-08?@i?0,D&Io/3\LoTR@e'1Joqq
%&,HE^H.Bs&fd'4Sa)kf.(F8W<nKt$M:N,Aee5VYner>fsl-F:1)?%c^$;qSkbk$+p@g!X^IT3MQTAKH%=OjjT:]6*7eGH`PJCZ08
%n]&jF8/1*:=Shgnp.']`>1B`pc)Z:7_E--2MDLD:=p)r"@PuJK4s%-oFoZ`62b*E2"h7DkUtM`UX^Q&eQGZSS7:`3l)cuLnV:2=r
%Mfk<bU$&&V9RINP7R]>2.&ddmI5uHkI\#3n\eK5O\Co'20,I]IcI3o-]\8*j9BTQiE[Nq>_._GHB#kL\V=PLFL^9D=#Da\E,oNOj
%S.Sg'opi'WkiIj"LbsR::6Mb777GN/i]]%]!HC9'AQ1,F$18Tn&gtuD5*HbUSGYoo@d:$im=5)5n%$^U)g/PENOpd*cCZKpRE2bF
%Y+0at-geO*'?!U$cAuJnEJ+>YPo!)L*GX7-?M40f\Rnr(fa^eZ%*aoRO+g_'V8e3SUnZd-.0A/k\>q1>nU89Q]WG8rLUY72q$"Cc
%3q>1G.,EI#R^MJ7:N@,[XUYikq>Enr!9'>g#nP\C.%TK[6dso1%=@V_N5olJZV:#>`LE]3@+*c$;!lk^1Ks/"Ru:La)UA#YI=\2r
%&_]<qfM(?f(H8"thLYA)NoG@DhYR+`6R!,VAIab\kI'kdCZJ&6lHd"q.MlfFD3%t;&\423BC0lkFd=)$\sT,eM.U!UBMH*o'?tCM
%HdF;>q:^=nCKuVS:--_g(O2RoFltAuC5r!\f__^87D\go>XAi]*4!3)7:61&pTUr[!7LT3!:sI:#.$\'/bI9ZcD-+O_7c]D2RhKb
%7l?CX`+37HrW!&\g1)/>30=F%!<nf:-*-coHL/HKcUW_!O[L7-)4:N*K_>L'*d^<K\4?]_m(+='k]/AX:o=eeJ\kGUEFEet<QkuQ
%[`DZ+NmuMrouEnbWPbZ*232NG?QGSL;"9a^*uc/m(n1j'Yd;7#8U0<bR`^S`IJnkka_LlF?_SP.@q.*G2qDmP"$!`aLl"<shglE)
%\CeX5Xe<-FSb=87ojS<9$\(Vh`mq'Z2?iMTDoXMqm<e*WgP]V?["o_qY1$$';a<,cL8`o:/]SfMH%<*!DBH8Vc*5c5-_#p0_B&/-
%?(Db?r$MsZ+(k1^R^Yh277RI/m)PJ<]Wm3fI!TbS%3qrCp^E[S@Au)aIqp_LPU:n9N@Hbl?[hUWoBmml4s24P:i2*m+J?Eh6s8B;
%d5Z0,1%S&V*E7C>FTb,)Y/YBQ9+2.C@_^I"(p#%/XM6joGnDTIM7AE.B+On.IWk8TQ*@tA+e/lu?r'tS=C8Nkf-Z`g=+oZJ4Tq&A
%'8<JADO(3N_S.!]Ea;gKs(6Hc]n(XP!Q6+I>.[>9p9/rA&4!HTqd/OZnOaDo#m,YpgrHhC$">u/$LcV?SEVh%JsIun^";ob4NoA&
%O/4gf!_2D5]#iMsSb,=4BuGcqlV1MnQ.lO8i+PF?Ur_*(^;Xq)E\dssjDS1BFZA=1?*JFV#dH$^lU=h/K!ZR[p0D,`Vq<m<+XgAC
%gE&eeK-IH\qW"7nY=iRc=@1>d`LB]8jRRYogki)N&a"-1Bk:1*W=j!b:]]sZ7UTf*=@.S%'2sNNDf@e+>&[m=LM59dqYf)g8Tl/E
%'44#<IBq1<^N9CkJ(QDc!rG9gTM4A%[7:uqgp9M;^*m=2`?YXIA2eG'n>A1@$Xt3^Ob]Y@06]BY3K=/%=%,5-MPY<hI<a@;+B4ea
%rLS@Yh@61edtGDpE%u!)>),kg3[2=KTe,U=P6*H?"Z)8GV_"P=]5(8RPgOj(W[_d5]/')f!a_#GSRH--X2GTVC<$<tka(p`Ze6A=
%kGNGGYG4YHU6?L(dTtBLPp(29+k?Bg8.s\=!Wj#sVEZ4F3mP<id==8[N.Msr!6?^c9,$V--RV#@XC_NU^XcOA;0h^nQ$q4D_3FGB
%gOZAe#d&;'UrRYspS8d%g,[M`BDI8,SetZtXRpA:+'2>WNa2?fp+^tl.k(W(0>ZU5]&2^.QQLAt10mmkQf(/=2.d-a)3<Z'_N1iD
%"b!Tb2$aNlTu8?`I)$UgA4%a+A'>I?Q9:?PV"6DQScVk-9Xud?@cH<kD?8SNSYS%8)X]n],]V*N,\S*.BpCS`Jt+^h;Jq[qpb&gJ
%i-'90,!QRoOOS/509'N6[I]1([09B:K_cUI$@^a?=_8ap;Op6uQ[kTe$n;eKB`N1AauqFr\N&H/SMmk*,"6c"D6ZNKH(s>XMOeW>
%oI#Oo8#P;#:Oe;Fe8,G.Q$b.]2p=GNO,=nfJ(UCrZdhH2H<O%L-C]mp$8HQ=BMK<F1VnA5-?#+EENhhBNc@s3G=j;mJFlNnG+`eZ
%fYjV8I;]Y[&soIY*.]<')G`QQ%Sn%m,.24MV0Qk"C]+f_F?FH-T[[jGUP%fS0oYksIWQG:PGaq8D3Mi\$IZhE3:lq]H=#<-q6_!i
%@-;JNr8.Di&pbWdmh[2R"C3p&r._K%QK%iHqhJqJm^Yt"Cr2*Vi;pj:?ljo:3B'3C7NmI5bT0.]!+i_,[DTMO\uM?#2`[^6:'6Wq
%-#,2UZ^riY0JmVYj7W?*Ql"Pt'-<)XL5'&X#$XD;&0N.b!LlM'@O^:Hic>\34j]TYJX'\gn0=XgS.C6i$*=VT4^Kmn8K+P0.\fOn
%OGC8dC&`RMS5?-N@Rb-tHETFrY1Mb"j7YW7"(*8-Z?Q*#02PIFmN*\I_#_[h3C=O.Z3m9A395;"buU3@+S)"*%HsX.`,6JXKQiIK
%7^sIel$*E%K,M!uJ51*7W<p$L+D')sa7fmDQSql^0R1*!X/&*2E9uh1qu6@&Icge'LkbLX#7K2gjA%E:Pa29mA5pq7-k?Rgm/<Fg
%!CdS7)W]Yh8]+'/g,8LX1BIGSl%^K-C?p$Nb3^g'G&Z8T%c_E=*u6J`@?hjhKQ0Wi_J,\^1fUk*QP1F4dYhn$8.\%IO#)*?;@%Qf
%4h[j<cZ]V:0UsURe0.P6PU?TPEL5-7UIa<2]aAp>0%/Z!0-Cm$m0<1qQVs'-(i;f'UBQ;)Yo`OD9m#I>blSU4:gj\clGA[N<_e^M
%,'0PWZq$C1hF,'h#2LNBK[\/@aIHBO)*MTW$7ZcqYQT1GDHBn/HPjd/GVgdY,S[C5+'0#.;%3oaEE.]''")Vld!L\\S@l[W6ET9,
%%,[>\([e-.g0oP)rMpF_*_6?slhLQ+rMkS`pjK_6]]ctfjFM@3(hU<.b>L@FjN*5Yh>SGG:,asi7:lgL.[T-Xi%#FSOW1n#@5)-%
%pQh'&/^A:u?LnIW_nGBS`J4f09r(,*k//6bJhNC7,kNWD=%b!1:Cq&5cF^m/j`E?CJ&?QVklRIDlPI&Ur&sBk3*_YlDj21KK+dt<
%bKd"GE#S-o1Hf;/rQ$puB/EK]XBJ\;piLT^Zq\u4KH>*++SfL&m\nhG;S)tC[,,&j9:8!aY%/qN*7HU9HFaS%*kF"QpJHHkR;9g7
%/SJHn(^A9,:jn2J#%'AZfb9SSP0l;LTs.sO/8rl'o)TG^'Sd!X@"7ZnfW=^$d;MOZ$RK\sh0mW(@;Fs2DtD8QVD%-3)[;:102A-)
%5563i#+Xf%,3:D-kB&SF,VA4`Wlnlok`3/p/+WU+_LH&NDYjThLXLl>f3AAB*Yej:cIN#A<+>tBCX2WZ,Xs9@#Ln[;S=!umfn!<p
%,dDpSMRm^Uql@36OWY?uq9fCL'rE^E66^dK'Z\&>Cd9W_,UsSiLHKbh:M?2K-kD2uc.+A0[Yi8c/jrAOZeSYgYrC'Bil^4@9UAD"
%aa5K-fb9=hh4@C*DtEp=&@JK#'S:O!&-b.sqJVTlJX]Hr&SnJ1bHrsVIiVBP*'*f#15nJ"oaErqfeb3(L)3h31pJ=r!@.M^F]2),
%iTAisNW';R<&Nmd:1Y(E^7oED:=(=3j:@kh>5g5'`c9_L@4$^hZo/Y2":Fk%@T2J)1Im0B:"2<N-]5LOXdX`4[pqS@cieR)!PQ^Y
%`\coP___)Zf'O6;gJ-nui4Rka`nP`&SRSjd'nu<UWDNVN+P<)>JU[Vg\\`fR4\`#m6pXZOMDK)NoP2;+,)rfbbZ^8.n.NQt:7-"P
%0ou5\-;:3CRecskU1_#nX=L!2(``#kQlVJYHsF:P%HsX>pleiFClqm+P6P08*CclDQeFlcg?-qGX&-iCYI$ir^60f_d.B8'd`diu
%2L7^_nPj4*OGo7D7$pF**r6[XB"[6>ao.++<hAf9Q^^c@E-fW_#I9mpmTn1kfb#8R<:cVSGWuI3O!P'?J^XKX(CJ\8&7)Em1#TWY
%G.?@Y?CF>`/s>nFi$;"*>>T'YTsKC;G&nMhj8H?7_b/Ia#Dii_!T"+bXCu&QFhiCA_p9?/,kM&FBI%,]4A\FX'MrO@Z>cqn'calF
%VSJ,H&a@"d(oBB;#%6HpnABU`9$-*RPg"p*;kHLJ2%27iOb0Ja@%eU=DUchUrD6`G^`Z<c2kZLab`%hZ_bT/EhMmZP:/;PlQCGRB
%WJs^C_sSK`;@n#"`]L0SaDaf(4LR8G>3#BR.6g]C@=pQ,f>/4ILN#TKQdp_]$9k+7*C/W7rW?K1G((dZ9p7LIEBkIbrGo3n"MsdK
%nbjW^XUI(tgKpV.%+I"hFZ2&aSXKXu25$;Gou(.%ITTmKTC0.\e8.IHJ*V9!'^qgqQsh$EqD2UWj/g7!FJ32K:;);12*Bjr"%ERn
%/7-KeA$/Ur#tE-5A.WB@S@P#KWC@g)"$PYZK]P@;.M-Pu.P4N!-D9X%";R+7KN=YC*LErM;'&2]XQ$.p-ean'!6&8e0+S>"MlN2g
%-jYVOKRr'F<9XTHVr>m'm0<2\TC!Vf5D6GhMT(d9/!k%EFM$<\17biD,/js*(P'Hcc9<I2#fu.X8&_\f=?>-),>Ptq8D`3Lr_Dr:
%GP\Fgq`iOg6%$$fP&1auH1JV@d"-b)%$en'bi#1@WdM.4fibj[+b"+FTaDqB%)Oka3imZSBXO8DkZbW$%,gk>s2Q_nqmf5N=eU(7
%9e[[U-$DIo3%?%3q9/LkoSdpX3HX9V5U)SdaNB1IQfL>Xi5?./_qP"3oBtcS>@Fp<nN<L_#HACo@;Aj:)1__BXp!O6'qKnX*N@^,
%"ZiX%J6qNC6?_sEi+K#=V*U"$G#(eDe$/k_;2?Cdq-j!Gc2f3A<kOLjGWGt5hR9?jpnc[H=-W?A`J88OQct_*Pa)MPk1%&a>Q"f>
%hWh,6m,DKi2]UU'..r`Z@A5/0,omANhIKbaU^q2.n[VHBaTq':q#1l/>&=K7;PhAj2fAS3*&^dZbncJrSD`bf]%?6Imr<gU0\0jo
%>iDUl3(3S3kS<o:Zju'Ng:)S<E^/jZ)g,U.f>[$]m1oiEW1d['e_$lZU:;6da<ZK*=$&/meo!:0_*X6\m=$._9ZE#$j"l>o6&+;j
%F;=C8Tk2@29&.\JUWqNKX4[fme7E2dX<1nbS*Kh<72fTdZ0u,lVKRMOX_1ne1]cYb!9,5&IhGWt(#BX@ZS1EK3O&e#F:XEuMe(1f
%Wc2Gt1^%l0HFa'+o?3]`ALKkqi/%L]#e2(?\jbCnU>U7MAScGHGQ??[3QNVS0CEJEDmh0#0=P][V$s]YiZn(+7g'.Mm1tr@?)YBE
%DDm:>2V([d'kA[_+G2"Tg&F$HTTg@V]Qrg&7bBb`B>K%IN!K[!+^2]MIYKMcQOKdd3PE%*g3NiY*s])2&=,K4jnm&Z'jhO7@kmL`
%7[ne0%%B$e%It*CSum/`jRd>I9;`k@Ck_;oc.%c('O#ag$i_b\$1O7s1.;GFGYC"TQF9*#'L%n&LU,,PZE+_XBTf(a<k)FQ`Jh)4
%7B,uWcm4\HY6k1=GXG5JGfpZ4<D@^iOZ1]'\;RinrUHHADZkM^B#GM0+G>DtPg5ql]8;+M6T<%aUQRru%MckN,qROmmCF;bkLGuD
%+72hE0@82Xl\E@q:$Hg/b3^g'Ftdg#L@I1Y&)R[[TL!aF8`uN3h<#[Y3gi:$K>=GV;+5<0VpKV\1!bCHE\Ym*q/S2C./A0&BG^7I
%W)(`ZC,NPh=$V34E!FgiMg5KU;mQI(If^^5UQ"0r^^rPSQ6rH@WfIO5>N8uYF?T<qRefnVF;/D;T]Ip^*'V?bZ$2'go]q@j0+IG(
%mQn?Mh>5lmo+1V`biSRnc8`H^pg+G8=$qi./\G>d'@e0Q8>$<H;>4R@Y2SUb<W:[)^<`R8=TmDt]YaX]?-*,r0:SZs^eJKeHIM8u
%+.V%ZNoLlJ:HoijS^#n`kgAfbB*[VeehGt#q_?A"hZAWD0');+f)?N;1qaHCJZA&HI7[<,>s#gG0!'"*\<-Z5k\.3h9\Y;-F7#c'
%3UkMHQ2gU</n+VRk\@R=+S(cgl5IB9^fS:;S/XP[G(VkSKMWL]>\O$P>1Nt;\EP3^*m+_]IQDW]o2%jU)jeXqL$':ASbo3O#L*+j
%)_2]t]25\dDi\DpUl==%\sOgHd\&qU$R))6KliCJ+"0H+Za/SpD>T"D?WEQP44IM(&9<mQbpGG?WO.\DHl!$B!t'RQf)spPAOqm1
%i[K2<c$XdQ<a9VBnV/f,/r8+a%<&!.<llIB[Wn$L4:@BYi>BF%WDmupP#]<9<)%VB*2S!'!2_2sDUQBjdAGsA*$lTiT18g"Wpb^j
%rn$,'Tc`GA.,$jn"`Fq71DIiVQ%N<"ARMq)"%>Gnp4s'Ui)PCTKH`>m4eoQ>cY6Kl'%r7L2HnXq>8/RkYFS'pk8kKuLa<1`.q83]
%Sn_Qc!dIt75$d)f36Dma91gb/<i2rK[Ysb*6.Wa&DEojt\Sa8(edl]rP<K`<%e$)d([e&('$;Egs$S^F.QbT'#%n(W.05jFW]BM_
%"U9dhCZ.WPgS@e1UauF4q]mr1^XK+a5TOqtPReU;2TF6"#]#n_jdn3="[Sb7jO5ugTo@sa]X/"E'4+9\pJ!uYisEIpd[^2S7_O*3
%(:uCdb18PK![XTc)7/hb4/fqNKVc%(Ps:tB#"j)lHOs.#WS)f.@SZ-g[n/fc:4u_n>=`KdU!^Pr[lK9=d=/ABO)R+055;.`WG*h;
%\50NYc/k/@La>-V8:4q*Ns.U')_/0:n6%nNGR\B_Tot2aNMqPnNZ<ogkU'f5!^0U5VkJD8;Af\8T?3X^kW>gq(u7M5%XkX*\k4$1
%?Del?AQ0,RRg?'=W#o-dlVa5*B3hRs2W.epc]K3^I/4T8!$Y[Ia8&mKXV#\b"<N(?1GptmSYH;0;34+P;_\jU)#<DioNOn2o%lZ=
%Pt1%V).EIa4\i2F+L'Snd+oUHQQIVRm5\1^Ol%C6Zs+^M$"?J8>44m@].:>L#g*&ZL+1ih(Gh)]+2;76+#/9V](WK!1QZiYcKg$:
%0TBX^:>G<!dlB&]=Q/J6^f0>YpnO:HGfPRP'e:@s.1^+`;EV.B=s!Nun7q1qbYXN%T!!bj25XK0gH]/CFOfEiN1SD_EkW5bXS-=9
%,12DEZ$uKGOXdq>-K,#_-C>Ep9ROa"U^Qk*/r<&b=2+G7$6K;np^?s8g^FHe.Gs_`\M$oH`,R):8?:_rc_fK<>/]B"WchcV#SOp&
%*9;jpjEt3i"_<P:YW*IrA`;9aRR*"dZIk=%OOqh/#)p[q?6f^YX*YGshk_CW91a'E+!RSCS/XQjBeNdl_Rp\*4=TCQ?DlIk^W[;/
%1qnfq.q;@]3IEf[5ZSc>hque"RTp:SG"PTf:KZGk9LV]5-A?3`n8V_\b/C9A9CKh47W@%Rk_s4E=7p@'m-1Zbf;2<m@YW2tPtRJo
%$0oY^9UC>Xj)>1tC4h)"5?d/_rq98CP18C0Q,>oTMo*>udM-Ld+Rh:cR8(F!FZ=efUZ!Z.1FMkia/PYY9+V>lSI\d?!eijr8SP%U
%=W*7./,5GE'K,:L;GT'E%H)*tM\C1ui4+E[-s_b:?9,5g)lTaIXdIV#M6%2b/#-c#[BQ=fa88uH1uM*p1eR:omPX_I732aNj0=Z^
%$J*ZIg]SWE(n0(QrV*>JU.M+26^J9Jq:^1]CnZ0e)PL!iTA5Vq<fcj;>roEnKo+#k]T)TJH.7GQk@4.V[Dh'kU%pCiDl;(-k1T*%
%jOp>5/+\TUH_#^COb?aU6[4ho8(edj$1`jj$bhr.R=Bu,2.;4g:D]PKe>J)G$p>X(#kG"9[4Lr"]]7+M$R+eX]2sDoFn&@u,eK$H
%T9Rhph6#6oeS=M5n4t(ca-o0:Q_)GpA-L]m4<$8SBTBE%6E"2N>#@4?5/0L[-Oo^)IZ$6b2U=fP4FPGH9NF(O"%<cdIS[$u8(9S,
%<L#BO&0&$cOL>F4:cG6!;4sop7B%l<=UFKi%"VdRdf36bPA:.(lF&tRm3-\1fpPr946g/WV/+DO7FsspTMVm$#d+=NPm9e!=MTW2
%Fgu+Hh^f9mT\W#.kaZZdYBhT0bL/$QN:dd%37CX]'4=+TnWqr^6ZLL-jlY3#@t!mKLuG+fRpf'Ni^0I#95A54E&j1WGB\I%h`n3_
%8Ze@n#d]0M4$V_!Xk[AFNCqk;%=`sfT>9TsT"V.3^biW[fI$bM@P?&o>2SN9TDt84fL;$qHa8S)06]E`>OALdN@`.6Gos/S,"tLl
%,\#4L-f'i\,ARK;1Ka33q"!\'JfP,[@2MAS:V0_)0>=n]:'DOT[AbVmF&Zcg[%V.^2Iq:@pU;l32mcE+`):rcee]8SRZWRD^OogS
%^E:3/<M]kO`TiqZkmRAF`hqeu1r<.a&&\?VZ6Hs)irGHqBg2MeSkA(PH$;bnXV+&DkS]90=7>bQ_9Yb\Zj5=&$j:3aF-RAP^\CCm
%N@/jF*;EG[E^*Z:g%:+8A^1eHe1c<,-k^f%gYPI;6t6R!Q%?l*9cIBcfaHCUAV;Fh===Bp>KSqbI:>(u+l(>QYY0Bch%P2<cjfWu
%(kW)WnblArA70IpVg$q`35$#+kPF,uOmQX4gUJ;2r\+Lq(?T=#QIr'R3i3TUSI9-h6h.fqS5\nW=Y%<0-B#>V[?UZt#E"<dW>=c*
%jE[K?E-EAY"$M'Ms"!Y=MZZf*"b':Bf.ND`8nQ17J$tJEG?>_bJG*q"Eb.Lui,f+MmoZ/PeM6OO0Z7;L%[';:_m&.IL#$r1C?4>+
%>X&U7+mqdQgZ:#71l=,+Sq4t$Nua`W$k*n[#A<f=OGo(>RfBFDb>A2?q5o'pquX2Nh(1:r:OQ0P.4/9CTq/3:R#t#"_a\^^JU7k]
%R>Y\[*d#=&1O?R>\/N2,_ah(rbN0qs(olJUbX4Q;qB(SWnGF,FODXt6cq)P3K8GKbTe"hL_83k/;W9(,%i&FTi[odS]]pRQQ^XT1
%?u8J2kM(C^%p.dZQNrWUUtb)DkgEr:E&D\-5m/@gcD&(a>sf-0A,9X/&C^"^PhJiFF>2N'L@IIaO%]63;ueE&CpA'ucXa*^5mr7l
%#-iV@cni<QOID[grZfK)TkcOrPmiZb/4C@26;&"VDGJmcCq`ZC&SP&R)oRgma;#.d&(8nNr_1-^i'[h4V7qc1K1/,dc,E"V:&Rid
%.+OPf9J8Q^dVp8TeXY^:AlPmdV>1$"]3@LiXG`.5K385moWHl)86c?K:MirQVo>a)d'.%Q&@O>LVh&j9Q>O*Kb<WWI[5</<^\bg#
%*/S1\Gp#9fSEs?h3;Ef:1LnV!+!S^16dbI`#XLpW8AuXd)bILR]c9>r:GVnuk>E=Hi'F0;g5-;FqP5V*&jl\u3+%TY"na\e"rUmN
%,^S^LE)P4DM6-S3,ls90`\ejAV,D*#efK_*i*I[O'`C;p<m7dh`Bf+W(i8GENq216C_"f<_Q3r,bd=d-7N-JQi9b3\p'm)eRk$V_
%ZV&[RIpI1H+F617r@,R0+q@_&RIuXcoB%-_JW-apaC)mA<0+$Wr9H/`lT9-]A8G^P09Wa(B4[tBUbq48-#40l.9+jfX(jOIC1u>+
%%,9nN^']UrnHGjb%gt6ZC1?`#i[M;s^I]BVaS^`jk/N:4*&*F8;T/8$S;-H+^`:F+&!9G,MSX;V,$^]Lp\T%,0^NbI*3T=<>Z)B=
%0]')LOao1l))Fp`;]YtD`PYciBbhHV+ahH(h9h!PT*[`/m`m2:cONlC!Lg@((;!"LS",hBdB63\T)_$r9Qm:,<?,##CX.T2=q<<O
%k`;$rip;&5*sVUNSYmHl>s-K`/`-HWBc*,EhLssTfp#_kHfPHG0@So!2D/i=dmrB-F\6$B&C!,A\mu5PQuLm2!F.)ga$L?&ap(\Y
%<""f-3A'TF>%-UZ_=i.Tf1uArY[-M9Bjp&m*/tI:<G/C>es:Dk\\c4bS;Dp9aE;Y030n;`ksd_]A<^jApCF2l"\\ctWa5mla3Pin
%.fIk8\J:?N"-fXX,_K_=Tcdl-K(ZGHdUrK_J^Og@duYunL'CjS$L(X&<:U0-c+_B,:Q#L%R$W;iXiQ^EVktGk';bTqRcD"(d4RPH
%V-g[K6<+378ntrd2^6]NF;[b'7WBX<HJfpJO^j4rUioD:Cr%,al9Zg_JADG4<IgU96!Zl=Oa.4E:+:qPpH>$9]:AO#/0UL9[SQ3=
%6GQkATc#/3LYBU7>-2[4NEpi%1:m9DK12_#Tq5Sr4a'`&\=AZce8R0'PlU=>"+4YfrD`!AO(F)O_N.MnHE+l:1P<"U1f4K?6-,nL
%1P%-VBgJHCM#WRS(,NoW9CrX8FgS%=b!>H6fjDI5QD!5KOH^e\k\.ga!3?LjL?'QZ70+I@X$Ur6bGTt1YM);GO7!P<r:=?q@A'5n
%]=Z/.gb"d(^aWD]>BOd.aT@cK@%S@o6&98.,=i68)=;6_"V*:?:FJ[s,G`4F$Qn^L9d\S>3bske!t@![l3JF$WcX)9KNhFu%(u(X
%Vu*kP(.C,Q7"a>$qJ!p')iHEf.RrI>AGpBpg]D%T&3_U!aAu:*,HM0KePMbT8WEGuim14?TLeCWr8)as&!V@Zf-s3F*=MM;\%"dp
%U$A?Gc<R5T;ma)el\Y=l(@!#ad`9kn7l\p-Q$q@(<LK%(eV<K%U,@2j)J_^JTXN,j/.*01(f+4>_.Cn7*D:AfKU'.-B'\/SQNGoX
%!`e:`Kfu7l4m,/F*.F58r4$j,,d;XW3`u%^Od0nTS7!qe@o?\cI!prH@OpP34OA$Bh8MA`m7ja:>^])O.l)ES6Q)=hH^Ns:78s1O
%!pTaZMe;$25aMB)LMuR@\@ZFOnOF@u;Z`2"&8\r1YIfL+)rtij0e67J[NaT[[jR%Amu"Q@[Gh?!Cl<5RM2O/#&!]MD9;`(:h'8fs
%Lt>NPb6-^[)RlJ8!SpQLiJ4Td/]57i4r31^?@oce4+*$0GkEhYL]oX@0B,T"ShQltOlL!YOZnT5btG<l?8X'V/4-:85Y]bp`^49]
%o9FZ=j/[_7c#11Re>k:Kf[D@sN"@U'f:6@d$9oo)*C\*7,0(ThLmq7Q6EG3?l_KNX>`r<-$T\UtY39pn]6;*ng2/s)!/Cn3N,[To
%#luq")"VY;a9#h@Oj/WIK]l">(^bY4V]^jUrVVIhIMhI-V&2^><G9mfdldVl'9#FuB)<aX@Cjc5V$+DhmO95$FeR'Xn0Sq4,\O(!
%/5)>HM0b[<SAoFKA=GOaTH?dMLMN!`EpE,Rg8HL@iXY6.HETp4?UMqI5Xe?Ok0i=@q-n7!rdT7GJL]^KSm]cu.\^[gOV4grbI(bP
%/sNomhGgTi2`toe<5uhDe;TSG_]0L7*ABEq=ete;3D:B/>;5ANX$<g47oR,AY@'=!GVt.uFYWi_jZe+b)o][bqjsutUF[aCkHg9/
%?)a[Gb[BX6.,h3d*uJT@MA@)/S*7=*$$M3dqSl@KY`]Ea_8LboM:m\Q<NFp:V5n:m8)XmpaET!nmD74p+F6>I,<i=(FAl<DhE03]
%1?9gPY<A0I_J<d/&0f!786oBFl>sZtNe=<n"jO3_NE8o.WMh2*Z2DOJi\>Ko>[;HIZ$h!LS;-$=8JmKVoJ=e9A(#TF.m?'YYU9D!
%j)XsiA%oPuSHq5AAqq#-qOXlC%Y^a&&iTXY54VK0'RLCq^sC"2!W*k4m[9bC8S*-IDTgSB'i*tOIc"d"HP<(gcD\pQp.0,uJUWNL
%5Z,mu.Br9QSIA:.1@ZYQ4>XT(jX^<4`Y$BCLs1PeKu"GZMrh*^b"%6)L1GK=["L%\%,rm.aF7r;>0,VcjFX53'_-E1663)!@gW;h
%5ACn*D3Jp<7l2J[&k*Ck#SgdF0u-At<TZe7Y!maWM&WCGMUa.Cp29#.rJFs^ZuI>RTb!'_VUK<LJ*r*VOc?/bo?eEBEtA,pLu_"F
%aLPET9!/;&AkSQD^,-jc-Vok5OJ0h1-"#A*k46[F@e<3"_oY'0d->Y_G!k\=8PLaDG2mG@+$ZYJG%IJ#>dBbOA`NiZkk>bHk3A#=
%3h?DEi5V2Y([af]."$H%@)-j*NMlBHa&E<Om"rhl$Z8J3"l_,/BUktO]$@RBU,:6rcuin=+[gsSd#&UG3<b_R@pR57TXMBYV`$#I
%Y#IQ]E#:DZoSdF4+.&!Y1r98#Q9$(D2[aA]Lm%MaA,aX4E6T+lN&BtEbWo`LoVouaga=7eJdtAfcV%Up\lAMOe)'$WbL!C,2dO#>
%oen[I3SKTVZCob.Hu4)k.CHFRfornmIZ!R0j\<2VL6B*AUn%\j%Wi1kK+-id(*jL?Fu\s'?'-JV95Ta-KdJ=`*DOX=J2ZhGi#cJQ
%'X-UJ"'q,(aX=uV'3Q4mnq6CRZX(E9%J:-(8hbQI"U^UEX7gS"4nh]*(%V:R,RMT)*Jsj))?S8r6H%T=ZS\Cs1j^VHrBQc4?lhl6
%l<0tT6r//.aB]%C1cco^0UVOC0mn5sC!f>BL:la6/u(1L'AZDLN/P7<NNCWU-E"Q\7Uo5TPik"jbsF&dB_Q1.&E4BkmqE[0;V%o.
%I?B2Lf2csIM-I:DFa*"p&AgEZA\*/4/SI]R.R\R-7ejP$D7dBr(]RpRT3PWr3-I]u8_6O8d^s9%G^]^'650uc+"Q"jb3iC;O4'An
%A8+*rLF;@&.d9rjYLP?B`V4[,!I]f`ZSR)MU3QD\?gc;ZUA.,e26[[obP71[9Q-iibJ,<>V?FX<=2X8AUATp=ecS@N*4@Vo52.kA
%Gpgft*i9jm\dY6qT+oMt,P"-V+;"1AD,Ju:G^#*MIiHpr$Bu*3O:OmMF;*Y')^StXLNUo;.PlY1[b`D\\+/n#A6<RJUPiAr;7*L6
%JCUE&MqWqBM#hbR.j3JWU*KG.\I3ri[ekb^P>hC.h6WX#(tTsILSoR&@)K@0?G8=e5=\P22YL%m(Z^uq<#9HZ@CFI#31#A*'hdbp
%,*EBMmI9Z:3VAbE]=BRLI$$s-Nq)ei_U@3^#HO.?4CcM2!JO/PLiUr_/O3WGm!!/P'On?kGX\Bmo=0+3lVXh=2TO:'7b'kYgC?\I
%lR$o[6;+F(.=d6T'Df"L4O^qiqCV@i.E&C45t0!;@6dLC,jd-7G''T05nspP%h\-QE43RY66Bl:M_7l42:IZjL_`/s\Z.UmNtr+U
%@Xn0D!r!pK)"$f>`V#%)IT!+^<^2?FM.bGCmiC+o$86@H?ni9_*Vbd.&\GeWZ`-X_`iqVW,<u[J@f"LRa\2:j:)C5+g?)IgF9Xid
%F@>4'I,NY?5HLLg978ea!o7B]+77K^*^!14L1:#<)ECPrRES0;3n/`n1J=>cm#@eji8hb+ZYIZGQ&:KI'5bY-V6"cgal5)6@YQgq
%Ni6h)&6C#Wa%?rZ[@BhfVNd_#.("WQ&I6cGglmcOoO5+MBd+jek@@>Nh7LmC!t+duO]mMr?3J)a%;I*?*Ot[QX=J8/.teLfeXDTn
%4!ZJ2>_gqr_4WCe[KNf,8Pr\0>`e.T*CiGX027j]>%kEfhr]Sg/g8ub8-tR+$QnK<h?Wr"/k"tFm1.e"#RS9`6&^nC.9&m5liG;M
%#V2MZX+n49h,SN$NaNKm8Y+Cng^ZOq+J0OSY-5S4n7^iU6D)@m/(?1IPl//G+03\YaPEPDM/67?:?n?G'%/iFas:f>^I>CfbZTa^
%C3<$2GU3-K60C)"bLN4njtYnTMH`]O_@?-2%X$o<g6c'VBoZ^!@:q!7XE9Lr]m`0*C^qYeL)"e]dVAV6>P"PK@q'BH;Q_lNHsTpU
%77;u@dXLnBe=t6!($lfgUt7.h54C:ZLdD#^f[%1r1,L2,i^uMbqqFM?PTJ+*2091R<b2@h[sW56a@4g:7S)#4aQZ[U&:<r&nU@!o
%VfP46;I4P$;2S="$4_YiIMsGbr-57ucPjnmYs]_*TZU;(/r>m$,S]0eN<u\m%s%0EKE>S(i%HDW3C\:.Er_/rm*;d8=V42V_Z>W$
%X*ekI)-kce*2A@gAuUg9B*[uJ>0WD#'[Y=`hRUk=n>2#\i]A(WI\KQ.cBsBpIK6co?UGu?c.@m"L,<c?c\EnHR%6T9::rCSCUlXq
%:@&)*@hKlf+3F"\THE%!WbXHh,4p.;$KBaQnG*6A[4l)/X1n4,M`-i%815BeZ4u1[7e%:M5l)W(WP/R(jPo:3BnPA"%2("^pC3!Y
%C;K^'fM>!P'VWsY#X+KN'P_53Oh(Xg=k_(W2YA#h>0,W&PC&hYF$,11"_\F7PNOul:*(abMpAY>gm;5"&tu<ATb8!Q5j*-`L=cY,
%&r4T%Oa5$WPX2U@n6gn@dUpn`7VT&<FLTD6F3``Opk%^C6rJh9A.6I=T1#[2/[T*RaZnk=_E!>7nk)%(&LOM/&An"8Lc"[B3`E]$
%[K9Y<>uAg`d]n@Q]Thn24]OV"b=Rp`($X0k\1*\KM^t.:iS2HV7VJ!faR"'jb*sh=^6L@ZCT@Ur%*SkJL@59V(p@mtBb#rb\'q]P
%0n@f3#!R`SFgNB!qq)3(6Pp9:fe5L770rDYdB2XLU=nCo3!r'&DaKEu+a&gjA2Z+(TZK-Fc8K"@cSdB[oU*6:k=QiE2s7$dE4g$'
%g)YiW&;GKbbN\(m!,!e:#*HNo<H`KS*H8SVB8"QjN$@siG$up7*(&_X0JWs!Sfu^+Wn<c.bPjKB5,1\8d\nmgC6WXp05B,%)DnLn
%7HUWqT+)YKTY;$^@:n6N]@ZNbJR:DE17/k%IN+Rb_T"ZcOC[;Wc!F"%A!'eiUjpDn8%>$;"[tYr/FGX;;*'GQ;if"M6#Scuhq+\E
%&7k4XY4p)*cD7aBQNYI;f;bC)I>=Q%GfG5AarN'#aBKYaL@_&1fjB,\44t/LZZA)f0u2dA@40.qLQ3-75H9%%^9f>Id!GiT[mm0h
%=fqljd>-=GprL&+q!TH8l&Wm&Mg9QcU\22MD?6=:@>(6r*Xg"$"),nC<GjLTqmq%oi6YHADV/71N*SUJW<2H:+-ZmUk)aFE9FrqP
%;#1PX!&K4^?_2"nVU'*@k<?m_0WpE0:A9,FGMZ]4'u8E!0\-aR):B]]jP_iOao`"B4&A:@S<L0IZ:'mJ>>,T)q2N`f/g_Y>;T=O<
%edOne:?J2]:lCB/8D]3m[N5:U'I6k.&TC_'h[3=^N:h5`(We_)ZL"cQqFAbPj7+T1g^i_iR5!D*!GdD%i_gIk-n94BE<JM-U54iV
%QgppCES$GH-.Q1!qr"&ZRg!%dEL,1T\qUt,:Y\Xca(ulrgQroNB'b+J@]C>lgOFbC2!U%;]ICmc:=13D"Yk@fVem`ECkid4*9cKh
%,1O!7&Cp6,._Rkni`H5e?2>NAR1T^%`D_L/:B!GGT_K%82)s(GbsAoNlHhU!3-Js20[K6bRNWR25d=A^8AjB1Gg$=J,"auaN1ki[
%-GjrkZqU:^&QSKH'(.<&2_!1bl4r_P(S4MkMqnhZ=-i5Pit97[V$<XArN5<53Cp2[Id4b2A"CAM8hocC]s7VYcKW]2!7;`5gXVFs
%FBCW,S'26g(#o=Oq@@4Oa@J*.Y9Kcm^>upCl1.5Fc#Z=V@A#SFe7a(o+Y(bYW\OS(:?<D^=*u*F6Z_.Zk&:gJ"5P36+Adre.1$#.
%+(nV,K<m09T%kua[7'8<I05Uo\<#MqdeY/!LR$3jQ)r/$9b:;Jd?"u@5U_c8WM2Y&;3'+l'$ukpb9EUQgpP>I>@$n99LW@Q!*_UM
%(1,.1duf<a2bWPZqTF<_<"kctrH(a`f;f]'g.Oad6=F,*gA,pJN?uDoMX"?6loSO3_g*1B/*7`3'Pf1g4*0j3+-uKar&Zi50mrGs
%Fss,,\0?R(^7Q$ELJ8Y@5kJLF=;*uHJD(Nca;-_8$HRfK(;Y:'C6kroSUTi#OiaqPO^@b&'&hX\jZGj6NXJXhW[m_HQ'JbFHj$(D
%/7gSZi9^/GYVlJHDdHT]eeBK/+1=uOZCD0-8W(=$ZJuuaF&sVQmtAW@\_ruFL,:?nH;%CDe7b,(nq+"[afY:<?oNmI&SoF\*5rP3
%WC\4tX[`7$dAG1-7:s%KP@69PD9ou;qWT,L2OCkiS&1C1(BX7hH)iuE9"*2#6;Fqo46d?gS^tiJMQKkB1=:#op,K[/$K*;M5X>k6
%1S`G7K#J0;>\:]0qa&@S&!SWb!)F!a0k7,mYp\8<PkWY)4%S/2h"i\S_;I`IO=97Lmu]&T=bi9*l0l^>k33^<8[=*O0o`S>IMs.Y
%DT@Cob?79hgt3Q*3WVfO'%<8(FfGa&PodOfHcL<1F3?Z03g"?'Kpir=Fg@""cZ2eR_aOR8[L?4bi?@`NFf*<tP2^,-KHiT0=eYU=
%\b:L:/!FO'd;S-SkbsN.Z!!A3>E('"*[mk&l+%%Gk%T.C&Ol7$'JkUS2uGEn/2E?9O42>Uh'2'&H*>S`c++"M.*_LbiBcYjEO3K`
%',e5F5%7CtE1HtsRt[.b\S9GVXMC*E;'#4DnYtR@jjXEX8Wg7"/Ph/d=qs,DWMWpg.ld!AHnd;T[77t#W8kkOGF038CNJEb'*b';
%`LRK!r;$hq?sjD-n\[Uu&]BlDRG^sqc^\+^A-+pB>QO)N%+C"EGDUe-."eK\%6]lqe5IG%6S.GXoSbNr[00jKj),PflUt2LJH.NY
%1I3Z[1W6LL+q>\aldZs;,GskMR9:#d"A'5p%Qf3ij<eE3VWDgbaqOM(?ClZ%co(M[]E5#qXsA%dO[oOtAR0s"c=s6Vg1_6L%Z#?8
%,BDsN%SuI`0@qEtT$5a$Uc;feBd#,/@CVq1E7U_H("4AP5;'Oo2@8ia'(e[6@%.[+YcXIW"l>@#_FTt@nPBiH5J5/cA!Mb!o$&_m
%JVnJ(bndSlR1U$flp_^VT_DY>PP;rXbl8(q4<[K8>UT5VU-q;Ug_7XB6K`928f?#cOZ7Uh]NGrHL@D[7hoX(c4'<5#6<0O^^YN3s
%-DAiGO\j]1U+-32#sYj'MBaL8,F;KZcO6a8`_gIDDNV8td;@OJ8I@aC/aK2u7gP,N'5q(?("1]YU'nS$IYhg[0[,+6T[A9mHlb*s
%mb'B9P,bf!:cMB8/T\36h'eq+,=<Bk2ET10lXZS5o^HZ<dg2omEcW!5XW`n:#!'ZWKM<s;Nj1Xj@*h#;gHoD#?bo;"/$'W9d@"N9
%E7IZXge%qBCXjM`C7oE%B&Gc+9IHhnGIukM%q3UY7Qa,3Kc&0hDiP_JVg_-3,EJ6/T-F25@I9g*rU^cXU+D#"X6^j@kWTFK_["Ie
%Q9NP#DcTE$7MLgL$gcfBHG@Ze7/7d]'X0*e\"2"9V'E^E,4PNHa3r)!cG1Qt0T<thiP#<$#:LU"8les:,U1Ja5_frW/(l#Em0_S!
%3!(9eWE[.'L^4psSEfTQf"i/^YF)c2o&nss[S$q*dU(j;<I3"(h"EER\P:!*pQkkqZ7:nC*WdC0V[)TnV0ET<.CR>*[HR"*;gL%^
%Eim(W]t=is!P*XrO_3I1A&AZ7<#bGI]i<"JP1W7d"_:,fW1M!hREdp"lXTVO$:0.*^u_=p+8V/7KfUG#ofSUAZt38)$#M5jQK#-G
%LYlBnmQ1X,'LV$VXTNI%goS!LQOT-gEZ@B.$Cg+;(e,3Q"$574$ELE`bVo<d_uu#Q:D7)&B,(Ms6/?Ea9IPC\#TmJ:mu-HB]+G)k
%0:d+Ud".>`JQZ@N$_fnEB?_m6MfuWofcOb&(,h=:j:?;%F1A\DN;$9/H3ARn6[?)R=@CLUTnBJf9Er^\c3Bdg?j&=oHRTtK`5>(6
%=_+olPUeO8Rl=UZDHj$]X;7sE.FRF7Ln0Zob?.'qDRpPHg[`<+V3_B+ie?Aa_=ks2!3+4PD*^[Hag$u0Xbs'6IQp\"iP(SI/jJ#&
%4i<KgbqN08Am=Rd!&"UVI,>ue%U6j<c".?tKj10fU!`,J6.(VH-p^>7@R2;\R!keQV9Ids>f3,+;eNmnkoleeQdY)m%AsK-N_F!V
%G?p*X+OA,F,=Adb^W61Z>2E%pGKTT(0HjM4O*bm&b)*>mBB`Z@.`mZ)qKN:0n+J"gEc7r]KFQ1"'>XA>2:"LEmj(r#o\+9q$i6HR
%LE#WXq`B'3@]A1kC#?HU\,m1?33E0Y5Jc,3qrJfe^F)HQ$gR1G&gUaPH<59iJo'RIH<rd<Ct0mEj(.Kf:MIO*St9,X/]$HT_CP?$
%Js(']+"UZEJ,!``hLD\3g@u(AB#[n>)JA?uSRrqUYqm:lfH-LE^04gs>kE*sYVN.JP;(M\?dFW@q7UqDC1iapo'"E:<mMkSG<=#H
%6OR)rq*".A1O$`L,n<UnSZ5f=D]"X7U(97P4E4l#.fi1D!?o+(A,MG6r_TcmU+/VkXli'u@bXU>>Ik]1@?"(*l@5QSm3Wb16\n'"
%mK?%0RKu`M\9@*d.+Sf,OD]5C&c-V8Jrh=HjSDrArlG1-(aaRV)>CX_3b$GPkuB!b*58>SKfNDRA9*D;_JEbMYE&nn8\lNeHTlcR
%\?rlPZbS1:OTm'Mkjj=#$JuU?PkK(gKL1'6"+,$>b(TQpE)og%KG>ia0*^18H!h\4SBA"o\.*)*3NOkL@UKtQ8OVg3@DXr/lD`/"
%3[>BJh]3*!_s7^[W6OQbcc^N#$CH@(:*'*)kKa5\&rOet`t[+dZ_b!D=^[<79LkP=rRq!gq9i!9:')uRbT5>j_LUJmnhsSu!FHdo
%)$u1+I9u4W_9=!7P?_1S^4Hs@$o;/-PpD+6Kr]o5nu]GE'3ZDOQNjj;C19K8+)bZ>PCVMH]]"5QX]I"q+\9*<[I<kc),ITapUdXR
%5LR2HZf@RO8kiP3%h.7FXZimO`EB.?B0-:9nWd$/\s&f;nT=Ga$9A=kB0-u8rHT@Va$g\[B6m!i`;:g.IA<^jeoiA-i_eWfdIF\i
%j:^kt+C(?Tb0HcuiAHj6a>cjhptHmUP'3LkG$MXDlk0+"UpKo3jjafH)CFA1bga4OP?P)BndE0:#Ql6TqeV6^O@EY6ouD=9+lCNk
%a+W*f52:;d\B7&mmkeO1OC=G@g[FOH@#RIb-EJFMMOkNilJfquWn[@;=@tkTc<f]jfobZ"a.En2-Q<?G'm04aSVl][I93m=0D[^6
%k9<IF9+3qeh<1e`q9*\`WO$ifF`=f`fHp3ba5mS)'osoR"<3Ab3V@&oX7Q/X/*$b09*q(NH6<#3:FIIk'^4GVO3C%33-IZc^Z.Kl
%;S,;lm!BDN1>F_?ZDdAM)=XK,Q1Z7$V&(g2g'VH&\MhPaWnlnGPH65nZQ$@F?NocqJu_4f]#in6N[G7\'Ddj7@*[gF?:kS`-a\nZ
%$ZN#&DCWt"Z/$e;4&Q,36Kt#&JrTXV(k=L_#jZItY,0g%\Qf\jU!fk,dcqEgaTWsk9PgMQH[F&iU(C0agCu?WHV%$I*E9ara^D#9
%:rZ,<2WTXOdYqb=kP4XWMEH(0_hAlU@'"^2&#g]3U6mfoNjoddZYVpI$AqJ`RX-IO_g'1]aA7DLIYdc!\eM;>F',=u\esIK:F<Gp
%S?Lak[S1O3A9R&.=?f912[=$:mc_L5In\)r^W8g>Q3$#XTH%hoBE!JsTQ.cdi9$7?`kn)Q$d!HeDQdY2P=WEPVPj7oTKGh$"-SGX
%YrPU\*l0Z']_8Rr%;OMa^u9JMo71Yf0.gcWbWS-hnAg+->GbXe%;ZOSm5a9B"^`Pdc58CO-)R,3ilFN''Q*dhgPB\9$,sCQ;TL@b
%LP+(CG-`WoFp!%>HVaaPoYW(q>dm@&C3QAXKBm]%)"6M`(q5qZBue=/ObopQg)D0R8*D7P]P#n'FdnS^hsE1W3XEk*F^--9<#Q)M
%3`uH@ojf"-SrBB&KD@:;RAe'uF0[/<)bJ#_(D;D1A&b@ISb57G3&1W^V=9d9'N<hg(K$]I=[37P9o?FWbUC$?-Q:/\O,ZSko_5p]
%bi&/Ia^hpQ/@"i^DNh?EG5$NJWAq+A8b3/Y)-sV<pDp,U=%6it0<8b`K$k(a&,=fT<>WZ6,i=-6R0T,,G*nVhJ-W7t<Y`,2691h&
%ZA09@W+Rf-:)$q0+]/nEh2li-gVYP\N)F8<Aal:%hAN<J4,d2ZUtkR+nER>$3(+\&Df`KWhK\BC$0W536mNU82EMs3aRPf#J'IWi
%iou$SQJ?X.,^&e=r;ODO@CF)93SNSLn=t5pkQ*$Q4?0K[r%dP<*mcdp_)$u8,c!f'gYpmTRR:iAcq@#_M)PN*[&eB3@`Idj[+`dg
%m,5J2*6-`X5Ak[8:eDo=;6#hRY2JIOPURt(%je+iH&$_b)0PIURTXF<-a+Sf*HnDU?W,'O;G1,iN[c@h&esq*\[1:?O3):2?6o8_
%+U2/@M?T6=ZesG^Ka4MudD+.Dm*i5G?s)/]W'Wo-GL#KVs+%pT;m%ft,Ph9E;pS^_/ju\/_Ds3r#MMPYZOD1/3:>7<X9CoP6Y]FR
%4.RI"kcZd.:T!'1&;Q[EO\fajG8%)(R9-N$^%iYPV?!^]h,8Ge`:@=fO[pR;J^c:Ac:W(G:dA_%//2,59O1gWZ9m0%HCK6VF%,@l
%QV98GpT;BPZt*./86&O$jg@nCf`bN?R1jY8?1,pY]7W.O8n`4V!BHk<PZE&,mVkQUh(:plfn@ZM`SK)fhF@Ak/.S*\L+5uPl#ENs
%;.>_OLF9As:Lk;J+foo4mZ4P%6+[ZK:2C7O.8K&6;O!49-]EW2N;Smn%Ho*Q1W<2An!_!&gl6-W2"^$/c`L728`/>CE]/$jKd#jP
%<!"if;%[2<-_B)+6B'ipq0TmnFECN89b[s&></LpEC@@ZBCnH'7b=NmiVl^+&N$su)ab<:+]0Yf+d#WECF>tO>5e'O[H)Qe0%fqm
%E5678B/NSZ-JC-%m%1FFnMDTn_t.2IoYMr2'G(DYf<%=&#uQ`5A0?>,>/8VU/lK+<RnY093Pjq4]%-0GgF,9Uj,gdq`J6ldRj1*B
%Q9;h7gib#i0]=25<WF$uL.tG7>=]C@74daeVP#mGb3'p?_d*VMTU'M%OC$ASplnO'K#N>#dfd8#4'FKU*$1!^c$Bgq_q/a&E4T'O
%EbPluSItPq&NlETH\>VU:r"3Ac8]:D9PKQVNdJP451@cHrXT\oE/+m+KYeH/Gf")Qj0>i@U'7P"&ra5mZ@eP?go3\1o#J5KoSD4l
%;_/#rPZZ^j$sWW@0gTdFMg<ebm$ADhV6\<b5]Qbl>Cb(aF>48k3?<EX<a@]%bm98n?L7&kJPj6m^dj3`<)4VeX.kO^k8V)eW?SRR
%c/Aqm8kN/)W2JN5$2ulOB:fD-EK28U+;qV7nkkfU@EkLQ"F+?'LiYp8P]M$q9'cn[3o35AU$*_KY'Q8,0^kokdhYpc%hI6/@Agi%
%6OpYnA'ifd6XgAu`*9N38(S7hrTl<>Z"MnDJD6Z!$qT%+l`%$[O9X?cUtQRKZk>!q]fK8%UK!AM$>gifk'[/e_E-qQcL>R'=n!6?
%gRj$OghYP+@3>%ofE:(6?nN]k<Xpqj5J=".FF'"H".UW:NZc04V*5mqjb#>k5KIf:<hZb&</c@X(([`#HQQqY[StMsar`$KCW0^l
%f>BmpW^l+YX1s\X@.kJYLf_EF4;KiiSh%O)paU*GZ(L0&#HY00[@<3tNXeMVhFIRmR5%cVcse!G/Vg*1Wh@c.\HQ1PW42#[V&6%O
%&Q(l8c3-H@?]1]V^4nY7%&B9!^(T+q]@M*#j-?8t3ip+a\SnIo$A+Ug;jE6?#naZ?Vnmc$F/id<47aYak=:39+Y;!FJjIf@nYO^?
%Hp/&u'kY'%+mX]F.F!a?aEHuK9QpAd=E_MeVKhPpr)6AdN*a+09s_,V.#+j/Q;NGsqXAOjr;A4ijZWiDmk5:<>Gi.W#SkG5h1mJc
%E"Y/FUk,&&*=1`b.mm3(QK#[oC5:o1]&c]&N"tk+\-oYXZ]Om^P%M!dH.b%k+V3]=+'Y[<l7o/N"](H2Bt6`S=d\?5X:r[M-"i05
%,'>8>,$#3$O)!Y+hI`.$8<!k9;D^(j4nQb<[j-%Jb>Rq%\?[p5$8mZrX>GiY9i9`*6DR5GbbuG>c["Au1(#0BMom>CQG(85H(Yb]
%]1>5-cGXLq%SK4tQ,!23CLc[.3;i8_VknB,3jADcItT9tM7PcF;rLuE0[6T`!GK)JcNP2YLX$!S`Ef!B(c;^S9J<^h;^pplI[o;7
%QQVhP[8-Tf41ML(9.jMK->8qjOf.`4*iGp`@4G&X>HsXV1Qa'f)I\ZtLXEh@=BE@W!%mec*0I_480Uk^J=Fgj>b1</_b`M?d<o'*
%J>e,ei.n?_2\.NR'O2>5Qu!&8,)$n]U+Ddm*,R5fOsH,78QEotr6!NZL;MYfogfkmZ'\um78()G55D(VRf,+pO6>!O4J[UTEC\P^
%`roHK%c@mu_I5asb"#lH?fdE%e;ZD/TU8jgR?7.h<A;^5[GJC\c.^0j)GUJW3kmdc+6?Jk#M2RYBNHEXDX&hE;;%3D$*U"KiAQZJ
%?`-[^/U0Yo'XJqJTA%ZQ;`Tq]h/URA%13aj%qKGtnmO+,T/n\>Ahs>f`>oq6m0J>AB,<.*(f%!+nM/Ocq['Yp+.dU=FLL#qg&pTa
%Xm&Q1o8%;L!ub/C-)Z9\)g`]&Kgh9YSnc#5:kXl4:2=Z3HtOC]k])QZ#N0!13D-eoU'e*[9q#/$"cYu(*?d(Okb9TOpYiN/kX[-]
%%jbaqkX!#2.rmp[-lW1qRcK7_I[ZiQ\=*o;BtHpn3YPLhU5).O+O2T(nr@8eNpBH\h8S.QddjY]8F*2*D8u^1N6@4bKRPQ74YVA^
%,86,F,17P#`D-0F$dB?Z#@l"C:_4`Z=*K7W#::Wu@N<"((T45s#Ek@!8@G;NLQ`0/bB*AU"2#^&IX"(WQoG=0EHh`bS/NMNl2ENN
%q/UD\8KtXM$j''CT`I3npICceB91hUFR!2W`1Pm8'94%@E&tj^kXa$.0dn4$Gr,C$YI,Eq8(e(?qAjnhFq?u&#41iGn#*<'J^2(u
%@@(]$&[(pHqM+&?F@Bh<65;YoP_Q>62as9!,ks!7Gt?,<&4tU''?WDMO7qVEO[ZK&S'/.%!XXa2cKRno9QtQ,l>d(RdKHC3!dEQ_
%5oIKO_:>'LPjVBD7@p4k::"rt&[>_@m(_I895cf2E&:@Q\jZ>r^K44\)`&p>Su@l*fUYOnR0qQ)c-/1LH$(?96_:CGPBPtH><+10
%Dp@PCl/=kPJpXj&O=0B(&()B!)(V6pg3@\]8f:&8;eaPJjiI<]-`o'V7]fgob8JOJe!;R7#WV!!H_f+\9O.7]Ppq"@neF^(@np<=
%ZKYleIN&%&aa9HAR*Y59&dZo?erLQb(d0XK4_fWYPkeYQ[Ql?e(XM2gd"d67JDrEWdu+?r`cM8G,F)$)Y9r^)+0u[C\BID>(C\T'
%j:b"O4q$hEZ8S*7?<gm=DXEE9ZRQb??@([FhIpnc!eu#>P"cEF`J!bPqBf9FFm;,]*a+;*mZT+p0i@$7AL[Q9\\$%Co_.Jj;\sU.
%O5G2h(UBEWlqgSHTP+\":k-\p"tlCJk&a_``Ri?6^Dp>/8!PGqfG=&bSoS,]'c8`fk(^$&S>1`bd$bj[=\3)nWeBd[Xq"'>55hd6
%<Sqa4'h"As]$h6Rq)%Ha%dBq<3Df\[$i@st:(0D.hSM?Tbij.V8K)^DU:QZ9ir^0.HVNp!cFa6cFCs7pN-E\QK)EO*#EDsl`A/"r
%.'pK1i9(LPUW$Fo,JaUPo%!CZE)n`T'^aT$FLj5bh)[m$8"]O,pl&^42n[*[6?Mp1-,U>;)[A/)bL#>XBB&H83pI0Dm-06jiYZQQ
%>6OT,l!&CZqG0oYH4.>I7mA&7R=/[HPFgT6olddR4,NL=YHH0cgaThWHQKN9B/?[UZ(m&e`l0]D.Fh?@f[/]aa"qC]cNX"m$S@07
%-H!_.AX3V*hTht.V*tRtD'ugLe(*sS&9A(?%K,8IV'3MOT"DAngLKM,1Jd/DgU?l:+*/6dRBl)/goWkRSE;F2,FJ)tS@]G`:/^k;
%Pqi4TIa24eh+'+QGP>#G>h+b1ac!YJ9s*U>72VWql83c0m\&%WR_1%ddY[*@Gu4h.;r*tVPpt\hA+I>srQ!]qVm@M;F16lD9U`TD
%9ZMGH6;q/:ojdRD+>cWq(YGks1hSHfft$Q8AoFgFVPWMb72qf/f(A'\SJLa*qGp6jk35OPH?F=)htOC*R(hT79BY1GR>Rn?QNp(5
%)+L(Y5WjnV,:>f*0_YS3LjIo@)--CI5]JZ6[>7"j-j([ZJ;u@;-1;XV$&S0\d7jCJi7]Dib+@"!aiUN`qm[/1VhMSmMMOdYWtR[#
%/B!?.hC%BP\M&QL-]CZ)qEGL8FA$\2%R*N(ljrlYBgqYaPSsm:LY&hA&Zb:i620,dQZ6hOk,ES;Geif,d//&Qa!GW/m8:W]iR("K
%p-@-dr.RG!)!l>$Op&N0*48NQ3)gV[%M6^#&,@lW25Ln_n'5A*WqmQg\Bn0"1@l(fi\cX]8t];*!#=Ilg]Z7>T_$rs6R!mk478SK
%,Yb"d6Ga'"iO`SXBhH+ah<Z5s0h&`/R2D=\bSJCE6nrY__<=g7d/?]N#]jOcA@*i`/`3]]'UmeD1HIRYYsL(bog<8kck!L$Q_;iG
%6>$PTmH-+Z`qsbflK5?j@bBcE/fZ#IO5K=Eg0n)f&0:$Q-sPM9PWB500<Iah-"08rp0!;7Jf1"ZirO.ad%pqIX$cA$%YtCbEnnEM
%^&A0sjMW\]-`@p(9sBJJQ./`$rPY:d&W*t,(_DZ@Iq4qn!Zk:L*Y5]f(u+:)K$se-H=6=/@jeB@k`=Q\Rhs1;H,i,/.2se(FZ'(d
%1j4D@pk3kA'Ia\4I'DD*J16]fhQ-GZqW=5cN2Z('5YCH8inXBMrV88N*a9t6)jk)cD8/Sa#gRP9J-A&YG&@F%4>KQf&j4/g-c3$)
%?;K_QcHhi-SAJQ%]\Q0-b[k>N;PDs*9G%`97_('X4]hE"9"`_\(LLWY<-:TEIOcP)<eN/I@egSr*p+mL>i/$Mi<)E_]0$H+s5iT#
%Z>+2\BK+1!#d%fn3ft1]i$.')S?F>G(Q(\Um<=M.Y6335"`Y'S`R:g)8ol+u2G@Mi?)GJ&:rrp2&m`m`!&S(A81'C`/B2pW;`%1+
%#HgEDI#Tm)e9XG95qX\]mSHmH$d9/*U+t'a-X)dj#aF3\O!jrs/`9!"G;Y+kPBr@o5ii/oAfK`b+'q7%_2FEU@jld"$eiJ*KN_^#
%DQ0!npD:kWWD7\!N6(OMp?NT;XRM#IOpdJF#)_W`f8K/=/ql\4PrW"b&?QZ=Us(REdDU[rK*o+LRL\!rC>d-_H#\=\H5J+n7p!:@
%'7Z#8A!TARpJU;3$T#B;EbGA22j&\s<l@($T(@VA8d&cn7/l/JY@cTC6Zqfg#t72*^%hV!\%A0sQ.c\'EO+965gqFHFs"_nAdIUu
%G%B.ZImqJt@((2I+WrV+gO=VSkS:Tm[\9)IKuCP+]bG?0Vf;VYUF.AD/jjO.\IX8J;n\%!.dgp;8oE5,91f'/5GNK<]%`"fIYu:`
%oN(MSai\&RZn?=LQ9rGO)X[c04oP2t-r@?r5VFjcJ^E?F6c=2hj)ta/;2q,37'uY?<[6L]A0f3jfmmD'-?T:M&(`5lmG:=%j!%#b
%,qDE8O/#mC32&n$6_K36D1#.BTk$6H$>TI-&3I9]r3Lis*E%ef[nDh;omd*\MFZjaTpG(l[VP(Qk0`DNr8AP`h!TU'T+6`[Lbi;$
%#s#Ai'=]LiA:TS'aX8tL#FGd%fOG1Vm5\e,9Dn:\iW`,$99<?=V$lY4j\C#8Oa+1#%1(S2m`jXc0uVo)`gY3gA[hR#U>t=qoZ66E
%A"IL/e/i!W'jcVL=UQUq5##NtrNJfSb.?D\goe[2B[nGlDg.]A8@lt2)WJ0*KCak6)"Vohj8F)&fJ^oqrZ.=C79Lp37l%g!EEQFS
%%.f2O*@M'pS]Lc9c0#-6F>00\o$sn.D"]WhTh;aN#VtmR^Th3S04[Kgk2YQbZsc!WKgai[,0,S(0[UNVnTi>Z$HdnF`Di\p#a'Z/
%!"J'uBg9*>R@Q@Zq0MCW4q0YZeCtbg?%Y6dV^Z/<iMKLFpk_+nicNjNbtuV(/boAN.\&*&8lueEkVLQF]Nd(]!@CHa@;`08j_E:>
%.FBem9)3U[RIA,"WL=6^PEhNCjiT2`1F&L8AiK:RA#3FZ#BY4[(#j?-C$;1TQ53?84E[S,_fFHkEDXNR>2#?'"$)6\<98D#[sb)U
%K-jQ80II;56ccs4k7"_>`6gK@$rZo0?IFKEZe-\PQdI%T1oC]b9u`SJbD3@b[A>bX=7]CbA-pT;F/Dd>AEZm8U1dr05N`>A93@TB
%V[6?rNg;!u)NYIfcOgMkBNiFjiHXR=Shjn2Ru1!b9b?Trk^/9a_8d!"YVeR-N:t`e-pA:'JT8TjEa,(6JD$XJ<3/*rftj"<aMTk4
%Pir^/kunh3A+oD'EttMnOO";A+>O:6m5W\@\uP"^E@oian?NRcU+.g@>iGQI=6R6S[EZF[6'#SS,K`q&N4mg6chh\Qr4&iHc=^eo
%a[+Z7:d/B*!TK>3T-QM;)?in&>!`R.'W]TcT9uUf;N<%u"[#T9T*ehVM@8/D8c73DLoDQ-F</Z"`oN3s(K-gMiHIWG4YI8q8p#b)
%NdTR9AC+cLF1mS+e)Wbc/):h;J-*&(Sd<7sW]o)Z('cf5FkfBS,VVZh]`S$I=,:Uc-snMJGQEsR66b:&YP;"cDGY-i=dF;tRqI/I
%G*LS(N>`^`KTfRaKuH-*5851q?"mseQ+i27EOK:j+IS<'.83<]IIDg5F(:+:Im1)(dVo;1L9-cYQcKjn5g%=3(Q6NUN!396XGj0c
%:G!oK<R9%n*I@hWfJsd"n\+-+jYP\_0#C*:X2=<n(kUU!;M#g8AZG5k'H:^iF*8P\*O_P*Pq5Wp(H6^Ylpk\9k-.5s&K\fenahE:
%CYb5i05!Q+&%uNFcqtH$YXf$2d7F*_&gJ^?2=J&JBNnOkfJKE"Ne^U`F5t;=Wm(EH5>@oC[sT:n_omh=2u:P5j6(ufN-&]X`cX8k
%JVj)CAq*XO,+t9d:Lkp8?T.4eU`0LP/]Y)S>*:)e&%PSD4H.[.5`s4I5,M]4!NmC@*qQ95"o]4i7?)cE]dTq-U63dAPkn=C\oc8[
%8-sSp,2WiGRS2-a>JEQ3=D\$'NXLcR_[I"LPQ@$:LhI<.E4PAOAE_9U#+W`t)h&Xt_h:Ht>.!fj&&c-Wq#u-0UDXo0^rjYR""gGh
%fZP&7*2!&)7IgkJ>;!!P3OT/t6p[;\$,+;f4Bi=iQd:\pT;DY6>J?0sj7rqK#jb9HQ2B_NK5V#+Q:+Z1=[Q#]CY2_PX\Fb&"M#?i
%Wp-Fh=XGNPEFI8)/mkj8_p]Xb3FliLC4'L'3kC`/\HWp1Hlr)mk#CYVre8[_C\Q..(c3l)GmfP2K.Eefn.YNZ_UPur:HAB:AN&q$
%a+V!C?+jW]T&r+<(]Dai0g4%:c1TOCS9`0LOahJR=E0jW(f^M1H(q3OWaR`@EJP=n>s8=\!<TNGb7hqmeK3Eno2Z0<RkIi%#sE,s
%YFD6RQBpoQ1E[WYmb@Zu)Ss)@qbSAPQ"nl_b(ZA)[d?D`H@[\NI&+i_!D?:fjpA`^RgKIkq8:Z,_!>kEEjHf`TS'5Ul#+jdU]%]k
%%EK"sF`773NPRQ#+7#gq'7;"K(=UbQR70.jO6FKW/>Q&9c/pjJcR;OC%rj7:WCcAdFDZ`Y10*TZ'P!QGfI2):X/q]i':1%AasEc/
%5Y?+L1$Ter<@SjQi(<!-D0XgH56Mh>E+P1E?\DVX85PKJ51gk'5r=ien/*<cp)hBge!3GN9aWZ)-c-Nf_uK+D7Kbl::CrM#'XV9l
%7ub36b*B@&EMc)+&5UH?+(ShtMKuG\$ou07/UW#6PF-nlJK9SL]DP<38c\B!m,?#p[PAseE,]hfQTgB"e%@Z8ig=AT9+fm$Q?`r^
%(3p&+#SR2X4$5"X?MT_j.4bH+F30MQ?LYT/<Th4d:`&jUfY&q6ZGpr'/k!MkoDM.Bcr]8$mF%cjg'DS;SQR(WId4EFqJZ`@?in[m
%!&ejt`Sr./VpU9Nk".l=ri*a(Gk*)1np&HHNqBjOjqiJ<V?\#:$C0'V@f6lqVbCuC'-huGcrE1a=P29OO:UFB`'Us"4QD0KdNt:-
%i)lQ54J#p-@u:3Cg++4tEpl!^n2USK=tb:9<3:WhlDGI@#0`kEVJ7tg/l6>9R2(A&ZM/GDc].4c#Jr0K:lQ,(EgT2/U^s#!Gt6.V
%M?gHf@iR]";melk$IdjSAT]"AW8=KO"CeK@W[is!:`G&i7E2scNYHGpG@id>)9/>L1dJ,hS!ksZOVU>3ShKVQb2kjPSgZoXpjT.U
%0U0F"MWmQ\8(osCKirtcPNm%f61PG"*It.G`rUZPAZam%TRD?+-(uYp4*RQUG9)a%f7"*-V;raV!43q)#N`$QWZrg3>B0Q_:^DXd
%eRUZkj$b[>Xe\d7`qK@>*i,tDYJD9&PeIs!#Z/]r-8OGO[&6`4bMjK=O@oc6Wk[9Jcr\D7h5j_7^@GG#l<4jCMON&<@1"c?VN_h&
%.\\`kP])p5\I'-<[KY+edP1AcJX+*q3;D`[4@ZAn])km<rZF-8hTYk15M9FdRrK[n3f/=<s/ZjpM.-LjGZich)Nc/F;>.%:oT4H/
%]%pp-^!ppb\@.jP3W8BMj?$IUQkD[I*#BUEFjeM/6=B.6kqf/<i19aGb+%t+*[m3L,[`UMY4F5('R*uCdWioXSj/@8P>OkI-rm#e
%U,"!2hInlG?ne?`s-$PdP#hkrQV=Ca>,+ok@Fqrf+'f4Y9cke];3JbgRoADm5c)O1IC)j1&N;1j#bkO^\cB#[@'uBgb@S2*iDJ]T
%:fd1.qA5t(UlP`'Jd2QJ=03'oB4e-iEf*2e;neji:mB/9TgmimOC=)(Ot"JP#PC!@e<?K-8^OS[8$17/C"3ht:5?&+(^uMC<.QQA
%<pj7J.D)A^,\II525]S[,f\ZD"r'bo>V-gIGb?JOkK:q7cfNc)H*bcRFdRIfMSmsqC2e3<=tC5jN_7M^Gb=;mkFehp+6ZQqKEfuM
%ciG1=c.+6fU%#eeMuo2Q'87Yrai:VC(u$MK%9rZ"$\)Ljo&@4!SB"j=YR=&&oGFVThit^X&'[B9FTkY3nXb;S1r"8h*OI<`4W^,<
%46cG^YQ/i*Zq=aC!7s4G_W9#i9"EuaRb/Q<j'30a&ZU0$BTj8HlfIQnWJWEMpO)"0l$]d^'(j"@05]LP\QIS-\54#>oU:uA$9N>r
%Wj4Xp<)0YJb`_EPUtq9h1r=sPL0X'@h'I"3]%KDJRgY1XV0bZ2ho>J+lMqS$S87%u)rW@OZ*:#u0Bl6Ld,IC1Rji/q*d5nfY>#79
%co5qP_^&g]m=<=g,NC0bkNMsoFk,!:*1e7\@lXnnZOXV:jOpYnN&L+CV)#c[>[hLhZj2$Hgm]9L3c+\%A5qH3+7%t^*rKYe8u7rc
%6IJmc;J2X-]#"6Y3:*Xb&':'1*'MgC#!<2C7RTbg5!;[,YQ"dXS"a)fBAsPUR$/Pnk_sgkoad!N#>Y2u%7LZb?K^%OMjn0W-oul#
%C5&38#k):%kRb[\Gp#H`1lmnd:RK9QV]8DnaJ*F;/suOs<uif]QonHd'U+!'i^e>Ajp`+@:%RWQ=-4*X4!H?^1H@B8QlKJ\c1T7:
%`d,W!EBbFp@+;(TgmL4f!c'b7AQDSDEX"6'TmLe$V73Zlq8a?\/JocUXBS#oK40>\H=4<H!\il:Qoi`Y?+4(kU\+bnNm:k+!POKk
%A(7M=I_B2Q.OhDAf""+3Uj&]!i<oN//-ha^4@<*6N[p:#)Lhn'&>E)KBDrOp'f2$)%2\YM3l*=3'fTBMGouc*Aqd"D'H\R8UrRL9
%)`Yg-RSQ+-n?fDij=.o$;RC>P!_TNd8*m2YhbO18rM1b*So2*C8*^g`*M'Z5"*tp`a-hSPDRB04Ceu!GEk2W=nEMC6mhAYGLLmNd
%Xa"6/\A-\<"]rF)=W>4^,-p#9JP*$LVMQ+pc2"8a0V5FO0'pu3JnIU*/_>O0a8VGhaRSEG#V@gP>*!8+]t&YR2XM8->^/eMc5:`V
%,<-2I$kK=0+Qb7!hV),*[os=/'h)RokGOqq1+cdm>:(o1^>RPhFiuV7\$:FS4[EIU8@%,^p&n1<KNV8!rPQLN%iHB#G,W(Gjn]q4
%kC>2m$fS\Y$$q?4rCMtRoQ!Zb#X?cKSW&g%2mI#E$(ei#G>+cW+8B@25e<2?WY6ZakL!=%%#MG@XHFEtVOh;AY:?c.FN+nCC4]5]
%b+r7-Xf.gM[6Cj^?^Bn7nkUpj[AI.T/@Rh%eBrQb1naTJJ"A^-P9c4&\uWu*_Ipa`T#LA%%Vt!5/>Z'*i$u:$HqUuOpTm(*;./p6
%b,:STHEUo&QVFq_=DiQ'X/#!HBg?THs1RpC[p$RB4.09![khm<r1<"G7oD<Xa;u2JFo!s[IDZICOca52&p,uU(*9q+=A1mp*Mf=!
%Ef]Bf0'pu3JnIU*/_>O0a8S;8:YS;fp[`c^!U#f$,Mj#:=^X3R"\n03anj/.FPW,V5-2q7XU"QGcJA-A3?d!+(\VN*_6]p&Q>8bS
%A,jU9\V<`=J"H*^i;?L2dAj4U>hD41()?0BVPeHa]Kb\ln)Ns;!dd)nmeZ1:OR&2=bH3.:G')Oq%HqZq+(e;5<Ws1X2oU<9:mMe^
%/Gk5LmpMh3\DrT4R-as$_(X?_rj.'0pnr?mk3WoumIJtb,#Sf"ms."E##^\,[6((Ke>p80Y90p``U2O&RjJRAC\3%K5\sIK/o[#1
%^lhhb0`Ot)gQ+]F^PTV)fhPmhqV@uAM0-(\*4$V<J_7Iu"h*iQ1-bQS<h"ZQ,kgZ?c/5W(`6I/Yq8k]S90cm<%'M1f"D!+bhIDVY
%,m[,;edKSJP,OM?3q%eo.9;;TC-\t-n$7C%lWD`o&sShjkj73<h&OE2BHI_Q-ir!mYq&W#//8J1eWWfH&)UuR5[AYqaE%W/R-.o6
%%K'd>(/h16]lN('qI*?kUt[IL\%C#?_0NXQMVj'bYHn>dNGpu@aV!0Ojkt\@Yd4sa^oS4`=@Q_ONcWI)j$)6uB&:`YNBCgmr7QJT
%lW+<aD(]pRDVZm6n2ARQdfN8"BCu1n(DC*C)rrLYA,mLY<6>!((^Ceei8I><)u"XPl@3idL)q!Qr@m)P]%qsY]*k/M>dp3?GT6*9
%,(_!H4E*E:Ib)gY72?p+BV[<:&FrH?_IZU9M7gcCieOggGIVNuh(:p1p*FTdUGs'BRlfGdocu+J)i/!\mb[lt)T9;Cqe5R06,p1N
%c:BI-3^[bX8@1?V#U(87K?=ndUo7M%h?Ci(*V"gFmu$+blXgNEUE5H3+i;3@.g1";G3(%Qi\R*QRm0RkLqC>2oqQ.95u.8H%p%C`
%k;4N19.I'l#m+*7ak,r*a5n;PM9.i+cefeF0)k+g?.4sSR4u+qb7fiE&Ju&-/\sS=\V&CX@.JinNio"O!R4i_O8\%n/`ETgaCnPC
%.%K3l\jf2W.!NIJIoc8%HuTf-^U;U(ek_td:\+$ta+V"n(g=`;;0q"1A6R$Wer?[%g!B?724Sg0[ul014+3J?"If!_)W_&f]!9=#
%!iCFI@]h*EEZllnYouDKp2Rpi0`l8\^85RjroD'.nRD9p\RV]_NmL!cpKQ:Fklf==XuiN.]FFcnECOp'SOf8c.W)c#l;#m#0K#>"
%QZdtRSgURl6,[=.+Y:M?k6nr8FitH/8Ja80BBt+_Ckk64r6mH,O6`)<bH3FBF`cG[%Hr6,TCsOtgPh&Wh<^Xr:DC/iD's,5.VK0V
%<A?R4R]%(rKG]"EiQCg\A9W(e>dmAQ@Kk$?ODIFu*>4t;rR#LJ02Zr(KCak4(id1^n`F*`'o!-6(8R."dW`g3--f"F/8A+^I>(k/
%*XOD3@]r*Q4oMUqN\'"(6#P:!$FG[L-/T1M/a'HG6bISbE;jecA)?Wj]H<K,4c1BR,^I1SXo!jC(m+p=gLj*3P*GN"@<FJ\'Pj:j
%<.Y:FCRue"c'*hW`MVD/ld$$<M3@bGI[\83n+]*5a5V\k4Y#FPamsu\H<F:n@d?#\<8Pk',>T,AQ+5$%Vo,moq2PheDsdZ'*C"H+
%WUOSL9q'k`ouf4_FiUtRIl)Ac[Z'h]B[!1^n4.aFWX=;LA4KI[R2H@cSQ6uPY>c#C3B]jU?a>n,LFQ")apM':lCgkl'LUAF8sBIn
%Rb*/.p/I]%Ln,(@po9%$66EP__//:MOe]PaE/5,/\dgD*3ZD1Z9&;n5^G(iN52<fTe.A(![PGD+q(SJ><\ANPajR8rB$MZNa=K\D
%+p`k%iiu!??f[hSfgktE0dRl]LoTZnWD5Z#'bW/'cg]FdKBcmnJ.EANr(tq*f<B?91p'p;_hSh5IV>&i+b$@H3kVS#_g!-h-RTj2
%L)Q8mPYprqDBn6T2fNIRWXE\hL#H7BbThRZ2AVTq8qhkTB6)k%cAL<oi5X1^:hE.]$fm)"$5pUIf0XdVD*Y>sT&guOHEMY]3Y17@
%^(a/FM?b;e;1V`+Js-cm<!UV:R2Ldip=iCchR22+1+]:i2(]mQlDM4K#TF=$8F[[S$H@'ieOu[$/tut"'FCH&]N?G19;SZ;R"9GM
%a_7ueG/eVma&SYK>kN^[9.jNLWnKh>CmNYFJZ!Sl4GD$EKY^mSh3>&J]$'<rLQR%S(,]Q'TW'@GnQT%V&l51a@=5@f2(Gbd;\9gC
%:T';5[Mo'J'T8O42<Z"oT(u6+VcE;rbjW.dTOMI@*+5:*j:#o'hJ#4dOPDIG3B@6H4eJ&F>rtlKoDipj*H]M#au%,t#Dd)J?Pr*b
%1tY(.-.APEq2&!(V(+!8A*--F^m1t#V%!4*UmiMT'd%:-24uV9%4=LHqCUYB/KnXf_U4F+P/&2^V`VW+aZT$qa:H<SQs98/C*Ert
%i&5]Hi.nqVIn5e)IoBq7[80*k9F)4_i4WFm*<]Wnh*8j3NT]<uT1flF=gN0jRn/M"_dfe^DTWS!%f`%pXSS,Hf=C8>d6_UMpJl>=
%j]f9_]FX\Q`(.YD<\*rZ_(#2T,ZeR61UaoZT'b%I-K>"FF['j+1W=c/0CdMF`eI>CP.SB&LT.?jjCVmVh8B2:016W.@F5\T*Be+<
%DAJ#H9;sp"8Chc%k[*^9f]@1#[!2)i9na=$:\OAo#@MQJ5-e+U`<3@nMf8gP7HZ!9f`n@W*O9(cliAjjR]bETEe&D;E`g0@Hdqpk
%I"0X[@\Wn.N_"<WX:C2S=[id9,TWU%#U80\=WS-uO5_OmclnsfFM!),p^U?Cfks'fp/Io,qH_`\l#$mObq=,30CH7QnM])sEtb/V
%fcFR&O_G-J"T',WQmc=XY2mm_'\^K`KI$_HDW2n^-tSQbdigDB+9Y2Fa?JR'K[MC':3Vg/mg%L(`6.a+\7crK-<m]Y4^_4nZ20#S
%r$^.$@[!fg+".iPRD2>*C>\/)eaE#oTrtaO([P\l0#07/:s:%==]ipJ+obUijHn8oRWG48\!J"k9KP.tS__XhAKK,PFJI?sbmLNV
%c=84"UW/)n-OmI]9WtOF+"&]VmqkM@SVg"d'u/Bjft"`>lE!u0Yicr?<&lerTa`:\2]2*S?"rl"2<<G39gCpV`o(%8"")^d"$!l/
%ZUtsUE/u%r^CI#o@Gc#(cih<tEkPFA%lrge5>LA0o_BT&&6)M$J_0[l?DoOo`EHMT#]ZD&knfC<]TsmhFnt5oS`%f/Z*RIG<:ema
%Lp.X-j[CH$`MNGT(Fn:@"N/k[k<NPA@RjOpHA&@9HX*p8Tb/T*ijnSAKq9\r8dMEq+%H.lo07Z7XqK#ZXmG<9!33pbZh0eSm!2%m
%2lP=Ba3/<dMFdGFP`4V1HCu[H7994kBHL-HKV.G4]85SUQd?VkR[j3&rti>t'W$]2]Yc+ECuu,/:`DB"?rG5YogH'rOjKd;f1U,=
%<Kprgo^lPlT6V=QM,CZ554W,[FI'/%=qL21r@S`($4FRa\@>qE&1t?Jl`dZ5-B1no:k$<N`6'WTI[a0N3V;"pbMof`A1,p.3%a[/
%K9^-U80Tg3oI/Y"@@NtKRFP+Ke5a]n6Z"X$ZRWot@"trGg2'e)$1e#8JFWuhjam_CP[;fO77F)D>F!'fg?a?I5,f$m\(9YX+PlbI
%.6un2f<BG_^#IDU;s0\.hk)6D=s`YX`C>SSDa"uem@`Hn':gH.Y[6jrM9>r(oLs0,,S)4Pmgg^0eLSS\n9fMe_X7976B?q&S?l2%
%1>bP*/7*G2rf]t`*i29g0_PNb,X@"3g3>r4f;Y8jQ'UB;8pF)ML/qGCO)s$1iI3o#F\c+=.^RNpN8c?1ObG[\:-32c&O_D?!K$?<
%ka41gD3fLqmk)s:VL\Q`FO73rFY`ct]e^GVN,n$_]A,<7RLcc&a6)r=<F#=@_CFodhdYgcASaiP=tT+XSBU"!LNE.Ha7hiokhE"O
%n,#&D&m1e`=Q6fi:.1'T-kg?/9Z,9i$NMNa4<aKp=aO>CrW=KG@BZhrPE&NnSn:hc-lm%h77f3#$Io`_gqM`FUG9Oc6i7KAMBY,P
%]@<;.[DcQ/FI=D"m><P6rWmPSZX#Rcg,8&9X$Hdg?O!ueZmGr#5Wi[eA4f;k`17oq5PWG>W/!Z2k653d'?f&2KgWu*&]c1J6Oja`
%&*Wm9cdkIk*Mh;AWCfP2`-t$m3(AaqbNQae`c2"<$@l1q78#sM]S`"pB&N'TPLPsM#@7UTiUpX#PW@rOe'!DQnd#1lhE1/EBhRYd
%5;pWCo>1i'B>6:),J7$ABC9:BgP;JO$6Q?DQ_/ab<@L_&QuNN5G'`i#R5X#NP-(L3'Td42gK=PjTM"tE5E`hp0bm_fRM"Fd?IAcO
%5dBFnZ&4Tie"QncF8NQT>ZirHokW#D#'?GVR%^MZV&DL[Io]&*i$^c"Ers/-b%6duV40WMFHF>@$9OJ.%F/!SN?5!A+1S5RH_T;#
%`<_Mt+ep2*+#FUt;$e^)r_M-T;?n0(Cnk*r)'/7hL-3dP8KH)XStRkBPcGiJ,mMklUB;bk8j_0\q3Z?+@e5U2.QmHE`hVOT`Ic;C
%QL/52[P./KHG*o^]8TLhk(r7<HQ3PTaIKQX=edo`Q1?BEOQK6@ekZ"p`CYBDJPqQN55o<nIVD65m=tNLG_TS.0lRRsZ'XJIf=17"
%YB[uTGN`PA:nR32-LLu:3^C?&on&+_cLN"9/,J`UIV!)[99^on1*#_Ck"!td(IY3p9h`W?'%V=Sl6ad+HA!7ok<5gUW6V474HXSB
%jsr/".,_?K85SqfUp$E(AY[WSfM;(Nfo616*p;]DCHbX4<Ho`Q^YgRHBR8*.;6F#MdXcg,_qB3V^u&"2+Tl`@!SP]N].18B<\7'E
%FloM][O9cCHc'hb:(I%m`$k4B:\^H'YE$ien;=,'1JE6$dEZ4l&O9#Q7MW1AD_$ZV`s?\kTA_G%/F^:E&"E9V[=Z1]MfnR#jP^fh
%eT*94f4cSY[;7uYh+U+q->4+o;M>b0/L9'Sl\L-hQcn=$9MlsW8nj7VO<238p%tY18pkDcQ/P'PQ;&_agm5A0Q'M@,5)#Gi*c!VZ
%8a85FAu[msj+CKXYhO60Xk#X>%kD"4mZu!b'+ErACXFYe3JXm"*I54@W=;V90@aLS0jc(?+8[$%+E[MNn,ja7bIC-W!9fANDst=>
%C!tZF^Yj%JW^ra9M[V\(g!Mj[+)Ynd,\aI$6JR>/[k#?@okhfu_XZ:_R_R-_c-]</EfS>GFekIlr?ncne]Q6Q*Ec4?,B;i2Z!QG&
%UlBRa)c-@sb%n6mVAA[?_54TOZ&mYpI-FfUUP4BFDS1u$o=B]7\(VA?8tUe\c!ET-hl_!qD&FI3.srCR0"P,tKrA_E,m(^Q='0r%
%bD!Zk*HQk%]JK^3BTkgM0?AR?<::,Efc"m,M-o0J$`*4u[8"(q+?X"YM$CcH"sU&9.=B<bdkM7Z6]Cr9GYZ<J\d^\@NCb9MH4Pp'
%"AHI-"9_s,&1L<NQk8B264]5/S*5+ge-s7(5UI>2&(qh2pEdn9oP([%Q3j^)_hof9),DO86<2op7^uoR.C4Z9bFM;1\MOFbO@a$Y
%h)8UJD$2D$p9jTPq;X`k6rlR!Q:+21?SHsg_O-hqcBk-OVg5%0pqZJG)f;E6449qoT]K"f<5<8-rPm;'4!YFNpl9)o9*n<J?Ech]
%S7,Np^Qco9VoN/KMs[tEaNbpWEL9sm.%N.!%i\42ekjW[J@R&4c3[4?:W!J5gI5IY0UsgUF)L<^aIbl%Z&Xcl33[GmY*?c'9ll[9
%n))Geoa)_+I@;jV:pCJgmAh?l@@3#&P[%nP)'[rm54nS\ip4.RMQ@&$Y$-&NA6aG::eB+W$0T2c+-9&OkG=bbhEb7fJV:Q:*Rl+N
%=)JAH]k#X(M>Oo\)3d1fT[i"C/J<"ZLYTfLAiG1"oREsA?uBn3+L?T-U7RA@c3"2L8=.Z*M#`O("PUCVPEk=am/Y>6M"tR4J\05M
%eMN+PS^)[$J4]osX,n`dA2NJ(C%!d(V[2C"&+ef'"3cG$$'@8IHo#aor4;2#7jF\/,T/a;:IM19Uqi259@;kAV'QC9JY%"_ZH"N@
%aSWUATYbhV\E/2($-RDka?qd,/N&'g(p(2&Ts)M;SFH->RrJ4e>54C)fFeG1+5O0d6N61X-@D7Qq6N/<\Z##Ml0e>/aY,i*FD^5(
%IsKpB:pDN]?L.>AoF)4njtC7$&+.#mhW*8;AeU\nI%mql$&TcgXt?,;cIGI;Al%8Qqt\tS<R8*8S&>h+W>lQ\Ih9L\'?)qQM?fs1
%%3?i>Q],3f92WL?hdO*Z##fnOHVc8IA`"mK&VaXOV$i)sl']Ji`=M_sG]Uhi"^X\3pu,::qg<Ykk7+DjTH+"`0OfM/#J,h\Q3KU^
%IUNGS!\::[kdV'-VGJC7XJ<UkaEg*>P-M-3l=&&NfB9+<d7;LMFm<\&\qOt<Ho1Xc$G+UiM;TKCP;AI"(`BHG71RW@A]u()6C<!S
%=n+kRI(rj&T^g3/aZ0ljHp-YO;17KTbf#(h:lk@-K?Lei+Ha>%qjsH2XRb1VY'lb>?_<?.(f4&FcSGV`,ls0SO@YHD*:q=n;5NYc
%`I/W(np%<1n#eGgi,Me+8+@^72^U5*RkL;pP1;gLAiJR9qYAU#Vg=`#jQDA#:#j9`/)'2.n(?9Z%N5b=0%:,c2-YoHHdG'FZ$e6u
%#S'_4*A'&VNH]JtJ7sRo(A92R+sW"s/kR[,cAN+VdT<M?gf4i2X[cnOs$^a%-NfaNMGYK.3#3bl*#*&lo_XJ'`>$%oGcCE6^S&#H
%[31Wm')OFekaGdG%$cYVIe1Yi:o#>o!@_mr@Umh9%Z1C0ffY`:p?7eR,:,Bi/1NZB:'3X3CD$*[Kc=PQ()]0_iE\GeI\f0Cble_'
%.SM*e@E5ME*mh*E+Q-TW6,73gSXVsX+6I3Z4MY(HS78L[.qJ*].U>,VC+IZXm43+VKYj\qXH[6q`3*%>SH-o>KBSP!_%;:XQ@TQ]
%CuY6E]OVNjcnE_mVKk'N+U+$&P'>r(ElXLZFr60gm^!lt"?j:>4Y^,=N9aj_9U,?,gA`3BC?Lb&?qNOeN"c.jFi!4<@$Is2g)EfP
%;ZE/R?#$hu-\u564?O_sa:+i2fL8si)(\h1$]l`/qVcs0gpp09$'V/!)<3oYSu[iQl(m2?5'+i9SQi0HAYc*/*<Mm(-]!KP+Di8E
%1*.Lc,0Eu]CkHcEkR2U1$ro;Qd^:So3&OQofZe3EEE5WuNt/'\3CPdU*^8M\0EB$IoP%;RZIXarXb42+E)Sr`lmqb3bC%G#`mC&^
%5!7+dP`_Wpkn36%KRH6&Ho:#B;cQM"d&YEnQ8KC>/L%FBba#(.neZ*Ij@#3<&IT]*pPbY7Ca?pCqE+#'0r7*_'#/77X.'E_DpKb]
%Wt-iMb'9%Ta!O\X.kn1!*0@I!].=GZTi7pSq:\2coV@I)2MDoe7j^&SS1\B7O9`8J7Y55JIZO0:a).2iFhG\18;*&WS_r>('YMJU
%2MPps6548fJRY?2Df#lIDWKs'afc%HIRRllI_a)n:>JS0\rW)<A;re"lLM'6id9%P<+Bo;3*P3+oht[`R8@"Nh5Z^D^3*g"nLkLT
%[(7AmQ>;pVSj80V30N375K#(4XHK8n)u<WLpU*_e&BkVsc88NHE,pKGMH3+!,5,)CqZKI%0G8i)!Fi1nV^3#?dujaZ4o4*`bUUtB
%BK(8J1.t_?!3!DFVV51ij%OS!9.f7_i4:a@O=d3\YN&IDG3d,MV^pO>826R6pkYgTV_r*OG5rP6E5U)"1`Zf,c&?r75%]:ER!'OW
%^P0"[mSPcT46Y^A-Q_6GFc],eZ5]MW*NQ>`-CKp:BpPB>VN`oWpi8Bck1BdLVirHRTW9[ROS&QT6da.ec+G-I9kS"X@0,h8;4_-6
%I&)<W^1AQK4ek.2Z[YAgC)k3^&u0q5-WS7u:jXK(4.Wud9dRa@s82c]TgX,n2$[G!b?DE(]%G-(^cM1tOXB+TY4\2@:XOi!s5@0f
%oRRaO*C\"'mr"5R72@Qf@hbFYAGTB!Yammg98&<0]%rd/7BZ3V].SmK6k;Z*KG1558HW\[Z32k`;!g_CIO.7Gc(;hK[VHjFc"UKA
%YCKa2rO.gQFWE'BJO>W!8^_?rMZPY?q=Z."C]\_1C[C*.ZO->n;gD^m[IB"Y!@J)PJPrb'$;>j/bS6i=e?6:).RIdEUK4bdi!N3^
%,VN*NP:JN5<<d$MCSYi*-eQ)=r6&)u8"uY0)3^!9(VQa-q=0\ieB8&?%ESZ@:2+Xib6`'7MI92:)Q[+@IgW_Os1b[OC"41pY5<tQ
%%sQK10+.>PC,mnY^i7+J(d'lYBSs77[sR<[g\BZ1k7NiMX,l,m5*]KhPY,LVS2e>:'5i\[i_FQ48?9T]!;TKIE+<-_*Cncs1@VHn
%0OIX,MOe/FAFWq"ma*Mr5Zi,i$]f:DoMt":H@PbghWrE8&%$RQO*-M*[7qo?m,#CM6TSq>\YhPK%YAF*0pU]]7EhDg,n[nc#>V7H
%R/1B"5%JOTPf>e0bdk0O?VGR5H]gT(6KDN@r=c@(EH,/+KTuoAdTSk/%cuO+3S%8e*iObI'5W%UP[%P5lQW<Vm9L;c8u'gXldCl.
%*a'#9@#W)AYfG@7eD3qh;pr>)A7W49JrSiu*tAkb&P8lF'V^i4M4ZgN=!O-o)An8pnrbc[!XRLQVGr)mN:$T%ib?"*-^3FU2G-/O
%_i5^pnE@*n.SqUEb;d@-W?:W["b29m$`&2G#)`22i;,ldf>T\W7\u,>*-aUk5bu[<RV(`^UO;o>L!%J5RHV72\Dk1[-;,#!NFD^i
%*Ar)@I8[\KlXFIE9j093YS2KjnbmPB0'M?!F*Ier8?Rk40huYe@e(DNAm]hgO=K5fH7:*pdbpr^A:OgJR+AesZNSFMItLFA+LU_c
%@_J2hBA'D(_Zu/eK;>p?8I\FnJgk)P/F<>tVJ^M$9Nj75\h=Z)O3+7pDp-ASaA50ESD.#]#uL&-m$o7_BBO3M1(roEcOO<eYBh,p
%l6cp<T&@qn:;L0qbkSK(N[Mm>n`]jZ7UNpeMnanbhNMH.!tOnIQ+^n:o,1HJ%9k]uX=;Bfa5LQ9PBT)Di^\?0DCDHC=u)bZ0!]sO
%*1a#":Zs(?7!u'aMYsUg:0F!&BH3\4!h5l(G8,Y+_9q,W]ScU8J7a(u:s(L\0&p'U_lFEo;qfu/i:aBp0j,GDp:Of^:%WnuXNX$>
%DcOkU87qRphWPhC<FpTreh"!!d4@)14e-$mrfA)H.CR"bGj*]I]uDTsb1jVa6cneT&qB9Y#sT.V.;_5.$l7:)72-("_;Q9k]VBk\
%#GYX,7E]jrFgc)+*j!Wnn";*nX'&N-4,QG51d0lW`-U;Up#msh'h)S=hCa'-G;Ku=r/.4Ud;'cJ2UF1Xq]`B&"YVdJTuW*dMOeCR
%bs1eP&uJ"o3.H[P?f!HcaDm:Zj$#A4U3$kge^:_^q=T#_rDlo65<d5#i\PGDZh!$O3>_S,aHa`B[me/)2N$DWW.:t(FR5TF<'&<E
%M(g)`AdQ8aoJ2J,_tYhZ2lGL;k9\#'&HRPM`l1+"ab+5?h?XVrB<JM64l$YN`[MWC;61ESXjtI*?Z/>rcCX5PYG9g,S8.nY6q$Ap
%/+@<J2A]$M/s&/Go/Ja'/Q-s3'F,>+D;utR7DLU3WL!l.L10Xj]9COE#LEW?$6.YIWSA<,(n5Tk0_ZG9/M/8IQllj=(e\6$)9g-h
%57On9;[[#*6:!nahnJ;kAM,"5Ga)+Rjt312G^I6VQ[8fEA;s_L@1L+O\F,3^OM_@Wnu%7Z26_Z'KS*ce%M/j[(c^*afeF()1RTVE
%m2?3:=q8m\-\%,BXJ"T-[Rbb[3g9=dGT2hl8,5A\:l!'?@;jQdQ8sfWB6]>ILrep7iF_]V_/QS8i2J91pQnOU]VNWGV2Tr/7idae
%_9;0]B[Af\K@13nfp=,\!N?htp.aDE;u.Cfs&.$Qj"h`$1F8P!0FI=nl^NF+92d6TjEh9J%+tFrPG'`j-'^fi=L.Bjd>J7Pgi6XC
%MVa'(&OY%d??<c\9'V6ri\B)PD^_dY9Te"ir-XC&!#E&,m@gX,[Qk\L)#F+9SfJi2%6nOk:r_GJn-L*Tr77>$5OT4iM.>skfbE4n
%G`W=+]XD@nCLg%V#'HF[FZ,#^!?>H+jQX$q//J8Q_q*=&J/X\R'5'e2RRXSA]o[Mi5%%^V,Ik>IoV5Ker%7>eoWhc3Q`J$!'Lq/d
%]M<-tLdNVJ_(l<oo_:aqcNMCo-D>uH#k\\s0%g<DMAihX%D5d&>0MDeF$R%?T"q(Q^aFBLWtC;Q97.1-#??5-%s'5Jig`e'@>2Vo
%]0$R3J`8'-fCfR^L'V,8dIt>\cL>i2Xj6EFp!pNoZ%n*1D%m?f3]s0!.Bd>fijORMeG/#^ge-e3_3<gPppf@H+[+8RT*CREF,\&S
%=Ea7:UJ!F[S8)%95<oGgCiPLrHjXYF`R.kb</Mmj)\;j5SMul=RJ#muFH:d/ou5YmHB[R4LHk5L!_q5V'VmEgei!l#?_%=q4K8g+
%#14>JPbSDe(2P)L=.qD/#jBrc?"WdO*%DqS@ee^+B8:$u5jT4sLr&+%e#)PRnLJps*DXhj8=Bj)b7&//,'tXrC\[\rV[V`t`ph&/
%M"s!9b>(6E<(<iqn\#uLQE_CDD'H.cV9t,Jm]Dk,6af'm!SH"lZs8XDaFX+dZY]KR0^8_VY\&Vg!2@Ll+&F0V.4eU1Gu#,EDT8BW
%gTOQMQYkZX5UU45bbtdugdS<[J.K#^EaV%OHE2oE9;F*Zjp\m&.YHF4P7U,f-FmQXl%dS>+M4A`L3.T?WkZV9268P;m\"c%J75AK
%!2j(4]hi%a@8A`lB$-ehC,BcC&j_Ol*Tp6N>869pBQV$)"Nd)]DBUkQ0g.Td$kGsi%H15*er8.r:"51<m,4S?VSGAA@V8I`-/$9>
%#\kML[B0XRpu4\=,I)3Kd#8ok\KE_d'a=g`-$pq.PL6s3LA`)I0ERA]*FHcWYn#,!dUiJgr$Kl?^r^uf7NW%lMkgpfKKHCheREtH
%np8]S3RN&)QA[iQIu\<LPU]k#98fL`]\tW`[M]ZZdght,:$;K*r`$!cf]qNA*/6:B@&_j9JnK_,Js:Ju2"P]12t\n[/ThWlcoZe)
%;6[TJgu\B=W&)4)hbLm"oQ6YLq.hn&',XW@+rJQeKsAPmi4!N`/S'bnXht3jWQ645Zo6i*jq3+%JUH#A,Pr_bU5C.gOEJ@KDSU/U
%<Q?(pU&)H;86R:RQZmR),^c8j`E9kHpMs_2NWE8u[$qk-7N\7W*B#=jgmpY417""T4/9R[`bJnWAP[\HVGKGn=sg\rRj+=5:s&eB
%#FtYo2)kS-EL/>`,PZEl.i?`o$=gn((t[,?h%.O^EtdS7j#9i84$^>r!]&SB&D%W;Z37IHkKjUK)Isj*Ji+bXk9^@Cr[U/_UR^4Y
%(igIWVB!3>W1#\).Ngh&n,[:!k@r5XHKAYjV`ibqrqq.+0?st_2G9;J\i,>,"g:Z\qZS&C/Ld8tB-ZX-[cWo$+I]glE'X/LX$\r$
%`7Tn8`?c.ZV[1B!h'R#6dYm(^r3061+a8g,a(K"mB,gr!)CX/m5Xn\1%rp7^_2R2rpA!n1,f@-dl&1':)89,T$GW0]9=b.(3!S]d
%XMI/2@esT0#`[NUc&>kL3IeVbQM,D4D)?-'MMk4g(nI$eHX4P`Nj,B`S0H7U-tp7#NH.8-G/WcOC4$GY];G0DI[Xp$2!E?c1<8"W
%H"&1/+BLJ<SN%#pn9%@6AgNt&PV8-q'F/_r-&AKXBau?H=Q)*?o,(:%35#8u?`gu1Dnm7+fmhkG/VYL01A2)f*NBY'mBt&9N%eE=
%([AKd,n\TU#%B[4pF4HtLF`VQj<?d6dUG(#VsY]MS9gneB4T8^,(CK5U)!eMM#F(>!m2m:d^[KfoFL:SH9CQ?po<4D0bKUbDc,!`
%d>6#=M:^P,E5)>\@eS&e8TLQcfeM%TF+.J4%M3'V[<-Ja<%I8!es`NhpJQH3PbP`GeNeHjB6GE?W(:UQMiUS-Y9j^-X*-YoNQ`3U
%mmZI?;B4=,l*6j:C5!]:T'UYBp?fbj5nh_DBQU-'E:RQK>6Gc[UIY[NbJX&l7NC.M..l0C,E*nRYO_a'4"l#<P[9m4%ihEbY/U)e
%66OKA4FR";a8cLsa,";$dNVm.<TZ9U4DH\6aWYh:I27/Nhk;1*nmNn<SRIKo2Bd;h.^[8:MTuo8MCc0DG_XNj;##W%`nT%JR8rsS
%.tCCOoYKJ1a()A#C_mIaC7R*6X!N]ZiOb)GX-@XMg6En'F3G!K--\A,>fU7DdEbHfD-I9R:9h)?SI0N^:&3_.A^-LY*?KAaY-^@;
%:,8-`^A],?X1)\8LXA$$hts*_54-?F1Wpt!Lfd@WB*qhWjF'$d9+7I@J2F57ji4Z<D^,.eTETfgOi2Z`CRcL)US27TXid'oZR:\>
%]Ma5fA:d1@@/Q*6SP3m>a5JiIdodZ<!7R>GEX.$S;BBUI3jHk-ca?Hm\6nJpFD`"%<kZt]p"%25nI3e(e!SnMn19\/5tA=P`GFGE
%'`lfmQ=B,AN%MK,F6RYO!L!'bPObe1FC5:e-qbegI>KNgA&5@bRhQ8eX3=PMg/Iroke"[pe#9X)pZY^rN2;=\dps+uG]6-k(SA!k
%.O>2D6#+/-p^#im6jHi:mQ2M:^:miu2hTdoneiJVg\;=p*u("P*ZHIucHOhr)HaN#1si(aH3riQ@s-i6VJ,[<SPogK>OpL=(e_2c
%3#8n1iCaG&@6H;6!?IT@n0<uSqCB/bh:)ZJ(rZ^?dSF*:VkNfC("jY(<5B[^%$*D@VJrSd9S2Tf]*N(*BA?<3JZQ36RJcR0dG5>&
%^8N?JVm'.hEa&u]J3%XBT</5Oc1.&,[cJMU#t71G<(.t,#XjV`T"mWrg[m`IbP!-5K?'fM\m'GSglXHPP3-QD]@fD(Yg=9!KEip'
%P"$f(*BtoRb7N?)'^;>?H!Tu<Tk";Z]k5h2>Y;A]hU'BLqqSn4='a2/SeaMN2)\4^RR>eC%-^TKmhf7kkO(!pP1uKTFA(aVUGtY!
%-B69Ak_$1li^m,!T4L4!_<fAUK#K\2UkQ_PaH81d$*C+14uD32h^3A&;t^+NoQo@QPMU#KkJC[NbhtQ7qUS.Q<9?8'>5s@^qD!I$
%pFW@3Ug9JN@*t!YEFs=pTK?Q&kcaIhmmTGhd<4\eW&O6LO?<ejQ-du#9M&-(G'Tgo?ZeO?*'*h__je/^$uLm."C>7f&^*$!SV$??
%E]*//FmosO@`V8!<:/]U,M:,M^c7?_3W9/ZU`#OcYX+Cq-#q,]SKMGn,"16<^.L7tCITFc)P?U/91JupA>#]&^RheSIJPtVbu.*$
%AJ#N]CJ]eH9)^\2"peD>JmW@#1k"`@(RF'SN.Rjc:[e2ZkEAWSgLRWMB7gBpAnAekKC^Gcp'oM^&9PX43Wo*:^V>4Ej]`%P][%']
%n7%+2$XRj!]?0%HqIX'+MFFU=r]DOERUqe=WY"SuD8#lb>E*nk[@Q"=qq@ZoA_6B8+.Z?6[a_S=TuY5]\V@;qA6(:q<4HR[Je3/U
%%j^-Q9[gN0ePQE>S83D5H'Zt@(Z`[A]AS9m)'.(*;ZsJ2"Y*Tf4GEac!tLaY85__];3T'\BQ#@7]c?N0=D'96@=^]#eQ!]kO_KIW
%g'\jj$nJU3S2`srQD1&8;n`r';CT(aM")NfVaW*)W`s5?&gVdj!Gh"Pn`L0fV_Vm:MTf#C>r!j&oR^[*D??7:cQuE#2k\C[9cRcg
%Wf]3\>AKf#_"]NVE=,7(:H&``@,>^cTr#JVO$;SH`\;N`,ard^!Q"\2iaNQ_*FtuUY809QFG;8R$e.euh."`.PJ=ig%+CPt2+.k(
%1%S:q)mB;<^5gAGpNeI:TClI!+*SQA5-TZGo,-gX,h(m-K$VE[Ku!<d(Z.Pp;0.>-<@/K`lfT9hihBW:A-ZCW4>?^pqq6mn@7H7&
%Oh]TT7Z_IuDM&ua[Ok5#&XN<E76(XAU4gYTRM=+'3q0C>>D.\GYaJ3jWrqgGERL]F^pnKK@R14mJ7Ih!Y(WnFQMR#%6dt7Wa-E#B
%G8GH?4EeG"IH;fA.p(tBHH@Dq+&Ept#;86rG^(6D7pie>,h>DC_;AA*oEXD'9nj(+4t2[*^AaVZn8V#%i%F^Aa18!J`R].XPh,dG
%_,u"#0-9<DF[1Vk@LSX%,9F8@kp/qXEDP0(bJaqFZmhX0*VWAXZD23#]1p;uF9&4_1Yn"*\^g#Se5rm.FFgcb]uiO-:SWA1Q%H2?
%jtooRB:5h/%(7;70^kXl9n\E4CVdX9*8,FBi=n[@,[)k3M`4-1dB)8^(.t,jG6r&D*gR2'm2QZ^ARoi/_&(Y?==Mo+qK^9R$msFD
%Zt]4PQGXlm0Oc_4k(`7Y'lo<rN:7mmD/,?*F_>LUJUKE7:LSAPCT*Hmetcp;@!dYHFldDY%JF/!(j^97'%+4Y5aHm0#!@*@IIsDH
%?%TM8c/@DJ@\#$c=JiOVKl'*b4H9uS`9EX!QGe"fK*!F\"A2O]Xm+V,Pr+Bhj@$jA>Gl-*oQI*Qbs<Eip(LiVD0iQ9dQW.5Ses,Z
%gZiGM>cm\k42==bE1:^or-rsFLk;!JXPNH]+m0TbD?W@Sr9AFO_)76H]t2`AU=sWqV`AH8mIcW5o"lnKWNfj-l&PI$AqaeAO$UNC
%ph"%cdLIotBNg#H5:U<K@D1lo9aD,9RJ+a=k/3,FJe8@1!KgP>YUIJ@&*5TjC.tGK*\n[TE.F:C)*2t[+2#]J9UW1r2]mV]Po(=`
%0P7H#W$NB_,uUn0`2BC5Cjk#)=1.iC0uFj4gI,!fjpm;YhGHn5-s+rXa>bICX;Gb*a4Re[!a]k^Gq0WL7)+$porBr^8d3N,[Z7mW
%PI6l.-W-b/ATj*b)[815aOjd+33[Xbmko\H_("_F$do-]n[TE?bZsMb<NNQ4iTOgS0a@5YfIn!sj?$uR&fOhG.@WE1?mhKkM<Ko>
%ON:cU$HSP5j2Nk.][L:D:_+67''=I7q^SgYgCN2/Zs]<p<5Jb8:s00L+:N])9)0Gf3t(KG=B`5ed91NVn=R0c)!k_PO`s(.+IB3?
%<15LD.*&(22?!3kOK0RdR>IKD")]^UK57G?TkO:<4lIT!n29;Zft6gI0=6V\@Bo_=jPpQR5$Aq>&W6F4g?7k7F#X1>nc`CX/mifF
%5Jn.%_OM9BMNC=&g6&6o`\a&u??ZIj2sf2SDH0"PJ3.^ah,p0Yj^bA[S`-PK=g6V+J[;,JarJcLm$\h0Ht0K0WDk%X"XS.fWX;?W
%*o!]heb':C%2dLbqTbFZX8%BO=U3aE.7:R1#V@#/gPDm!IG)VERta\me(qP_38ZndXR8*u^1I4$<f-epq;7gZrV-J2D/r'#[Em,[
%5lk%i-trD9H\#!+nls*rXV_(I@[t?^'ZGfK-tQZfEgui<U7cYXl.0Vp$(LjWCc*C62LF$``XmH5O-*c;m%;(XCn`FUbVcpZQPg)p
%fZ4[OT85Fa$1u>b==OHfFAm-T7?QPCS)/I61O-J:CsHW+3Q:)j`+q$771/Ki=b02G*R4"@D1)hRZ$Hlsn:5[j>J.,OS:_;<.KW1Q
%i%QE.@U<Fm#;lL.5Gp[gF9ZXa+&ag0l=?a&!kDJ52Gq-Kf2@)KeNm;I!QVCQ)pkS&Epd<NbY_nfO26,T-?C]@@h!R!QUp`b-tA:?
%IRApD1ntq!V6MI6U20i:TfZ)pAE&k\0I!cJD&mVspgo&eZu(&T]e2@^_56LX#';>>hn@3bI1097F0M):OHLoU4nG8e8Z3cA_;M+I
%#A;B@Nbq<sethfaO]0rt`.[U@&D*q[R?\LXNLJ[9OJ092fR6mASGEV"lYJEir%pLeMrb5MZH#Kn"*!?N>n0W5r8;tX:g2KpTlRhq
%P&?eOK+Qa.D0Gtg+K)kL'HQY]p2FL7\iLObihlrKTJ;,'Z8U@Lecq85Cc*C62LF$`QB=UYcbX?3G`_LDSak3^/V=4]5h0E2V2Vg'
%UG.=;5S>)/9OIB^,[?5d\3q!.WNooLrU`D*nA[!Z4H*j:9R9,87rLPp36A\*]kAKaYOX\scO)>n%"4LUg*,hklnDr[G'_V8$Q1VW
%3lB)ACP%?aM9.su_KVj?(g4"6PoYe6]3gHb`#s`B=sFLt,;0bEn\A[naF<iWI6:ZmF6)1:adtt#/"D3D7+M]+_;9Me*_0Zf.oW*m
%gNWiq.3ZF>c$m`?Yh9gnWp<KgHRek?cp?jY;B=cKNr>pD#';>(arLnt%aNV<(p=argE6EpN70!+,<s[3BEp+;UUTb6C<e&SjCRZ-
%2Ij!,?^f?@E,XulQ\#^G/%'LJRQZpQ3)Hp@VmfPE5!de1/Bo(nV&H#`7B&&FW9QBB*B2"^Ur728:uUUs.2'clOi([>1@Aas)@jcZ
%9m+1c:f-q3<`bsBV2DkQV)f-k\(YJgp<Ml=Cp*-TGWc]KR8g1-W+C]g7tiN57O*EsTn046ZRUQ%SBXciC_pRa(1k=JE@P*u`J0U-
%X"`$>E*BD%:*tkL[K?otLO5FXb@n3((BaD[$r4T(M7FB^#!_P>+i,g"TJ6q:1rS]l8%5+2/d-8gbM8KfHbgj=%'-[k/Err]k\Rfo
%;B)\AE/'Zj"2^MLmKH^I&@K1gX!RiW=S!mulUcQ\d9Ya1D4WMVQW%l^Urq-0#)'6()n/_$AAN8H-^`F!BZ``T"^O%j^6\$q^'o3s
%Bf@14[WaD5p0hKScgb`o-tT4XY7A,>W$#>(8>H]DRaO@FenAGl;h"ER3gCjFa;7\bCjGGH=^+Cjd8NV2"1<)rWGQ`TN7)N-^:6Tm
%l6t9i(:?;[l7'fq3p7P@l*_@HMtjdKlFjL-%Iu2/31!V0KREVrG0sX#"d?Gt=!0HFh^07U/k^?FG9?sc2f%JRn=7+'YR_nWHB-K2
%!9"CK[j0@+?Kd9LMGAhrW?[Ehoj)jZZa+q5pb7JdG$Y@:.Nng?X"0:d4dDo!kdj7UDH:DiE,!l/='p,(MY/]7?-g?5:KUP.'h=3W
%8qe"f@0'[KmNi:.70k?UhpPjgEf+YE3S)d#kQaoi?.;js2gS)?5q#)8)9eSX0rHjA8%mH+nD!;80:685eNF.a-Hjni=l;bR[%a5*
%op&*2h'^Y[[,&0P*D)'rW"b39K)94F?*CCudI&Ghh`r4G=/oIVcX5C3Mdh2)?kt;GMs?nool<#I(_;Aa6^F^'Nm;WtYF#D08+ZP=
%:"rjd!TD/-d+$9[HV3^=D&nLG:FV_83f>PX[5%RnVPi9c6N5'+HbEf)>1E6cXk,pTqaP1tNuQ`a`XYJ98,aq$H=o'Y+K$R5Bak/u
%5/cG;@^0B(eFR*KE7/img-ElT3cDGF#Yti]].@"fk1ZD:NB'N5cVP)N\=qicULTrndE,'>>fLABlU4TC$#q@FUdtS>3FSYn!Yr-6
%MU!E;QKfe/,"o73:+898HVpl'b]UT9lsge^J:!mkWX(1TSV/o?d4BVXd!ZN./Rs_(.\p\FF0PJr0"#Q&ZZYqQ"1lfF(@7fPlCOdD
%[]lS`6?N(aN`s(#C,4)7N`aSt+-%N8Ns'PSYIX44pOWe>ArPNkl3^LfYbMah;OC0ZkDkm@b7++47Bo%2XQqn!3'W1:)_<s0(I.>d
%QOa!sUaS9^k0]P8DJ]P<'i1akY[0#YkB^tKEjKD<mN_H:nQ`c9EKM'H1`I!%mErTuf>eGf4ich(!h#b#&I"eJg75?';8gj9'.ipZ
%@N9qi7Oe1RA\<0fVfl&D&+j>Xd\)b'YH1+=W].FQ,IL.I/kBI)C&mm`A`p@$)-Bl3*33.-M_qhH/.qrcTOY^0;alSs(J;)d5mZF,
%.U%&[P\+$-#0C1jCVeoOl3a>!:J&\H>cj&dC-s6hhk]+F5c<ZWh7kMn8!2=b7N9sX`SC>q^)qRK]0%D6q2L-h#\R!bjQ[em*nQa7
%M\Q3&>$SQ7]KlGW.4DLVi(YXX`M2aZQ"=4sPN@+oZaT&d4RQd\:DN'jO#sq1B=rj^9"$"aol-]ok*dW??9n.Tm%G\i"lW/7ose()
%TQ9A^kdL8DdAtG5f%t:0oQt-SZX=kE<qdT;-A((_C38#1:f0GCqF8+6b\tZ(8nhJ2J;n$=McTm2:E'GWb3o_f+%8KUR?a6#ad1N#
%&h#p."gd)hh/e)fq%ED&r-WqJd?"O'I#hh]2dTqrdn!^n+nTE=U`<5=:+_]HU:,[G:ME*,H%[3Ff9W&5hJE.jp&=W9I1TQ;F0qMC
%\@O*'%a,Pd1Ho^?3(e)mM8[B$7`%C4pI"aC<25+AM,dZ%2@C_M<+4<[?&,01;aSi^%Z8?ne`"k+Oc4*8+oF5[fF+"]7<QrH`mJ2$
%Zl%f8WO2G?6X_%R$oZHq2sIe4m0<\U(du^oIc"4aOdC)Z]/W<JYA3B"1j_hk2paj4a^,p>a)s5[<Wh@/+M3sDbKuulk@j`Q;'lZ=
%k=m+Ug!SsDL4bkG1(`52/Xnl,-00-A,o*a/lo;@jp?F[Qm@KJN%+GZ_<4D7Pnh'55jHH<"Qj([kU:TN4iuYm<djSA<+*VfAFV;iJ
%&ldrYJk+0P[gDS'4o)2.$UUJ0:kWCZ=!4u!9&A%\@L::Wh<[;-Zl9Q0*SJ7[fS>U>4iclFR"?63Zq!6*J)!k6)8[eWUT-Y<p=66S
%S4+lHfcdNd3>05@61B,DhW`R5.,$g1gh(Xlpd15!AmZ]RZN9U@aSobe5)Q<+3SHGBNQug2p8O*7g11tl4_ET0Ko/?h'UoH)e\4(R
%X;"naeQf;[5i#OC:lrC?(nK3n)F:-DD`=@gklW1FQK@rcZF8q04UoV,a5@oT&NQl!U'FJ0@#@A+6W\eS#1UHP&@s[cEEC>8d.igm
%:t/MW[sEo[@rr,n\mF-)Bo(2R5c4lK4\r'bp-E53cdB`5Elf;E>GfRl-qq5%VO9$;9`$Ef_TY`pd$K:8T-MdWAAQA29;T',7C2o/
%7gE0a8p-'BS4^Bonba7&bAq0-;;60!Sd+C_EEcn)@)dZN:cQ!tlKi'TRp#!l\nHR951]%YS&HKa"+g2E=,3MI0'eNMd^Ua6JH1;c
%\'f"VV^0sO].@&R(=bPQX''tc`7s2JrS*tEmDg=JV>U;k%mU'_di\R/rV&PUnsB)hs7cK$04-?iVgn^>oCmb5mG!-ifD"0Or8Hhr
%^\uLQ[r9%Zo'>2IrU'JhYCClqq7#h-s6\Fq^;'XG+2@e.&H!r+nC(0_r22dXpr!+6X@RCi~>
%AI9_PrivateDataEnd
